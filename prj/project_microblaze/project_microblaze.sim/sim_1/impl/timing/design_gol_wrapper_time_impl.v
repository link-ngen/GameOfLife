// Copyright 1986-2017 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2017.2 (win64) Build 1909853 Thu Jun 15 18:39:09 MDT 2017
// Date        : Mon May 10 18:44:10 2021
// Host        : DEVPC running 64-bit major release  (build 9200)
// Command     : write_verilog -mode timesim -nolib -sdf_anno true -force -file
//               C:/Project/GameOfLife/prj/project_microblaze/project_microblaze.sim/sim_1/impl/timing/design_gol_wrapper_time_impl.v
// Design      : design_gol_wrapper
// Purpose     : This verilog netlist is a timing simulation representation of the design and should not be modified or
//               synthesized. Please ensure that this netlist is used with the corresponding SDF file.
// Device      : xc7z020clg484-1
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps
`define XIL_TIMING

module LUT6_2_UNIQ_BASE_
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD496
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD497
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD498
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD499
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD500
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD501
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD502
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD503
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD504
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD505
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD506
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD507
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD508
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD509
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD510
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD511
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD512
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD513
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD514
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD515
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD516
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD517
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD518
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD519
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD520
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD521
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD522
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD523
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD524
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD525
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'h00008888)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD541
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD542
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD543
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD544
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD545
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD546
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD547
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD548
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD549
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD550
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD551
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD552
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD553
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD554
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD555
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD556
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD557
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD558
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD559
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD560
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD561
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD562
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h69696969FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD563
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD564
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD565
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD566
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD567
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD568
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD569
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD570
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD571
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD572
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hFF00AAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'h96969696FF00AAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD573
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hCCCCAAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD574
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hCCCCAAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD575
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hCCCCAAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD576
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hCCCCAAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD577
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hCCCCAAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD578
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hCCCCAAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD579
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hCCCCAAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD580
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hCCCCAAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD581
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hCCCCAAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD582
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hCCCCAAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD583
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hCCCCAAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD584
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hCCCCAAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD585
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hCCCCAAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD586
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hCCCCAAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD587
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hCCCCAAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module LUT6_2_HD588
   (O5,
    O6,
    I0,
    I1,
    I2,
    I3,
    I4,
    I5);
  output O5;
  output O6;
  input I0;
  input I1;
  input I2;
  input I3;
  input I4;
  input I5;

  wire I0;
  wire I1;
  wire I2;
  wire I3;
  wire I4;
  wire I5;
  wire O5;
  wire O6;

  (* HLUTNM = "LUT6_2" *) 
  LUT5 #(
    .INIT(32'hCCCCAAAA)) 
    LUT5
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .O(O5));
  (* HLUTNM = "LUT6_2" *) 
  LUT6 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    LUT6
       (.I0(I0),
        .I1(I1),
        .I2(I2),
        .I3(I3),
        .I4(I4),
        .I5(I5),
        .O(O6));
endmodule

module RAM32M_UNIQ_BASE_
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output [1:0]DOA;
  output [1:0]DOB;
  output [1:0]DOC;
  output [1:0]DOD;
  input [4:0]ADDRA;
  input [4:0]ADDRB;
  input [4:0]ADDRC;
  input [4:0]ADDRD;
  input [1:0]DIA;
  input [1:0]DIB;
  input [1:0]DIC;
  input [1:0]DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire DIA0;
  wire DIA1;
  wire DIB0;
  wire DIB1;
  wire DIC0;
  wire DIC1;
  wire DID0;
  wire DID1;
  wire DOA0;
  wire DOA1;
  wire DOB0;
  wire DOB1;
  wire DOC0;
  wire DOC1;
  wire DOD0;
  wire DOD1;
  wire WCLK;
  wire WE;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign DIA0 = DIA[0];
  assign DIA1 = DIA[1];
  assign DIB0 = DIB[0];
  assign DIB1 = DIB[1];
  assign DIC0 = DIC[0];
  assign DIC1 = DIC[1];
  assign DID0 = DID[0];
  assign DID1 = DID[1];
  assign DOA[1] = DOA1;
  assign DOA[0] = DOA0;
  assign DOB[1] = DOB1;
  assign DOB[0] = DOB0;
  assign DOC[1] = DOC1;
  assign DOC[0] = DOC0;
  assign DOD[1] = DOD1;
  assign DOD[0] = DOD0;
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA0),
        .O(DOA0),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA_D1
       (.CLK(WCLK),
        .I(DIA1),
        .O(DOA1),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB0),
        .O(DOB0),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB_D1
       (.CLK(WCLK),
        .I(DIB1),
        .O(DOB1),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC0),
        .O(DOC0),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC_D1
       (.CLK(WCLK),
        .I(DIC1),
        .O(DOC1),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID0),
        .O(DOD0),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD_D1
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID1),
        .O(DOD1),
        .WE(WE));
endmodule

module RAM32M_HD526
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output [1:0]DOA;
  output [1:0]DOB;
  output [1:0]DOC;
  output [1:0]DOD;
  input [4:0]ADDRA;
  input [4:0]ADDRB;
  input [4:0]ADDRC;
  input [4:0]ADDRD;
  input [1:0]DIA;
  input [1:0]DIB;
  input [1:0]DIC;
  input [1:0]DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire DIA0;
  wire DIA1;
  wire DIB0;
  wire DIB1;
  wire DIC0;
  wire DIC1;
  wire DID0;
  wire DID1;
  wire DOA0;
  wire DOA1;
  wire DOB0;
  wire DOB1;
  wire DOC0;
  wire DOC1;
  wire DOD0;
  wire DOD1;
  wire WCLK;
  wire WE;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign DIA0 = DIA[0];
  assign DIA1 = DIA[1];
  assign DIB0 = DIB[0];
  assign DIB1 = DIB[1];
  assign DIC0 = DIC[0];
  assign DIC1 = DIC[1];
  assign DID0 = DID[0];
  assign DID1 = DID[1];
  assign DOA[1] = DOA1;
  assign DOA[0] = DOA0;
  assign DOB[1] = DOB1;
  assign DOB[0] = DOB0;
  assign DOC[1] = DOC1;
  assign DOC[0] = DOC0;
  assign DOD[1] = DOD1;
  assign DOD[0] = DOD0;
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA0),
        .O(DOA0),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA_D1
       (.CLK(WCLK),
        .I(DIA1),
        .O(DOA1),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB0),
        .O(DOB0),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB_D1
       (.CLK(WCLK),
        .I(DIB1),
        .O(DOB1),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC0),
        .O(DOC0),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC_D1
       (.CLK(WCLK),
        .I(DIC1),
        .O(DOC1),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID0),
        .O(DOD0),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD_D1
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID1),
        .O(DOD1),
        .WE(WE));
endmodule

module RAM32M_HD527
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output [1:0]DOA;
  output [1:0]DOB;
  output [1:0]DOC;
  output [1:0]DOD;
  input [4:0]ADDRA;
  input [4:0]ADDRB;
  input [4:0]ADDRC;
  input [4:0]ADDRD;
  input [1:0]DIA;
  input [1:0]DIB;
  input [1:0]DIC;
  input [1:0]DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire DIA0;
  wire DIA1;
  wire DIB0;
  wire DIB1;
  wire DIC0;
  wire DIC1;
  wire DID0;
  wire DID1;
  wire DOA0;
  wire DOA1;
  wire DOB0;
  wire DOB1;
  wire DOC0;
  wire DOC1;
  wire DOD0;
  wire DOD1;
  wire WCLK;
  wire WE;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign DIA0 = DIA[0];
  assign DIA1 = DIA[1];
  assign DIB0 = DIB[0];
  assign DIB1 = DIB[1];
  assign DIC0 = DIC[0];
  assign DIC1 = DIC[1];
  assign DID0 = DID[0];
  assign DID1 = DID[1];
  assign DOA[1] = DOA1;
  assign DOA[0] = DOA0;
  assign DOB[1] = DOB1;
  assign DOB[0] = DOB0;
  assign DOC[1] = DOC1;
  assign DOC[0] = DOC0;
  assign DOD[1] = DOD1;
  assign DOD[0] = DOD0;
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA0),
        .O(DOA0),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA_D1
       (.CLK(WCLK),
        .I(DIA1),
        .O(DOA1),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB0),
        .O(DOB0),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB_D1
       (.CLK(WCLK),
        .I(DIB1),
        .O(DOB1),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC0),
        .O(DOC0),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC_D1
       (.CLK(WCLK),
        .I(DIC1),
        .O(DOC1),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID0),
        .O(DOD0),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD_D1
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID1),
        .O(DOD1),
        .WE(WE));
endmodule

module RAM32M_HD528
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output [1:0]DOA;
  output [1:0]DOB;
  output [1:0]DOC;
  output [1:0]DOD;
  input [4:0]ADDRA;
  input [4:0]ADDRB;
  input [4:0]ADDRC;
  input [4:0]ADDRD;
  input [1:0]DIA;
  input [1:0]DIB;
  input [1:0]DIC;
  input [1:0]DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire DIA0;
  wire DIA1;
  wire DIB0;
  wire DIB1;
  wire DIC0;
  wire DIC1;
  wire DID0;
  wire DID1;
  wire DOA0;
  wire DOA1;
  wire DOB0;
  wire DOB1;
  wire DOC0;
  wire DOC1;
  wire DOD0;
  wire DOD1;
  wire WCLK;
  wire WE;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign DIA0 = DIA[0];
  assign DIA1 = DIA[1];
  assign DIB0 = DIB[0];
  assign DIB1 = DIB[1];
  assign DIC0 = DIC[0];
  assign DIC1 = DIC[1];
  assign DID0 = DID[0];
  assign DID1 = DID[1];
  assign DOA[1] = DOA1;
  assign DOA[0] = DOA0;
  assign DOB[1] = DOB1;
  assign DOB[0] = DOB0;
  assign DOC[1] = DOC1;
  assign DOC[0] = DOC0;
  assign DOD[1] = DOD1;
  assign DOD[0] = DOD0;
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA0),
        .O(DOA0),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA_D1
       (.CLK(WCLK),
        .I(DIA1),
        .O(DOA1),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB0),
        .O(DOB0),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB_D1
       (.CLK(WCLK),
        .I(DIB1),
        .O(DOB1),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC0),
        .O(DOC0),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC_D1
       (.CLK(WCLK),
        .I(DIC1),
        .O(DOC1),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID0),
        .O(DOD0),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD_D1
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID1),
        .O(DOD1),
        .WE(WE));
endmodule

module RAM32M_HD529
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output [1:0]DOA;
  output [1:0]DOB;
  output [1:0]DOC;
  output [1:0]DOD;
  input [4:0]ADDRA;
  input [4:0]ADDRB;
  input [4:0]ADDRC;
  input [4:0]ADDRD;
  input [1:0]DIA;
  input [1:0]DIB;
  input [1:0]DIC;
  input [1:0]DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire DIA0;
  wire DIA1;
  wire DIB0;
  wire DIB1;
  wire DIC0;
  wire DIC1;
  wire DID0;
  wire DID1;
  wire DOA0;
  wire DOA1;
  wire DOB0;
  wire DOB1;
  wire DOC0;
  wire DOC1;
  wire DOD0;
  wire DOD1;
  wire WCLK;
  wire WE;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign DIA0 = DIA[0];
  assign DIA1 = DIA[1];
  assign DIB0 = DIB[0];
  assign DIB1 = DIB[1];
  assign DIC0 = DIC[0];
  assign DIC1 = DIC[1];
  assign DID0 = DID[0];
  assign DID1 = DID[1];
  assign DOA[1] = DOA1;
  assign DOA[0] = DOA0;
  assign DOB[1] = DOB1;
  assign DOB[0] = DOB0;
  assign DOC[1] = DOC1;
  assign DOC[0] = DOC0;
  assign DOD[1] = DOD1;
  assign DOD[0] = DOD0;
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA0),
        .O(DOA0),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA_D1
       (.CLK(WCLK),
        .I(DIA1),
        .O(DOA1),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB0),
        .O(DOB0),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB_D1
       (.CLK(WCLK),
        .I(DIB1),
        .O(DOB1),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC0),
        .O(DOC0),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC_D1
       (.CLK(WCLK),
        .I(DIC1),
        .O(DOC1),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID0),
        .O(DOD0),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD_D1
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID1),
        .O(DOD1),
        .WE(WE));
endmodule

module RAM32M_HD530
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output [1:0]DOA;
  output [1:0]DOB;
  output [1:0]DOC;
  output [1:0]DOD;
  input [4:0]ADDRA;
  input [4:0]ADDRB;
  input [4:0]ADDRC;
  input [4:0]ADDRD;
  input [1:0]DIA;
  input [1:0]DIB;
  input [1:0]DIC;
  input [1:0]DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire DIA0;
  wire DIA1;
  wire DIB0;
  wire DIB1;
  wire DIC0;
  wire DIC1;
  wire DID0;
  wire DID1;
  wire DOA0;
  wire DOA1;
  wire DOB0;
  wire DOB1;
  wire DOC0;
  wire DOC1;
  wire DOD0;
  wire DOD1;
  wire WCLK;
  wire WE;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign DIA0 = DIA[0];
  assign DIA1 = DIA[1];
  assign DIB0 = DIB[0];
  assign DIB1 = DIB[1];
  assign DIC0 = DIC[0];
  assign DIC1 = DIC[1];
  assign DID0 = DID[0];
  assign DID1 = DID[1];
  assign DOA[1] = DOA1;
  assign DOA[0] = DOA0;
  assign DOB[1] = DOB1;
  assign DOB[0] = DOB0;
  assign DOC[1] = DOC1;
  assign DOC[0] = DOC0;
  assign DOD[1] = DOD1;
  assign DOD[0] = DOD0;
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA0),
        .O(DOA0),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA_D1
       (.CLK(WCLK),
        .I(DIA1),
        .O(DOA1),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB0),
        .O(DOB0),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB_D1
       (.CLK(WCLK),
        .I(DIB1),
        .O(DOB1),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC0),
        .O(DOC0),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC_D1
       (.CLK(WCLK),
        .I(DIC1),
        .O(DOC1),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID0),
        .O(DOD0),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD_D1
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID1),
        .O(DOD1),
        .WE(WE));
endmodule

module RAM32M_HD531
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output [1:0]DOA;
  output [1:0]DOB;
  output [1:0]DOC;
  output [1:0]DOD;
  input [4:0]ADDRA;
  input [4:0]ADDRB;
  input [4:0]ADDRC;
  input [4:0]ADDRD;
  input [1:0]DIA;
  input [1:0]DIB;
  input [1:0]DIC;
  input [1:0]DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire DIA0;
  wire DIA1;
  wire DIB0;
  wire DIB1;
  wire DIC0;
  wire DIC1;
  wire DID0;
  wire DID1;
  wire DOA0;
  wire DOA1;
  wire DOB0;
  wire DOB1;
  wire DOC0;
  wire DOC1;
  wire DOD0;
  wire DOD1;
  wire WCLK;
  wire WE;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign DIA0 = DIA[0];
  assign DIA1 = DIA[1];
  assign DIB0 = DIB[0];
  assign DIB1 = DIB[1];
  assign DIC0 = DIC[0];
  assign DIC1 = DIC[1];
  assign DID0 = DID[0];
  assign DID1 = DID[1];
  assign DOA[1] = DOA1;
  assign DOA[0] = DOA0;
  assign DOB[1] = DOB1;
  assign DOB[0] = DOB0;
  assign DOC[1] = DOC1;
  assign DOC[0] = DOC0;
  assign DOD[1] = DOD1;
  assign DOD[0] = DOD0;
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA0),
        .O(DOA0),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA_D1
       (.CLK(WCLK),
        .I(DIA1),
        .O(DOA1),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB0),
        .O(DOB0),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB_D1
       (.CLK(WCLK),
        .I(DIB1),
        .O(DOB1),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC0),
        .O(DOC0),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC_D1
       (.CLK(WCLK),
        .I(DIC1),
        .O(DOC1),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID0),
        .O(DOD0),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD_D1
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID1),
        .O(DOD1),
        .WE(WE));
endmodule

module RAM32M_HD532
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output [1:0]DOA;
  output [1:0]DOB;
  output [1:0]DOC;
  output [1:0]DOD;
  input [4:0]ADDRA;
  input [4:0]ADDRB;
  input [4:0]ADDRC;
  input [4:0]ADDRD;
  input [1:0]DIA;
  input [1:0]DIB;
  input [1:0]DIC;
  input [1:0]DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire DIA0;
  wire DIA1;
  wire DIB0;
  wire DIB1;
  wire DIC0;
  wire DIC1;
  wire DID0;
  wire DID1;
  wire DOA0;
  wire DOA1;
  wire DOB0;
  wire DOB1;
  wire DOC0;
  wire DOC1;
  wire DOD0;
  wire DOD1;
  wire WCLK;
  wire WE;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign DIA0 = DIA[0];
  assign DIA1 = DIA[1];
  assign DIB0 = DIB[0];
  assign DIB1 = DIB[1];
  assign DIC0 = DIC[0];
  assign DIC1 = DIC[1];
  assign DID0 = DID[0];
  assign DID1 = DID[1];
  assign DOA[1] = DOA1;
  assign DOA[0] = DOA0;
  assign DOB[1] = DOB1;
  assign DOB[0] = DOB0;
  assign DOC[1] = DOC1;
  assign DOC[0] = DOC0;
  assign DOD[1] = DOD1;
  assign DOD[0] = DOD0;
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA0),
        .O(DOA0),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA_D1
       (.CLK(WCLK),
        .I(DIA1),
        .O(DOA1),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB0),
        .O(DOB0),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB_D1
       (.CLK(WCLK),
        .I(DIB1),
        .O(DOB1),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC0),
        .O(DOC0),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC_D1
       (.CLK(WCLK),
        .I(DIC1),
        .O(DOC1),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID0),
        .O(DOD0),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD_D1
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID1),
        .O(DOD1),
        .WE(WE));
endmodule

module RAM32M_HD533
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output [1:0]DOA;
  output [1:0]DOB;
  output [1:0]DOC;
  output [1:0]DOD;
  input [4:0]ADDRA;
  input [4:0]ADDRB;
  input [4:0]ADDRC;
  input [4:0]ADDRD;
  input [1:0]DIA;
  input [1:0]DIB;
  input [1:0]DIC;
  input [1:0]DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire DIA0;
  wire DIA1;
  wire DIB0;
  wire DIB1;
  wire DIC0;
  wire DIC1;
  wire DID0;
  wire DID1;
  wire DOA0;
  wire DOA1;
  wire DOB0;
  wire DOB1;
  wire DOC0;
  wire DOC1;
  wire DOD0;
  wire DOD1;
  wire WCLK;
  wire WE;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign DIA0 = DIA[0];
  assign DIA1 = DIA[1];
  assign DIB0 = DIB[0];
  assign DIB1 = DIB[1];
  assign DIC0 = DIC[0];
  assign DIC1 = DIC[1];
  assign DID0 = DID[0];
  assign DID1 = DID[1];
  assign DOA[1] = DOA1;
  assign DOA[0] = DOA0;
  assign DOB[1] = DOB1;
  assign DOB[0] = DOB0;
  assign DOC[1] = DOC1;
  assign DOC[0] = DOC0;
  assign DOD[1] = DOD1;
  assign DOD[0] = DOD0;
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA0),
        .O(DOA0),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA_D1
       (.CLK(WCLK),
        .I(DIA1),
        .O(DOA1),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB0),
        .O(DOB0),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB_D1
       (.CLK(WCLK),
        .I(DIB1),
        .O(DOB1),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC0),
        .O(DOC0),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC_D1
       (.CLK(WCLK),
        .I(DIC1),
        .O(DOC1),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID0),
        .O(DOD0),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD_D1
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID1),
        .O(DOD1),
        .WE(WE));
endmodule

module RAM32M_HD534
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output [1:0]DOA;
  output [1:0]DOB;
  output [1:0]DOC;
  output [1:0]DOD;
  input [4:0]ADDRA;
  input [4:0]ADDRB;
  input [4:0]ADDRC;
  input [4:0]ADDRD;
  input [1:0]DIA;
  input [1:0]DIB;
  input [1:0]DIC;
  input [1:0]DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire DIA0;
  wire DIA1;
  wire DIB0;
  wire DIB1;
  wire DIC0;
  wire DIC1;
  wire DID0;
  wire DID1;
  wire DOA0;
  wire DOA1;
  wire DOB0;
  wire DOB1;
  wire DOC0;
  wire DOC1;
  wire DOD0;
  wire DOD1;
  wire WCLK;
  wire WE;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign DIA0 = DIA[0];
  assign DIA1 = DIA[1];
  assign DIB0 = DIB[0];
  assign DIB1 = DIB[1];
  assign DIC0 = DIC[0];
  assign DIC1 = DIC[1];
  assign DID0 = DID[0];
  assign DID1 = DID[1];
  assign DOA[1] = DOA1;
  assign DOA[0] = DOA0;
  assign DOB[1] = DOB1;
  assign DOB[0] = DOB0;
  assign DOC[1] = DOC1;
  assign DOC[0] = DOC0;
  assign DOD[1] = DOD1;
  assign DOD[0] = DOD0;
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA0),
        .O(DOA0),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA_D1
       (.CLK(WCLK),
        .I(DIA1),
        .O(DOA1),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB0),
        .O(DOB0),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB_D1
       (.CLK(WCLK),
        .I(DIB1),
        .O(DOB1),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC0),
        .O(DOC0),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC_D1
       (.CLK(WCLK),
        .I(DIC1),
        .O(DOC1),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID0),
        .O(DOD0),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD_D1
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID1),
        .O(DOD1),
        .WE(WE));
endmodule

module RAM32M_HD535
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output [1:0]DOA;
  output [1:0]DOB;
  output [1:0]DOC;
  output [1:0]DOD;
  input [4:0]ADDRA;
  input [4:0]ADDRB;
  input [4:0]ADDRC;
  input [4:0]ADDRD;
  input [1:0]DIA;
  input [1:0]DIB;
  input [1:0]DIC;
  input [1:0]DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire DIA0;
  wire DIA1;
  wire DIB0;
  wire DIB1;
  wire DIC0;
  wire DIC1;
  wire DID0;
  wire DID1;
  wire DOA0;
  wire DOA1;
  wire DOB0;
  wire DOB1;
  wire DOC0;
  wire DOC1;
  wire DOD0;
  wire DOD1;
  wire WCLK;
  wire WE;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign DIA0 = DIA[0];
  assign DIA1 = DIA[1];
  assign DIB0 = DIB[0];
  assign DIB1 = DIB[1];
  assign DIC0 = DIC[0];
  assign DIC1 = DIC[1];
  assign DID0 = DID[0];
  assign DID1 = DID[1];
  assign DOA[1] = DOA1;
  assign DOA[0] = DOA0;
  assign DOB[1] = DOB1;
  assign DOB[0] = DOB0;
  assign DOC[1] = DOC1;
  assign DOC[0] = DOC0;
  assign DOD[1] = DOD1;
  assign DOD[0] = DOD0;
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA0),
        .O(DOA0),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA_D1
       (.CLK(WCLK),
        .I(DIA1),
        .O(DOA1),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB0),
        .O(DOB0),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB_D1
       (.CLK(WCLK),
        .I(DIB1),
        .O(DOB1),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC0),
        .O(DOC0),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC_D1
       (.CLK(WCLK),
        .I(DIC1),
        .O(DOC1),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID0),
        .O(DOD0),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD_D1
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID1),
        .O(DOD1),
        .WE(WE));
endmodule

module RAM32M_HD536
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output [1:0]DOA;
  output [1:0]DOB;
  output [1:0]DOC;
  output [1:0]DOD;
  input [4:0]ADDRA;
  input [4:0]ADDRB;
  input [4:0]ADDRC;
  input [4:0]ADDRD;
  input [1:0]DIA;
  input [1:0]DIB;
  input [1:0]DIC;
  input [1:0]DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire DIA0;
  wire DIA1;
  wire DIB0;
  wire DIB1;
  wire DIC0;
  wire DIC1;
  wire DID0;
  wire DID1;
  wire DOA0;
  wire DOA1;
  wire DOB0;
  wire DOB1;
  wire DOC0;
  wire DOC1;
  wire DOD0;
  wire DOD1;
  wire WCLK;
  wire WE;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign DIA0 = DIA[0];
  assign DIA1 = DIA[1];
  assign DIB0 = DIB[0];
  assign DIB1 = DIB[1];
  assign DIC0 = DIC[0];
  assign DIC1 = DIC[1];
  assign DID0 = DID[0];
  assign DID1 = DID[1];
  assign DOA[1] = DOA1;
  assign DOA[0] = DOA0;
  assign DOB[1] = DOB1;
  assign DOB[0] = DOB0;
  assign DOC[1] = DOC1;
  assign DOC[0] = DOC0;
  assign DOD[1] = DOD1;
  assign DOD[0] = DOD0;
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA0),
        .O(DOA0),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA_D1
       (.CLK(WCLK),
        .I(DIA1),
        .O(DOA1),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB0),
        .O(DOB0),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB_D1
       (.CLK(WCLK),
        .I(DIB1),
        .O(DOB1),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC0),
        .O(DOC0),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC_D1
       (.CLK(WCLK),
        .I(DIC1),
        .O(DOC1),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID0),
        .O(DOD0),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD_D1
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID1),
        .O(DOD1),
        .WE(WE));
endmodule

module RAM32M_HD537
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output [1:0]DOA;
  output [1:0]DOB;
  output [1:0]DOC;
  output [1:0]DOD;
  input [4:0]ADDRA;
  input [4:0]ADDRB;
  input [4:0]ADDRC;
  input [4:0]ADDRD;
  input [1:0]DIA;
  input [1:0]DIB;
  input [1:0]DIC;
  input [1:0]DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire DIA0;
  wire DIA1;
  wire DIB0;
  wire DIB1;
  wire DIC0;
  wire DIC1;
  wire DID0;
  wire DID1;
  wire DOA0;
  wire DOA1;
  wire DOB0;
  wire DOB1;
  wire DOC0;
  wire DOC1;
  wire DOD0;
  wire DOD1;
  wire WCLK;
  wire WE;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign DIA0 = DIA[0];
  assign DIA1 = DIA[1];
  assign DIB0 = DIB[0];
  assign DIB1 = DIB[1];
  assign DIC0 = DIC[0];
  assign DIC1 = DIC[1];
  assign DID0 = DID[0];
  assign DID1 = DID[1];
  assign DOA[1] = DOA1;
  assign DOA[0] = DOA0;
  assign DOB[1] = DOB1;
  assign DOB[0] = DOB0;
  assign DOC[1] = DOC1;
  assign DOC[0] = DOC0;
  assign DOD[1] = DOD1;
  assign DOD[0] = DOD0;
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA0),
        .O(DOA0),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA_D1
       (.CLK(WCLK),
        .I(DIA1),
        .O(DOA1),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB0),
        .O(DOB0),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB_D1
       (.CLK(WCLK),
        .I(DIB1),
        .O(DOB1),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC0),
        .O(DOC0),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC_D1
       (.CLK(WCLK),
        .I(DIC1),
        .O(DOC1),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID0),
        .O(DOD0),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD_D1
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID1),
        .O(DOD1),
        .WE(WE));
endmodule

module RAM32M_HD538
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output [1:0]DOA;
  output [1:0]DOB;
  output [1:0]DOC;
  output [1:0]DOD;
  input [4:0]ADDRA;
  input [4:0]ADDRB;
  input [4:0]ADDRC;
  input [4:0]ADDRD;
  input [1:0]DIA;
  input [1:0]DIB;
  input [1:0]DIC;
  input [1:0]DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire DIA0;
  wire DIA1;
  wire DIB0;
  wire DIB1;
  wire DIC0;
  wire DIC1;
  wire DID0;
  wire DID1;
  wire DOA0;
  wire DOA1;
  wire DOB0;
  wire DOB1;
  wire DOC0;
  wire DOC1;
  wire DOD0;
  wire DOD1;
  wire WCLK;
  wire WE;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign DIA0 = DIA[0];
  assign DIA1 = DIA[1];
  assign DIB0 = DIB[0];
  assign DIB1 = DIB[1];
  assign DIC0 = DIC[0];
  assign DIC1 = DIC[1];
  assign DID0 = DID[0];
  assign DID1 = DID[1];
  assign DOA[1] = DOA1;
  assign DOA[0] = DOA0;
  assign DOB[1] = DOB1;
  assign DOB[0] = DOB0;
  assign DOC[1] = DOC1;
  assign DOC[0] = DOC0;
  assign DOD[1] = DOD1;
  assign DOD[0] = DOD0;
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA0),
        .O(DOA0),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA_D1
       (.CLK(WCLK),
        .I(DIA1),
        .O(DOA1),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB0),
        .O(DOB0),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB_D1
       (.CLK(WCLK),
        .I(DIB1),
        .O(DOB1),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC0),
        .O(DOC0),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC_D1
       (.CLK(WCLK),
        .I(DIC1),
        .O(DOC1),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID0),
        .O(DOD0),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD_D1
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID1),
        .O(DOD1),
        .WE(WE));
endmodule

module RAM32M_HD539
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output [1:0]DOA;
  output [1:0]DOB;
  output [1:0]DOC;
  output [1:0]DOD;
  input [4:0]ADDRA;
  input [4:0]ADDRB;
  input [4:0]ADDRC;
  input [4:0]ADDRD;
  input [1:0]DIA;
  input [1:0]DIB;
  input [1:0]DIC;
  input [1:0]DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire DIA0;
  wire DIA1;
  wire DIB0;
  wire DIB1;
  wire DIC0;
  wire DIC1;
  wire DID0;
  wire DID1;
  wire DOA0;
  wire DOA1;
  wire DOB0;
  wire DOB1;
  wire DOC0;
  wire DOC1;
  wire DOD0;
  wire DOD1;
  wire WCLK;
  wire WE;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign DIA0 = DIA[0];
  assign DIA1 = DIA[1];
  assign DIB0 = DIB[0];
  assign DIB1 = DIB[1];
  assign DIC0 = DIC[0];
  assign DIC1 = DIC[1];
  assign DID0 = DID[0];
  assign DID1 = DID[1];
  assign DOA[1] = DOA1;
  assign DOA[0] = DOA0;
  assign DOB[1] = DOB1;
  assign DOB[0] = DOB0;
  assign DOC[1] = DOC1;
  assign DOC[0] = DOC0;
  assign DOD[1] = DOD1;
  assign DOD[0] = DOD0;
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA0),
        .O(DOA0),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA_D1
       (.CLK(WCLK),
        .I(DIA1),
        .O(DOA1),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB0),
        .O(DOB0),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB_D1
       (.CLK(WCLK),
        .I(DIB1),
        .O(DOB1),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC0),
        .O(DOC0),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC_D1
       (.CLK(WCLK),
        .I(DIC1),
        .O(DOC1),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID0),
        .O(DOD0),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD_D1
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID1),
        .O(DOD1),
        .WE(WE));
endmodule

module RAM32M_HD540
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output [1:0]DOA;
  output [1:0]DOB;
  output [1:0]DOC;
  output [1:0]DOD;
  input [4:0]ADDRA;
  input [4:0]ADDRB;
  input [4:0]ADDRC;
  input [4:0]ADDRD;
  input [1:0]DIA;
  input [1:0]DIB;
  input [1:0]DIC;
  input [1:0]DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire DIA0;
  wire DIA1;
  wire DIB0;
  wire DIB1;
  wire DIC0;
  wire DIC1;
  wire DID0;
  wire DID1;
  wire DOA0;
  wire DOA1;
  wire DOB0;
  wire DOB1;
  wire DOC0;
  wire DOC1;
  wire DOD0;
  wire DOD1;
  wire WCLK;
  wire WE;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign DIA0 = DIA[0];
  assign DIA1 = DIA[1];
  assign DIB0 = DIB[0];
  assign DIB1 = DIB[1];
  assign DIC0 = DIC[0];
  assign DIC1 = DIC[1];
  assign DID0 = DID[0];
  assign DID1 = DID[1];
  assign DOA[1] = DOA1;
  assign DOA[0] = DOA0;
  assign DOB[1] = DOB1;
  assign DOB[0] = DOB0;
  assign DOC[1] = DOC1;
  assign DOC[0] = DOC0;
  assign DOD[1] = DOD1;
  assign DOD[0] = DOD0;
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA0),
        .O(DOA0),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMA_D1
       (.CLK(WCLK),
        .I(DIA1),
        .O(DOA1),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB0),
        .O(DOB0),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMB_D1
       (.CLK(WCLK),
        .I(DIB1),
        .O(DOB1),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC0),
        .O(DOC0),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMC_D1
       (.CLK(WCLK),
        .I(DIC1),
        .O(DOC1),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID0),
        .O(DOD0),
        .WE(WE));
  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    RAMD_D1
       (.ADR0(ADDRD0),
        .ADR1(ADDRD1),
        .ADR2(ADDRD2),
        .ADR3(ADDRD3),
        .ADR4(ADDRD4),
        .CLK(WCLK),
        .I(DID1),
        .O(DOD1),
        .WE(WE));
endmodule

module JTAG_CONTROL
   (Q,
    AR,
    Ext_NM_BRK,
    Debug_SYS_Rst,
    Dbg_Rst_0,
    p_20_out__0,
    \Use_Serial_Unified_Completion.completion_block_reg_0 ,
    Dbg_Shift_0,
    Dbg_Reg_En_0,
    tdo,
    \Use_Serial_Unified_Completion.count_reg[4]_0 ,
    \Use_Serial_Unified_Completion.completion_status_reg[15]_0 ,
    CLK,
    \Use_BSCAN.PORT_Selector_reg[0] ,
    \Use_BSCAN.PORT_Selector_reg[0]_0 ,
    \Use_BSCAN.PORT_Selector_reg[0]_1 ,
    \Use_BSCAN.PORT_Selector_reg[3] ,
    sel,
    \Use_BSCAN.PORT_Selector_reg[2] ,
    Dbg_TDO_0,
    Ext_JTAG_UPDATE,
    Scan_Reset_Sel,
    Scan_Reset,
    \Serial_Dbg_Intf.shift_count_reg[4] ,
    Ext_JTAG_TDI,
    E,
    D,
    \Use_BSCAN.command_reg[5]_0 ,
    \Use_Serial_Unified_Completion.count_reg[5]_0 ,
    \shift_Count_reg[0]_0 );
  output [0:0]Q;
  output [0:0]AR;
  output Ext_NM_BRK;
  output Debug_SYS_Rst;
  output Dbg_Rst_0;
  output p_20_out__0;
  output \Use_Serial_Unified_Completion.completion_block_reg_0 ;
  output Dbg_Shift_0;
  output [0:7]Dbg_Reg_En_0;
  output tdo;
  output [0:0]\Use_Serial_Unified_Completion.count_reg[4]_0 ;
  output [0:0]\Use_Serial_Unified_Completion.completion_status_reg[15]_0 ;
  input CLK;
  input \Use_BSCAN.PORT_Selector_reg[0] ;
  input \Use_BSCAN.PORT_Selector_reg[0]_0 ;
  input \Use_BSCAN.PORT_Selector_reg[0]_1 ;
  input [3:0]\Use_BSCAN.PORT_Selector_reg[3] ;
  input sel;
  input \Use_BSCAN.PORT_Selector_reg[2] ;
  input Dbg_TDO_0;
  input Ext_JTAG_UPDATE;
  input Scan_Reset_Sel;
  input Scan_Reset;
  input \Serial_Dbg_Intf.shift_count_reg[4] ;
  input Ext_JTAG_TDI;
  input [0:0]E;
  input [0:0]D;
  input [0:0]\Use_BSCAN.command_reg[5]_0 ;
  input [0:0]\Use_Serial_Unified_Completion.count_reg[5]_0 ;
  input [0:0]\shift_Count_reg[0]_0 ;

  wire A1;
  wire A2;
  wire A3;
  wire CE;
  wire CLK;
  wire [0:0]D;
  wire D_1;
  wire [0:7]Dbg_Reg_En_0;
  wire Dbg_Rst_0;
  wire Dbg_Shift_0;
  wire Dbg_Shift_31_INST_0_i_1_n_0;
  wire Dbg_Shift_31_INST_0_i_3_n_0;
  wire Dbg_Shift_31_INST_0_i_4_n_0;
  wire Dbg_TDO_0;
  wire Debug_SYS_Rst;
  wire [0:0]E;
  wire Ext_JTAG_TDI;
  wire Ext_JTAG_UPDATE;
  wire Ext_NM_BRK_i_i_4_n_0;
  wire ID_TDO_2;
  wire [0:0]Q;
  wire \Serial_Dbg_Intf.shift_count_reg[4] ;
  wire \Use_BSCAN.FDC_I_n_14 ;
  wire \Use_BSCAN.FDC_I_n_15 ;
  wire \Use_BSCAN.FDC_I_n_16 ;
  wire \Use_BSCAN.FDC_I_n_17 ;
  wire \Use_BSCAN.FDC_I_n_2 ;
  wire \Use_BSCAN.FDC_I_n_30 ;
  wire \Use_BSCAN.FDC_I_n_31 ;
  wire \Use_BSCAN.FDC_I_n_32 ;
  wire \Use_BSCAN.FDC_I_n_33 ;
  wire \Use_BSCAN.FDC_I_n_34 ;
  wire \Use_BSCAN.FDC_I_n_35 ;
  wire \Use_BSCAN.FDC_I_n_37 ;
  wire \Use_BSCAN.PORT_Selector_reg[0] ;
  wire \Use_BSCAN.PORT_Selector_reg[0]_0 ;
  wire \Use_BSCAN.PORT_Selector_reg[0]_1 ;
  wire \Use_BSCAN.PORT_Selector_reg[2] ;
  wire [3:0]\Use_BSCAN.PORT_Selector_reg[3] ;
  wire \Use_BSCAN.command[0]_i_1_n_0 ;
  wire [0:0]\Use_BSCAN.command_reg[5]_0 ;
  wire \Use_E2.BSCANE2_I_i_10_n_0 ;
  wire \Use_E2.BSCANE2_I_i_11_n_0 ;
  wire \Use_E2.BSCANE2_I_i_3_n_0 ;
  wire \Use_E2.BSCANE2_I_i_6_n_0 ;
  wire \Use_E2.BSCANE2_I_i_7_n_0 ;
  wire \Use_ID_SRL16E.SRL16E_ID_1_n_0 ;
  wire \Use_Serial_Unified_Completion.completion_block_i_3_n_0 ;
  wire \Use_Serial_Unified_Completion.completion_block_i_4_n_0 ;
  wire \Use_Serial_Unified_Completion.completion_block_reg_0 ;
  wire \Use_Serial_Unified_Completion.completion_block_reg_n_0 ;
  wire \Use_Serial_Unified_Completion.completion_status[3]_i_2_n_0 ;
  wire \Use_Serial_Unified_Completion.completion_status[4]_i_2_n_0 ;
  wire \Use_Serial_Unified_Completion.completion_status[5]_i_2_n_0 ;
  wire \Use_Serial_Unified_Completion.completion_status[7]_i_2_n_0 ;
  wire \Use_Serial_Unified_Completion.completion_status[9]_i_4_n_0 ;
  wire [0:0]\Use_Serial_Unified_Completion.completion_status_reg[15]_0 ;
  wire \Use_Serial_Unified_Completion.count[0]__0_i_4_n_0 ;
  wire \Use_Serial_Unified_Completion.count[0]_i_1_n_0 ;
  wire \Use_Serial_Unified_Completion.count[1]_i_1_n_0 ;
  wire [0:0]\Use_Serial_Unified_Completion.count_reg[4]_0 ;
  wire [0:0]\Use_Serial_Unified_Completion.count_reg[5]_0 ;
  wire [0:4]\Use_Serial_Unified_Completion.count_reg__1 ;
  wire \Use_Serial_Unified_Completion.count_reg_n_0_[0] ;
  wire \Use_Serial_Unified_Completion.count_reg_n_0_[1] ;
  wire \Use_Serial_Unified_Completion.mb_data_overrun_i_2_n_0 ;
  wire \Use_Serial_Unified_Completion.mb_data_overrun_i_3_n_0 ;
  wire \Use_Serial_Unified_Completion.mb_data_overrun_reg_n_0 ;
  wire \Use_Serial_Unified_Completion.mb_instr_error_reg_n_0 ;
  wire \Use_Serial_Unified_Completion.sample_1_reg_n_0_[10] ;
  wire \Use_Serial_Unified_Completion.sample_1_reg_n_0_[11] ;
  wire \Use_Serial_Unified_Completion.sample_1_reg_n_0_[12] ;
  wire \Use_Serial_Unified_Completion.sample_1_reg_n_0_[13] ;
  wire \Use_Serial_Unified_Completion.sample_1_reg_n_0_[14] ;
  wire [0:7]command;
  wire [0:7]command_1;
  wire command_10;
  wire completion_ctrl;
  wire [15:0]completion_status;
  wire config_TDO_2;
  wire mb_instr_overrun;
  wire [5:1]p_0_in;
  wire p_0_in_2;
  wire [4:1]p_0_in__0;
  wire p_0_out__10;
  wire [14:0]p_1_in;
  wire p_20_out__0;
  (* async_reg = "true" *) wire [15:13]sample;
  wire sample_1;
  wire sel;
  wire sel_n;
  wire sel_n0;
  wire sel_reset;
  wire [0:0]\shift_Count_reg[0]_0 ;
  wire [4:4]shift_Count_reg__0;
  wire shifting_Data1__0;
  wire sync;
  wire tdi_shifter0;
  wire \tdi_shifter_reg_n_0_[1] ;
  wire \tdi_shifter_reg_n_0_[2] ;
  wire \tdi_shifter_reg_n_0_[3] ;
  wire \tdi_shifter_reg_n_0_[4] ;
  wire \tdi_shifter_reg_n_0_[5] ;
  wire \tdi_shifter_reg_n_0_[6] ;
  wire \tdi_shifter_reg_n_0_[7] ;
  wire tdo;
  wire \NLW_Use_BSCAN.FDC_I_Ext_NM_BRK_UNCONNECTED ;
  wire \NLW_Use_BSCAN.FDC_I_Ext_NM_BRK_i_reg_UNCONNECTED ;

  LUT3 #(
    .INIT(8'h04)) 
    Dbg_Shift_31_INST_0_i_1
       (.I0(command[6]),
        .I1(command[5]),
        .I2(command[7]),
        .O(Dbg_Shift_31_INST_0_i_1_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    Dbg_Shift_31_INST_0_i_3
       (.I0(command[4]),
        .I1(command[2]),
        .O(Dbg_Shift_31_INST_0_i_3_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    Dbg_Shift_31_INST_0_i_4
       (.I0(command[0]),
        .I1(command[1]),
        .I2(command[3]),
        .O(Dbg_Shift_31_INST_0_i_4_n_0));
  FDCE #(
    .INIT(1'b0)) 
    Debug_Rst_i_reg
       (.C(CLK),
        .CE(1'b1),
        .CLR(1'b0),
        .D(\Use_BSCAN.FDC_I_n_34 ),
        .Q(Dbg_Rst_0));
  FDCE #(
    .INIT(1'b0)) 
    Debug_SYS_Rst_i_reg
       (.C(CLK),
        .CE(1'b1),
        .CLR(1'b0),
        .D(\Use_BSCAN.FDC_I_n_35 ),
        .Q(Debug_SYS_Rst));
  LUT6 #(
    .INIT(64'h0000000000000004)) 
    Ext_NM_BRK_i_i_4
       (.I0(command[7]),
        .I1(command[4]),
        .I2(command[5]),
        .I3(command[3]),
        .I4(command[1]),
        .I5(command[0]),
        .O(Ext_NM_BRK_i_i_4_n_0));
  MB_FDC_1 \Use_BSCAN.FDC_I 
       (.CE(CE),
        .CLK(CLK),
        .D(p_1_in[9:0]),
        .D_1(D_1),
        .Dbg_Reg_En_0(Dbg_Reg_En_0),
        .Dbg_Rst_0(Dbg_Rst_0),
        .Dbg_TDO_0(Dbg_TDO_0),
        .Debug_Rst_i_reg(\Use_BSCAN.FDC_I_n_34 ),
        .Debug_SYS_Rst(Debug_SYS_Rst),
        .Debug_SYS_Rst_i_reg(\Use_BSCAN.FDC_I_n_35 ),
        .E(\Use_BSCAN.FDC_I_n_14 ),
        .Ext_NM_BRK(\NLW_Use_BSCAN.FDC_I_Ext_NM_BRK_UNCONNECTED ),
        .Ext_NM_BRK_i_reg(\NLW_Use_BSCAN.FDC_I_Ext_NM_BRK_i_reg_UNCONNECTED ),
        .Q({command[0],command[1],command[2],command[3],command[4],command[5],command[6],command[7]}),
        .\Serial_Dbg_Intf.shift_count_reg[4] (\Serial_Dbg_Intf.shift_count_reg[4] ),
        .\Use_BSCAN.PORT_Selector_reg[0] (\Use_BSCAN.PORT_Selector_reg[0]_1 ),
        .\Use_BSCAN.PORT_Selector_reg[0]_0 (\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .\Use_BSCAN.PORT_Selector_reg[3] (\Use_BSCAN.PORT_Selector_reg[3] ),
        .\Use_BSCAN.command_reg[0] (Dbg_Shift_31_INST_0_i_4_n_0),
        .\Use_BSCAN.command_reg[4] (Dbg_Shift_31_INST_0_i_3_n_0),
        .\Use_BSCAN.command_reg[6] (Dbg_Shift_31_INST_0_i_1_n_0),
        .\Use_BSCAN.command_reg[7] (Ext_NM_BRK_i_i_4_n_0),
        .\Use_Serial_Unified_Completion.completion_block_reg (\Use_Serial_Unified_Completion.completion_block_reg_0 ),
        .\Use_Serial_Unified_Completion.completion_block_reg_0 (\Use_BSCAN.FDC_I_n_33 ),
        .\Use_Serial_Unified_Completion.completion_block_reg_1 (\Use_Serial_Unified_Completion.completion_block_reg_n_0 ),
        .\Use_Serial_Unified_Completion.completion_status_reg[10] (completion_status[10:0]),
        .\Use_Serial_Unified_Completion.completion_status_reg[2] (\Use_Serial_Unified_Completion.completion_status[3]_i_2_n_0 ),
        .\Use_Serial_Unified_Completion.completion_status_reg[3] (\Use_Serial_Unified_Completion.completion_status[4]_i_2_n_0 ),
        .\Use_Serial_Unified_Completion.completion_status_reg[4] (\Use_Serial_Unified_Completion.completion_status[5]_i_2_n_0 ),
        .\Use_Serial_Unified_Completion.completion_status_reg[5] (\Use_Serial_Unified_Completion.completion_status[7]_i_2_n_0 ),
        .\Use_Serial_Unified_Completion.completion_status_reg[7] (\Use_Serial_Unified_Completion.completion_status[9]_i_4_n_0 ),
        .\Use_Serial_Unified_Completion.count_reg[0] (\Use_Serial_Unified_Completion.count_reg_n_0_[0] ),
        .\Use_Serial_Unified_Completion.count_reg[1] (\Use_Serial_Unified_Completion.count_reg_n_0_[1] ),
        .\Use_Serial_Unified_Completion.count_reg[5] (\Use_Serial_Unified_Completion.mb_data_overrun_i_2_n_0 ),
        .\Use_Serial_Unified_Completion.mb_data_overrun_reg (\Use_BSCAN.FDC_I_n_32 ),
        .\Use_Serial_Unified_Completion.mb_instr_error_reg (\Use_BSCAN.FDC_I_n_31 ),
        .\Use_Serial_Unified_Completion.mb_instr_overrun_reg (\Use_BSCAN.FDC_I_n_30 ),
        .\Use_Serial_Unified_Completion.sample_1_reg[10] (sample_1),
        .\Use_Serial_Unified_Completion.sample_reg[15] ({\Use_BSCAN.FDC_I_n_15 ,\Use_BSCAN.FDC_I_n_16 ,\Use_BSCAN.FDC_I_n_17 }),
        .\Use_Serial_Unified_Completion.sample_reg[15]_0 ({sample,\Use_Serial_Unified_Completion.mb_data_overrun_reg_n_0 ,\Use_Serial_Unified_Completion.mb_instr_error_reg_n_0 ,mb_instr_overrun}),
        .\command_1_reg[7] (\Use_BSCAN.FDC_I_n_2 ),
        .\command_1_reg[7]_0 (command_10),
        .completion_ctrl(completion_ctrl),
        .\completion_ctrl_reg[0] (\Use_BSCAN.FDC_I_n_37 ),
        .p_0_out__10(p_0_out__10),
        .p_20_out__0(p_20_out__0),
        .sel(sel),
        .sel_n(sel_n),
        .shifting_Data1__0(shifting_Data1__0),
        .sync(sync),
        .\tdi_shifter_reg[0] ({p_0_in_2,\tdi_shifter_reg_n_0_[1] ,\tdi_shifter_reg_n_0_[2] ,\tdi_shifter_reg_n_0_[3] ,\tdi_shifter_reg_n_0_[4] ,\tdi_shifter_reg_n_0_[5] ,\tdi_shifter_reg_n_0_[6] ,\tdi_shifter_reg_n_0_[7] }));
  MB_FDRE_1 \Use_BSCAN.SYNC_FDRE 
       (.CE(CE),
        .D_1(D_1),
        .Dbg_Shift_0(Dbg_Shift_0),
        .\Use_BSCAN.PORT_Selector_reg[0] (\Use_BSCAN.PORT_Selector_reg[0] ),
        .\Use_BSCAN.PORT_Selector_reg[0]_0 (\Use_BSCAN.PORT_Selector_reg[0]_1 ),
        .\Use_BSCAN.command_reg[0] (Dbg_Shift_31_INST_0_i_4_n_0),
        .\Use_BSCAN.command_reg[4] (Dbg_Shift_31_INST_0_i_3_n_0),
        .\Use_BSCAN.command_reg[6] (Dbg_Shift_31_INST_0_i_1_n_0),
        .\Using_FPGA.Native_0 (\Use_BSCAN.FDC_I_n_2 ),
        .sync(sync));
  LUT5 #(
    .INIT(32'h00000008)) 
    \Use_BSCAN.command[0]_i_1 
       (.I0(sel),
        .I1(\Use_BSCAN.PORT_Selector_reg[3] [0]),
        .I2(\Use_BSCAN.PORT_Selector_reg[3] [1]),
        .I3(\Use_BSCAN.PORT_Selector_reg[3] [3]),
        .I4(\Use_BSCAN.PORT_Selector_reg[3] [2]),
        .O(\Use_BSCAN.command[0]_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \Use_BSCAN.command_reg[0] 
       (.C(CLK),
        .CE(\Use_BSCAN.command[0]_i_1_n_0 ),
        .CLR(1'b0),
        .D(command_1[0]),
        .Q(command[0]));
  FDCE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \Use_BSCAN.command_reg[1] 
       (.C(CLK),
        .CE(\Use_BSCAN.command[0]_i_1_n_0 ),
        .CLR(1'b0),
        .D(command_1[1]),
        .Q(command[1]));
  FDCE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \Use_BSCAN.command_reg[2] 
       (.C(CLK),
        .CE(\Use_BSCAN.command[0]_i_1_n_0 ),
        .CLR(1'b0),
        .D(command_1[2]),
        .Q(command[2]));
  FDCE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \Use_BSCAN.command_reg[3] 
       (.C(CLK),
        .CE(\Use_BSCAN.command[0]_i_1_n_0 ),
        .CLR(1'b0),
        .D(command_1[3]),
        .Q(command[3]));
  FDCE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \Use_BSCAN.command_reg[4] 
       (.C(CLK),
        .CE(\Use_BSCAN.command[0]_i_1_n_0 ),
        .CLR(1'b0),
        .D(command_1[4]),
        .Q(command[4]));
  FDCE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \Use_BSCAN.command_reg[5] 
       (.C(CLK),
        .CE(\Use_BSCAN.command[0]_i_1_n_0 ),
        .CLR(1'b0),
        .D(command_1[5]),
        .Q(command[5]));
  FDCE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \Use_BSCAN.command_reg[6] 
       (.C(CLK),
        .CE(\Use_BSCAN.command[0]_i_1_n_0 ),
        .CLR(1'b0),
        .D(command_1[6]),
        .Q(command[6]));
  FDCE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \Use_BSCAN.command_reg[7] 
       (.C(CLK),
        .CE(\Use_BSCAN.command[0]_i_1_n_0 ),
        .CLR(1'b0),
        .D(command_1[7]),
        .Q(command[7]));
  mdm_v3_2_10_MB_SRL16E \Use_Config_SRL16E.SRL16E_1 
       (.Dbg_TDO_0(Dbg_TDO_0),
        .Q({shift_Count_reg__0,A3,A2,A1,Q}),
        .\Use_BSCAN.PORT_Selector_reg[0] (\Use_BSCAN.PORT_Selector_reg[0] ),
        .\Use_BSCAN.PORT_Selector_reg[0]_0 (\Use_BSCAN.PORT_Selector_reg[3] [0]),
        .\Use_BSCAN.PORT_Selector_reg[2] (\Use_BSCAN.PORT_Selector_reg[2] ),
        .\Use_BSCAN.command_reg[0] (\Use_E2.BSCANE2_I_i_3_n_0 ),
        .\Use_BSCAN.command_reg[0]_0 (\Use_E2.BSCANE2_I_i_6_n_0 ),
        .\Use_BSCAN.command_reg[3] (\Use_E2.BSCANE2_I_i_7_n_0 ),
        .\Use_BSCAN.command_reg[4] ({command[4],command[5],command[7]}),
        .\Use_BSCAN.command_reg[5] (\Use_ID_SRL16E.SRL16E_ID_1_n_0 ),
        .\Use_Serial_Unified_Completion.completion_status_reg[0] (completion_status[0]),
        .config_TDO_2(config_TDO_2),
        .tdo(tdo));
  mdm_v3_2_10_MB_SRL16E__parameterized0 \Use_Config_SRL16E.SRL16E_2 
       (.Q({A3,A2,A1,Q}),
        .\Use_BSCAN.PORT_Selector_reg[0] (\Use_BSCAN.PORT_Selector_reg[0] ),
        .config_TDO_2(config_TDO_2));
  LUT6 #(
    .INIT(64'hFEFEFCFFFFFFFFFF)) 
    \Use_E2.BSCANE2_I_i_10 
       (.I0(command[1]),
        .I1(command[3]),
        .I2(command[5]),
        .I3(command[4]),
        .I4(command[2]),
        .I5(command[6]),
        .O(\Use_E2.BSCANE2_I_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h0001000010000001)) 
    \Use_E2.BSCANE2_I_i_11 
       (.I0(command[1]),
        .I1(command[3]),
        .I2(command[2]),
        .I3(command[6]),
        .I4(command[4]),
        .I5(command[5]),
        .O(\Use_E2.BSCANE2_I_i_11_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \Use_E2.BSCANE2_I_i_3 
       (.I0(command[0]),
        .I1(Dbg_TDO_0),
        .I2(\Use_BSCAN.PORT_Selector_reg[3] [1]),
        .O(\Use_E2.BSCANE2_I_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h00F8)) 
    \Use_E2.BSCANE2_I_i_6 
       (.I0(\Use_E2.BSCANE2_I_i_10_n_0 ),
        .I1(Dbg_TDO_0),
        .I2(\Use_E2.BSCANE2_I_i_11_n_0 ),
        .I3(command[0]),
        .O(\Use_E2.BSCANE2_I_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h88BC88FFAABEAABE)) 
    \Use_E2.BSCANE2_I_i_7 
       (.I0(command[3]),
        .I1(command[4]),
        .I2(command[5]),
        .I3(command[6]),
        .I4(command[1]),
        .I5(command[2]),
        .O(\Use_E2.BSCANE2_I_i_7_n_0 ));
  mdm_v3_2_10_MB_SRL16E__parameterized1 \Use_ID_SRL16E.SRL16E_ID_1 
       (.ID_TDO_2(ID_TDO_2),
        .Q({shift_Count_reg__0,A3,A2,A1,Q}),
        .\Use_BSCAN.PORT_Selector_reg[0] (\Use_BSCAN.PORT_Selector_reg[0] ),
        .\Use_BSCAN.command_reg[1] ({command[1],command[2],command[4],command[5],command[6],command[7]}),
        .sel_n_reg(\Use_ID_SRL16E.SRL16E_ID_1_n_0 ));
  mdm_v3_2_10_MB_SRL16E__parameterized2 \Use_ID_SRL16E.SRL16E_ID_2 
       (.ID_TDO_2(ID_TDO_2),
        .Q({A3,A2,A1,Q}),
        .\Use_BSCAN.PORT_Selector_reg[0] (\Use_BSCAN.PORT_Selector_reg[0] ));
  LUT6 #(
    .INIT(64'hFFFFFFFFBAFFBABA)) 
    \Use_Serial_Unified_Completion.completion_block_i_2 
       (.I0(\Use_Serial_Unified_Completion.completion_block_i_3_n_0 ),
        .I1(\Use_Serial_Unified_Completion.completion_status_reg[15]_0 ),
        .I2(sample[15]),
        .I3(\Use_Serial_Unified_Completion.sample_1_reg_n_0_[10] ),
        .I4(mb_instr_overrun),
        .I5(\Use_Serial_Unified_Completion.completion_block_i_4_n_0 ),
        .O(p_0_out__10));
  LUT4 #(
    .INIT(16'h4F44)) 
    \Use_Serial_Unified_Completion.completion_block_i_3 
       (.I0(\Use_Serial_Unified_Completion.sample_1_reg_n_0_[11] ),
        .I1(\Use_Serial_Unified_Completion.mb_instr_error_reg_n_0 ),
        .I2(\Use_Serial_Unified_Completion.sample_1_reg_n_0_[13] ),
        .I3(sample[13]),
        .O(\Use_Serial_Unified_Completion.completion_block_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h4F44)) 
    \Use_Serial_Unified_Completion.completion_block_i_4 
       (.I0(\Use_Serial_Unified_Completion.sample_1_reg_n_0_[12] ),
        .I1(\Use_Serial_Unified_Completion.mb_data_overrun_reg_n_0 ),
        .I2(\Use_Serial_Unified_Completion.sample_1_reg_n_0_[14] ),
        .I3(sample[14]),
        .O(\Use_Serial_Unified_Completion.completion_block_i_4_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_block_reg 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(1'b1),
        .CLR(1'b0),
        .D(\Use_BSCAN.FDC_I_n_33 ),
        .Q(\Use_Serial_Unified_Completion.completion_block_reg_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \Use_Serial_Unified_Completion.completion_status[10]_i_1 
       (.I0(\Use_Serial_Unified_Completion.sample_1_reg_n_0_[10] ),
        .I1(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .I2(completion_status[11]),
        .O(p_1_in[10]));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Use_Serial_Unified_Completion.completion_status[11]_i_1 
       (.I0(\Use_Serial_Unified_Completion.sample_1_reg_n_0_[11] ),
        .I1(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .I2(completion_status[12]),
        .O(p_1_in[11]));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Use_Serial_Unified_Completion.completion_status[12]_i_1 
       (.I0(\Use_Serial_Unified_Completion.sample_1_reg_n_0_[12] ),
        .I1(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .I2(completion_status[13]),
        .O(p_1_in[12]));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Use_Serial_Unified_Completion.completion_status[13]_i_1 
       (.I0(\Use_Serial_Unified_Completion.sample_1_reg_n_0_[13] ),
        .I1(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .I2(completion_status[14]),
        .O(p_1_in[13]));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Use_Serial_Unified_Completion.completion_status[14]_i_1 
       (.I0(\Use_Serial_Unified_Completion.sample_1_reg_n_0_[14] ),
        .I1(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .I2(completion_status[15]),
        .O(p_1_in[14]));
  LUT3 #(
    .INIT(8'h80)) 
    \Use_Serial_Unified_Completion.completion_status[3]_i_2 
       (.I0(completion_status[2]),
        .I1(completion_status[0]),
        .I2(completion_status[1]),
        .O(\Use_Serial_Unified_Completion.completion_status[3]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \Use_Serial_Unified_Completion.completion_status[4]_i_2 
       (.I0(completion_status[3]),
        .I1(completion_status[1]),
        .I2(completion_status[0]),
        .I3(completion_status[2]),
        .O(\Use_Serial_Unified_Completion.completion_status[4]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \Use_Serial_Unified_Completion.completion_status[5]_i_2 
       (.I0(completion_status[4]),
        .I1(completion_status[2]),
        .I2(completion_status[0]),
        .I3(completion_status[1]),
        .I4(completion_status[3]),
        .O(\Use_Serial_Unified_Completion.completion_status[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \Use_Serial_Unified_Completion.completion_status[7]_i_2 
       (.I0(completion_status[5]),
        .I1(completion_status[3]),
        .I2(completion_status[1]),
        .I3(completion_status[0]),
        .I4(completion_status[2]),
        .I5(completion_status[4]),
        .O(\Use_Serial_Unified_Completion.completion_status[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \Use_Serial_Unified_Completion.completion_status[9]_i_4 
       (.I0(completion_status[7]),
        .I1(\Use_Serial_Unified_Completion.completion_status[7]_i_2_n_0 ),
        .I2(completion_status[6]),
        .O(\Use_Serial_Unified_Completion.completion_status[9]_i_4_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_status_reg[0] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(\Use_BSCAN.FDC_I_n_14 ),
        .CLR(1'b0),
        .D(p_1_in[0]),
        .Q(completion_status[0]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_status_reg[10] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(E),
        .CLR(1'b0),
        .D(p_1_in[10]),
        .Q(completion_status[10]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_status_reg[11] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(E),
        .CLR(1'b0),
        .D(p_1_in[11]),
        .Q(completion_status[11]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_status_reg[12] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(E),
        .CLR(1'b0),
        .D(p_1_in[12]),
        .Q(completion_status[12]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_status_reg[13] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(E),
        .CLR(1'b0),
        .D(p_1_in[13]),
        .Q(completion_status[13]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_status_reg[14] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(E),
        .CLR(1'b0),
        .D(p_1_in[14]),
        .Q(completion_status[14]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_status_reg[15] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(E),
        .CLR(1'b0),
        .D(D),
        .Q(completion_status[15]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_status_reg[1] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(\Use_BSCAN.FDC_I_n_14 ),
        .CLR(1'b0),
        .D(p_1_in[1]),
        .Q(completion_status[1]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_status_reg[2] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(\Use_BSCAN.FDC_I_n_14 ),
        .CLR(1'b0),
        .D(p_1_in[2]),
        .Q(completion_status[2]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_status_reg[3] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(\Use_BSCAN.FDC_I_n_14 ),
        .CLR(1'b0),
        .D(p_1_in[3]),
        .Q(completion_status[3]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_status_reg[4] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(\Use_BSCAN.FDC_I_n_14 ),
        .CLR(1'b0),
        .D(p_1_in[4]),
        .Q(completion_status[4]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_status_reg[5] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(\Use_BSCAN.FDC_I_n_14 ),
        .CLR(1'b0),
        .D(p_1_in[5]),
        .Q(completion_status[5]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_status_reg[6] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(\Use_BSCAN.FDC_I_n_14 ),
        .CLR(1'b0),
        .D(p_1_in[6]),
        .Q(completion_status[6]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_status_reg[7] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(\Use_BSCAN.FDC_I_n_14 ),
        .CLR(1'b0),
        .D(p_1_in[7]),
        .Q(completion_status[7]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_status_reg[8] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(\Use_BSCAN.FDC_I_n_14 ),
        .CLR(1'b0),
        .D(p_1_in[8]),
        .Q(completion_status[8]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_status_reg[9] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(\Use_BSCAN.FDC_I_n_14 ),
        .CLR(1'b0),
        .D(p_1_in[9]),
        .Q(completion_status[9]));
  LUT4 #(
    .INIT(16'h0078)) 
    \Use_Serial_Unified_Completion.count[0]__0_i_2 
       (.I0(\Use_Serial_Unified_Completion.count_reg__1 [1]),
        .I1(\Use_Serial_Unified_Completion.count[0]__0_i_4_n_0 ),
        .I2(\Use_Serial_Unified_Completion.count_reg__1 [0]),
        .I3(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .O(p_0_in[5]));
  LUT4 #(
    .INIT(16'h8000)) 
    \Use_Serial_Unified_Completion.count[0]__0_i_4 
       (.I0(\Use_Serial_Unified_Completion.count_reg__1 [2]),
        .I1(\Use_Serial_Unified_Completion.count_reg__1 [4]),
        .I2(\Use_Serial_Unified_Completion.count_reg[4]_0 ),
        .I3(\Use_Serial_Unified_Completion.count_reg__1 [3]),
        .O(\Use_Serial_Unified_Completion.count[0]__0_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000FF80FF00FF00)) 
    \Use_Serial_Unified_Completion.count[0]_i_1 
       (.I0(\Use_Serial_Unified_Completion.count_reg_n_0_[1] ),
        .I1(\Use_BSCAN.PORT_Selector_reg[0]_1 ),
        .I2(sync),
        .I3(\Use_Serial_Unified_Completion.count_reg_n_0_[0] ),
        .I4(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .I5(shifting_Data1__0),
        .O(\Use_Serial_Unified_Completion.count[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000007FFF8000)) 
    \Use_Serial_Unified_Completion.count[1]__0_i_1 
       (.I0(\Use_Serial_Unified_Completion.count_reg__1 [2]),
        .I1(\Use_Serial_Unified_Completion.count_reg__1 [4]),
        .I2(\Use_Serial_Unified_Completion.count_reg[4]_0 ),
        .I3(\Use_Serial_Unified_Completion.count_reg__1 [3]),
        .I4(\Use_Serial_Unified_Completion.count_reg__1 [1]),
        .I5(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .O(p_0_in[4]));
  LUT6 #(
    .INIT(64'h00F7FFFF00080000)) 
    \Use_Serial_Unified_Completion.count[1]_i_1 
       (.I0(\Use_BSCAN.PORT_Selector_reg[0]_1 ),
        .I1(sync),
        .I2(\Use_Serial_Unified_Completion.count_reg_n_0_[0] ),
        .I3(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .I4(shifting_Data1__0),
        .I5(\Use_Serial_Unified_Completion.count_reg_n_0_[1] ),
        .O(\Use_Serial_Unified_Completion.count[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00007F80)) 
    \Use_Serial_Unified_Completion.count[2]_i_1 
       (.I0(\Use_Serial_Unified_Completion.count_reg__1 [3]),
        .I1(\Use_Serial_Unified_Completion.count_reg[4]_0 ),
        .I2(\Use_Serial_Unified_Completion.count_reg__1 [4]),
        .I3(\Use_Serial_Unified_Completion.count_reg__1 [2]),
        .I4(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .O(p_0_in[3]));
  LUT4 #(
    .INIT(16'h0078)) 
    \Use_Serial_Unified_Completion.count[3]_i_1 
       (.I0(\Use_Serial_Unified_Completion.count_reg__1 [4]),
        .I1(\Use_Serial_Unified_Completion.count_reg[4]_0 ),
        .I2(\Use_Serial_Unified_Completion.count_reg__1 [3]),
        .I3(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .O(p_0_in[2]));
  LUT3 #(
    .INIT(8'h06)) 
    \Use_Serial_Unified_Completion.count[4]_i_1 
       (.I0(\Use_Serial_Unified_Completion.count_reg[4]_0 ),
        .I1(\Use_Serial_Unified_Completion.count_reg__1 [4]),
        .I2(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .O(p_0_in[1]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.count_reg[0] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(1'b1),
        .CLR(1'b0),
        .D(\Use_Serial_Unified_Completion.count[0]_i_1_n_0 ),
        .Q(\Use_Serial_Unified_Completion.count_reg_n_0_[0] ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.count_reg[0]__0 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(\Use_BSCAN.command_reg[5]_0 ),
        .CLR(1'b0),
        .D(p_0_in[5]),
        .Q(\Use_Serial_Unified_Completion.count_reg__1 [0]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.count_reg[1] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(1'b1),
        .CLR(1'b0),
        .D(\Use_Serial_Unified_Completion.count[1]_i_1_n_0 ),
        .Q(\Use_Serial_Unified_Completion.count_reg_n_0_[1] ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.count_reg[1]__0 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(\Use_BSCAN.command_reg[5]_0 ),
        .CLR(1'b0),
        .D(p_0_in[4]),
        .Q(\Use_Serial_Unified_Completion.count_reg__1 [1]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.count_reg[2] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(\Use_BSCAN.command_reg[5]_0 ),
        .CLR(1'b0),
        .D(p_0_in[3]),
        .Q(\Use_Serial_Unified_Completion.count_reg__1 [2]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.count_reg[3] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(\Use_BSCAN.command_reg[5]_0 ),
        .CLR(1'b0),
        .D(p_0_in[2]),
        .Q(\Use_Serial_Unified_Completion.count_reg__1 [3]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.count_reg[4] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(\Use_BSCAN.command_reg[5]_0 ),
        .CLR(1'b0),
        .D(p_0_in[1]),
        .Q(\Use_Serial_Unified_Completion.count_reg__1 [4]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.count_reg[5] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(\Use_BSCAN.command_reg[5]_0 ),
        .CLR(1'b0),
        .D(\Use_Serial_Unified_Completion.count_reg[5]_0 ),
        .Q(\Use_Serial_Unified_Completion.count_reg[4]_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \Use_Serial_Unified_Completion.mb_data_overrun_i_2 
       (.I0(\Use_Serial_Unified_Completion.mb_data_overrun_i_3_n_0 ),
        .I1(\Use_Serial_Unified_Completion.count_reg[4]_0 ),
        .I2(\Use_Serial_Unified_Completion.count_reg__1 [4]),
        .I3(\Use_Serial_Unified_Completion.count_reg__1 [3]),
        .O(\Use_Serial_Unified_Completion.mb_data_overrun_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h0008)) 
    \Use_Serial_Unified_Completion.mb_data_overrun_i_3 
       (.I0(\Use_BSCAN.PORT_Selector_reg[0]_1 ),
        .I1(\Use_Serial_Unified_Completion.count_reg__1 [0]),
        .I2(\Use_Serial_Unified_Completion.count_reg__1 [1]),
        .I3(\Use_Serial_Unified_Completion.count_reg__1 [2]),
        .O(\Use_Serial_Unified_Completion.mb_data_overrun_i_3_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.mb_data_overrun_reg 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(1'b1),
        .CLR(1'b0),
        .D(\Use_BSCAN.FDC_I_n_32 ),
        .Q(\Use_Serial_Unified_Completion.mb_data_overrun_reg_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.mb_instr_error_reg 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(1'b1),
        .CLR(1'b0),
        .D(\Use_BSCAN.FDC_I_n_31 ),
        .Q(\Use_Serial_Unified_Completion.mb_instr_error_reg_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.mb_instr_overrun_reg 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(1'b1),
        .CLR(1'b0),
        .D(\Use_BSCAN.FDC_I_n_30 ),
        .Q(mb_instr_overrun));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.sample_1_reg[10] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(sample_1),
        .CLR(1'b0),
        .D(mb_instr_overrun),
        .Q(\Use_Serial_Unified_Completion.sample_1_reg_n_0_[10] ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.sample_1_reg[11] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(sample_1),
        .CLR(1'b0),
        .D(\Use_Serial_Unified_Completion.mb_instr_error_reg_n_0 ),
        .Q(\Use_Serial_Unified_Completion.sample_1_reg_n_0_[11] ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.sample_1_reg[12] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(sample_1),
        .CLR(1'b0),
        .D(\Use_Serial_Unified_Completion.mb_data_overrun_reg_n_0 ),
        .Q(\Use_Serial_Unified_Completion.sample_1_reg_n_0_[12] ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.sample_1_reg[13] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(sample_1),
        .CLR(1'b0),
        .D(sample[13]),
        .Q(\Use_Serial_Unified_Completion.sample_1_reg_n_0_[13] ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.sample_1_reg[14] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(sample_1),
        .CLR(1'b0),
        .D(sample[14]),
        .Q(\Use_Serial_Unified_Completion.sample_1_reg_n_0_[14] ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.sample_1_reg[15] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(sample_1),
        .CLR(1'b0),
        .D(sample[15]),
        .Q(\Use_Serial_Unified_Completion.completion_status_reg[15]_0 ));
  initial assign \Use_Serial_Unified_Completion.sample_reg[13] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Use_Serial_Unified_Completion.sample_reg[13] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(1'b1),
        .CLR(1'b0),
        .D(\Use_BSCAN.FDC_I_n_17 ),
        .Q(sample[13]));
  initial assign \Use_Serial_Unified_Completion.sample_reg[14] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Use_Serial_Unified_Completion.sample_reg[14] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(1'b1),
        .CLR(1'b0),
        .D(\Use_BSCAN.FDC_I_n_16 ),
        .Q(sample[14]));
  initial assign \Use_Serial_Unified_Completion.sample_reg[15] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Use_Serial_Unified_Completion.sample_reg[15] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(1'b1),
        .CLR(1'b0),
        .D(\Use_BSCAN.FDC_I_n_15 ),
        .Q(sample[15]));
  FDCE #(
    .INIT(1'b0)) 
    \command_1_reg[0] 
       (.C(CLK),
        .CE(command_10),
        .CLR(1'b0),
        .D(p_0_in_2),
        .Q(command_1[0]));
  FDCE #(
    .INIT(1'b0)) 
    \command_1_reg[1] 
       (.C(CLK),
        .CE(command_10),
        .CLR(1'b0),
        .D(\tdi_shifter_reg_n_0_[1] ),
        .Q(command_1[1]));
  FDCE #(
    .INIT(1'b0)) 
    \command_1_reg[2] 
       (.C(CLK),
        .CE(command_10),
        .CLR(1'b0),
        .D(\tdi_shifter_reg_n_0_[2] ),
        .Q(command_1[2]));
  FDCE #(
    .INIT(1'b0)) 
    \command_1_reg[3] 
       (.C(CLK),
        .CE(command_10),
        .CLR(1'b0),
        .D(\tdi_shifter_reg_n_0_[3] ),
        .Q(command_1[3]));
  FDCE #(
    .INIT(1'b0)) 
    \command_1_reg[4] 
       (.C(CLK),
        .CE(command_10),
        .CLR(1'b0),
        .D(\tdi_shifter_reg_n_0_[4] ),
        .Q(command_1[4]));
  FDCE #(
    .INIT(1'b0)) 
    \command_1_reg[5] 
       (.C(CLK),
        .CE(command_10),
        .CLR(1'b0),
        .D(\tdi_shifter_reg_n_0_[5] ),
        .Q(command_1[5]));
  FDCE #(
    .INIT(1'b0)) 
    \command_1_reg[6] 
       (.C(CLK),
        .CE(command_10),
        .CLR(1'b0),
        .D(\tdi_shifter_reg_n_0_[6] ),
        .Q(command_1[6]));
  FDCE #(
    .INIT(1'b0)) 
    \command_1_reg[7] 
       (.C(CLK),
        .CE(command_10),
        .CLR(1'b0),
        .D(\tdi_shifter_reg_n_0_[7] ),
        .Q(command_1[7]));
  FDCE #(
    .INIT(1'b0)) 
    \completion_ctrl_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(1'b0),
        .D(\Use_BSCAN.FDC_I_n_37 ),
        .Q(completion_ctrl));
  LUT5 #(
    .INIT(32'hFEFFFFFF)) 
    sel_n_i_1
       (.I0(\Use_BSCAN.PORT_Selector_reg[3] [2]),
        .I1(\Use_BSCAN.PORT_Selector_reg[3] [3]),
        .I2(\Use_BSCAN.PORT_Selector_reg[3] [1]),
        .I3(\Use_BSCAN.PORT_Selector_reg[3] [0]),
        .I4(sel),
        .O(sel_n0));
  LUT2 #(
    .INIT(4'h4)) 
    sel_n_i_2
       (.I0(\Use_BSCAN.command[0]_i_1_n_0 ),
        .I1(Ext_JTAG_UPDATE),
        .O(sel_reset));
  FDPE #(
    .INIT(1'b1)) 
    sel_n_reg
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .D(sel_n0),
        .PRE(sel_reset),
        .Q(sel_n));
  LUT3 #(
    .INIT(8'h48)) 
    \shift_Count[1]_i_1 
       (.I0(Q),
        .I1(\Use_BSCAN.PORT_Selector_reg[0]_1 ),
        .I2(A1),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT4 #(
    .INIT(16'h7080)) 
    \shift_Count[2]_i_1 
       (.I0(A1),
        .I1(Q),
        .I2(\Use_BSCAN.PORT_Selector_reg[0]_1 ),
        .I3(A2),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT5 #(
    .INIT(32'h7F008000)) 
    \shift_Count[3]_i_1 
       (.I0(A2),
        .I1(Q),
        .I2(A1),
        .I3(\Use_BSCAN.PORT_Selector_reg[0]_1 ),
        .I4(A3),
        .O(p_0_in__0[3]));
  LUT6 #(
    .INIT(64'h7FFF000080000000)) 
    \shift_Count[4]_i_1 
       (.I0(A3),
        .I1(A1),
        .I2(Q),
        .I3(A2),
        .I4(\Use_BSCAN.PORT_Selector_reg[0]_1 ),
        .I5(shift_Count_reg__0),
        .O(p_0_in__0[4]));
  FDCE #(
    .INIT(1'b0)) 
    \shift_Count_reg[0] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(1'b1),
        .CLR(1'b0),
        .D(\shift_Count_reg[0]_0 ),
        .Q(Q));
  FDCE #(
    .INIT(1'b0)) 
    \shift_Count_reg[1] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(1'b1),
        .CLR(1'b0),
        .D(p_0_in__0[1]),
        .Q(A1));
  FDCE #(
    .INIT(1'b0)) 
    \shift_Count_reg[2] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(1'b1),
        .CLR(1'b0),
        .D(p_0_in__0[2]),
        .Q(A2));
  FDCE #(
    .INIT(1'b0)) 
    \shift_Count_reg[3] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(1'b1),
        .CLR(1'b0),
        .D(p_0_in__0[3]),
        .Q(A3));
  FDCE #(
    .INIT(1'b0)) 
    \shift_Count_reg[4] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(1'b1),
        .CLR(1'b0),
        .D(p_0_in__0[4]),
        .Q(shift_Count_reg__0));
  LUT6 #(
    .INIT(64'h0100000000000000)) 
    \tdi_shifter[0]_i_1 
       (.I0(\Use_BSCAN.PORT_Selector_reg[3] [2]),
        .I1(\Use_BSCAN.PORT_Selector_reg[3] [3]),
        .I2(\Use_BSCAN.PORT_Selector_reg[3] [1]),
        .I3(\Use_BSCAN.PORT_Selector_reg[3] [0]),
        .I4(sel),
        .I5(\Use_BSCAN.PORT_Selector_reg[0]_1 ),
        .O(tdi_shifter0));
  FDCE #(
    .INIT(1'b0)) 
    \tdi_shifter_reg[0] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(tdi_shifter0),
        .CLR(1'b0),
        .D(Ext_JTAG_TDI),
        .Q(p_0_in_2));
  FDCE #(
    .INIT(1'b0)) 
    \tdi_shifter_reg[1] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(tdi_shifter0),
        .CLR(1'b0),
        .D(p_0_in_2),
        .Q(\tdi_shifter_reg_n_0_[1] ));
  FDCE #(
    .INIT(1'b0)) 
    \tdi_shifter_reg[2] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(tdi_shifter0),
        .CLR(1'b0),
        .D(\tdi_shifter_reg_n_0_[1] ),
        .Q(\tdi_shifter_reg_n_0_[2] ));
  FDCE #(
    .INIT(1'b0)) 
    \tdi_shifter_reg[3] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(tdi_shifter0),
        .CLR(1'b0),
        .D(\tdi_shifter_reg_n_0_[2] ),
        .Q(\tdi_shifter_reg_n_0_[3] ));
  FDCE #(
    .INIT(1'b0)) 
    \tdi_shifter_reg[4] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(tdi_shifter0),
        .CLR(1'b0),
        .D(\tdi_shifter_reg_n_0_[3] ),
        .Q(\tdi_shifter_reg_n_0_[4] ));
  FDCE #(
    .INIT(1'b0)) 
    \tdi_shifter_reg[5] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(tdi_shifter0),
        .CLR(1'b0),
        .D(\tdi_shifter_reg_n_0_[4] ),
        .Q(\tdi_shifter_reg_n_0_[5] ));
  FDCE #(
    .INIT(1'b0)) 
    \tdi_shifter_reg[6] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(tdi_shifter0),
        .CLR(1'b0),
        .D(\tdi_shifter_reg_n_0_[5] ),
        .Q(\tdi_shifter_reg_n_0_[6] ));
  FDCE #(
    .INIT(1'b0)) 
    \tdi_shifter_reg[7] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(tdi_shifter0),
        .CLR(1'b0),
        .D(\tdi_shifter_reg_n_0_[6] ),
        .Q(\tdi_shifter_reg_n_0_[7] ));
endmodule

module MB_BSCANE2
   (sel_n_reg,
    drck_i,
    Ext_JTAG_RESET,
    sel,
    \Use_Serial_Unified_Completion.count_reg[5] ,
    Ext_JTAG_TDI,
    Ext_JTAG_UPDATE,
    \Use_Serial_Unified_Completion.count_reg[5]_0 ,
    E,
    shift_n_reset,
    AR,
    \Use_Serial_Unified_Completion.count_reg[5]_1 ,
    \shift_Count_reg[0] ,
    \Use_Serial_Unified_Completion.mb_instr_overrun_reg ,
    D,
    tdo,
    p_20_out__0,
    p_43_out__0,
    Scan_Reset_Sel,
    Scan_Reset,
    \Use_Serial_Unified_Completion.count_reg[5]_2 ,
    Q,
    Dbg_TDO_0,
    \Use_Serial_Unified_Completion.sample_1_reg[15] );
  output sel_n_reg;
  output drck_i;
  output Ext_JTAG_RESET;
  output sel;
  output \Use_Serial_Unified_Completion.count_reg[5] ;
  output Ext_JTAG_TDI;
  output Ext_JTAG_UPDATE;
  output [0:0]\Use_Serial_Unified_Completion.count_reg[5]_0 ;
  output [0:0]E;
  output shift_n_reset;
  output [0:0]AR;
  output [0:0]\Use_Serial_Unified_Completion.count_reg[5]_1 ;
  output [0:0]\shift_Count_reg[0] ;
  output \Use_Serial_Unified_Completion.mb_instr_overrun_reg ;
  output [0:0]D;
  input tdo;
  input p_20_out__0;
  input p_43_out__0;
  input Scan_Reset_Sel;
  input Scan_Reset;
  input [0:0]\Use_Serial_Unified_Completion.count_reg[5]_2 ;
  input [0:0]Q;
  input Dbg_TDO_0;
  input [0:0]\Use_Serial_Unified_Completion.sample_1_reg[15] ;

  wire [0:0]AR;
  wire [0:0]D;
  wire Dbg_TDO_0;
  wire [0:0]E;
  wire Ext_JTAG_TDI;
  wire Ext_JTAG_UPDATE;
  wire [0:0]Q;
  wire \Use_Serial_Unified_Completion.count_reg[5] ;
  wire [0:0]\Use_Serial_Unified_Completion.count_reg[5]_0 ;
  wire [0:0]\Use_Serial_Unified_Completion.count_reg[5]_1 ;
  wire [0:0]\Use_Serial_Unified_Completion.count_reg[5]_2 ;
  wire \Use_Serial_Unified_Completion.mb_instr_overrun_reg ;
  wire [0:0]\Use_Serial_Unified_Completion.sample_1_reg[15] ;
  wire drck_i;
  wire p_20_out__0;
  wire p_43_out__0;
  wire sel;
  wire sel_n_reg;
  wire [0:0]\shift_Count_reg[0] ;
  wire shift_n_reset;
  wire tdo;
  wire \NLW_Use_E2.BSCANE2_I_RESET_UNCONNECTED ;
  wire \NLW_Use_E2.BSCANE2_I_RUNTEST_UNCONNECTED ;
  wire \NLW_Use_E2.BSCANE2_I_TCK_UNCONNECTED ;
  wire \NLW_Use_E2.BSCANE2_I_TMS_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \Use_BSCAN.Config_Reg[30]_i_1 
       (.I0(\Use_Serial_Unified_Completion.count_reg[5] ),
        .O(shift_n_reset));
  LUT1 #(
    .INIT(2'h1)) 
    \Use_BSCAN.PORT_Selector[3]_i_1 
       (.I0(sel),
        .O(AR));
  (* box_type = "PRIMITIVE" *) 
  BSCANE2 #(
    .DISABLE_JTAG("FALSE"),
    .JTAG_CHAIN(2)) 
    \Use_E2.BSCANE2_I 
       (.CAPTURE(sel_n_reg),
        .DRCK(drck_i),
        .RESET(\NLW_Use_E2.BSCANE2_I_RESET_UNCONNECTED ),
        .RUNTEST(\NLW_Use_E2.BSCANE2_I_RUNTEST_UNCONNECTED ),
        .SEL(sel),
        .SHIFT(\Use_Serial_Unified_Completion.count_reg[5] ),
        .TCK(\NLW_Use_E2.BSCANE2_I_TCK_UNCONNECTED ),
        .TDI(Ext_JTAG_TDI),
        .TDO(tdo),
        .TMS(\NLW_Use_E2.BSCANE2_I_TMS_UNCONNECTED ),
        .UPDATE(Ext_JTAG_UPDATE));
  LUT3 #(
    .INIT(8'hE0)) 
    \Use_Serial_Unified_Completion.completion_status[15]_i_1 
       (.I0(\Use_Serial_Unified_Completion.count_reg[5] ),
        .I1(sel_n_reg),
        .I2(p_43_out__0),
        .O(E));
  LUT2 #(
    .INIT(4'h8)) 
    \Use_Serial_Unified_Completion.completion_status[15]_i_2 
       (.I0(sel_n_reg),
        .I1(\Use_Serial_Unified_Completion.sample_1_reg[15] ),
        .O(D));
  LUT3 #(
    .INIT(8'hE0)) 
    \Use_Serial_Unified_Completion.count[0]__0_i_1 
       (.I0(\Use_Serial_Unified_Completion.count_reg[5] ),
        .I1(sel_n_reg),
        .I2(p_20_out__0),
        .O(\Use_Serial_Unified_Completion.count_reg[5]_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \Use_Serial_Unified_Completion.count[5]_i_1 
       (.I0(sel_n_reg),
        .I1(\Use_Serial_Unified_Completion.count_reg[5]_2 ),
        .O(\Use_Serial_Unified_Completion.count_reg[5]_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \Use_Serial_Unified_Completion.mb_instr_overrun_i_2 
       (.I0(Dbg_TDO_0),
        .I1(sel_n_reg),
        .O(\Use_Serial_Unified_Completion.mb_instr_overrun_reg ));
  LUT2 #(
    .INIT(4'h2)) 
    \shift_Count[0]_i_1 
       (.I0(\Use_Serial_Unified_Completion.count_reg[5] ),
        .I1(Q),
        .O(\shift_Count_reg[0] ));
endmodule

module MB_BUFG
   (Dbg_Clk_31,
    drck_i);
  output Dbg_Clk_31;
  input drck_i;

  wire Dbg_Clk_31;
  wire drck_i;

  (* box_type = "PRIMITIVE" *) 
  BUFG \Using_FPGA.Native 
       (.I(drck_i),
        .O(Dbg_Clk_31));
endmodule

module MB_FDC_1
   (D_1,
    p_20_out__0,
    \command_1_reg[7] ,
    D,
    \Use_Serial_Unified_Completion.completion_block_reg ,
    E,
    \Use_Serial_Unified_Completion.sample_reg[15] ,
    \Use_Serial_Unified_Completion.sample_1_reg[10] ,
    shifting_Data1__0,
    Dbg_Reg_En_0,
    CE,
    \command_1_reg[7]_0 ,
    \Use_Serial_Unified_Completion.mb_instr_overrun_reg ,
    \Use_Serial_Unified_Completion.mb_instr_error_reg ,
    \Use_Serial_Unified_Completion.mb_data_overrun_reg ,
    \Use_Serial_Unified_Completion.completion_block_reg_0 ,
    Debug_Rst_i_reg,
    Debug_SYS_Rst_i_reg,
    Ext_NM_BRK_i_reg,
    \completion_ctrl_reg[0] ,
    CLK,
    sel_n,
    Q,
    \Use_BSCAN.command_reg[4] ,
    \Use_BSCAN.command_reg[0] ,
    \Use_Serial_Unified_Completion.completion_block_reg_1 ,
    \Use_BSCAN.command_reg[7] ,
    \Use_Serial_Unified_Completion.completion_status_reg[10] ,
    \Use_Serial_Unified_Completion.completion_status_reg[2] ,
    \Use_Serial_Unified_Completion.completion_status_reg[3] ,
    \Use_Serial_Unified_Completion.completion_status_reg[4] ,
    \Use_Serial_Unified_Completion.completion_status_reg[5] ,
    \Use_Serial_Unified_Completion.completion_status_reg[7] ,
    \Use_BSCAN.PORT_Selector_reg[0] ,
    \Use_BSCAN.PORT_Selector_reg[0]_0 ,
    \Use_Serial_Unified_Completion.sample_reg[15]_0 ,
    \Use_BSCAN.command_reg[6] ,
    sync,
    \Use_Serial_Unified_Completion.count_reg[0] ,
    \tdi_shifter_reg[0] ,
    \Use_BSCAN.PORT_Selector_reg[3] ,
    sel,
    \Serial_Dbg_Intf.shift_count_reg[4] ,
    \Use_Serial_Unified_Completion.count_reg[1] ,
    Dbg_TDO_0,
    \Use_Serial_Unified_Completion.count_reg[5] ,
    p_0_out__10,
    completion_ctrl,
    Dbg_Rst_0,
    Debug_SYS_Rst,
    Ext_NM_BRK);
  output D_1;
  output p_20_out__0;
  output \command_1_reg[7] ;
  output [9:0]D;
  output \Use_Serial_Unified_Completion.completion_block_reg ;
  output [0:0]E;
  output [2:0]\Use_Serial_Unified_Completion.sample_reg[15] ;
  output [0:0]\Use_Serial_Unified_Completion.sample_1_reg[10] ;
  output shifting_Data1__0;
  output [0:7]Dbg_Reg_En_0;
  output CE;
  output [0:0]\command_1_reg[7]_0 ;
  output \Use_Serial_Unified_Completion.mb_instr_overrun_reg ;
  output \Use_Serial_Unified_Completion.mb_instr_error_reg ;
  output \Use_Serial_Unified_Completion.mb_data_overrun_reg ;
  output \Use_Serial_Unified_Completion.completion_block_reg_0 ;
  output Debug_Rst_i_reg;
  output Debug_SYS_Rst_i_reg;
  output Ext_NM_BRK_i_reg;
  output \completion_ctrl_reg[0] ;
  input CLK;
  input sel_n;
  input [7:0]Q;
  input \Use_BSCAN.command_reg[4] ;
  input \Use_BSCAN.command_reg[0] ;
  input \Use_Serial_Unified_Completion.completion_block_reg_1 ;
  input \Use_BSCAN.command_reg[7] ;
  input [10:0]\Use_Serial_Unified_Completion.completion_status_reg[10] ;
  input \Use_Serial_Unified_Completion.completion_status_reg[2] ;
  input \Use_Serial_Unified_Completion.completion_status_reg[3] ;
  input \Use_Serial_Unified_Completion.completion_status_reg[4] ;
  input \Use_Serial_Unified_Completion.completion_status_reg[5] ;
  input \Use_Serial_Unified_Completion.completion_status_reg[7] ;
  input \Use_BSCAN.PORT_Selector_reg[0] ;
  input \Use_BSCAN.PORT_Selector_reg[0]_0 ;
  input [5:0]\Use_Serial_Unified_Completion.sample_reg[15]_0 ;
  input \Use_BSCAN.command_reg[6] ;
  input sync;
  input \Use_Serial_Unified_Completion.count_reg[0] ;
  input [7:0]\tdi_shifter_reg[0] ;
  input [3:0]\Use_BSCAN.PORT_Selector_reg[3] ;
  input sel;
  input \Serial_Dbg_Intf.shift_count_reg[4] ;
  input \Use_Serial_Unified_Completion.count_reg[1] ;
  input Dbg_TDO_0;
  input \Use_Serial_Unified_Completion.count_reg[5] ;
  input p_0_out__10;
  input completion_ctrl;
  input Dbg_Rst_0;
  input Debug_SYS_Rst;
  input Ext_NM_BRK;

  wire CE;
  wire CLK;
  wire [9:0]D;
  wire D_1;
  wire [0:7]Dbg_Reg_En_0;
  wire Dbg_Rst_0;
  wire Dbg_TDO_0;
  wire Debug_Rst_i0;
  wire Debug_Rst_i_reg;
  wire Debug_SYS_Rst;
  wire Debug_SYS_Rst_i_reg;
  wire [0:0]E;
  wire [7:0]Q;
  wire Q_0;
  wire \Serial_Dbg_Intf.shift_count_reg[4] ;
  wire \Use_BSCAN.PORT_Selector_reg[0] ;
  wire \Use_BSCAN.PORT_Selector_reg[0]_0 ;
  wire [3:0]\Use_BSCAN.PORT_Selector_reg[3] ;
  wire \Use_BSCAN.command_reg[0] ;
  wire \Use_BSCAN.command_reg[4] ;
  wire \Use_BSCAN.command_reg[6] ;
  wire \Use_BSCAN.command_reg[7] ;
  wire \Use_Serial_Unified_Completion.completion_block_reg ;
  wire \Use_Serial_Unified_Completion.completion_block_reg_0 ;
  wire \Use_Serial_Unified_Completion.completion_block_reg_1 ;
  wire [10:0]\Use_Serial_Unified_Completion.completion_status_reg[10] ;
  wire \Use_Serial_Unified_Completion.completion_status_reg[2] ;
  wire \Use_Serial_Unified_Completion.completion_status_reg[3] ;
  wire \Use_Serial_Unified_Completion.completion_status_reg[4] ;
  wire \Use_Serial_Unified_Completion.completion_status_reg[5] ;
  wire \Use_Serial_Unified_Completion.completion_status_reg[7] ;
  wire \Use_Serial_Unified_Completion.count_reg[0] ;
  wire \Use_Serial_Unified_Completion.count_reg[1] ;
  wire \Use_Serial_Unified_Completion.count_reg[5] ;
  wire \Use_Serial_Unified_Completion.mb_data_overrun_reg ;
  wire \Use_Serial_Unified_Completion.mb_instr_error_reg ;
  wire \Use_Serial_Unified_Completion.mb_instr_overrun_i_4_n_0 ;
  wire \Use_Serial_Unified_Completion.mb_instr_overrun_i_5_n_0 ;
  wire \Use_Serial_Unified_Completion.mb_instr_overrun_i_6_n_0 ;
  wire \Use_Serial_Unified_Completion.mb_instr_overrun_reg ;
  wire \Use_Serial_Unified_Completion.sample_1[15]_i_3_n_0 ;
  wire [0:0]\Use_Serial_Unified_Completion.sample_1_reg[10] ;
  wire [2:0]\Use_Serial_Unified_Completion.sample_reg[15] ;
  wire [5:0]\Use_Serial_Unified_Completion.sample_reg[15]_0 ;
  wire \Using_FPGA.Native_i_2_n_0 ;
  wire \command_1_reg[7] ;
  wire [0:0]\command_1_reg[7]_0 ;
  wire completion_ctrl;
  wire completion_ctrl0;
  wire \completion_ctrl_reg[0] ;
  wire p_0_out__10;
  wire p_20_out__0;
  wire p_22_out__0;
  wire sel;
  wire sel_n;
  wire shifting_Data1__0;
  wire sync;
  wire [7:0]\tdi_shifter_reg[0] ;

  LUT3 #(
    .INIT(8'h40)) 
    \Dbg_Reg_En_0[0]_INST_0 
       (.I0(\Use_Serial_Unified_Completion.completion_block_reg_1 ),
        .I1(Q_0),
        .I2(Q[7]),
        .O(Dbg_Reg_En_0[0]));
  LUT3 #(
    .INIT(8'h40)) 
    \Dbg_Reg_En_0[1]_INST_0 
       (.I0(\Use_Serial_Unified_Completion.completion_block_reg_1 ),
        .I1(Q_0),
        .I2(Q[6]),
        .O(Dbg_Reg_En_0[1]));
  LUT3 #(
    .INIT(8'h40)) 
    \Dbg_Reg_En_0[2]_INST_0 
       (.I0(\Use_Serial_Unified_Completion.completion_block_reg_1 ),
        .I1(Q_0),
        .I2(Q[5]),
        .O(Dbg_Reg_En_0[2]));
  LUT3 #(
    .INIT(8'h40)) 
    \Dbg_Reg_En_0[3]_INST_0 
       (.I0(\Use_Serial_Unified_Completion.completion_block_reg_1 ),
        .I1(Q_0),
        .I2(Q[4]),
        .O(Dbg_Reg_En_0[3]));
  LUT3 #(
    .INIT(8'h40)) 
    \Dbg_Reg_En_0[4]_INST_0 
       (.I0(\Use_Serial_Unified_Completion.completion_block_reg_1 ),
        .I1(Q_0),
        .I2(Q[3]),
        .O(Dbg_Reg_En_0[4]));
  LUT3 #(
    .INIT(8'h40)) 
    \Dbg_Reg_En_0[5]_INST_0 
       (.I0(\Use_Serial_Unified_Completion.completion_block_reg_1 ),
        .I1(Q_0),
        .I2(Q[2]),
        .O(Dbg_Reg_En_0[5]));
  LUT3 #(
    .INIT(8'h40)) 
    \Dbg_Reg_En_0[6]_INST_0 
       (.I0(\Use_Serial_Unified_Completion.completion_block_reg_1 ),
        .I1(Q_0),
        .I2(Q[1]),
        .O(Dbg_Reg_En_0[6]));
  LUT3 #(
    .INIT(8'h40)) 
    \Dbg_Reg_En_0[7]_INST_0 
       (.I0(\Use_Serial_Unified_Completion.completion_block_reg_1 ),
        .I1(Q_0),
        .I2(Q[0]),
        .O(Dbg_Reg_En_0[7]));
  LUT2 #(
    .INIT(4'h2)) 
    Dbg_Shift_31_INST_0_i_2
       (.I0(Q_0),
        .I1(\Use_Serial_Unified_Completion.completion_block_reg_1 ),
        .O(\command_1_reg[7] ));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    Debug_Rst_i_i_1
       (.I0(\tdi_shifter_reg[0] [7]),
        .I1(Debug_Rst_i0),
        .I2(Dbg_Rst_0),
        .O(Debug_Rst_i_reg));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    Debug_SYS_Rst_i_i_1
       (.I0(\tdi_shifter_reg[0] [6]),
        .I1(Debug_Rst_i0),
        .I2(Debug_SYS_Rst),
        .O(Debug_SYS_Rst_i_reg));
  LUT5 #(
    .INIT(32'h00020000)) 
    Ext_NM_BRK_i_i_3
       (.I0(Q_0),
        .I1(\Use_Serial_Unified_Completion.completion_block_reg_1 ),
        .I2(Q[1]),
        .I3(Q[5]),
        .I4(\Use_BSCAN.command_reg[7] ),
        .O(Debug_Rst_i0));
  LUT6 #(
    .INIT(64'hFFFF55FF000000C0)) 
    \Use_Serial_Unified_Completion.completion_block_i_1 
       (.I0(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .I1(p_0_out__10),
        .I2(completion_ctrl),
        .I3(completion_ctrl0),
        .I4(\Use_Serial_Unified_Completion.completion_block_reg ),
        .I5(\Use_Serial_Unified_Completion.completion_block_reg_1 ),
        .O(\Use_Serial_Unified_Completion.completion_block_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT4 #(
    .INIT(16'h8F88)) 
    \Use_Serial_Unified_Completion.completion_status[0]_i_1 
       (.I0(\Use_Serial_Unified_Completion.completion_block_reg ),
        .I1(\Use_Serial_Unified_Completion.completion_status_reg[10] [1]),
        .I2(\Use_Serial_Unified_Completion.completion_status_reg[10] [0]),
        .I3(\Use_Serial_Unified_Completion.sample_1_reg[10] ),
        .O(D[0]));
  LUT4 #(
    .INIT(16'h8000)) 
    \Use_Serial_Unified_Completion.completion_status[15]_i_3 
       (.I0(Q[1]),
        .I1(Q[5]),
        .I2(Q_0),
        .I3(\Use_BSCAN.command_reg[7] ),
        .O(\Use_Serial_Unified_Completion.completion_block_reg ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT5 #(
    .INIT(32'hFF606060)) 
    \Use_Serial_Unified_Completion.completion_status[1]_i_1 
       (.I0(\Use_Serial_Unified_Completion.completion_status_reg[10] [1]),
        .I1(\Use_Serial_Unified_Completion.completion_status_reg[10] [0]),
        .I2(\Use_Serial_Unified_Completion.sample_1_reg[10] ),
        .I3(\Use_Serial_Unified_Completion.completion_block_reg ),
        .I4(\Use_Serial_Unified_Completion.completion_status_reg[10] [2]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFFFF6A006A006A00)) 
    \Use_Serial_Unified_Completion.completion_status[2]_i_1 
       (.I0(\Use_Serial_Unified_Completion.completion_status_reg[10] [2]),
        .I1(\Use_Serial_Unified_Completion.completion_status_reg[10] [1]),
        .I2(\Use_Serial_Unified_Completion.completion_status_reg[10] [0]),
        .I3(\Use_Serial_Unified_Completion.sample_1_reg[10] ),
        .I4(\Use_Serial_Unified_Completion.completion_block_reg ),
        .I5(\Use_Serial_Unified_Completion.completion_status_reg[10] [3]),
        .O(D[2]));
  LUT5 #(
    .INIT(32'hFF606060)) 
    \Use_Serial_Unified_Completion.completion_status[3]_i_1 
       (.I0(\Use_Serial_Unified_Completion.completion_status_reg[10] [3]),
        .I1(\Use_Serial_Unified_Completion.completion_status_reg[2] ),
        .I2(\Use_Serial_Unified_Completion.sample_1_reg[10] ),
        .I3(\Use_Serial_Unified_Completion.completion_block_reg ),
        .I4(\Use_Serial_Unified_Completion.completion_status_reg[10] [4]),
        .O(D[3]));
  LUT5 #(
    .INIT(32'hFF606060)) 
    \Use_Serial_Unified_Completion.completion_status[4]_i_1 
       (.I0(\Use_Serial_Unified_Completion.completion_status_reg[10] [4]),
        .I1(\Use_Serial_Unified_Completion.completion_status_reg[3] ),
        .I2(\Use_Serial_Unified_Completion.sample_1_reg[10] ),
        .I3(\Use_Serial_Unified_Completion.completion_block_reg ),
        .I4(\Use_Serial_Unified_Completion.completion_status_reg[10] [5]),
        .O(D[4]));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT5 #(
    .INIT(32'hFF484848)) 
    \Use_Serial_Unified_Completion.completion_status[5]_i_1 
       (.I0(\Use_Serial_Unified_Completion.completion_status_reg[10] [5]),
        .I1(\Use_Serial_Unified_Completion.sample_1_reg[10] ),
        .I2(\Use_Serial_Unified_Completion.completion_status_reg[4] ),
        .I3(\Use_Serial_Unified_Completion.completion_block_reg ),
        .I4(\Use_Serial_Unified_Completion.completion_status_reg[10] [6]),
        .O(D[5]));
  LUT5 #(
    .INIT(32'hFF484848)) 
    \Use_Serial_Unified_Completion.completion_status[6]_i_1 
       (.I0(\Use_Serial_Unified_Completion.completion_status_reg[10] [6]),
        .I1(\Use_Serial_Unified_Completion.sample_1_reg[10] ),
        .I2(\Use_Serial_Unified_Completion.completion_status_reg[5] ),
        .I3(\Use_Serial_Unified_Completion.completion_block_reg ),
        .I4(\Use_Serial_Unified_Completion.completion_status_reg[10] [7]),
        .O(D[6]));
  LUT6 #(
    .INIT(64'hFFFF488848884888)) 
    \Use_Serial_Unified_Completion.completion_status[7]_i_1 
       (.I0(\Use_Serial_Unified_Completion.completion_status_reg[10] [7]),
        .I1(\Use_Serial_Unified_Completion.sample_1_reg[10] ),
        .I2(\Use_Serial_Unified_Completion.completion_status_reg[5] ),
        .I3(\Use_Serial_Unified_Completion.completion_status_reg[10] [6]),
        .I4(\Use_Serial_Unified_Completion.completion_block_reg ),
        .I5(\Use_Serial_Unified_Completion.completion_status_reg[10] [8]),
        .O(D[7]));
  LUT5 #(
    .INIT(32'hFF484848)) 
    \Use_Serial_Unified_Completion.completion_status[8]_i_1 
       (.I0(\Use_Serial_Unified_Completion.completion_status_reg[10] [8]),
        .I1(\Use_Serial_Unified_Completion.sample_1_reg[10] ),
        .I2(\Use_Serial_Unified_Completion.completion_status_reg[7] ),
        .I3(\Use_Serial_Unified_Completion.completion_block_reg ),
        .I4(\Use_Serial_Unified_Completion.completion_status_reg[10] [9]),
        .O(D[8]));
  LUT6 #(
    .INIT(64'h00F100F1FF000000)) 
    \Use_Serial_Unified_Completion.completion_status[9]_i_1 
       (.I0(\Use_Serial_Unified_Completion.completion_block_reg_1 ),
        .I1(Q_0),
        .I2(completion_ctrl0),
        .I3(\Use_Serial_Unified_Completion.completion_block_reg ),
        .I4(\Use_BSCAN.PORT_Selector_reg[0] ),
        .I5(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .O(E));
  LUT6 #(
    .INIT(64'hFFFF488848884888)) 
    \Use_Serial_Unified_Completion.completion_status[9]_i_2 
       (.I0(\Use_Serial_Unified_Completion.completion_status_reg[10] [9]),
        .I1(\Use_Serial_Unified_Completion.sample_1_reg[10] ),
        .I2(\Use_Serial_Unified_Completion.completion_status_reg[7] ),
        .I3(\Use_Serial_Unified_Completion.completion_status_reg[10] [8]),
        .I4(\Use_Serial_Unified_Completion.completion_block_reg ),
        .I5(\Use_Serial_Unified_Completion.completion_status_reg[10] [10]),
        .O(D[9]));
  LUT6 #(
    .INIT(64'h2000000000000000)) 
    \Use_Serial_Unified_Completion.completion_status[9]_i_3 
       (.I0(\Use_Serial_Unified_Completion.sample_1[15]_i_3_n_0 ),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .I4(Q[2]),
        .I5(\Use_BSCAN.command_reg[0] ),
        .O(completion_ctrl0));
  LUT6 #(
    .INIT(64'h0000080000000000)) 
    \Use_Serial_Unified_Completion.count[0]__0_i_3 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\command_1_reg[7] ),
        .I4(\Use_BSCAN.command_reg[4] ),
        .I5(\Use_BSCAN.command_reg[0] ),
        .O(p_20_out__0));
  LUT6 #(
    .INIT(64'h0000040000000000)) 
    \Use_Serial_Unified_Completion.count[0]_i_2 
       (.I0(Q[1]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(\command_1_reg[7] ),
        .I4(\Use_BSCAN.command_reg[4] ),
        .I5(\Use_BSCAN.command_reg[0] ),
        .O(shifting_Data1__0));
  LUT6 #(
    .INIT(64'h113F333F11000000)) 
    \Use_Serial_Unified_Completion.mb_data_overrun_i_1 
       (.I0(Dbg_TDO_0),
        .I1(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .I2(completion_ctrl0),
        .I3(p_20_out__0),
        .I4(\Use_Serial_Unified_Completion.count_reg[5] ),
        .I5(\Use_Serial_Unified_Completion.sample_reg[15]_0 [2]),
        .O(\Use_Serial_Unified_Completion.mb_data_overrun_reg ));
  LUT6 #(
    .INIT(64'hA0A0BFFFA0A08000)) 
    \Use_Serial_Unified_Completion.mb_instr_error_i_1 
       (.I0(\Serial_Dbg_Intf.shift_count_reg[4] ),
        .I1(p_22_out__0),
        .I2(shifting_Data1__0),
        .I3(\Use_Serial_Unified_Completion.count_reg[1] ),
        .I4(\Use_Serial_Unified_Completion.mb_instr_overrun_i_4_n_0 ),
        .I5(\Use_Serial_Unified_Completion.sample_reg[15]_0 [1]),
        .O(\Use_Serial_Unified_Completion.mb_instr_error_reg ));
  LUT6 #(
    .INIT(64'hA0A0FFBFA0A00080)) 
    \Use_Serial_Unified_Completion.mb_instr_overrun_i_1 
       (.I0(\Serial_Dbg_Intf.shift_count_reg[4] ),
        .I1(p_22_out__0),
        .I2(shifting_Data1__0),
        .I3(\Use_Serial_Unified_Completion.count_reg[1] ),
        .I4(\Use_Serial_Unified_Completion.mb_instr_overrun_i_4_n_0 ),
        .I5(\Use_Serial_Unified_Completion.sample_reg[15]_0 [0]),
        .O(\Use_Serial_Unified_Completion.mb_instr_overrun_reg ));
  LUT6 #(
    .INIT(64'h00000000AAAA2AAA)) 
    \Use_Serial_Unified_Completion.mb_instr_overrun_i_3 
       (.I0(\Use_BSCAN.PORT_Selector_reg[0] ),
        .I1(\Use_BSCAN.command_reg[0] ),
        .I2(\Use_Serial_Unified_Completion.mb_instr_overrun_i_5_n_0 ),
        .I3(\Use_BSCAN.command_reg[6] ),
        .I4(sync),
        .I5(\Use_Serial_Unified_Completion.count_reg[0] ),
        .O(p_22_out__0));
  LUT6 #(
    .INIT(64'hFF00080000000000)) 
    \Use_Serial_Unified_Completion.mb_instr_overrun_i_4 
       (.I0(\Use_BSCAN.command_reg[6] ),
        .I1(\command_1_reg[7] ),
        .I2(\Use_BSCAN.command_reg[4] ),
        .I3(\Use_BSCAN.command_reg[0] ),
        .I4(\Use_Serial_Unified_Completion.mb_instr_overrun_i_6_n_0 ),
        .I5(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .O(\Use_Serial_Unified_Completion.mb_instr_overrun_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h0004)) 
    \Use_Serial_Unified_Completion.mb_instr_overrun_i_5 
       (.I0(\Use_Serial_Unified_Completion.completion_block_reg_1 ),
        .I1(Q_0),
        .I2(Q[5]),
        .I3(Q[3]),
        .O(\Use_Serial_Unified_Completion.mb_instr_overrun_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0080000000000000)) 
    \Use_Serial_Unified_Completion.mb_instr_overrun_i_6 
       (.I0(Q[2]),
        .I1(Q[3]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(Q_0),
        .I5(Q[5]),
        .O(\Use_Serial_Unified_Completion.mb_instr_overrun_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \Use_Serial_Unified_Completion.sample[13]_i_1 
       (.I0(\Use_Serial_Unified_Completion.sample_1_reg[10] ),
        .I1(\Use_Serial_Unified_Completion.sample_reg[15]_0 [3]),
        .O(\Use_Serial_Unified_Completion.sample_reg[15] [0]));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \Use_Serial_Unified_Completion.sample[14]_i_1 
       (.I0(\Use_Serial_Unified_Completion.sample_1_reg[10] ),
        .I1(\Use_Serial_Unified_Completion.sample_reg[15]_0 [4]),
        .O(\Use_Serial_Unified_Completion.sample_reg[15] [1]));
  LUT2 #(
    .INIT(4'h4)) 
    \Use_Serial_Unified_Completion.sample[15]_i_1 
       (.I0(\Use_Serial_Unified_Completion.sample_1_reg[10] ),
        .I1(\Use_Serial_Unified_Completion.sample_reg[15]_0 [5]),
        .O(\Use_Serial_Unified_Completion.sample_reg[15] [2]));
  LUT6 #(
    .INIT(64'hFFDF7FFFFFFFFFFF)) 
    \Use_Serial_Unified_Completion.sample_1[15]_i_2 
       (.I0(\Use_BSCAN.command_reg[0] ),
        .I1(Q[2]),
        .I2(Q[3]),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(\Use_Serial_Unified_Completion.sample_1[15]_i_3_n_0 ),
        .O(\Use_Serial_Unified_Completion.sample_1_reg[10] ));
  LUT2 #(
    .INIT(4'h8)) 
    \Use_Serial_Unified_Completion.sample_1[15]_i_3 
       (.I0(Q[5]),
        .I1(Q_0),
        .O(\Use_Serial_Unified_Completion.sample_1[15]_i_3_n_0 ));
  (* XILINX_LEGACY_PRIM = "FDC_1" *) 
  (* box_type = "PRIMITIVE" *) 
  FDCE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \Using_FPGA.Native 
       (.C(CLK),
        .CE(1'b1),
        .CLR(sel_n),
        .D(D_1),
        .Q(Q_0));
  LUT5 #(
    .INIT(32'h00000800)) 
    \Using_FPGA.Native_i_1 
       (.I0(\Using_FPGA.Native_i_2_n_0 ),
        .I1(\tdi_shifter_reg[0] [3]),
        .I2(\tdi_shifter_reg[0] [2]),
        .I3(\tdi_shifter_reg[0] [0]),
        .I4(\tdi_shifter_reg[0] [1]),
        .O(CE));
  LUT1 #(
    .INIT(2'h1)) 
    \Using_FPGA.Native_i_1__0 
       (.I0(Q_0),
        .O(D_1));
  LUT6 #(
    .INIT(64'h0000002000000000)) 
    \Using_FPGA.Native_i_2 
       (.I0(\tdi_shifter_reg[0] [5]),
        .I1(\tdi_shifter_reg[0] [4]),
        .I2(\tdi_shifter_reg[0] [6]),
        .I3(\tdi_shifter_reg[0] [7]),
        .I4(\Use_Serial_Unified_Completion.completion_block_reg_1 ),
        .I5(Q_0),
        .O(\Using_FPGA.Native_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000001000000)) 
    \command_1[0]_i_1 
       (.I0(\Use_BSCAN.PORT_Selector_reg[3] [2]),
        .I1(\Use_BSCAN.PORT_Selector_reg[3] [3]),
        .I2(\Use_BSCAN.PORT_Selector_reg[3] [1]),
        .I3(\Use_BSCAN.PORT_Selector_reg[3] [0]),
        .I4(sel),
        .I5(\command_1_reg[7] ),
        .O(\command_1_reg[7]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \completion_ctrl[0]_i_1 
       (.I0(\tdi_shifter_reg[0] [7]),
        .I1(completion_ctrl0),
        .I2(completion_ctrl),
        .O(\completion_ctrl_reg[0] ));
endmodule

module MB_FDRE_1
   (sync,
    Dbg_Shift_0,
    D_1,
    CE,
    \Use_BSCAN.PORT_Selector_reg[0] ,
    \Use_BSCAN.command_reg[6] ,
    \Using_FPGA.Native_0 ,
    \Use_BSCAN.command_reg[4] ,
    \Use_BSCAN.command_reg[0] ,
    \Use_BSCAN.PORT_Selector_reg[0]_0 );
  output sync;
  output Dbg_Shift_0;
  input D_1;
  input CE;
  input \Use_BSCAN.PORT_Selector_reg[0] ;
  input \Use_BSCAN.command_reg[6] ;
  input \Using_FPGA.Native_0 ;
  input \Use_BSCAN.command_reg[4] ;
  input \Use_BSCAN.command_reg[0] ;
  input \Use_BSCAN.PORT_Selector_reg[0]_0 ;

  wire CE;
  wire D_1;
  wire Dbg_Shift_0;
  wire \Use_BSCAN.PORT_Selector_reg[0] ;
  wire \Use_BSCAN.PORT_Selector_reg[0]_0 ;
  wire \Use_BSCAN.command_reg[0] ;
  wire \Use_BSCAN.command_reg[4] ;
  wire \Use_BSCAN.command_reg[6] ;
  wire \Using_FPGA.Native_0 ;
  wire sync;

  LUT6 #(
    .INIT(64'hFFBFFFFF00000000)) 
    Dbg_Shift_31_INST_0
       (.I0(sync),
        .I1(\Use_BSCAN.command_reg[6] ),
        .I2(\Using_FPGA.Native_0 ),
        .I3(\Use_BSCAN.command_reg[4] ),
        .I4(\Use_BSCAN.command_reg[0] ),
        .I5(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .O(Dbg_Shift_0));
  (* XILINX_LEGACY_PRIM = "FDRE_1" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \Using_FPGA.Native 
       (.C(\Use_BSCAN.PORT_Selector_reg[0] ),
        .CE(CE),
        .D(1'b1),
        .Q(sync),
        .R(D_1));
endmodule

(* C_AVOID_PRIMITIVES = "0" *) (* C_DATA_SIZE = "32" *) (* C_DBG_MEM_ACCESS = "0" *) 
(* C_DBG_REG_ACCESS = "0" *) (* C_DEBUG_INTERFACE = "0" *) (* C_FAMILY = "zynq" *) 
(* C_INTERCONNECT = "2" *) (* C_JTAG_CHAIN = "2" *) (* C_MB_DBG_PORTS = "1" *) 
(* C_M_AXIS_DATA_WIDTH = "32" *) (* C_M_AXIS_ID_WIDTH = "7" *) (* C_M_AXI_ADDR_WIDTH = "32" *) 
(* C_M_AXI_DATA_WIDTH = "32" *) (* C_M_AXI_THREAD_ID_WIDTH = "1" *) (* C_S_AXI_ACLK_FREQ_HZ = "100000000" *) 
(* C_S_AXI_ADDR_WIDTH = "4" *) (* C_S_AXI_DATA_WIDTH = "32" *) (* C_TRACE_ASYNC_RESET = "0" *) 
(* C_TRACE_CLK_FREQ_HZ = "200000000" *) (* C_TRACE_CLK_OUT_PHASE = "90" *) (* C_TRACE_DATA_WIDTH = "32" *) 
(* C_TRACE_OUTPUT = "0" *) (* C_USE_BSCAN = "0" *) (* C_USE_CONFIG_RESET = "0" *) 
(* C_USE_CROSS_TRIGGER = "0" *) (* C_USE_UART = "0" *) 
module MDM
   (Config_Reset,
    Scan_Reset_Sel,
    Scan_Reset,
    S_AXI_ACLK,
    S_AXI_ARESETN,
    M_AXI_ACLK,
    M_AXI_ARESETN,
    M_AXIS_ACLK,
    M_AXIS_ARESETN,
    Interrupt,
    Ext_BRK,
    Ext_NM_BRK,
    Debug_SYS_Rst,
    Trig_In_0,
    Trig_Ack_In_0,
    Trig_Out_0,
    Trig_Ack_Out_0,
    Trig_In_1,
    Trig_Ack_In_1,
    Trig_Out_1,
    Trig_Ack_Out_1,
    Trig_In_2,
    Trig_Ack_In_2,
    Trig_Out_2,
    Trig_Ack_Out_2,
    Trig_In_3,
    Trig_Ack_In_3,
    Trig_Out_3,
    Trig_Ack_Out_3,
    S_AXI_AWADDR,
    S_AXI_AWVALID,
    S_AXI_AWREADY,
    S_AXI_WDATA,
    S_AXI_WSTRB,
    S_AXI_WVALID,
    S_AXI_WREADY,
    S_AXI_BRESP,
    S_AXI_BVALID,
    S_AXI_BREADY,
    S_AXI_ARADDR,
    S_AXI_ARVALID,
    S_AXI_ARREADY,
    S_AXI_RDATA,
    S_AXI_RRESP,
    S_AXI_RVALID,
    S_AXI_RREADY,
    M_AXI_AWID,
    M_AXI_AWADDR,
    M_AXI_AWLEN,
    M_AXI_AWSIZE,
    M_AXI_AWBURST,
    M_AXI_AWLOCK,
    M_AXI_AWCACHE,
    M_AXI_AWPROT,
    M_AXI_AWQOS,
    M_AXI_AWVALID,
    M_AXI_AWREADY,
    M_AXI_WDATA,
    M_AXI_WSTRB,
    M_AXI_WLAST,
    M_AXI_WVALID,
    M_AXI_WREADY,
    M_AXI_BRESP,
    M_AXI_BID,
    M_AXI_BVALID,
    M_AXI_BREADY,
    M_AXI_ARID,
    M_AXI_ARADDR,
    M_AXI_ARLEN,
    M_AXI_ARSIZE,
    M_AXI_ARBURST,
    M_AXI_ARLOCK,
    M_AXI_ARCACHE,
    M_AXI_ARPROT,
    M_AXI_ARQOS,
    M_AXI_ARVALID,
    M_AXI_ARREADY,
    M_AXI_RID,
    M_AXI_RDATA,
    M_AXI_RRESP,
    M_AXI_RLAST,
    M_AXI_RVALID,
    M_AXI_RREADY,
    LMB_Data_Addr_0,
    LMB_Data_Read_0,
    LMB_Data_Write_0,
    LMB_Addr_Strobe_0,
    LMB_Read_Strobe_0,
    LMB_Write_Strobe_0,
    LMB_Ready_0,
    LMB_Wait_0,
    LMB_CE_0,
    LMB_UE_0,
    LMB_Byte_Enable_0,
    LMB_Data_Addr_1,
    LMB_Data_Read_1,
    LMB_Data_Write_1,
    LMB_Addr_Strobe_1,
    LMB_Read_Strobe_1,
    LMB_Write_Strobe_1,
    LMB_Ready_1,
    LMB_Wait_1,
    LMB_CE_1,
    LMB_UE_1,
    LMB_Byte_Enable_1,
    LMB_Data_Addr_2,
    LMB_Data_Read_2,
    LMB_Data_Write_2,
    LMB_Addr_Strobe_2,
    LMB_Read_Strobe_2,
    LMB_Write_Strobe_2,
    LMB_Ready_2,
    LMB_Wait_2,
    LMB_CE_2,
    LMB_UE_2,
    LMB_Byte_Enable_2,
    LMB_Data_Addr_3,
    LMB_Data_Read_3,
    LMB_Data_Write_3,
    LMB_Addr_Strobe_3,
    LMB_Read_Strobe_3,
    LMB_Write_Strobe_3,
    LMB_Ready_3,
    LMB_Wait_3,
    LMB_CE_3,
    LMB_UE_3,
    LMB_Byte_Enable_3,
    LMB_Data_Addr_4,
    LMB_Data_Read_4,
    LMB_Data_Write_4,
    LMB_Addr_Strobe_4,
    LMB_Read_Strobe_4,
    LMB_Write_Strobe_4,
    LMB_Ready_4,
    LMB_Wait_4,
    LMB_CE_4,
    LMB_UE_4,
    LMB_Byte_Enable_4,
    LMB_Data_Addr_5,
    LMB_Data_Read_5,
    LMB_Data_Write_5,
    LMB_Addr_Strobe_5,
    LMB_Read_Strobe_5,
    LMB_Write_Strobe_5,
    LMB_Ready_5,
    LMB_Wait_5,
    LMB_CE_5,
    LMB_UE_5,
    LMB_Byte_Enable_5,
    LMB_Data_Addr_6,
    LMB_Data_Read_6,
    LMB_Data_Write_6,
    LMB_Addr_Strobe_6,
    LMB_Read_Strobe_6,
    LMB_Write_Strobe_6,
    LMB_Ready_6,
    LMB_Wait_6,
    LMB_CE_6,
    LMB_UE_6,
    LMB_Byte_Enable_6,
    LMB_Data_Addr_7,
    LMB_Data_Read_7,
    LMB_Data_Write_7,
    LMB_Addr_Strobe_7,
    LMB_Read_Strobe_7,
    LMB_Write_Strobe_7,
    LMB_Ready_7,
    LMB_Wait_7,
    LMB_CE_7,
    LMB_UE_7,
    LMB_Byte_Enable_7,
    LMB_Data_Addr_8,
    LMB_Data_Read_8,
    LMB_Data_Write_8,
    LMB_Addr_Strobe_8,
    LMB_Read_Strobe_8,
    LMB_Write_Strobe_8,
    LMB_Ready_8,
    LMB_Wait_8,
    LMB_CE_8,
    LMB_UE_8,
    LMB_Byte_Enable_8,
    LMB_Data_Addr_9,
    LMB_Data_Read_9,
    LMB_Data_Write_9,
    LMB_Addr_Strobe_9,
    LMB_Read_Strobe_9,
    LMB_Write_Strobe_9,
    LMB_Ready_9,
    LMB_Wait_9,
    LMB_CE_9,
    LMB_UE_9,
    LMB_Byte_Enable_9,
    LMB_Data_Addr_10,
    LMB_Data_Read_10,
    LMB_Data_Write_10,
    LMB_Addr_Strobe_10,
    LMB_Read_Strobe_10,
    LMB_Write_Strobe_10,
    LMB_Ready_10,
    LMB_Wait_10,
    LMB_CE_10,
    LMB_UE_10,
    LMB_Byte_Enable_10,
    LMB_Data_Addr_11,
    LMB_Data_Read_11,
    LMB_Data_Write_11,
    LMB_Addr_Strobe_11,
    LMB_Read_Strobe_11,
    LMB_Write_Strobe_11,
    LMB_Ready_11,
    LMB_Wait_11,
    LMB_CE_11,
    LMB_UE_11,
    LMB_Byte_Enable_11,
    LMB_Data_Addr_12,
    LMB_Data_Read_12,
    LMB_Data_Write_12,
    LMB_Addr_Strobe_12,
    LMB_Read_Strobe_12,
    LMB_Write_Strobe_12,
    LMB_Ready_12,
    LMB_Wait_12,
    LMB_CE_12,
    LMB_UE_12,
    LMB_Byte_Enable_12,
    LMB_Data_Addr_13,
    LMB_Data_Read_13,
    LMB_Data_Write_13,
    LMB_Addr_Strobe_13,
    LMB_Read_Strobe_13,
    LMB_Write_Strobe_13,
    LMB_Ready_13,
    LMB_Wait_13,
    LMB_CE_13,
    LMB_UE_13,
    LMB_Byte_Enable_13,
    LMB_Data_Addr_14,
    LMB_Data_Read_14,
    LMB_Data_Write_14,
    LMB_Addr_Strobe_14,
    LMB_Read_Strobe_14,
    LMB_Write_Strobe_14,
    LMB_Ready_14,
    LMB_Wait_14,
    LMB_CE_14,
    LMB_UE_14,
    LMB_Byte_Enable_14,
    LMB_Data_Addr_15,
    LMB_Data_Read_15,
    LMB_Data_Write_15,
    LMB_Addr_Strobe_15,
    LMB_Read_Strobe_15,
    LMB_Write_Strobe_15,
    LMB_Ready_15,
    LMB_Wait_15,
    LMB_CE_15,
    LMB_UE_15,
    LMB_Byte_Enable_15,
    LMB_Data_Addr_16,
    LMB_Data_Read_16,
    LMB_Data_Write_16,
    LMB_Addr_Strobe_16,
    LMB_Read_Strobe_16,
    LMB_Write_Strobe_16,
    LMB_Ready_16,
    LMB_Wait_16,
    LMB_CE_16,
    LMB_UE_16,
    LMB_Byte_Enable_16,
    LMB_Data_Addr_17,
    LMB_Data_Read_17,
    LMB_Data_Write_17,
    LMB_Addr_Strobe_17,
    LMB_Read_Strobe_17,
    LMB_Write_Strobe_17,
    LMB_Ready_17,
    LMB_Wait_17,
    LMB_CE_17,
    LMB_UE_17,
    LMB_Byte_Enable_17,
    LMB_Data_Addr_18,
    LMB_Data_Read_18,
    LMB_Data_Write_18,
    LMB_Addr_Strobe_18,
    LMB_Read_Strobe_18,
    LMB_Write_Strobe_18,
    LMB_Ready_18,
    LMB_Wait_18,
    LMB_CE_18,
    LMB_UE_18,
    LMB_Byte_Enable_18,
    LMB_Data_Addr_19,
    LMB_Data_Read_19,
    LMB_Data_Write_19,
    LMB_Addr_Strobe_19,
    LMB_Read_Strobe_19,
    LMB_Write_Strobe_19,
    LMB_Ready_19,
    LMB_Wait_19,
    LMB_CE_19,
    LMB_UE_19,
    LMB_Byte_Enable_19,
    LMB_Data_Addr_20,
    LMB_Data_Read_20,
    LMB_Data_Write_20,
    LMB_Addr_Strobe_20,
    LMB_Read_Strobe_20,
    LMB_Write_Strobe_20,
    LMB_Ready_20,
    LMB_Wait_20,
    LMB_CE_20,
    LMB_UE_20,
    LMB_Byte_Enable_20,
    LMB_Data_Addr_21,
    LMB_Data_Read_21,
    LMB_Data_Write_21,
    LMB_Addr_Strobe_21,
    LMB_Read_Strobe_21,
    LMB_Write_Strobe_21,
    LMB_Ready_21,
    LMB_Wait_21,
    LMB_CE_21,
    LMB_UE_21,
    LMB_Byte_Enable_21,
    LMB_Data_Addr_22,
    LMB_Data_Read_22,
    LMB_Data_Write_22,
    LMB_Addr_Strobe_22,
    LMB_Read_Strobe_22,
    LMB_Write_Strobe_22,
    LMB_Ready_22,
    LMB_Wait_22,
    LMB_CE_22,
    LMB_UE_22,
    LMB_Byte_Enable_22,
    LMB_Data_Addr_23,
    LMB_Data_Read_23,
    LMB_Data_Write_23,
    LMB_Addr_Strobe_23,
    LMB_Read_Strobe_23,
    LMB_Write_Strobe_23,
    LMB_Ready_23,
    LMB_Wait_23,
    LMB_CE_23,
    LMB_UE_23,
    LMB_Byte_Enable_23,
    LMB_Data_Addr_24,
    LMB_Data_Read_24,
    LMB_Data_Write_24,
    LMB_Addr_Strobe_24,
    LMB_Read_Strobe_24,
    LMB_Write_Strobe_24,
    LMB_Ready_24,
    LMB_Wait_24,
    LMB_CE_24,
    LMB_UE_24,
    LMB_Byte_Enable_24,
    LMB_Data_Addr_25,
    LMB_Data_Read_25,
    LMB_Data_Write_25,
    LMB_Addr_Strobe_25,
    LMB_Read_Strobe_25,
    LMB_Write_Strobe_25,
    LMB_Ready_25,
    LMB_Wait_25,
    LMB_CE_25,
    LMB_UE_25,
    LMB_Byte_Enable_25,
    LMB_Data_Addr_26,
    LMB_Data_Read_26,
    LMB_Data_Write_26,
    LMB_Addr_Strobe_26,
    LMB_Read_Strobe_26,
    LMB_Write_Strobe_26,
    LMB_Ready_26,
    LMB_Wait_26,
    LMB_CE_26,
    LMB_UE_26,
    LMB_Byte_Enable_26,
    LMB_Data_Addr_27,
    LMB_Data_Read_27,
    LMB_Data_Write_27,
    LMB_Addr_Strobe_27,
    LMB_Read_Strobe_27,
    LMB_Write_Strobe_27,
    LMB_Ready_27,
    LMB_Wait_27,
    LMB_CE_27,
    LMB_UE_27,
    LMB_Byte_Enable_27,
    LMB_Data_Addr_28,
    LMB_Data_Read_28,
    LMB_Data_Write_28,
    LMB_Addr_Strobe_28,
    LMB_Read_Strobe_28,
    LMB_Write_Strobe_28,
    LMB_Ready_28,
    LMB_Wait_28,
    LMB_CE_28,
    LMB_UE_28,
    LMB_Byte_Enable_28,
    LMB_Data_Addr_29,
    LMB_Data_Read_29,
    LMB_Data_Write_29,
    LMB_Addr_Strobe_29,
    LMB_Read_Strobe_29,
    LMB_Write_Strobe_29,
    LMB_Ready_29,
    LMB_Wait_29,
    LMB_CE_29,
    LMB_UE_29,
    LMB_Byte_Enable_29,
    LMB_Data_Addr_30,
    LMB_Data_Read_30,
    LMB_Data_Write_30,
    LMB_Addr_Strobe_30,
    LMB_Read_Strobe_30,
    LMB_Write_Strobe_30,
    LMB_Ready_30,
    LMB_Wait_30,
    LMB_CE_30,
    LMB_UE_30,
    LMB_Byte_Enable_30,
    LMB_Data_Addr_31,
    LMB_Data_Read_31,
    LMB_Data_Write_31,
    LMB_Addr_Strobe_31,
    LMB_Read_Strobe_31,
    LMB_Write_Strobe_31,
    LMB_Ready_31,
    LMB_Wait_31,
    LMB_CE_31,
    LMB_UE_31,
    LMB_Byte_Enable_31,
    M_AXIS_TDATA,
    M_AXIS_TID,
    M_AXIS_TREADY,
    M_AXIS_TVALID,
    TRACE_CLK_OUT,
    TRACE_CLK,
    TRACE_CTL,
    TRACE_DATA,
    Dbg_Disable_0,
    Dbg_Clk_0,
    Dbg_TDI_0,
    Dbg_TDO_0,
    Dbg_Reg_En_0,
    Dbg_Capture_0,
    Dbg_Shift_0,
    Dbg_Update_0,
    Dbg_Rst_0,
    Dbg_Trig_In_0,
    Dbg_Trig_Ack_In_0,
    Dbg_Trig_Out_0,
    Dbg_Trig_Ack_Out_0,
    Dbg_TrClk_0,
    Dbg_TrData_0,
    Dbg_TrReady_0,
    Dbg_TrValid_0,
    Dbg_AWADDR_0,
    Dbg_AWVALID_0,
    Dbg_AWREADY_0,
    Dbg_WDATA_0,
    Dbg_WVALID_0,
    Dbg_WREADY_0,
    Dbg_BRESP_0,
    Dbg_BVALID_0,
    Dbg_BREADY_0,
    Dbg_ARADDR_0,
    Dbg_ARVALID_0,
    Dbg_ARREADY_0,
    Dbg_RDATA_0,
    Dbg_RRESP_0,
    Dbg_RVALID_0,
    Dbg_RREADY_0,
    Dbg_Disable_1,
    Dbg_Clk_1,
    Dbg_TDI_1,
    Dbg_TDO_1,
    Dbg_Reg_En_1,
    Dbg_Capture_1,
    Dbg_Shift_1,
    Dbg_Update_1,
    Dbg_Rst_1,
    Dbg_Trig_In_1,
    Dbg_Trig_Ack_In_1,
    Dbg_Trig_Out_1,
    Dbg_Trig_Ack_Out_1,
    Dbg_TrClk_1,
    Dbg_TrData_1,
    Dbg_TrReady_1,
    Dbg_TrValid_1,
    Dbg_AWADDR_1,
    Dbg_AWVALID_1,
    Dbg_AWREADY_1,
    Dbg_WDATA_1,
    Dbg_WVALID_1,
    Dbg_WREADY_1,
    Dbg_BRESP_1,
    Dbg_BVALID_1,
    Dbg_BREADY_1,
    Dbg_ARADDR_1,
    Dbg_ARVALID_1,
    Dbg_ARREADY_1,
    Dbg_RDATA_1,
    Dbg_RRESP_1,
    Dbg_RVALID_1,
    Dbg_RREADY_1,
    Dbg_Disable_2,
    Dbg_Clk_2,
    Dbg_TDI_2,
    Dbg_TDO_2,
    Dbg_Reg_En_2,
    Dbg_Capture_2,
    Dbg_Shift_2,
    Dbg_Update_2,
    Dbg_Rst_2,
    Dbg_Trig_In_2,
    Dbg_Trig_Ack_In_2,
    Dbg_Trig_Out_2,
    Dbg_Trig_Ack_Out_2,
    Dbg_TrClk_2,
    Dbg_TrData_2,
    Dbg_TrReady_2,
    Dbg_TrValid_2,
    Dbg_AWADDR_2,
    Dbg_AWVALID_2,
    Dbg_AWREADY_2,
    Dbg_WDATA_2,
    Dbg_WVALID_2,
    Dbg_WREADY_2,
    Dbg_BRESP_2,
    Dbg_BVALID_2,
    Dbg_BREADY_2,
    Dbg_ARADDR_2,
    Dbg_ARVALID_2,
    Dbg_ARREADY_2,
    Dbg_RDATA_2,
    Dbg_RRESP_2,
    Dbg_RVALID_2,
    Dbg_RREADY_2,
    Dbg_Disable_3,
    Dbg_Clk_3,
    Dbg_TDI_3,
    Dbg_TDO_3,
    Dbg_Reg_En_3,
    Dbg_Capture_3,
    Dbg_Shift_3,
    Dbg_Update_3,
    Dbg_Rst_3,
    Dbg_Trig_In_3,
    Dbg_Trig_Ack_In_3,
    Dbg_Trig_Out_3,
    Dbg_Trig_Ack_Out_3,
    Dbg_TrClk_3,
    Dbg_TrData_3,
    Dbg_TrReady_3,
    Dbg_TrValid_3,
    Dbg_AWADDR_3,
    Dbg_AWVALID_3,
    Dbg_AWREADY_3,
    Dbg_WDATA_3,
    Dbg_WVALID_3,
    Dbg_WREADY_3,
    Dbg_BRESP_3,
    Dbg_BVALID_3,
    Dbg_BREADY_3,
    Dbg_ARADDR_3,
    Dbg_ARVALID_3,
    Dbg_ARREADY_3,
    Dbg_RDATA_3,
    Dbg_RRESP_3,
    Dbg_RVALID_3,
    Dbg_RREADY_3,
    Dbg_Disable_4,
    Dbg_Clk_4,
    Dbg_TDI_4,
    Dbg_TDO_4,
    Dbg_Reg_En_4,
    Dbg_Capture_4,
    Dbg_Shift_4,
    Dbg_Update_4,
    Dbg_Rst_4,
    Dbg_Trig_In_4,
    Dbg_Trig_Ack_In_4,
    Dbg_Trig_Out_4,
    Dbg_Trig_Ack_Out_4,
    Dbg_TrClk_4,
    Dbg_TrData_4,
    Dbg_TrReady_4,
    Dbg_TrValid_4,
    Dbg_AWADDR_4,
    Dbg_AWVALID_4,
    Dbg_AWREADY_4,
    Dbg_WDATA_4,
    Dbg_WVALID_4,
    Dbg_WREADY_4,
    Dbg_BRESP_4,
    Dbg_BVALID_4,
    Dbg_BREADY_4,
    Dbg_ARADDR_4,
    Dbg_ARVALID_4,
    Dbg_ARREADY_4,
    Dbg_RDATA_4,
    Dbg_RRESP_4,
    Dbg_RVALID_4,
    Dbg_RREADY_4,
    Dbg_Disable_5,
    Dbg_Clk_5,
    Dbg_TDI_5,
    Dbg_TDO_5,
    Dbg_Reg_En_5,
    Dbg_Capture_5,
    Dbg_Shift_5,
    Dbg_Update_5,
    Dbg_Rst_5,
    Dbg_Trig_In_5,
    Dbg_Trig_Ack_In_5,
    Dbg_Trig_Out_5,
    Dbg_Trig_Ack_Out_5,
    Dbg_TrClk_5,
    Dbg_TrData_5,
    Dbg_TrReady_5,
    Dbg_TrValid_5,
    Dbg_AWADDR_5,
    Dbg_AWVALID_5,
    Dbg_AWREADY_5,
    Dbg_WDATA_5,
    Dbg_WVALID_5,
    Dbg_WREADY_5,
    Dbg_BRESP_5,
    Dbg_BVALID_5,
    Dbg_BREADY_5,
    Dbg_ARADDR_5,
    Dbg_ARVALID_5,
    Dbg_ARREADY_5,
    Dbg_RDATA_5,
    Dbg_RRESP_5,
    Dbg_RVALID_5,
    Dbg_RREADY_5,
    Dbg_Disable_6,
    Dbg_Clk_6,
    Dbg_TDI_6,
    Dbg_TDO_6,
    Dbg_Reg_En_6,
    Dbg_Capture_6,
    Dbg_Shift_6,
    Dbg_Update_6,
    Dbg_Rst_6,
    Dbg_Trig_In_6,
    Dbg_Trig_Ack_In_6,
    Dbg_Trig_Out_6,
    Dbg_Trig_Ack_Out_6,
    Dbg_TrClk_6,
    Dbg_TrData_6,
    Dbg_TrReady_6,
    Dbg_TrValid_6,
    Dbg_AWADDR_6,
    Dbg_AWVALID_6,
    Dbg_AWREADY_6,
    Dbg_WDATA_6,
    Dbg_WVALID_6,
    Dbg_WREADY_6,
    Dbg_BRESP_6,
    Dbg_BVALID_6,
    Dbg_BREADY_6,
    Dbg_ARADDR_6,
    Dbg_ARVALID_6,
    Dbg_ARREADY_6,
    Dbg_RDATA_6,
    Dbg_RRESP_6,
    Dbg_RVALID_6,
    Dbg_RREADY_6,
    Dbg_Disable_7,
    Dbg_Clk_7,
    Dbg_TDI_7,
    Dbg_TDO_7,
    Dbg_Reg_En_7,
    Dbg_Capture_7,
    Dbg_Shift_7,
    Dbg_Update_7,
    Dbg_Rst_7,
    Dbg_Trig_In_7,
    Dbg_Trig_Ack_In_7,
    Dbg_Trig_Out_7,
    Dbg_Trig_Ack_Out_7,
    Dbg_TrClk_7,
    Dbg_TrData_7,
    Dbg_TrReady_7,
    Dbg_TrValid_7,
    Dbg_AWADDR_7,
    Dbg_AWVALID_7,
    Dbg_AWREADY_7,
    Dbg_WDATA_7,
    Dbg_WVALID_7,
    Dbg_WREADY_7,
    Dbg_BRESP_7,
    Dbg_BVALID_7,
    Dbg_BREADY_7,
    Dbg_ARADDR_7,
    Dbg_ARVALID_7,
    Dbg_ARREADY_7,
    Dbg_RDATA_7,
    Dbg_RRESP_7,
    Dbg_RVALID_7,
    Dbg_RREADY_7,
    Dbg_Disable_8,
    Dbg_Clk_8,
    Dbg_TDI_8,
    Dbg_TDO_8,
    Dbg_Reg_En_8,
    Dbg_Capture_8,
    Dbg_Shift_8,
    Dbg_Update_8,
    Dbg_Rst_8,
    Dbg_Trig_In_8,
    Dbg_Trig_Ack_In_8,
    Dbg_Trig_Out_8,
    Dbg_Trig_Ack_Out_8,
    Dbg_TrClk_8,
    Dbg_TrData_8,
    Dbg_TrReady_8,
    Dbg_TrValid_8,
    Dbg_AWADDR_8,
    Dbg_AWVALID_8,
    Dbg_AWREADY_8,
    Dbg_WDATA_8,
    Dbg_WVALID_8,
    Dbg_WREADY_8,
    Dbg_BRESP_8,
    Dbg_BVALID_8,
    Dbg_BREADY_8,
    Dbg_ARADDR_8,
    Dbg_ARVALID_8,
    Dbg_ARREADY_8,
    Dbg_RDATA_8,
    Dbg_RRESP_8,
    Dbg_RVALID_8,
    Dbg_RREADY_8,
    Dbg_Disable_9,
    Dbg_Clk_9,
    Dbg_TDI_9,
    Dbg_TDO_9,
    Dbg_Reg_En_9,
    Dbg_Capture_9,
    Dbg_Shift_9,
    Dbg_Update_9,
    Dbg_Rst_9,
    Dbg_Trig_In_9,
    Dbg_Trig_Ack_In_9,
    Dbg_Trig_Out_9,
    Dbg_Trig_Ack_Out_9,
    Dbg_TrClk_9,
    Dbg_TrData_9,
    Dbg_TrReady_9,
    Dbg_TrValid_9,
    Dbg_AWADDR_9,
    Dbg_AWVALID_9,
    Dbg_AWREADY_9,
    Dbg_WDATA_9,
    Dbg_WVALID_9,
    Dbg_WREADY_9,
    Dbg_BRESP_9,
    Dbg_BVALID_9,
    Dbg_BREADY_9,
    Dbg_ARADDR_9,
    Dbg_ARVALID_9,
    Dbg_ARREADY_9,
    Dbg_RDATA_9,
    Dbg_RRESP_9,
    Dbg_RVALID_9,
    Dbg_RREADY_9,
    Dbg_Disable_10,
    Dbg_Clk_10,
    Dbg_TDI_10,
    Dbg_TDO_10,
    Dbg_Reg_En_10,
    Dbg_Capture_10,
    Dbg_Shift_10,
    Dbg_Update_10,
    Dbg_Rst_10,
    Dbg_Trig_In_10,
    Dbg_Trig_Ack_In_10,
    Dbg_Trig_Out_10,
    Dbg_Trig_Ack_Out_10,
    Dbg_TrClk_10,
    Dbg_TrData_10,
    Dbg_TrReady_10,
    Dbg_TrValid_10,
    Dbg_AWADDR_10,
    Dbg_AWVALID_10,
    Dbg_AWREADY_10,
    Dbg_WDATA_10,
    Dbg_WVALID_10,
    Dbg_WREADY_10,
    Dbg_BRESP_10,
    Dbg_BVALID_10,
    Dbg_BREADY_10,
    Dbg_ARADDR_10,
    Dbg_ARVALID_10,
    Dbg_ARREADY_10,
    Dbg_RDATA_10,
    Dbg_RRESP_10,
    Dbg_RVALID_10,
    Dbg_RREADY_10,
    Dbg_Disable_11,
    Dbg_Clk_11,
    Dbg_TDI_11,
    Dbg_TDO_11,
    Dbg_Reg_En_11,
    Dbg_Capture_11,
    Dbg_Shift_11,
    Dbg_Update_11,
    Dbg_Rst_11,
    Dbg_Trig_In_11,
    Dbg_Trig_Ack_In_11,
    Dbg_Trig_Out_11,
    Dbg_Trig_Ack_Out_11,
    Dbg_TrClk_11,
    Dbg_TrData_11,
    Dbg_TrReady_11,
    Dbg_TrValid_11,
    Dbg_AWADDR_11,
    Dbg_AWVALID_11,
    Dbg_AWREADY_11,
    Dbg_WDATA_11,
    Dbg_WVALID_11,
    Dbg_WREADY_11,
    Dbg_BRESP_11,
    Dbg_BVALID_11,
    Dbg_BREADY_11,
    Dbg_ARADDR_11,
    Dbg_ARVALID_11,
    Dbg_ARREADY_11,
    Dbg_RDATA_11,
    Dbg_RRESP_11,
    Dbg_RVALID_11,
    Dbg_RREADY_11,
    Dbg_Disable_12,
    Dbg_Clk_12,
    Dbg_TDI_12,
    Dbg_TDO_12,
    Dbg_Reg_En_12,
    Dbg_Capture_12,
    Dbg_Shift_12,
    Dbg_Update_12,
    Dbg_Rst_12,
    Dbg_Trig_In_12,
    Dbg_Trig_Ack_In_12,
    Dbg_Trig_Out_12,
    Dbg_Trig_Ack_Out_12,
    Dbg_TrClk_12,
    Dbg_TrData_12,
    Dbg_TrReady_12,
    Dbg_TrValid_12,
    Dbg_AWADDR_12,
    Dbg_AWVALID_12,
    Dbg_AWREADY_12,
    Dbg_WDATA_12,
    Dbg_WVALID_12,
    Dbg_WREADY_12,
    Dbg_BRESP_12,
    Dbg_BVALID_12,
    Dbg_BREADY_12,
    Dbg_ARADDR_12,
    Dbg_ARVALID_12,
    Dbg_ARREADY_12,
    Dbg_RDATA_12,
    Dbg_RRESP_12,
    Dbg_RVALID_12,
    Dbg_RREADY_12,
    Dbg_Disable_13,
    Dbg_Clk_13,
    Dbg_TDI_13,
    Dbg_TDO_13,
    Dbg_Reg_En_13,
    Dbg_Capture_13,
    Dbg_Shift_13,
    Dbg_Update_13,
    Dbg_Rst_13,
    Dbg_Trig_In_13,
    Dbg_Trig_Ack_In_13,
    Dbg_Trig_Out_13,
    Dbg_Trig_Ack_Out_13,
    Dbg_TrClk_13,
    Dbg_TrData_13,
    Dbg_TrReady_13,
    Dbg_TrValid_13,
    Dbg_AWADDR_13,
    Dbg_AWVALID_13,
    Dbg_AWREADY_13,
    Dbg_WDATA_13,
    Dbg_WVALID_13,
    Dbg_WREADY_13,
    Dbg_BRESP_13,
    Dbg_BVALID_13,
    Dbg_BREADY_13,
    Dbg_ARADDR_13,
    Dbg_ARVALID_13,
    Dbg_ARREADY_13,
    Dbg_RDATA_13,
    Dbg_RRESP_13,
    Dbg_RVALID_13,
    Dbg_RREADY_13,
    Dbg_Disable_14,
    Dbg_Clk_14,
    Dbg_TDI_14,
    Dbg_TDO_14,
    Dbg_Reg_En_14,
    Dbg_Capture_14,
    Dbg_Shift_14,
    Dbg_Update_14,
    Dbg_Rst_14,
    Dbg_Trig_In_14,
    Dbg_Trig_Ack_In_14,
    Dbg_Trig_Out_14,
    Dbg_Trig_Ack_Out_14,
    Dbg_TrClk_14,
    Dbg_TrData_14,
    Dbg_TrReady_14,
    Dbg_TrValid_14,
    Dbg_AWADDR_14,
    Dbg_AWVALID_14,
    Dbg_AWREADY_14,
    Dbg_WDATA_14,
    Dbg_WVALID_14,
    Dbg_WREADY_14,
    Dbg_BRESP_14,
    Dbg_BVALID_14,
    Dbg_BREADY_14,
    Dbg_ARADDR_14,
    Dbg_ARVALID_14,
    Dbg_ARREADY_14,
    Dbg_RDATA_14,
    Dbg_RRESP_14,
    Dbg_RVALID_14,
    Dbg_RREADY_14,
    Dbg_Disable_15,
    Dbg_Clk_15,
    Dbg_TDI_15,
    Dbg_TDO_15,
    Dbg_Reg_En_15,
    Dbg_Capture_15,
    Dbg_Shift_15,
    Dbg_Update_15,
    Dbg_Rst_15,
    Dbg_Trig_In_15,
    Dbg_Trig_Ack_In_15,
    Dbg_Trig_Out_15,
    Dbg_Trig_Ack_Out_15,
    Dbg_TrClk_15,
    Dbg_TrData_15,
    Dbg_TrReady_15,
    Dbg_TrValid_15,
    Dbg_AWADDR_15,
    Dbg_AWVALID_15,
    Dbg_AWREADY_15,
    Dbg_WDATA_15,
    Dbg_WVALID_15,
    Dbg_WREADY_15,
    Dbg_BRESP_15,
    Dbg_BVALID_15,
    Dbg_BREADY_15,
    Dbg_ARADDR_15,
    Dbg_ARVALID_15,
    Dbg_ARREADY_15,
    Dbg_RDATA_15,
    Dbg_RRESP_15,
    Dbg_RVALID_15,
    Dbg_RREADY_15,
    Dbg_Disable_16,
    Dbg_Clk_16,
    Dbg_TDI_16,
    Dbg_TDO_16,
    Dbg_Reg_En_16,
    Dbg_Capture_16,
    Dbg_Shift_16,
    Dbg_Update_16,
    Dbg_Rst_16,
    Dbg_Trig_In_16,
    Dbg_Trig_Ack_In_16,
    Dbg_Trig_Out_16,
    Dbg_Trig_Ack_Out_16,
    Dbg_TrClk_16,
    Dbg_TrData_16,
    Dbg_TrReady_16,
    Dbg_TrValid_16,
    Dbg_AWADDR_16,
    Dbg_AWVALID_16,
    Dbg_AWREADY_16,
    Dbg_WDATA_16,
    Dbg_WVALID_16,
    Dbg_WREADY_16,
    Dbg_BRESP_16,
    Dbg_BVALID_16,
    Dbg_BREADY_16,
    Dbg_ARADDR_16,
    Dbg_ARVALID_16,
    Dbg_ARREADY_16,
    Dbg_RDATA_16,
    Dbg_RRESP_16,
    Dbg_RVALID_16,
    Dbg_RREADY_16,
    Dbg_Disable_17,
    Dbg_Clk_17,
    Dbg_TDI_17,
    Dbg_TDO_17,
    Dbg_Reg_En_17,
    Dbg_Capture_17,
    Dbg_Shift_17,
    Dbg_Update_17,
    Dbg_Rst_17,
    Dbg_Trig_In_17,
    Dbg_Trig_Ack_In_17,
    Dbg_Trig_Out_17,
    Dbg_Trig_Ack_Out_17,
    Dbg_TrClk_17,
    Dbg_TrData_17,
    Dbg_TrReady_17,
    Dbg_TrValid_17,
    Dbg_AWADDR_17,
    Dbg_AWVALID_17,
    Dbg_AWREADY_17,
    Dbg_WDATA_17,
    Dbg_WVALID_17,
    Dbg_WREADY_17,
    Dbg_BRESP_17,
    Dbg_BVALID_17,
    Dbg_BREADY_17,
    Dbg_ARADDR_17,
    Dbg_ARVALID_17,
    Dbg_ARREADY_17,
    Dbg_RDATA_17,
    Dbg_RRESP_17,
    Dbg_RVALID_17,
    Dbg_RREADY_17,
    Dbg_Disable_18,
    Dbg_Clk_18,
    Dbg_TDI_18,
    Dbg_TDO_18,
    Dbg_Reg_En_18,
    Dbg_Capture_18,
    Dbg_Shift_18,
    Dbg_Update_18,
    Dbg_Rst_18,
    Dbg_Trig_In_18,
    Dbg_Trig_Ack_In_18,
    Dbg_Trig_Out_18,
    Dbg_Trig_Ack_Out_18,
    Dbg_TrClk_18,
    Dbg_TrData_18,
    Dbg_TrReady_18,
    Dbg_TrValid_18,
    Dbg_AWADDR_18,
    Dbg_AWVALID_18,
    Dbg_AWREADY_18,
    Dbg_WDATA_18,
    Dbg_WVALID_18,
    Dbg_WREADY_18,
    Dbg_BRESP_18,
    Dbg_BVALID_18,
    Dbg_BREADY_18,
    Dbg_ARADDR_18,
    Dbg_ARVALID_18,
    Dbg_ARREADY_18,
    Dbg_RDATA_18,
    Dbg_RRESP_18,
    Dbg_RVALID_18,
    Dbg_RREADY_18,
    Dbg_Disable_19,
    Dbg_Clk_19,
    Dbg_TDI_19,
    Dbg_TDO_19,
    Dbg_Reg_En_19,
    Dbg_Capture_19,
    Dbg_Shift_19,
    Dbg_Update_19,
    Dbg_Rst_19,
    Dbg_Trig_In_19,
    Dbg_Trig_Ack_In_19,
    Dbg_Trig_Out_19,
    Dbg_Trig_Ack_Out_19,
    Dbg_TrClk_19,
    Dbg_TrData_19,
    Dbg_TrReady_19,
    Dbg_TrValid_19,
    Dbg_AWADDR_19,
    Dbg_AWVALID_19,
    Dbg_AWREADY_19,
    Dbg_WDATA_19,
    Dbg_WVALID_19,
    Dbg_WREADY_19,
    Dbg_BRESP_19,
    Dbg_BVALID_19,
    Dbg_BREADY_19,
    Dbg_ARADDR_19,
    Dbg_ARVALID_19,
    Dbg_ARREADY_19,
    Dbg_RDATA_19,
    Dbg_RRESP_19,
    Dbg_RVALID_19,
    Dbg_RREADY_19,
    Dbg_Disable_20,
    Dbg_Clk_20,
    Dbg_TDI_20,
    Dbg_TDO_20,
    Dbg_Reg_En_20,
    Dbg_Capture_20,
    Dbg_Shift_20,
    Dbg_Update_20,
    Dbg_Rst_20,
    Dbg_Trig_In_20,
    Dbg_Trig_Ack_In_20,
    Dbg_Trig_Out_20,
    Dbg_Trig_Ack_Out_20,
    Dbg_TrClk_20,
    Dbg_TrData_20,
    Dbg_TrReady_20,
    Dbg_TrValid_20,
    Dbg_AWADDR_20,
    Dbg_AWVALID_20,
    Dbg_AWREADY_20,
    Dbg_WDATA_20,
    Dbg_WVALID_20,
    Dbg_WREADY_20,
    Dbg_BRESP_20,
    Dbg_BVALID_20,
    Dbg_BREADY_20,
    Dbg_ARADDR_20,
    Dbg_ARVALID_20,
    Dbg_ARREADY_20,
    Dbg_RDATA_20,
    Dbg_RRESP_20,
    Dbg_RVALID_20,
    Dbg_RREADY_20,
    Dbg_Disable_21,
    Dbg_Clk_21,
    Dbg_TDI_21,
    Dbg_TDO_21,
    Dbg_Reg_En_21,
    Dbg_Capture_21,
    Dbg_Shift_21,
    Dbg_Update_21,
    Dbg_Rst_21,
    Dbg_Trig_In_21,
    Dbg_Trig_Ack_In_21,
    Dbg_Trig_Out_21,
    Dbg_Trig_Ack_Out_21,
    Dbg_TrClk_21,
    Dbg_TrData_21,
    Dbg_TrReady_21,
    Dbg_TrValid_21,
    Dbg_AWADDR_21,
    Dbg_AWVALID_21,
    Dbg_AWREADY_21,
    Dbg_WDATA_21,
    Dbg_WVALID_21,
    Dbg_WREADY_21,
    Dbg_BRESP_21,
    Dbg_BVALID_21,
    Dbg_BREADY_21,
    Dbg_ARADDR_21,
    Dbg_ARVALID_21,
    Dbg_ARREADY_21,
    Dbg_RDATA_21,
    Dbg_RRESP_21,
    Dbg_RVALID_21,
    Dbg_RREADY_21,
    Dbg_Disable_22,
    Dbg_Clk_22,
    Dbg_TDI_22,
    Dbg_TDO_22,
    Dbg_Reg_En_22,
    Dbg_Capture_22,
    Dbg_Shift_22,
    Dbg_Update_22,
    Dbg_Rst_22,
    Dbg_Trig_In_22,
    Dbg_Trig_Ack_In_22,
    Dbg_Trig_Out_22,
    Dbg_Trig_Ack_Out_22,
    Dbg_TrClk_22,
    Dbg_TrData_22,
    Dbg_TrReady_22,
    Dbg_TrValid_22,
    Dbg_AWADDR_22,
    Dbg_AWVALID_22,
    Dbg_AWREADY_22,
    Dbg_WDATA_22,
    Dbg_WVALID_22,
    Dbg_WREADY_22,
    Dbg_BRESP_22,
    Dbg_BVALID_22,
    Dbg_BREADY_22,
    Dbg_ARADDR_22,
    Dbg_ARVALID_22,
    Dbg_ARREADY_22,
    Dbg_RDATA_22,
    Dbg_RRESP_22,
    Dbg_RVALID_22,
    Dbg_RREADY_22,
    Dbg_Disable_23,
    Dbg_Clk_23,
    Dbg_TDI_23,
    Dbg_TDO_23,
    Dbg_Reg_En_23,
    Dbg_Capture_23,
    Dbg_Shift_23,
    Dbg_Update_23,
    Dbg_Rst_23,
    Dbg_Trig_In_23,
    Dbg_Trig_Ack_In_23,
    Dbg_Trig_Out_23,
    Dbg_Trig_Ack_Out_23,
    Dbg_TrClk_23,
    Dbg_TrData_23,
    Dbg_TrReady_23,
    Dbg_TrValid_23,
    Dbg_AWADDR_23,
    Dbg_AWVALID_23,
    Dbg_AWREADY_23,
    Dbg_WDATA_23,
    Dbg_WVALID_23,
    Dbg_WREADY_23,
    Dbg_BRESP_23,
    Dbg_BVALID_23,
    Dbg_BREADY_23,
    Dbg_ARADDR_23,
    Dbg_ARVALID_23,
    Dbg_ARREADY_23,
    Dbg_RDATA_23,
    Dbg_RRESP_23,
    Dbg_RVALID_23,
    Dbg_RREADY_23,
    Dbg_Disable_24,
    Dbg_Clk_24,
    Dbg_TDI_24,
    Dbg_TDO_24,
    Dbg_Reg_En_24,
    Dbg_Capture_24,
    Dbg_Shift_24,
    Dbg_Update_24,
    Dbg_Rst_24,
    Dbg_Trig_In_24,
    Dbg_Trig_Ack_In_24,
    Dbg_Trig_Out_24,
    Dbg_Trig_Ack_Out_24,
    Dbg_TrClk_24,
    Dbg_TrData_24,
    Dbg_TrReady_24,
    Dbg_TrValid_24,
    Dbg_AWADDR_24,
    Dbg_AWVALID_24,
    Dbg_AWREADY_24,
    Dbg_WDATA_24,
    Dbg_WVALID_24,
    Dbg_WREADY_24,
    Dbg_BRESP_24,
    Dbg_BVALID_24,
    Dbg_BREADY_24,
    Dbg_ARADDR_24,
    Dbg_ARVALID_24,
    Dbg_ARREADY_24,
    Dbg_RDATA_24,
    Dbg_RRESP_24,
    Dbg_RVALID_24,
    Dbg_RREADY_24,
    Dbg_Disable_25,
    Dbg_Clk_25,
    Dbg_TDI_25,
    Dbg_TDO_25,
    Dbg_Reg_En_25,
    Dbg_Capture_25,
    Dbg_Shift_25,
    Dbg_Update_25,
    Dbg_Rst_25,
    Dbg_Trig_In_25,
    Dbg_Trig_Ack_In_25,
    Dbg_Trig_Out_25,
    Dbg_Trig_Ack_Out_25,
    Dbg_TrClk_25,
    Dbg_TrData_25,
    Dbg_TrReady_25,
    Dbg_TrValid_25,
    Dbg_AWADDR_25,
    Dbg_AWVALID_25,
    Dbg_AWREADY_25,
    Dbg_WDATA_25,
    Dbg_WVALID_25,
    Dbg_WREADY_25,
    Dbg_BRESP_25,
    Dbg_BVALID_25,
    Dbg_BREADY_25,
    Dbg_ARADDR_25,
    Dbg_ARVALID_25,
    Dbg_ARREADY_25,
    Dbg_RDATA_25,
    Dbg_RRESP_25,
    Dbg_RVALID_25,
    Dbg_RREADY_25,
    Dbg_Disable_26,
    Dbg_Clk_26,
    Dbg_TDI_26,
    Dbg_TDO_26,
    Dbg_Reg_En_26,
    Dbg_Capture_26,
    Dbg_Shift_26,
    Dbg_Update_26,
    Dbg_Rst_26,
    Dbg_Trig_In_26,
    Dbg_Trig_Ack_In_26,
    Dbg_Trig_Out_26,
    Dbg_Trig_Ack_Out_26,
    Dbg_TrClk_26,
    Dbg_TrData_26,
    Dbg_TrReady_26,
    Dbg_TrValid_26,
    Dbg_AWADDR_26,
    Dbg_AWVALID_26,
    Dbg_AWREADY_26,
    Dbg_WDATA_26,
    Dbg_WVALID_26,
    Dbg_WREADY_26,
    Dbg_BRESP_26,
    Dbg_BVALID_26,
    Dbg_BREADY_26,
    Dbg_ARADDR_26,
    Dbg_ARVALID_26,
    Dbg_ARREADY_26,
    Dbg_RDATA_26,
    Dbg_RRESP_26,
    Dbg_RVALID_26,
    Dbg_RREADY_26,
    Dbg_Disable_27,
    Dbg_Clk_27,
    Dbg_TDI_27,
    Dbg_TDO_27,
    Dbg_Reg_En_27,
    Dbg_Capture_27,
    Dbg_Shift_27,
    Dbg_Update_27,
    Dbg_Rst_27,
    Dbg_Trig_In_27,
    Dbg_Trig_Ack_In_27,
    Dbg_Trig_Out_27,
    Dbg_Trig_Ack_Out_27,
    Dbg_TrClk_27,
    Dbg_TrData_27,
    Dbg_TrReady_27,
    Dbg_TrValid_27,
    Dbg_AWADDR_27,
    Dbg_AWVALID_27,
    Dbg_AWREADY_27,
    Dbg_WDATA_27,
    Dbg_WVALID_27,
    Dbg_WREADY_27,
    Dbg_BRESP_27,
    Dbg_BVALID_27,
    Dbg_BREADY_27,
    Dbg_ARADDR_27,
    Dbg_ARVALID_27,
    Dbg_ARREADY_27,
    Dbg_RDATA_27,
    Dbg_RRESP_27,
    Dbg_RVALID_27,
    Dbg_RREADY_27,
    Dbg_Disable_28,
    Dbg_Clk_28,
    Dbg_TDI_28,
    Dbg_TDO_28,
    Dbg_Reg_En_28,
    Dbg_Capture_28,
    Dbg_Shift_28,
    Dbg_Update_28,
    Dbg_Rst_28,
    Dbg_Trig_In_28,
    Dbg_Trig_Ack_In_28,
    Dbg_Trig_Out_28,
    Dbg_Trig_Ack_Out_28,
    Dbg_TrClk_28,
    Dbg_TrData_28,
    Dbg_TrReady_28,
    Dbg_TrValid_28,
    Dbg_AWADDR_28,
    Dbg_AWVALID_28,
    Dbg_AWREADY_28,
    Dbg_WDATA_28,
    Dbg_WVALID_28,
    Dbg_WREADY_28,
    Dbg_BRESP_28,
    Dbg_BVALID_28,
    Dbg_BREADY_28,
    Dbg_ARADDR_28,
    Dbg_ARVALID_28,
    Dbg_ARREADY_28,
    Dbg_RDATA_28,
    Dbg_RRESP_28,
    Dbg_RVALID_28,
    Dbg_RREADY_28,
    Dbg_Disable_29,
    Dbg_Clk_29,
    Dbg_TDI_29,
    Dbg_TDO_29,
    Dbg_Reg_En_29,
    Dbg_Capture_29,
    Dbg_Shift_29,
    Dbg_Update_29,
    Dbg_Rst_29,
    Dbg_Trig_In_29,
    Dbg_Trig_Ack_In_29,
    Dbg_Trig_Out_29,
    Dbg_Trig_Ack_Out_29,
    Dbg_TrClk_29,
    Dbg_TrData_29,
    Dbg_TrReady_29,
    Dbg_TrValid_29,
    Dbg_AWADDR_29,
    Dbg_AWVALID_29,
    Dbg_AWREADY_29,
    Dbg_WDATA_29,
    Dbg_WVALID_29,
    Dbg_WREADY_29,
    Dbg_BRESP_29,
    Dbg_BVALID_29,
    Dbg_BREADY_29,
    Dbg_ARADDR_29,
    Dbg_ARVALID_29,
    Dbg_ARREADY_29,
    Dbg_RDATA_29,
    Dbg_RRESP_29,
    Dbg_RVALID_29,
    Dbg_RREADY_29,
    Dbg_Disable_30,
    Dbg_Clk_30,
    Dbg_TDI_30,
    Dbg_TDO_30,
    Dbg_Reg_En_30,
    Dbg_Capture_30,
    Dbg_Shift_30,
    Dbg_Update_30,
    Dbg_Rst_30,
    Dbg_Trig_In_30,
    Dbg_Trig_Ack_In_30,
    Dbg_Trig_Out_30,
    Dbg_Trig_Ack_Out_30,
    Dbg_TrClk_30,
    Dbg_TrData_30,
    Dbg_TrReady_30,
    Dbg_TrValid_30,
    Dbg_AWADDR_30,
    Dbg_AWVALID_30,
    Dbg_AWREADY_30,
    Dbg_WDATA_30,
    Dbg_WVALID_30,
    Dbg_WREADY_30,
    Dbg_BRESP_30,
    Dbg_BVALID_30,
    Dbg_BREADY_30,
    Dbg_ARADDR_30,
    Dbg_ARVALID_30,
    Dbg_ARREADY_30,
    Dbg_RDATA_30,
    Dbg_RRESP_30,
    Dbg_RVALID_30,
    Dbg_RREADY_30,
    Dbg_Disable_31,
    Dbg_Clk_31,
    Dbg_TDI_31,
    Dbg_TDO_31,
    Dbg_Reg_En_31,
    Dbg_Capture_31,
    Dbg_Shift_31,
    Dbg_Update_31,
    Dbg_Rst_31,
    Dbg_Trig_In_31,
    Dbg_Trig_Ack_In_31,
    Dbg_Trig_Out_31,
    Dbg_Trig_Ack_Out_31,
    Dbg_TrClk_31,
    Dbg_TrData_31,
    Dbg_TrReady_31,
    Dbg_TrValid_31,
    Dbg_AWADDR_31,
    Dbg_AWVALID_31,
    Dbg_AWREADY_31,
    Dbg_WDATA_31,
    Dbg_WVALID_31,
    Dbg_WREADY_31,
    Dbg_BRESP_31,
    Dbg_BVALID_31,
    Dbg_BREADY_31,
    Dbg_ARADDR_31,
    Dbg_ARVALID_31,
    Dbg_ARREADY_31,
    Dbg_RDATA_31,
    Dbg_RRESP_31,
    Dbg_RVALID_31,
    Dbg_RREADY_31,
    bscan_ext_tdi,
    bscan_ext_reset,
    bscan_ext_shift,
    bscan_ext_update,
    bscan_ext_capture,
    bscan_ext_sel,
    bscan_ext_drck,
    bscan_ext_tdo,
    Ext_JTAG_DRCK,
    Ext_JTAG_RESET,
    Ext_JTAG_SEL,
    Ext_JTAG_CAPTURE,
    Ext_JTAG_SHIFT,
    Ext_JTAG_UPDATE,
    Ext_JTAG_TDI,
    Ext_JTAG_TDO);
  input Config_Reset;
  input Scan_Reset_Sel;
  input Scan_Reset;
  input S_AXI_ACLK;
  input S_AXI_ARESETN;
  input M_AXI_ACLK;
  input M_AXI_ARESETN;
  input M_AXIS_ACLK;
  input M_AXIS_ARESETN;
  output Interrupt;
  output Ext_BRK;
  output Ext_NM_BRK;
  output Debug_SYS_Rst;
  input Trig_In_0;
  output Trig_Ack_In_0;
  output Trig_Out_0;
  input Trig_Ack_Out_0;
  input Trig_In_1;
  output Trig_Ack_In_1;
  output Trig_Out_1;
  input Trig_Ack_Out_1;
  input Trig_In_2;
  output Trig_Ack_In_2;
  output Trig_Out_2;
  input Trig_Ack_Out_2;
  input Trig_In_3;
  output Trig_Ack_In_3;
  output Trig_Out_3;
  input Trig_Ack_Out_3;
  input [3:0]S_AXI_AWADDR;
  input S_AXI_AWVALID;
  output S_AXI_AWREADY;
  input [31:0]S_AXI_WDATA;
  input [3:0]S_AXI_WSTRB;
  input S_AXI_WVALID;
  output S_AXI_WREADY;
  output [1:0]S_AXI_BRESP;
  output S_AXI_BVALID;
  input S_AXI_BREADY;
  input [3:0]S_AXI_ARADDR;
  input S_AXI_ARVALID;
  output S_AXI_ARREADY;
  output [31:0]S_AXI_RDATA;
  output [1:0]S_AXI_RRESP;
  output S_AXI_RVALID;
  input S_AXI_RREADY;
  output [0:0]M_AXI_AWID;
  output [31:0]M_AXI_AWADDR;
  output [7:0]M_AXI_AWLEN;
  output [2:0]M_AXI_AWSIZE;
  output [1:0]M_AXI_AWBURST;
  output M_AXI_AWLOCK;
  output [3:0]M_AXI_AWCACHE;
  output [2:0]M_AXI_AWPROT;
  output [3:0]M_AXI_AWQOS;
  output M_AXI_AWVALID;
  input M_AXI_AWREADY;
  output [31:0]M_AXI_WDATA;
  output [3:0]M_AXI_WSTRB;
  output M_AXI_WLAST;
  output M_AXI_WVALID;
  input M_AXI_WREADY;
  input [1:0]M_AXI_BRESP;
  input [0:0]M_AXI_BID;
  input M_AXI_BVALID;
  output M_AXI_BREADY;
  output [0:0]M_AXI_ARID;
  output [31:0]M_AXI_ARADDR;
  output [7:0]M_AXI_ARLEN;
  output [2:0]M_AXI_ARSIZE;
  output [1:0]M_AXI_ARBURST;
  output M_AXI_ARLOCK;
  output [3:0]M_AXI_ARCACHE;
  output [2:0]M_AXI_ARPROT;
  output [3:0]M_AXI_ARQOS;
  output M_AXI_ARVALID;
  input M_AXI_ARREADY;
  input [0:0]M_AXI_RID;
  input [31:0]M_AXI_RDATA;
  input [1:0]M_AXI_RRESP;
  input M_AXI_RLAST;
  input M_AXI_RVALID;
  output M_AXI_RREADY;
  output [0:31]LMB_Data_Addr_0;
  input [0:31]LMB_Data_Read_0;
  output [0:31]LMB_Data_Write_0;
  output LMB_Addr_Strobe_0;
  output LMB_Read_Strobe_0;
  output LMB_Write_Strobe_0;
  input LMB_Ready_0;
  input LMB_Wait_0;
  input LMB_CE_0;
  input LMB_UE_0;
  output [0:3]LMB_Byte_Enable_0;
  output [0:31]LMB_Data_Addr_1;
  input [0:31]LMB_Data_Read_1;
  output [0:31]LMB_Data_Write_1;
  output LMB_Addr_Strobe_1;
  output LMB_Read_Strobe_1;
  output LMB_Write_Strobe_1;
  input LMB_Ready_1;
  input LMB_Wait_1;
  input LMB_CE_1;
  input LMB_UE_1;
  output [0:3]LMB_Byte_Enable_1;
  output [0:31]LMB_Data_Addr_2;
  input [0:31]LMB_Data_Read_2;
  output [0:31]LMB_Data_Write_2;
  output LMB_Addr_Strobe_2;
  output LMB_Read_Strobe_2;
  output LMB_Write_Strobe_2;
  input LMB_Ready_2;
  input LMB_Wait_2;
  input LMB_CE_2;
  input LMB_UE_2;
  output [0:3]LMB_Byte_Enable_2;
  output [0:31]LMB_Data_Addr_3;
  input [0:31]LMB_Data_Read_3;
  output [0:31]LMB_Data_Write_3;
  output LMB_Addr_Strobe_3;
  output LMB_Read_Strobe_3;
  output LMB_Write_Strobe_3;
  input LMB_Ready_3;
  input LMB_Wait_3;
  input LMB_CE_3;
  input LMB_UE_3;
  output [0:3]LMB_Byte_Enable_3;
  output [0:31]LMB_Data_Addr_4;
  input [0:31]LMB_Data_Read_4;
  output [0:31]LMB_Data_Write_4;
  output LMB_Addr_Strobe_4;
  output LMB_Read_Strobe_4;
  output LMB_Write_Strobe_4;
  input LMB_Ready_4;
  input LMB_Wait_4;
  input LMB_CE_4;
  input LMB_UE_4;
  output [0:3]LMB_Byte_Enable_4;
  output [0:31]LMB_Data_Addr_5;
  input [0:31]LMB_Data_Read_5;
  output [0:31]LMB_Data_Write_5;
  output LMB_Addr_Strobe_5;
  output LMB_Read_Strobe_5;
  output LMB_Write_Strobe_5;
  input LMB_Ready_5;
  input LMB_Wait_5;
  input LMB_CE_5;
  input LMB_UE_5;
  output [0:3]LMB_Byte_Enable_5;
  output [0:31]LMB_Data_Addr_6;
  input [0:31]LMB_Data_Read_6;
  output [0:31]LMB_Data_Write_6;
  output LMB_Addr_Strobe_6;
  output LMB_Read_Strobe_6;
  output LMB_Write_Strobe_6;
  input LMB_Ready_6;
  input LMB_Wait_6;
  input LMB_CE_6;
  input LMB_UE_6;
  output [0:3]LMB_Byte_Enable_6;
  output [0:31]LMB_Data_Addr_7;
  input [0:31]LMB_Data_Read_7;
  output [0:31]LMB_Data_Write_7;
  output LMB_Addr_Strobe_7;
  output LMB_Read_Strobe_7;
  output LMB_Write_Strobe_7;
  input LMB_Ready_7;
  input LMB_Wait_7;
  input LMB_CE_7;
  input LMB_UE_7;
  output [0:3]LMB_Byte_Enable_7;
  output [0:31]LMB_Data_Addr_8;
  input [0:31]LMB_Data_Read_8;
  output [0:31]LMB_Data_Write_8;
  output LMB_Addr_Strobe_8;
  output LMB_Read_Strobe_8;
  output LMB_Write_Strobe_8;
  input LMB_Ready_8;
  input LMB_Wait_8;
  input LMB_CE_8;
  input LMB_UE_8;
  output [0:3]LMB_Byte_Enable_8;
  output [0:31]LMB_Data_Addr_9;
  input [0:31]LMB_Data_Read_9;
  output [0:31]LMB_Data_Write_9;
  output LMB_Addr_Strobe_9;
  output LMB_Read_Strobe_9;
  output LMB_Write_Strobe_9;
  input LMB_Ready_9;
  input LMB_Wait_9;
  input LMB_CE_9;
  input LMB_UE_9;
  output [0:3]LMB_Byte_Enable_9;
  output [0:31]LMB_Data_Addr_10;
  input [0:31]LMB_Data_Read_10;
  output [0:31]LMB_Data_Write_10;
  output LMB_Addr_Strobe_10;
  output LMB_Read_Strobe_10;
  output LMB_Write_Strobe_10;
  input LMB_Ready_10;
  input LMB_Wait_10;
  input LMB_CE_10;
  input LMB_UE_10;
  output [0:3]LMB_Byte_Enable_10;
  output [0:31]LMB_Data_Addr_11;
  input [0:31]LMB_Data_Read_11;
  output [0:31]LMB_Data_Write_11;
  output LMB_Addr_Strobe_11;
  output LMB_Read_Strobe_11;
  output LMB_Write_Strobe_11;
  input LMB_Ready_11;
  input LMB_Wait_11;
  input LMB_CE_11;
  input LMB_UE_11;
  output [0:3]LMB_Byte_Enable_11;
  output [0:31]LMB_Data_Addr_12;
  input [0:31]LMB_Data_Read_12;
  output [0:31]LMB_Data_Write_12;
  output LMB_Addr_Strobe_12;
  output LMB_Read_Strobe_12;
  output LMB_Write_Strobe_12;
  input LMB_Ready_12;
  input LMB_Wait_12;
  input LMB_CE_12;
  input LMB_UE_12;
  output [0:3]LMB_Byte_Enable_12;
  output [0:31]LMB_Data_Addr_13;
  input [0:31]LMB_Data_Read_13;
  output [0:31]LMB_Data_Write_13;
  output LMB_Addr_Strobe_13;
  output LMB_Read_Strobe_13;
  output LMB_Write_Strobe_13;
  input LMB_Ready_13;
  input LMB_Wait_13;
  input LMB_CE_13;
  input LMB_UE_13;
  output [0:3]LMB_Byte_Enable_13;
  output [0:31]LMB_Data_Addr_14;
  input [0:31]LMB_Data_Read_14;
  output [0:31]LMB_Data_Write_14;
  output LMB_Addr_Strobe_14;
  output LMB_Read_Strobe_14;
  output LMB_Write_Strobe_14;
  input LMB_Ready_14;
  input LMB_Wait_14;
  input LMB_CE_14;
  input LMB_UE_14;
  output [0:3]LMB_Byte_Enable_14;
  output [0:31]LMB_Data_Addr_15;
  input [0:31]LMB_Data_Read_15;
  output [0:31]LMB_Data_Write_15;
  output LMB_Addr_Strobe_15;
  output LMB_Read_Strobe_15;
  output LMB_Write_Strobe_15;
  input LMB_Ready_15;
  input LMB_Wait_15;
  input LMB_CE_15;
  input LMB_UE_15;
  output [0:3]LMB_Byte_Enable_15;
  output [0:31]LMB_Data_Addr_16;
  input [0:31]LMB_Data_Read_16;
  output [0:31]LMB_Data_Write_16;
  output LMB_Addr_Strobe_16;
  output LMB_Read_Strobe_16;
  output LMB_Write_Strobe_16;
  input LMB_Ready_16;
  input LMB_Wait_16;
  input LMB_CE_16;
  input LMB_UE_16;
  output [0:3]LMB_Byte_Enable_16;
  output [0:31]LMB_Data_Addr_17;
  input [0:31]LMB_Data_Read_17;
  output [0:31]LMB_Data_Write_17;
  output LMB_Addr_Strobe_17;
  output LMB_Read_Strobe_17;
  output LMB_Write_Strobe_17;
  input LMB_Ready_17;
  input LMB_Wait_17;
  input LMB_CE_17;
  input LMB_UE_17;
  output [0:3]LMB_Byte_Enable_17;
  output [0:31]LMB_Data_Addr_18;
  input [0:31]LMB_Data_Read_18;
  output [0:31]LMB_Data_Write_18;
  output LMB_Addr_Strobe_18;
  output LMB_Read_Strobe_18;
  output LMB_Write_Strobe_18;
  input LMB_Ready_18;
  input LMB_Wait_18;
  input LMB_CE_18;
  input LMB_UE_18;
  output [0:3]LMB_Byte_Enable_18;
  output [0:31]LMB_Data_Addr_19;
  input [0:31]LMB_Data_Read_19;
  output [0:31]LMB_Data_Write_19;
  output LMB_Addr_Strobe_19;
  output LMB_Read_Strobe_19;
  output LMB_Write_Strobe_19;
  input LMB_Ready_19;
  input LMB_Wait_19;
  input LMB_CE_19;
  input LMB_UE_19;
  output [0:3]LMB_Byte_Enable_19;
  output [0:31]LMB_Data_Addr_20;
  input [0:31]LMB_Data_Read_20;
  output [0:31]LMB_Data_Write_20;
  output LMB_Addr_Strobe_20;
  output LMB_Read_Strobe_20;
  output LMB_Write_Strobe_20;
  input LMB_Ready_20;
  input LMB_Wait_20;
  input LMB_CE_20;
  input LMB_UE_20;
  output [0:3]LMB_Byte_Enable_20;
  output [0:31]LMB_Data_Addr_21;
  input [0:31]LMB_Data_Read_21;
  output [0:31]LMB_Data_Write_21;
  output LMB_Addr_Strobe_21;
  output LMB_Read_Strobe_21;
  output LMB_Write_Strobe_21;
  input LMB_Ready_21;
  input LMB_Wait_21;
  input LMB_CE_21;
  input LMB_UE_21;
  output [0:3]LMB_Byte_Enable_21;
  output [0:31]LMB_Data_Addr_22;
  input [0:31]LMB_Data_Read_22;
  output [0:31]LMB_Data_Write_22;
  output LMB_Addr_Strobe_22;
  output LMB_Read_Strobe_22;
  output LMB_Write_Strobe_22;
  input LMB_Ready_22;
  input LMB_Wait_22;
  input LMB_CE_22;
  input LMB_UE_22;
  output [0:3]LMB_Byte_Enable_22;
  output [0:31]LMB_Data_Addr_23;
  input [0:31]LMB_Data_Read_23;
  output [0:31]LMB_Data_Write_23;
  output LMB_Addr_Strobe_23;
  output LMB_Read_Strobe_23;
  output LMB_Write_Strobe_23;
  input LMB_Ready_23;
  input LMB_Wait_23;
  input LMB_CE_23;
  input LMB_UE_23;
  output [0:3]LMB_Byte_Enable_23;
  output [0:31]LMB_Data_Addr_24;
  input [0:31]LMB_Data_Read_24;
  output [0:31]LMB_Data_Write_24;
  output LMB_Addr_Strobe_24;
  output LMB_Read_Strobe_24;
  output LMB_Write_Strobe_24;
  input LMB_Ready_24;
  input LMB_Wait_24;
  input LMB_CE_24;
  input LMB_UE_24;
  output [0:3]LMB_Byte_Enable_24;
  output [0:31]LMB_Data_Addr_25;
  input [0:31]LMB_Data_Read_25;
  output [0:31]LMB_Data_Write_25;
  output LMB_Addr_Strobe_25;
  output LMB_Read_Strobe_25;
  output LMB_Write_Strobe_25;
  input LMB_Ready_25;
  input LMB_Wait_25;
  input LMB_CE_25;
  input LMB_UE_25;
  output [0:3]LMB_Byte_Enable_25;
  output [0:31]LMB_Data_Addr_26;
  input [0:31]LMB_Data_Read_26;
  output [0:31]LMB_Data_Write_26;
  output LMB_Addr_Strobe_26;
  output LMB_Read_Strobe_26;
  output LMB_Write_Strobe_26;
  input LMB_Ready_26;
  input LMB_Wait_26;
  input LMB_CE_26;
  input LMB_UE_26;
  output [0:3]LMB_Byte_Enable_26;
  output [0:31]LMB_Data_Addr_27;
  input [0:31]LMB_Data_Read_27;
  output [0:31]LMB_Data_Write_27;
  output LMB_Addr_Strobe_27;
  output LMB_Read_Strobe_27;
  output LMB_Write_Strobe_27;
  input LMB_Ready_27;
  input LMB_Wait_27;
  input LMB_CE_27;
  input LMB_UE_27;
  output [0:3]LMB_Byte_Enable_27;
  output [0:31]LMB_Data_Addr_28;
  input [0:31]LMB_Data_Read_28;
  output [0:31]LMB_Data_Write_28;
  output LMB_Addr_Strobe_28;
  output LMB_Read_Strobe_28;
  output LMB_Write_Strobe_28;
  input LMB_Ready_28;
  input LMB_Wait_28;
  input LMB_CE_28;
  input LMB_UE_28;
  output [0:3]LMB_Byte_Enable_28;
  output [0:31]LMB_Data_Addr_29;
  input [0:31]LMB_Data_Read_29;
  output [0:31]LMB_Data_Write_29;
  output LMB_Addr_Strobe_29;
  output LMB_Read_Strobe_29;
  output LMB_Write_Strobe_29;
  input LMB_Ready_29;
  input LMB_Wait_29;
  input LMB_CE_29;
  input LMB_UE_29;
  output [0:3]LMB_Byte_Enable_29;
  output [0:31]LMB_Data_Addr_30;
  input [0:31]LMB_Data_Read_30;
  output [0:31]LMB_Data_Write_30;
  output LMB_Addr_Strobe_30;
  output LMB_Read_Strobe_30;
  output LMB_Write_Strobe_30;
  input LMB_Ready_30;
  input LMB_Wait_30;
  input LMB_CE_30;
  input LMB_UE_30;
  output [0:3]LMB_Byte_Enable_30;
  output [0:31]LMB_Data_Addr_31;
  input [0:31]LMB_Data_Read_31;
  output [0:31]LMB_Data_Write_31;
  output LMB_Addr_Strobe_31;
  output LMB_Read_Strobe_31;
  output LMB_Write_Strobe_31;
  input LMB_Ready_31;
  input LMB_Wait_31;
  input LMB_CE_31;
  input LMB_UE_31;
  output [0:3]LMB_Byte_Enable_31;
  output [31:0]M_AXIS_TDATA;
  output [6:0]M_AXIS_TID;
  input M_AXIS_TREADY;
  output M_AXIS_TVALID;
  output TRACE_CLK_OUT;
  input TRACE_CLK;
  output TRACE_CTL;
  output [31:0]TRACE_DATA;
  output Dbg_Disable_0;
  output Dbg_Clk_0;
  output Dbg_TDI_0;
  input Dbg_TDO_0;
  output [0:7]Dbg_Reg_En_0;
  output Dbg_Capture_0;
  output Dbg_Shift_0;
  output Dbg_Update_0;
  output Dbg_Rst_0;
  input [0:7]Dbg_Trig_In_0;
  output [0:7]Dbg_Trig_Ack_In_0;
  output [0:7]Dbg_Trig_Out_0;
  input [0:7]Dbg_Trig_Ack_Out_0;
  output Dbg_TrClk_0;
  input [0:35]Dbg_TrData_0;
  output Dbg_TrReady_0;
  input Dbg_TrValid_0;
  output [14:2]Dbg_AWADDR_0;
  output Dbg_AWVALID_0;
  input Dbg_AWREADY_0;
  output [31:0]Dbg_WDATA_0;
  output Dbg_WVALID_0;
  input Dbg_WREADY_0;
  input [1:0]Dbg_BRESP_0;
  input Dbg_BVALID_0;
  output Dbg_BREADY_0;
  output [14:2]Dbg_ARADDR_0;
  output Dbg_ARVALID_0;
  input Dbg_ARREADY_0;
  input [31:0]Dbg_RDATA_0;
  input [1:0]Dbg_RRESP_0;
  input Dbg_RVALID_0;
  output Dbg_RREADY_0;
  output Dbg_Disable_1;
  output Dbg_Clk_1;
  output Dbg_TDI_1;
  input Dbg_TDO_1;
  output [0:7]Dbg_Reg_En_1;
  output Dbg_Capture_1;
  output Dbg_Shift_1;
  output Dbg_Update_1;
  output Dbg_Rst_1;
  input [0:7]Dbg_Trig_In_1;
  output [0:7]Dbg_Trig_Ack_In_1;
  output [0:7]Dbg_Trig_Out_1;
  input [0:7]Dbg_Trig_Ack_Out_1;
  output Dbg_TrClk_1;
  input [0:35]Dbg_TrData_1;
  output Dbg_TrReady_1;
  input Dbg_TrValid_1;
  output [14:2]Dbg_AWADDR_1;
  output Dbg_AWVALID_1;
  input Dbg_AWREADY_1;
  output [31:0]Dbg_WDATA_1;
  output Dbg_WVALID_1;
  input Dbg_WREADY_1;
  input [1:0]Dbg_BRESP_1;
  input Dbg_BVALID_1;
  output Dbg_BREADY_1;
  output [14:2]Dbg_ARADDR_1;
  output Dbg_ARVALID_1;
  input Dbg_ARREADY_1;
  input [31:0]Dbg_RDATA_1;
  input [1:0]Dbg_RRESP_1;
  input Dbg_RVALID_1;
  output Dbg_RREADY_1;
  output Dbg_Disable_2;
  output Dbg_Clk_2;
  output Dbg_TDI_2;
  input Dbg_TDO_2;
  output [0:7]Dbg_Reg_En_2;
  output Dbg_Capture_2;
  output Dbg_Shift_2;
  output Dbg_Update_2;
  output Dbg_Rst_2;
  input [0:7]Dbg_Trig_In_2;
  output [0:7]Dbg_Trig_Ack_In_2;
  output [0:7]Dbg_Trig_Out_2;
  input [0:7]Dbg_Trig_Ack_Out_2;
  output Dbg_TrClk_2;
  input [0:35]Dbg_TrData_2;
  output Dbg_TrReady_2;
  input Dbg_TrValid_2;
  output [14:2]Dbg_AWADDR_2;
  output Dbg_AWVALID_2;
  input Dbg_AWREADY_2;
  output [31:0]Dbg_WDATA_2;
  output Dbg_WVALID_2;
  input Dbg_WREADY_2;
  input [1:0]Dbg_BRESP_2;
  input Dbg_BVALID_2;
  output Dbg_BREADY_2;
  output [14:2]Dbg_ARADDR_2;
  output Dbg_ARVALID_2;
  input Dbg_ARREADY_2;
  input [31:0]Dbg_RDATA_2;
  input [1:0]Dbg_RRESP_2;
  input Dbg_RVALID_2;
  output Dbg_RREADY_2;
  output Dbg_Disable_3;
  output Dbg_Clk_3;
  output Dbg_TDI_3;
  input Dbg_TDO_3;
  output [0:7]Dbg_Reg_En_3;
  output Dbg_Capture_3;
  output Dbg_Shift_3;
  output Dbg_Update_3;
  output Dbg_Rst_3;
  input [0:7]Dbg_Trig_In_3;
  output [0:7]Dbg_Trig_Ack_In_3;
  output [0:7]Dbg_Trig_Out_3;
  input [0:7]Dbg_Trig_Ack_Out_3;
  output Dbg_TrClk_3;
  input [0:35]Dbg_TrData_3;
  output Dbg_TrReady_3;
  input Dbg_TrValid_3;
  output [14:2]Dbg_AWADDR_3;
  output Dbg_AWVALID_3;
  input Dbg_AWREADY_3;
  output [31:0]Dbg_WDATA_3;
  output Dbg_WVALID_3;
  input Dbg_WREADY_3;
  input [1:0]Dbg_BRESP_3;
  input Dbg_BVALID_3;
  output Dbg_BREADY_3;
  output [14:2]Dbg_ARADDR_3;
  output Dbg_ARVALID_3;
  input Dbg_ARREADY_3;
  input [31:0]Dbg_RDATA_3;
  input [1:0]Dbg_RRESP_3;
  input Dbg_RVALID_3;
  output Dbg_RREADY_3;
  output Dbg_Disable_4;
  output Dbg_Clk_4;
  output Dbg_TDI_4;
  input Dbg_TDO_4;
  output [0:7]Dbg_Reg_En_4;
  output Dbg_Capture_4;
  output Dbg_Shift_4;
  output Dbg_Update_4;
  output Dbg_Rst_4;
  input [0:7]Dbg_Trig_In_4;
  output [0:7]Dbg_Trig_Ack_In_4;
  output [0:7]Dbg_Trig_Out_4;
  input [0:7]Dbg_Trig_Ack_Out_4;
  output Dbg_TrClk_4;
  input [0:35]Dbg_TrData_4;
  output Dbg_TrReady_4;
  input Dbg_TrValid_4;
  output [14:2]Dbg_AWADDR_4;
  output Dbg_AWVALID_4;
  input Dbg_AWREADY_4;
  output [31:0]Dbg_WDATA_4;
  output Dbg_WVALID_4;
  input Dbg_WREADY_4;
  input [1:0]Dbg_BRESP_4;
  input Dbg_BVALID_4;
  output Dbg_BREADY_4;
  output [14:2]Dbg_ARADDR_4;
  output Dbg_ARVALID_4;
  input Dbg_ARREADY_4;
  input [31:0]Dbg_RDATA_4;
  input [1:0]Dbg_RRESP_4;
  input Dbg_RVALID_4;
  output Dbg_RREADY_4;
  output Dbg_Disable_5;
  output Dbg_Clk_5;
  output Dbg_TDI_5;
  input Dbg_TDO_5;
  output [0:7]Dbg_Reg_En_5;
  output Dbg_Capture_5;
  output Dbg_Shift_5;
  output Dbg_Update_5;
  output Dbg_Rst_5;
  input [0:7]Dbg_Trig_In_5;
  output [0:7]Dbg_Trig_Ack_In_5;
  output [0:7]Dbg_Trig_Out_5;
  input [0:7]Dbg_Trig_Ack_Out_5;
  output Dbg_TrClk_5;
  input [0:35]Dbg_TrData_5;
  output Dbg_TrReady_5;
  input Dbg_TrValid_5;
  output [14:2]Dbg_AWADDR_5;
  output Dbg_AWVALID_5;
  input Dbg_AWREADY_5;
  output [31:0]Dbg_WDATA_5;
  output Dbg_WVALID_5;
  input Dbg_WREADY_5;
  input [1:0]Dbg_BRESP_5;
  input Dbg_BVALID_5;
  output Dbg_BREADY_5;
  output [14:2]Dbg_ARADDR_5;
  output Dbg_ARVALID_5;
  input Dbg_ARREADY_5;
  input [31:0]Dbg_RDATA_5;
  input [1:0]Dbg_RRESP_5;
  input Dbg_RVALID_5;
  output Dbg_RREADY_5;
  output Dbg_Disable_6;
  output Dbg_Clk_6;
  output Dbg_TDI_6;
  input Dbg_TDO_6;
  output [0:7]Dbg_Reg_En_6;
  output Dbg_Capture_6;
  output Dbg_Shift_6;
  output Dbg_Update_6;
  output Dbg_Rst_6;
  input [0:7]Dbg_Trig_In_6;
  output [0:7]Dbg_Trig_Ack_In_6;
  output [0:7]Dbg_Trig_Out_6;
  input [0:7]Dbg_Trig_Ack_Out_6;
  output Dbg_TrClk_6;
  input [0:35]Dbg_TrData_6;
  output Dbg_TrReady_6;
  input Dbg_TrValid_6;
  output [14:2]Dbg_AWADDR_6;
  output Dbg_AWVALID_6;
  input Dbg_AWREADY_6;
  output [31:0]Dbg_WDATA_6;
  output Dbg_WVALID_6;
  input Dbg_WREADY_6;
  input [1:0]Dbg_BRESP_6;
  input Dbg_BVALID_6;
  output Dbg_BREADY_6;
  output [14:2]Dbg_ARADDR_6;
  output Dbg_ARVALID_6;
  input Dbg_ARREADY_6;
  input [31:0]Dbg_RDATA_6;
  input [1:0]Dbg_RRESP_6;
  input Dbg_RVALID_6;
  output Dbg_RREADY_6;
  output Dbg_Disable_7;
  output Dbg_Clk_7;
  output Dbg_TDI_7;
  input Dbg_TDO_7;
  output [0:7]Dbg_Reg_En_7;
  output Dbg_Capture_7;
  output Dbg_Shift_7;
  output Dbg_Update_7;
  output Dbg_Rst_7;
  input [0:7]Dbg_Trig_In_7;
  output [0:7]Dbg_Trig_Ack_In_7;
  output [0:7]Dbg_Trig_Out_7;
  input [0:7]Dbg_Trig_Ack_Out_7;
  output Dbg_TrClk_7;
  input [0:35]Dbg_TrData_7;
  output Dbg_TrReady_7;
  input Dbg_TrValid_7;
  output [14:2]Dbg_AWADDR_7;
  output Dbg_AWVALID_7;
  input Dbg_AWREADY_7;
  output [31:0]Dbg_WDATA_7;
  output Dbg_WVALID_7;
  input Dbg_WREADY_7;
  input [1:0]Dbg_BRESP_7;
  input Dbg_BVALID_7;
  output Dbg_BREADY_7;
  output [14:2]Dbg_ARADDR_7;
  output Dbg_ARVALID_7;
  input Dbg_ARREADY_7;
  input [31:0]Dbg_RDATA_7;
  input [1:0]Dbg_RRESP_7;
  input Dbg_RVALID_7;
  output Dbg_RREADY_7;
  output Dbg_Disable_8;
  output Dbg_Clk_8;
  output Dbg_TDI_8;
  input Dbg_TDO_8;
  output [0:7]Dbg_Reg_En_8;
  output Dbg_Capture_8;
  output Dbg_Shift_8;
  output Dbg_Update_8;
  output Dbg_Rst_8;
  input [0:7]Dbg_Trig_In_8;
  output [0:7]Dbg_Trig_Ack_In_8;
  output [0:7]Dbg_Trig_Out_8;
  input [0:7]Dbg_Trig_Ack_Out_8;
  output Dbg_TrClk_8;
  input [0:35]Dbg_TrData_8;
  output Dbg_TrReady_8;
  input Dbg_TrValid_8;
  output [14:2]Dbg_AWADDR_8;
  output Dbg_AWVALID_8;
  input Dbg_AWREADY_8;
  output [31:0]Dbg_WDATA_8;
  output Dbg_WVALID_8;
  input Dbg_WREADY_8;
  input [1:0]Dbg_BRESP_8;
  input Dbg_BVALID_8;
  output Dbg_BREADY_8;
  output [14:2]Dbg_ARADDR_8;
  output Dbg_ARVALID_8;
  input Dbg_ARREADY_8;
  input [31:0]Dbg_RDATA_8;
  input [1:0]Dbg_RRESP_8;
  input Dbg_RVALID_8;
  output Dbg_RREADY_8;
  output Dbg_Disable_9;
  output Dbg_Clk_9;
  output Dbg_TDI_9;
  input Dbg_TDO_9;
  output [0:7]Dbg_Reg_En_9;
  output Dbg_Capture_9;
  output Dbg_Shift_9;
  output Dbg_Update_9;
  output Dbg_Rst_9;
  input [0:7]Dbg_Trig_In_9;
  output [0:7]Dbg_Trig_Ack_In_9;
  output [0:7]Dbg_Trig_Out_9;
  input [0:7]Dbg_Trig_Ack_Out_9;
  output Dbg_TrClk_9;
  input [0:35]Dbg_TrData_9;
  output Dbg_TrReady_9;
  input Dbg_TrValid_9;
  output [14:2]Dbg_AWADDR_9;
  output Dbg_AWVALID_9;
  input Dbg_AWREADY_9;
  output [31:0]Dbg_WDATA_9;
  output Dbg_WVALID_9;
  input Dbg_WREADY_9;
  input [1:0]Dbg_BRESP_9;
  input Dbg_BVALID_9;
  output Dbg_BREADY_9;
  output [14:2]Dbg_ARADDR_9;
  output Dbg_ARVALID_9;
  input Dbg_ARREADY_9;
  input [31:0]Dbg_RDATA_9;
  input [1:0]Dbg_RRESP_9;
  input Dbg_RVALID_9;
  output Dbg_RREADY_9;
  output Dbg_Disable_10;
  output Dbg_Clk_10;
  output Dbg_TDI_10;
  input Dbg_TDO_10;
  output [0:7]Dbg_Reg_En_10;
  output Dbg_Capture_10;
  output Dbg_Shift_10;
  output Dbg_Update_10;
  output Dbg_Rst_10;
  input [0:7]Dbg_Trig_In_10;
  output [0:7]Dbg_Trig_Ack_In_10;
  output [0:7]Dbg_Trig_Out_10;
  input [0:7]Dbg_Trig_Ack_Out_10;
  output Dbg_TrClk_10;
  input [0:35]Dbg_TrData_10;
  output Dbg_TrReady_10;
  input Dbg_TrValid_10;
  output [14:2]Dbg_AWADDR_10;
  output Dbg_AWVALID_10;
  input Dbg_AWREADY_10;
  output [31:0]Dbg_WDATA_10;
  output Dbg_WVALID_10;
  input Dbg_WREADY_10;
  input [1:0]Dbg_BRESP_10;
  input Dbg_BVALID_10;
  output Dbg_BREADY_10;
  output [14:2]Dbg_ARADDR_10;
  output Dbg_ARVALID_10;
  input Dbg_ARREADY_10;
  input [31:0]Dbg_RDATA_10;
  input [1:0]Dbg_RRESP_10;
  input Dbg_RVALID_10;
  output Dbg_RREADY_10;
  output Dbg_Disable_11;
  output Dbg_Clk_11;
  output Dbg_TDI_11;
  input Dbg_TDO_11;
  output [0:7]Dbg_Reg_En_11;
  output Dbg_Capture_11;
  output Dbg_Shift_11;
  output Dbg_Update_11;
  output Dbg_Rst_11;
  input [0:7]Dbg_Trig_In_11;
  output [0:7]Dbg_Trig_Ack_In_11;
  output [0:7]Dbg_Trig_Out_11;
  input [0:7]Dbg_Trig_Ack_Out_11;
  output Dbg_TrClk_11;
  input [0:35]Dbg_TrData_11;
  output Dbg_TrReady_11;
  input Dbg_TrValid_11;
  output [14:2]Dbg_AWADDR_11;
  output Dbg_AWVALID_11;
  input Dbg_AWREADY_11;
  output [31:0]Dbg_WDATA_11;
  output Dbg_WVALID_11;
  input Dbg_WREADY_11;
  input [1:0]Dbg_BRESP_11;
  input Dbg_BVALID_11;
  output Dbg_BREADY_11;
  output [14:2]Dbg_ARADDR_11;
  output Dbg_ARVALID_11;
  input Dbg_ARREADY_11;
  input [31:0]Dbg_RDATA_11;
  input [1:0]Dbg_RRESP_11;
  input Dbg_RVALID_11;
  output Dbg_RREADY_11;
  output Dbg_Disable_12;
  output Dbg_Clk_12;
  output Dbg_TDI_12;
  input Dbg_TDO_12;
  output [0:7]Dbg_Reg_En_12;
  output Dbg_Capture_12;
  output Dbg_Shift_12;
  output Dbg_Update_12;
  output Dbg_Rst_12;
  input [0:7]Dbg_Trig_In_12;
  output [0:7]Dbg_Trig_Ack_In_12;
  output [0:7]Dbg_Trig_Out_12;
  input [0:7]Dbg_Trig_Ack_Out_12;
  output Dbg_TrClk_12;
  input [0:35]Dbg_TrData_12;
  output Dbg_TrReady_12;
  input Dbg_TrValid_12;
  output [14:2]Dbg_AWADDR_12;
  output Dbg_AWVALID_12;
  input Dbg_AWREADY_12;
  output [31:0]Dbg_WDATA_12;
  output Dbg_WVALID_12;
  input Dbg_WREADY_12;
  input [1:0]Dbg_BRESP_12;
  input Dbg_BVALID_12;
  output Dbg_BREADY_12;
  output [14:2]Dbg_ARADDR_12;
  output Dbg_ARVALID_12;
  input Dbg_ARREADY_12;
  input [31:0]Dbg_RDATA_12;
  input [1:0]Dbg_RRESP_12;
  input Dbg_RVALID_12;
  output Dbg_RREADY_12;
  output Dbg_Disable_13;
  output Dbg_Clk_13;
  output Dbg_TDI_13;
  input Dbg_TDO_13;
  output [0:7]Dbg_Reg_En_13;
  output Dbg_Capture_13;
  output Dbg_Shift_13;
  output Dbg_Update_13;
  output Dbg_Rst_13;
  input [0:7]Dbg_Trig_In_13;
  output [0:7]Dbg_Trig_Ack_In_13;
  output [0:7]Dbg_Trig_Out_13;
  input [0:7]Dbg_Trig_Ack_Out_13;
  output Dbg_TrClk_13;
  input [0:35]Dbg_TrData_13;
  output Dbg_TrReady_13;
  input Dbg_TrValid_13;
  output [14:2]Dbg_AWADDR_13;
  output Dbg_AWVALID_13;
  input Dbg_AWREADY_13;
  output [31:0]Dbg_WDATA_13;
  output Dbg_WVALID_13;
  input Dbg_WREADY_13;
  input [1:0]Dbg_BRESP_13;
  input Dbg_BVALID_13;
  output Dbg_BREADY_13;
  output [14:2]Dbg_ARADDR_13;
  output Dbg_ARVALID_13;
  input Dbg_ARREADY_13;
  input [31:0]Dbg_RDATA_13;
  input [1:0]Dbg_RRESP_13;
  input Dbg_RVALID_13;
  output Dbg_RREADY_13;
  output Dbg_Disable_14;
  output Dbg_Clk_14;
  output Dbg_TDI_14;
  input Dbg_TDO_14;
  output [0:7]Dbg_Reg_En_14;
  output Dbg_Capture_14;
  output Dbg_Shift_14;
  output Dbg_Update_14;
  output Dbg_Rst_14;
  input [0:7]Dbg_Trig_In_14;
  output [0:7]Dbg_Trig_Ack_In_14;
  output [0:7]Dbg_Trig_Out_14;
  input [0:7]Dbg_Trig_Ack_Out_14;
  output Dbg_TrClk_14;
  input [0:35]Dbg_TrData_14;
  output Dbg_TrReady_14;
  input Dbg_TrValid_14;
  output [14:2]Dbg_AWADDR_14;
  output Dbg_AWVALID_14;
  input Dbg_AWREADY_14;
  output [31:0]Dbg_WDATA_14;
  output Dbg_WVALID_14;
  input Dbg_WREADY_14;
  input [1:0]Dbg_BRESP_14;
  input Dbg_BVALID_14;
  output Dbg_BREADY_14;
  output [14:2]Dbg_ARADDR_14;
  output Dbg_ARVALID_14;
  input Dbg_ARREADY_14;
  input [31:0]Dbg_RDATA_14;
  input [1:0]Dbg_RRESP_14;
  input Dbg_RVALID_14;
  output Dbg_RREADY_14;
  output Dbg_Disable_15;
  output Dbg_Clk_15;
  output Dbg_TDI_15;
  input Dbg_TDO_15;
  output [0:7]Dbg_Reg_En_15;
  output Dbg_Capture_15;
  output Dbg_Shift_15;
  output Dbg_Update_15;
  output Dbg_Rst_15;
  input [0:7]Dbg_Trig_In_15;
  output [0:7]Dbg_Trig_Ack_In_15;
  output [0:7]Dbg_Trig_Out_15;
  input [0:7]Dbg_Trig_Ack_Out_15;
  output Dbg_TrClk_15;
  input [0:35]Dbg_TrData_15;
  output Dbg_TrReady_15;
  input Dbg_TrValid_15;
  output [14:2]Dbg_AWADDR_15;
  output Dbg_AWVALID_15;
  input Dbg_AWREADY_15;
  output [31:0]Dbg_WDATA_15;
  output Dbg_WVALID_15;
  input Dbg_WREADY_15;
  input [1:0]Dbg_BRESP_15;
  input Dbg_BVALID_15;
  output Dbg_BREADY_15;
  output [14:2]Dbg_ARADDR_15;
  output Dbg_ARVALID_15;
  input Dbg_ARREADY_15;
  input [31:0]Dbg_RDATA_15;
  input [1:0]Dbg_RRESP_15;
  input Dbg_RVALID_15;
  output Dbg_RREADY_15;
  output Dbg_Disable_16;
  output Dbg_Clk_16;
  output Dbg_TDI_16;
  input Dbg_TDO_16;
  output [0:7]Dbg_Reg_En_16;
  output Dbg_Capture_16;
  output Dbg_Shift_16;
  output Dbg_Update_16;
  output Dbg_Rst_16;
  input [0:7]Dbg_Trig_In_16;
  output [0:7]Dbg_Trig_Ack_In_16;
  output [0:7]Dbg_Trig_Out_16;
  input [0:7]Dbg_Trig_Ack_Out_16;
  output Dbg_TrClk_16;
  input [0:35]Dbg_TrData_16;
  output Dbg_TrReady_16;
  input Dbg_TrValid_16;
  output [14:2]Dbg_AWADDR_16;
  output Dbg_AWVALID_16;
  input Dbg_AWREADY_16;
  output [31:0]Dbg_WDATA_16;
  output Dbg_WVALID_16;
  input Dbg_WREADY_16;
  input [1:0]Dbg_BRESP_16;
  input Dbg_BVALID_16;
  output Dbg_BREADY_16;
  output [14:2]Dbg_ARADDR_16;
  output Dbg_ARVALID_16;
  input Dbg_ARREADY_16;
  input [31:0]Dbg_RDATA_16;
  input [1:0]Dbg_RRESP_16;
  input Dbg_RVALID_16;
  output Dbg_RREADY_16;
  output Dbg_Disable_17;
  output Dbg_Clk_17;
  output Dbg_TDI_17;
  input Dbg_TDO_17;
  output [0:7]Dbg_Reg_En_17;
  output Dbg_Capture_17;
  output Dbg_Shift_17;
  output Dbg_Update_17;
  output Dbg_Rst_17;
  input [0:7]Dbg_Trig_In_17;
  output [0:7]Dbg_Trig_Ack_In_17;
  output [0:7]Dbg_Trig_Out_17;
  input [0:7]Dbg_Trig_Ack_Out_17;
  output Dbg_TrClk_17;
  input [0:35]Dbg_TrData_17;
  output Dbg_TrReady_17;
  input Dbg_TrValid_17;
  output [14:2]Dbg_AWADDR_17;
  output Dbg_AWVALID_17;
  input Dbg_AWREADY_17;
  output [31:0]Dbg_WDATA_17;
  output Dbg_WVALID_17;
  input Dbg_WREADY_17;
  input [1:0]Dbg_BRESP_17;
  input Dbg_BVALID_17;
  output Dbg_BREADY_17;
  output [14:2]Dbg_ARADDR_17;
  output Dbg_ARVALID_17;
  input Dbg_ARREADY_17;
  input [31:0]Dbg_RDATA_17;
  input [1:0]Dbg_RRESP_17;
  input Dbg_RVALID_17;
  output Dbg_RREADY_17;
  output Dbg_Disable_18;
  output Dbg_Clk_18;
  output Dbg_TDI_18;
  input Dbg_TDO_18;
  output [0:7]Dbg_Reg_En_18;
  output Dbg_Capture_18;
  output Dbg_Shift_18;
  output Dbg_Update_18;
  output Dbg_Rst_18;
  input [0:7]Dbg_Trig_In_18;
  output [0:7]Dbg_Trig_Ack_In_18;
  output [0:7]Dbg_Trig_Out_18;
  input [0:7]Dbg_Trig_Ack_Out_18;
  output Dbg_TrClk_18;
  input [0:35]Dbg_TrData_18;
  output Dbg_TrReady_18;
  input Dbg_TrValid_18;
  output [14:2]Dbg_AWADDR_18;
  output Dbg_AWVALID_18;
  input Dbg_AWREADY_18;
  output [31:0]Dbg_WDATA_18;
  output Dbg_WVALID_18;
  input Dbg_WREADY_18;
  input [1:0]Dbg_BRESP_18;
  input Dbg_BVALID_18;
  output Dbg_BREADY_18;
  output [14:2]Dbg_ARADDR_18;
  output Dbg_ARVALID_18;
  input Dbg_ARREADY_18;
  input [31:0]Dbg_RDATA_18;
  input [1:0]Dbg_RRESP_18;
  input Dbg_RVALID_18;
  output Dbg_RREADY_18;
  output Dbg_Disable_19;
  output Dbg_Clk_19;
  output Dbg_TDI_19;
  input Dbg_TDO_19;
  output [0:7]Dbg_Reg_En_19;
  output Dbg_Capture_19;
  output Dbg_Shift_19;
  output Dbg_Update_19;
  output Dbg_Rst_19;
  input [0:7]Dbg_Trig_In_19;
  output [0:7]Dbg_Trig_Ack_In_19;
  output [0:7]Dbg_Trig_Out_19;
  input [0:7]Dbg_Trig_Ack_Out_19;
  output Dbg_TrClk_19;
  input [0:35]Dbg_TrData_19;
  output Dbg_TrReady_19;
  input Dbg_TrValid_19;
  output [14:2]Dbg_AWADDR_19;
  output Dbg_AWVALID_19;
  input Dbg_AWREADY_19;
  output [31:0]Dbg_WDATA_19;
  output Dbg_WVALID_19;
  input Dbg_WREADY_19;
  input [1:0]Dbg_BRESP_19;
  input Dbg_BVALID_19;
  output Dbg_BREADY_19;
  output [14:2]Dbg_ARADDR_19;
  output Dbg_ARVALID_19;
  input Dbg_ARREADY_19;
  input [31:0]Dbg_RDATA_19;
  input [1:0]Dbg_RRESP_19;
  input Dbg_RVALID_19;
  output Dbg_RREADY_19;
  output Dbg_Disable_20;
  output Dbg_Clk_20;
  output Dbg_TDI_20;
  input Dbg_TDO_20;
  output [0:7]Dbg_Reg_En_20;
  output Dbg_Capture_20;
  output Dbg_Shift_20;
  output Dbg_Update_20;
  output Dbg_Rst_20;
  input [0:7]Dbg_Trig_In_20;
  output [0:7]Dbg_Trig_Ack_In_20;
  output [0:7]Dbg_Trig_Out_20;
  input [0:7]Dbg_Trig_Ack_Out_20;
  output Dbg_TrClk_20;
  input [0:35]Dbg_TrData_20;
  output Dbg_TrReady_20;
  input Dbg_TrValid_20;
  output [14:2]Dbg_AWADDR_20;
  output Dbg_AWVALID_20;
  input Dbg_AWREADY_20;
  output [31:0]Dbg_WDATA_20;
  output Dbg_WVALID_20;
  input Dbg_WREADY_20;
  input [1:0]Dbg_BRESP_20;
  input Dbg_BVALID_20;
  output Dbg_BREADY_20;
  output [14:2]Dbg_ARADDR_20;
  output Dbg_ARVALID_20;
  input Dbg_ARREADY_20;
  input [31:0]Dbg_RDATA_20;
  input [1:0]Dbg_RRESP_20;
  input Dbg_RVALID_20;
  output Dbg_RREADY_20;
  output Dbg_Disable_21;
  output Dbg_Clk_21;
  output Dbg_TDI_21;
  input Dbg_TDO_21;
  output [0:7]Dbg_Reg_En_21;
  output Dbg_Capture_21;
  output Dbg_Shift_21;
  output Dbg_Update_21;
  output Dbg_Rst_21;
  input [0:7]Dbg_Trig_In_21;
  output [0:7]Dbg_Trig_Ack_In_21;
  output [0:7]Dbg_Trig_Out_21;
  input [0:7]Dbg_Trig_Ack_Out_21;
  output Dbg_TrClk_21;
  input [0:35]Dbg_TrData_21;
  output Dbg_TrReady_21;
  input Dbg_TrValid_21;
  output [14:2]Dbg_AWADDR_21;
  output Dbg_AWVALID_21;
  input Dbg_AWREADY_21;
  output [31:0]Dbg_WDATA_21;
  output Dbg_WVALID_21;
  input Dbg_WREADY_21;
  input [1:0]Dbg_BRESP_21;
  input Dbg_BVALID_21;
  output Dbg_BREADY_21;
  output [14:2]Dbg_ARADDR_21;
  output Dbg_ARVALID_21;
  input Dbg_ARREADY_21;
  input [31:0]Dbg_RDATA_21;
  input [1:0]Dbg_RRESP_21;
  input Dbg_RVALID_21;
  output Dbg_RREADY_21;
  output Dbg_Disable_22;
  output Dbg_Clk_22;
  output Dbg_TDI_22;
  input Dbg_TDO_22;
  output [0:7]Dbg_Reg_En_22;
  output Dbg_Capture_22;
  output Dbg_Shift_22;
  output Dbg_Update_22;
  output Dbg_Rst_22;
  input [0:7]Dbg_Trig_In_22;
  output [0:7]Dbg_Trig_Ack_In_22;
  output [0:7]Dbg_Trig_Out_22;
  input [0:7]Dbg_Trig_Ack_Out_22;
  output Dbg_TrClk_22;
  input [0:35]Dbg_TrData_22;
  output Dbg_TrReady_22;
  input Dbg_TrValid_22;
  output [14:2]Dbg_AWADDR_22;
  output Dbg_AWVALID_22;
  input Dbg_AWREADY_22;
  output [31:0]Dbg_WDATA_22;
  output Dbg_WVALID_22;
  input Dbg_WREADY_22;
  input [1:0]Dbg_BRESP_22;
  input Dbg_BVALID_22;
  output Dbg_BREADY_22;
  output [14:2]Dbg_ARADDR_22;
  output Dbg_ARVALID_22;
  input Dbg_ARREADY_22;
  input [31:0]Dbg_RDATA_22;
  input [1:0]Dbg_RRESP_22;
  input Dbg_RVALID_22;
  output Dbg_RREADY_22;
  output Dbg_Disable_23;
  output Dbg_Clk_23;
  output Dbg_TDI_23;
  input Dbg_TDO_23;
  output [0:7]Dbg_Reg_En_23;
  output Dbg_Capture_23;
  output Dbg_Shift_23;
  output Dbg_Update_23;
  output Dbg_Rst_23;
  input [0:7]Dbg_Trig_In_23;
  output [0:7]Dbg_Trig_Ack_In_23;
  output [0:7]Dbg_Trig_Out_23;
  input [0:7]Dbg_Trig_Ack_Out_23;
  output Dbg_TrClk_23;
  input [0:35]Dbg_TrData_23;
  output Dbg_TrReady_23;
  input Dbg_TrValid_23;
  output [14:2]Dbg_AWADDR_23;
  output Dbg_AWVALID_23;
  input Dbg_AWREADY_23;
  output [31:0]Dbg_WDATA_23;
  output Dbg_WVALID_23;
  input Dbg_WREADY_23;
  input [1:0]Dbg_BRESP_23;
  input Dbg_BVALID_23;
  output Dbg_BREADY_23;
  output [14:2]Dbg_ARADDR_23;
  output Dbg_ARVALID_23;
  input Dbg_ARREADY_23;
  input [31:0]Dbg_RDATA_23;
  input [1:0]Dbg_RRESP_23;
  input Dbg_RVALID_23;
  output Dbg_RREADY_23;
  output Dbg_Disable_24;
  output Dbg_Clk_24;
  output Dbg_TDI_24;
  input Dbg_TDO_24;
  output [0:7]Dbg_Reg_En_24;
  output Dbg_Capture_24;
  output Dbg_Shift_24;
  output Dbg_Update_24;
  output Dbg_Rst_24;
  input [0:7]Dbg_Trig_In_24;
  output [0:7]Dbg_Trig_Ack_In_24;
  output [0:7]Dbg_Trig_Out_24;
  input [0:7]Dbg_Trig_Ack_Out_24;
  output Dbg_TrClk_24;
  input [0:35]Dbg_TrData_24;
  output Dbg_TrReady_24;
  input Dbg_TrValid_24;
  output [14:2]Dbg_AWADDR_24;
  output Dbg_AWVALID_24;
  input Dbg_AWREADY_24;
  output [31:0]Dbg_WDATA_24;
  output Dbg_WVALID_24;
  input Dbg_WREADY_24;
  input [1:0]Dbg_BRESP_24;
  input Dbg_BVALID_24;
  output Dbg_BREADY_24;
  output [14:2]Dbg_ARADDR_24;
  output Dbg_ARVALID_24;
  input Dbg_ARREADY_24;
  input [31:0]Dbg_RDATA_24;
  input [1:0]Dbg_RRESP_24;
  input Dbg_RVALID_24;
  output Dbg_RREADY_24;
  output Dbg_Disable_25;
  output Dbg_Clk_25;
  output Dbg_TDI_25;
  input Dbg_TDO_25;
  output [0:7]Dbg_Reg_En_25;
  output Dbg_Capture_25;
  output Dbg_Shift_25;
  output Dbg_Update_25;
  output Dbg_Rst_25;
  input [0:7]Dbg_Trig_In_25;
  output [0:7]Dbg_Trig_Ack_In_25;
  output [0:7]Dbg_Trig_Out_25;
  input [0:7]Dbg_Trig_Ack_Out_25;
  output Dbg_TrClk_25;
  input [0:35]Dbg_TrData_25;
  output Dbg_TrReady_25;
  input Dbg_TrValid_25;
  output [14:2]Dbg_AWADDR_25;
  output Dbg_AWVALID_25;
  input Dbg_AWREADY_25;
  output [31:0]Dbg_WDATA_25;
  output Dbg_WVALID_25;
  input Dbg_WREADY_25;
  input [1:0]Dbg_BRESP_25;
  input Dbg_BVALID_25;
  output Dbg_BREADY_25;
  output [14:2]Dbg_ARADDR_25;
  output Dbg_ARVALID_25;
  input Dbg_ARREADY_25;
  input [31:0]Dbg_RDATA_25;
  input [1:0]Dbg_RRESP_25;
  input Dbg_RVALID_25;
  output Dbg_RREADY_25;
  output Dbg_Disable_26;
  output Dbg_Clk_26;
  output Dbg_TDI_26;
  input Dbg_TDO_26;
  output [0:7]Dbg_Reg_En_26;
  output Dbg_Capture_26;
  output Dbg_Shift_26;
  output Dbg_Update_26;
  output Dbg_Rst_26;
  input [0:7]Dbg_Trig_In_26;
  output [0:7]Dbg_Trig_Ack_In_26;
  output [0:7]Dbg_Trig_Out_26;
  input [0:7]Dbg_Trig_Ack_Out_26;
  output Dbg_TrClk_26;
  input [0:35]Dbg_TrData_26;
  output Dbg_TrReady_26;
  input Dbg_TrValid_26;
  output [14:2]Dbg_AWADDR_26;
  output Dbg_AWVALID_26;
  input Dbg_AWREADY_26;
  output [31:0]Dbg_WDATA_26;
  output Dbg_WVALID_26;
  input Dbg_WREADY_26;
  input [1:0]Dbg_BRESP_26;
  input Dbg_BVALID_26;
  output Dbg_BREADY_26;
  output [14:2]Dbg_ARADDR_26;
  output Dbg_ARVALID_26;
  input Dbg_ARREADY_26;
  input [31:0]Dbg_RDATA_26;
  input [1:0]Dbg_RRESP_26;
  input Dbg_RVALID_26;
  output Dbg_RREADY_26;
  output Dbg_Disable_27;
  output Dbg_Clk_27;
  output Dbg_TDI_27;
  input Dbg_TDO_27;
  output [0:7]Dbg_Reg_En_27;
  output Dbg_Capture_27;
  output Dbg_Shift_27;
  output Dbg_Update_27;
  output Dbg_Rst_27;
  input [0:7]Dbg_Trig_In_27;
  output [0:7]Dbg_Trig_Ack_In_27;
  output [0:7]Dbg_Trig_Out_27;
  input [0:7]Dbg_Trig_Ack_Out_27;
  output Dbg_TrClk_27;
  input [0:35]Dbg_TrData_27;
  output Dbg_TrReady_27;
  input Dbg_TrValid_27;
  output [14:2]Dbg_AWADDR_27;
  output Dbg_AWVALID_27;
  input Dbg_AWREADY_27;
  output [31:0]Dbg_WDATA_27;
  output Dbg_WVALID_27;
  input Dbg_WREADY_27;
  input [1:0]Dbg_BRESP_27;
  input Dbg_BVALID_27;
  output Dbg_BREADY_27;
  output [14:2]Dbg_ARADDR_27;
  output Dbg_ARVALID_27;
  input Dbg_ARREADY_27;
  input [31:0]Dbg_RDATA_27;
  input [1:0]Dbg_RRESP_27;
  input Dbg_RVALID_27;
  output Dbg_RREADY_27;
  output Dbg_Disable_28;
  output Dbg_Clk_28;
  output Dbg_TDI_28;
  input Dbg_TDO_28;
  output [0:7]Dbg_Reg_En_28;
  output Dbg_Capture_28;
  output Dbg_Shift_28;
  output Dbg_Update_28;
  output Dbg_Rst_28;
  input [0:7]Dbg_Trig_In_28;
  output [0:7]Dbg_Trig_Ack_In_28;
  output [0:7]Dbg_Trig_Out_28;
  input [0:7]Dbg_Trig_Ack_Out_28;
  output Dbg_TrClk_28;
  input [0:35]Dbg_TrData_28;
  output Dbg_TrReady_28;
  input Dbg_TrValid_28;
  output [14:2]Dbg_AWADDR_28;
  output Dbg_AWVALID_28;
  input Dbg_AWREADY_28;
  output [31:0]Dbg_WDATA_28;
  output Dbg_WVALID_28;
  input Dbg_WREADY_28;
  input [1:0]Dbg_BRESP_28;
  input Dbg_BVALID_28;
  output Dbg_BREADY_28;
  output [14:2]Dbg_ARADDR_28;
  output Dbg_ARVALID_28;
  input Dbg_ARREADY_28;
  input [31:0]Dbg_RDATA_28;
  input [1:0]Dbg_RRESP_28;
  input Dbg_RVALID_28;
  output Dbg_RREADY_28;
  output Dbg_Disable_29;
  output Dbg_Clk_29;
  output Dbg_TDI_29;
  input Dbg_TDO_29;
  output [0:7]Dbg_Reg_En_29;
  output Dbg_Capture_29;
  output Dbg_Shift_29;
  output Dbg_Update_29;
  output Dbg_Rst_29;
  input [0:7]Dbg_Trig_In_29;
  output [0:7]Dbg_Trig_Ack_In_29;
  output [0:7]Dbg_Trig_Out_29;
  input [0:7]Dbg_Trig_Ack_Out_29;
  output Dbg_TrClk_29;
  input [0:35]Dbg_TrData_29;
  output Dbg_TrReady_29;
  input Dbg_TrValid_29;
  output [14:2]Dbg_AWADDR_29;
  output Dbg_AWVALID_29;
  input Dbg_AWREADY_29;
  output [31:0]Dbg_WDATA_29;
  output Dbg_WVALID_29;
  input Dbg_WREADY_29;
  input [1:0]Dbg_BRESP_29;
  input Dbg_BVALID_29;
  output Dbg_BREADY_29;
  output [14:2]Dbg_ARADDR_29;
  output Dbg_ARVALID_29;
  input Dbg_ARREADY_29;
  input [31:0]Dbg_RDATA_29;
  input [1:0]Dbg_RRESP_29;
  input Dbg_RVALID_29;
  output Dbg_RREADY_29;
  output Dbg_Disable_30;
  output Dbg_Clk_30;
  output Dbg_TDI_30;
  input Dbg_TDO_30;
  output [0:7]Dbg_Reg_En_30;
  output Dbg_Capture_30;
  output Dbg_Shift_30;
  output Dbg_Update_30;
  output Dbg_Rst_30;
  input [0:7]Dbg_Trig_In_30;
  output [0:7]Dbg_Trig_Ack_In_30;
  output [0:7]Dbg_Trig_Out_30;
  input [0:7]Dbg_Trig_Ack_Out_30;
  output Dbg_TrClk_30;
  input [0:35]Dbg_TrData_30;
  output Dbg_TrReady_30;
  input Dbg_TrValid_30;
  output [14:2]Dbg_AWADDR_30;
  output Dbg_AWVALID_30;
  input Dbg_AWREADY_30;
  output [31:0]Dbg_WDATA_30;
  output Dbg_WVALID_30;
  input Dbg_WREADY_30;
  input [1:0]Dbg_BRESP_30;
  input Dbg_BVALID_30;
  output Dbg_BREADY_30;
  output [14:2]Dbg_ARADDR_30;
  output Dbg_ARVALID_30;
  input Dbg_ARREADY_30;
  input [31:0]Dbg_RDATA_30;
  input [1:0]Dbg_RRESP_30;
  input Dbg_RVALID_30;
  output Dbg_RREADY_30;
  output Dbg_Disable_31;
  output Dbg_Clk_31;
  output Dbg_TDI_31;
  input Dbg_TDO_31;
  output [0:7]Dbg_Reg_En_31;
  output Dbg_Capture_31;
  output Dbg_Shift_31;
  output Dbg_Update_31;
  output Dbg_Rst_31;
  input [0:7]Dbg_Trig_In_31;
  output [0:7]Dbg_Trig_Ack_In_31;
  output [0:7]Dbg_Trig_Out_31;
  input [0:7]Dbg_Trig_Ack_Out_31;
  output Dbg_TrClk_31;
  input [0:35]Dbg_TrData_31;
  output Dbg_TrReady_31;
  input Dbg_TrValid_31;
  output [14:2]Dbg_AWADDR_31;
  output Dbg_AWVALID_31;
  input Dbg_AWREADY_31;
  output [31:0]Dbg_WDATA_31;
  output Dbg_WVALID_31;
  input Dbg_WREADY_31;
  input [1:0]Dbg_BRESP_31;
  input Dbg_BVALID_31;
  output Dbg_BREADY_31;
  output [14:2]Dbg_ARADDR_31;
  output Dbg_ARVALID_31;
  input Dbg_ARREADY_31;
  input [31:0]Dbg_RDATA_31;
  input [1:0]Dbg_RRESP_31;
  input Dbg_RVALID_31;
  output Dbg_RREADY_31;
  input bscan_ext_tdi;
  input bscan_ext_reset;
  input bscan_ext_shift;
  input bscan_ext_update;
  input bscan_ext_capture;
  input bscan_ext_sel;
  input bscan_ext_drck;
  output bscan_ext_tdo;
  output Ext_JTAG_DRCK;
  output Ext_JTAG_RESET;
  output Ext_JTAG_SEL;
  output Ext_JTAG_CAPTURE;
  output Ext_JTAG_SHIFT;
  output Ext_JTAG_UPDATE;
  output Ext_JTAG_TDI;
  input Ext_JTAG_TDO;

  wire \^Dbg_Clk_31 ;
  wire [0:7]Dbg_Reg_En_0;
  wire Dbg_Rst_0;
  wire Dbg_Shift_0;
  wire Dbg_TDO_0;
  wire Debug_SYS_Rst;
  wire \^Ext_JTAG_CAPTURE ;
  wire \^Ext_JTAG_SHIFT ;
  wire \^Ext_JTAG_TDI ;
  wire \^Ext_JTAG_UPDATE ;
  wire Ext_JTAG_UPDATE__0;
  wire [5:5]\JTAG_CONTROL_I/Use_Serial_Unified_Completion.count_reg__1 ;
  wire \JTAG_CONTROL_I/p_20_out__0 ;
  wire \JTAG_CONTROL_I/p_43_out__0 ;
  wire \JTAG_CONTROL_I/sel ;
  wire MDM_Core_I1_n_0;
  wire MDM_Core_I1_n_19;
  wire \Use_E2.BSCAN_I_n_13 ;
  wire \Use_E2.BSCAN_I_n_8 ;
  wire drck_i;
  wire [0:0]p_0_in;
  wire [0:0]p_0_in__0;
  wire [15:15]p_1_in;
  wire sel;
  wire sel_n_reset;
  wire shift_n_reset;
  wire tdo;
  wire NLW_MDM_Core_I1_Dbg_Disable_0_UNCONNECTED;
  wire NLW_MDM_Core_I1_Ext_JTAG_SEL_UNCONNECTED;
  wire NLW_MDM_Core_I1_Ext_JTAG_TDO_UNCONNECTED;
  wire NLW_MDM_Core_I1_Ext_NM_BRK_UNCONNECTED;
  wire NLW_MDM_Core_I1_Scan_Reset_UNCONNECTED;
  wire NLW_MDM_Core_I1_Scan_Reset_Sel_UNCONNECTED;
  wire \NLW_Use_E2.BSCAN_I_Ext_JTAG_RESET_UNCONNECTED ;
  wire \NLW_Use_E2.BSCAN_I_Scan_Reset_UNCONNECTED ;
  wire \NLW_Use_E2.BSCAN_I_Scan_Reset_Sel_UNCONNECTED ;

  assign Dbg_Capture_0 = \^Ext_JTAG_CAPTURE ;
  assign Dbg_Clk_0 = \^Dbg_Clk_31 ;
  assign Dbg_TDI_0 = \^Ext_JTAG_TDI ;
  assign Dbg_Update_0 = \^Ext_JTAG_UPDATE ;
  BUFG Ext_JTAG_UPDATE_BUFG_inst
       (.I(Ext_JTAG_UPDATE__0),
        .O(\^Ext_JTAG_UPDATE ));
  MDM_Core MDM_Core_I1
       (.AR(sel_n_reset),
        .CLK(\^Ext_JTAG_UPDATE ),
        .D(p_1_in),
        .Dbg_Disable_0(NLW_MDM_Core_I1_Dbg_Disable_0_UNCONNECTED),
        .Dbg_Reg_En_0(Dbg_Reg_En_0),
        .Dbg_Rst_0(Dbg_Rst_0),
        .Dbg_Shift_0(Dbg_Shift_0),
        .Dbg_TDO_0(Dbg_TDO_0),
        .Debug_SYS_Rst(Debug_SYS_Rst),
        .E(\Use_E2.BSCAN_I_n_8 ),
        .Ext_JTAG_SEL(NLW_MDM_Core_I1_Ext_JTAG_SEL_UNCONNECTED),
        .Ext_JTAG_TDI(\^Ext_JTAG_TDI ),
        .Ext_JTAG_TDO(NLW_MDM_Core_I1_Ext_JTAG_TDO_UNCONNECTED),
        .Ext_JTAG_UPDATE(Ext_JTAG_UPDATE__0),
        .Ext_NM_BRK(NLW_MDM_Core_I1_Ext_NM_BRK_UNCONNECTED),
        .Q(MDM_Core_I1_n_0),
        .Scan_Reset(NLW_MDM_Core_I1_Scan_Reset_UNCONNECTED),
        .Scan_Reset_Sel(NLW_MDM_Core_I1_Scan_Reset_Sel_UNCONNECTED),
        .\Serial_Dbg_Intf.shift_count_reg[4] (\Use_E2.BSCAN_I_n_13 ),
        .\Use_BSCAN.PORT_Selector_reg[0]_0 (\^Dbg_Clk_31 ),
        .\Use_BSCAN.PORT_Selector_reg[0]_1 (\^Ext_JTAG_CAPTURE ),
        .\Use_BSCAN.PORT_Selector_reg[0]_2 (\^Ext_JTAG_SHIFT ),
        .\Use_BSCAN.command_reg[5] (\JTAG_CONTROL_I/sel ),
        .\Use_Serial_Unified_Completion.completion_status_reg[15] (MDM_Core_I1_n_19),
        .\Use_Serial_Unified_Completion.count_reg[4] (\JTAG_CONTROL_I/Use_Serial_Unified_Completion.count_reg__1 ),
        .\Use_Serial_Unified_Completion.count_reg[5] (p_0_in),
        .p_20_out__0(\JTAG_CONTROL_I/p_20_out__0 ),
        .p_43_out__0(\JTAG_CONTROL_I/p_43_out__0 ),
        .sel(sel),
        .\shift_Count_reg[0] (p_0_in__0),
        .shift_n_reset(shift_n_reset),
        .tdo(tdo));
  MB_BUFG \No_Dbg_Reg_Access.BUFG_DRCK 
       (.Dbg_Clk_31(\^Dbg_Clk_31 ),
        .drck_i(drck_i));
  MB_BSCANE2 \Use_E2.BSCAN_I 
       (.AR(sel_n_reset),
        .D(p_1_in),
        .Dbg_TDO_0(Dbg_TDO_0),
        .E(\Use_E2.BSCAN_I_n_8 ),
        .Ext_JTAG_RESET(\NLW_Use_E2.BSCAN_I_Ext_JTAG_RESET_UNCONNECTED ),
        .Ext_JTAG_TDI(\^Ext_JTAG_TDI ),
        .Ext_JTAG_UPDATE(Ext_JTAG_UPDATE__0),
        .Q(MDM_Core_I1_n_0),
        .Scan_Reset(\NLW_Use_E2.BSCAN_I_Scan_Reset_UNCONNECTED ),
        .Scan_Reset_Sel(\NLW_Use_E2.BSCAN_I_Scan_Reset_Sel_UNCONNECTED ),
        .\Use_Serial_Unified_Completion.count_reg[5] (\^Ext_JTAG_SHIFT ),
        .\Use_Serial_Unified_Completion.count_reg[5]_0 (\JTAG_CONTROL_I/sel ),
        .\Use_Serial_Unified_Completion.count_reg[5]_1 (p_0_in),
        .\Use_Serial_Unified_Completion.count_reg[5]_2 (\JTAG_CONTROL_I/Use_Serial_Unified_Completion.count_reg__1 ),
        .\Use_Serial_Unified_Completion.mb_instr_overrun_reg (\Use_E2.BSCAN_I_n_13 ),
        .\Use_Serial_Unified_Completion.sample_1_reg[15] (MDM_Core_I1_n_19),
        .drck_i(drck_i),
        .p_20_out__0(\JTAG_CONTROL_I/p_20_out__0 ),
        .p_43_out__0(\JTAG_CONTROL_I/p_43_out__0 ),
        .sel(sel),
        .sel_n_reg(\^Ext_JTAG_CAPTURE ),
        .\shift_Count_reg[0] (p_0_in__0),
        .shift_n_reset(shift_n_reset),
        .tdo(tdo));
endmodule

module MDM_Core
   (Q,
    Dbg_Disable_0,
    Ext_NM_BRK,
    Debug_SYS_Rst,
    Dbg_Rst_0,
    p_20_out__0,
    p_43_out__0,
    Dbg_Shift_0,
    Dbg_Reg_En_0,
    tdo,
    Ext_JTAG_SEL,
    \Use_Serial_Unified_Completion.count_reg[4] ,
    \Use_Serial_Unified_Completion.completion_status_reg[15] ,
    CLK,
    \Use_BSCAN.PORT_Selector_reg[0]_0 ,
    \Use_BSCAN.PORT_Selector_reg[0]_1 ,
    shift_n_reset,
    D,
    \Use_BSCAN.PORT_Selector_reg[0]_2 ,
    sel,
    Dbg_TDO_0,
    Ext_JTAG_UPDATE,
    Scan_Reset_Sel,
    Scan_Reset,
    Ext_JTAG_TDO,
    \Use_Serial_Unified_Completion.count_reg[5] ,
    \shift_Count_reg[0] ,
    \Serial_Dbg_Intf.shift_count_reg[4] ,
    AR,
    Ext_JTAG_TDI,
    E,
    \Use_BSCAN.command_reg[5] );
  output [0:0]Q;
  output Dbg_Disable_0;
  output Ext_NM_BRK;
  output Debug_SYS_Rst;
  output Dbg_Rst_0;
  output p_20_out__0;
  output p_43_out__0;
  output Dbg_Shift_0;
  output [0:7]Dbg_Reg_En_0;
  output tdo;
  output Ext_JTAG_SEL;
  output [0:0]\Use_Serial_Unified_Completion.count_reg[4] ;
  output [0:0]\Use_Serial_Unified_Completion.completion_status_reg[15] ;
  input CLK;
  input \Use_BSCAN.PORT_Selector_reg[0]_0 ;
  input \Use_BSCAN.PORT_Selector_reg[0]_1 ;
  input shift_n_reset;
  input [0:0]D;
  input \Use_BSCAN.PORT_Selector_reg[0]_2 ;
  input sel;
  input Dbg_TDO_0;
  input Ext_JTAG_UPDATE;
  input Scan_Reset_Sel;
  input Scan_Reset;
  input Ext_JTAG_TDO;
  input [0:0]\Use_Serial_Unified_Completion.count_reg[5] ;
  input [0:0]\shift_Count_reg[0] ;
  input \Serial_Dbg_Intf.shift_count_reg[4] ;
  input [0:0]AR;
  input Ext_JTAG_TDI;
  input [0:0]E;
  input [0:0]\Use_BSCAN.command_reg[5] ;

  wire [0:0]AR;
  wire CLK;
  wire [0:0]Config_Reg;
  wire [0:0]D;
  wire [0:7]Dbg_Reg_En_0;
  wire Dbg_Rst_0;
  wire Dbg_Shift_0;
  wire Dbg_TDO_0;
  wire Debug_SYS_Rst;
  wire [0:0]E;
  wire Ext_JTAG_TDI;
  wire Ext_JTAG_UPDATE;
  wire MDM_SEL;
  wire [3:0]PORT_Selector;
  wire [3:0]PORT_Selector_1;
  wire [0:0]Q;
  wire \Serial_Dbg_Intf.shift_count_reg[4] ;
  wire [3:0]TDI_Shifter;
  wire \Use_BSCAN.Config_Reg_reg[11]_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_12_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg[12]_srl13_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_11_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg[27]_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_1_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg[28]_srl2_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_0_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg[4]_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_3_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg[5]_srl4_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_2_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_c_0_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_c_10_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_c_11_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_c_12_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_c_1_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_c_2_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_c_3_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_c_4_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_c_5_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_c_6_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_c_7_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_c_8_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_c_9_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_c_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_gate__0_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_gate__1_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_gate_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_n_0_[10] ;
  wire \Use_BSCAN.Config_Reg_reg_n_0_[1] ;
  wire \Use_BSCAN.Config_Reg_reg_n_0_[25] ;
  wire \Use_BSCAN.Config_Reg_reg_n_0_[26] ;
  wire \Use_BSCAN.Config_Reg_reg_n_0_[2] ;
  wire \Use_BSCAN.Config_Reg_reg_n_0_[30] ;
  wire \Use_BSCAN.Config_Reg_reg_n_0_[3] ;
  wire \Use_BSCAN.Config_Reg_reg_n_0_[9] ;
  wire \Use_BSCAN.PORT_Selector_reg[0]_0 ;
  wire \Use_BSCAN.PORT_Selector_reg[0]_1 ;
  wire \Use_BSCAN.PORT_Selector_reg[0]_2 ;
  wire [0:0]\Use_BSCAN.command_reg[5] ;
  wire \Use_E2.BSCANE2_I_i_2_n_0 ;
  wire [0:0]\Use_Serial_Unified_Completion.completion_status_reg[15] ;
  wire [0:0]\Use_Serial_Unified_Completion.count_reg[4] ;
  wire [0:0]\Use_Serial_Unified_Completion.count_reg[5] ;
  wire p_0_out;
  wire p_20_out__0;
  wire p_43_out__0;
  wire sel;
  wire [0:0]\shift_Count_reg[0] ;
  wire shift_n_reset;
  wire tdo;
  wire NLW_JTAG_CONTROL_I_Ext_NM_BRK_UNCONNECTED;
  wire NLW_JTAG_CONTROL_I_Scan_Reset_UNCONNECTED;
  wire NLW_JTAG_CONTROL_I_Scan_Reset_Sel_UNCONNECTED;
  wire [0:0]NLW_JTAG_CONTROL_I_AR_UNCONNECTED;

  JTAG_CONTROL JTAG_CONTROL_I
       (.AR(NLW_JTAG_CONTROL_I_AR_UNCONNECTED[0]),
        .CLK(CLK),
        .D(D),
        .Dbg_Reg_En_0(Dbg_Reg_En_0),
        .Dbg_Rst_0(Dbg_Rst_0),
        .Dbg_Shift_0(Dbg_Shift_0),
        .Dbg_TDO_0(Dbg_TDO_0),
        .Debug_SYS_Rst(Debug_SYS_Rst),
        .E(E),
        .Ext_JTAG_TDI(Ext_JTAG_TDI),
        .Ext_JTAG_UPDATE(Ext_JTAG_UPDATE),
        .Ext_NM_BRK(NLW_JTAG_CONTROL_I_Ext_NM_BRK_UNCONNECTED),
        .Q(Q),
        .Scan_Reset(NLW_JTAG_CONTROL_I_Scan_Reset_UNCONNECTED),
        .Scan_Reset_Sel(NLW_JTAG_CONTROL_I_Scan_Reset_Sel_UNCONNECTED),
        .\Serial_Dbg_Intf.shift_count_reg[4] (\Serial_Dbg_Intf.shift_count_reg[4] ),
        .\Use_BSCAN.PORT_Selector_reg[0] (\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .\Use_BSCAN.PORT_Selector_reg[0]_0 (\Use_BSCAN.PORT_Selector_reg[0]_1 ),
        .\Use_BSCAN.PORT_Selector_reg[0]_1 (\Use_BSCAN.PORT_Selector_reg[0]_2 ),
        .\Use_BSCAN.PORT_Selector_reg[2] (\Use_E2.BSCANE2_I_i_2_n_0 ),
        .\Use_BSCAN.PORT_Selector_reg[3] (PORT_Selector),
        .\Use_BSCAN.command_reg[5]_0 (\Use_BSCAN.command_reg[5] ),
        .\Use_Serial_Unified_Completion.completion_block_reg_0 (p_43_out__0),
        .\Use_Serial_Unified_Completion.completion_status_reg[15]_0 (\Use_Serial_Unified_Completion.completion_status_reg[15] ),
        .\Use_Serial_Unified_Completion.count_reg[4]_0 (\Use_Serial_Unified_Completion.count_reg[4] ),
        .\Use_Serial_Unified_Completion.count_reg[5]_0 (\Use_Serial_Unified_Completion.count_reg[5] ),
        .p_20_out__0(p_20_out__0),
        .sel(sel),
        .\shift_Count_reg[0]_0 (\shift_Count_reg[0] ),
        .tdo(tdo));
  (* SHREG_EXTRACT = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg[0] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .CLR(shift_n_reset),
        .D(\Use_BSCAN.Config_Reg_reg_n_0_[1] ),
        .Q(Config_Reg));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg[10] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .CLR(shift_n_reset),
        .D(\Use_BSCAN.Config_Reg_reg_gate__0_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg_n_0_[10] ));
  FDRE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg[11]_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_12 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .D(\Use_BSCAN.Config_Reg_reg[12]_srl13_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_11_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg[11]_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_12_n_0 ),
        .R(1'b0));
  (* srl_bus_name = "design_gol_i/mdm_1/U0/\MDM_Core_I1/Use_BSCAN.Config_Reg_reg " *) 
  (* srl_name = "design_gol_i/mdm_1/U0/\MDM_Core_I1/Use_BSCAN.Config_Reg_reg[12]_srl13_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_11 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \Use_BSCAN.Config_Reg_reg[12]_srl13_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_11 
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b1),
        .A3(1'b1),
        .CE(1'b1),
        .CLK(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .D(\Use_BSCAN.Config_Reg_reg_n_0_[25] ),
        .Q(\Use_BSCAN.Config_Reg_reg[12]_srl13_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_11_n_0 ));
  (* SHREG_EXTRACT = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \Use_BSCAN.Config_Reg_reg[1] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .D(\Use_BSCAN.Config_Reg_reg_n_0_[2] ),
        .PRE(shift_n_reset),
        .Q(\Use_BSCAN.Config_Reg_reg_n_0_[1] ));
  (* SHREG_EXTRACT = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \Use_BSCAN.Config_Reg_reg[25] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .D(\Use_BSCAN.Config_Reg_reg_n_0_[26] ),
        .PRE(shift_n_reset),
        .Q(\Use_BSCAN.Config_Reg_reg_n_0_[25] ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg[26] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .CLR(shift_n_reset),
        .D(\Use_BSCAN.Config_Reg_reg_gate_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg_n_0_[26] ));
  FDRE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg[27]_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_1 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .D(\Use_BSCAN.Config_Reg_reg[28]_srl2_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_0_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg[27]_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_1_n_0 ),
        .R(1'b0));
  (* srl_bus_name = "design_gol_i/mdm_1/U0/\MDM_Core_I1/Use_BSCAN.Config_Reg_reg " *) 
  (* srl_name = "design_gol_i/mdm_1/U0/\MDM_Core_I1/Use_BSCAN.Config_Reg_reg[28]_srl2_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_0 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \Use_BSCAN.Config_Reg_reg[28]_srl2_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_0 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .D(\Use_BSCAN.Config_Reg_reg_n_0_[30] ),
        .Q(\Use_BSCAN.Config_Reg_reg[28]_srl2_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_0_n_0 ));
  (* SHREG_EXTRACT = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \Use_BSCAN.Config_Reg_reg[2] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .D(\Use_BSCAN.Config_Reg_reg_n_0_[3] ),
        .PRE(shift_n_reset),
        .Q(\Use_BSCAN.Config_Reg_reg_n_0_[2] ));
  (* SHREG_EXTRACT = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \Use_BSCAN.Config_Reg_reg[30] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .D(1'b0),
        .PRE(shift_n_reset),
        .Q(\Use_BSCAN.Config_Reg_reg_n_0_[30] ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg[3] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .CLR(shift_n_reset),
        .D(\Use_BSCAN.Config_Reg_reg_gate__1_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg_n_0_[3] ));
  FDRE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg[4]_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_3 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .D(\Use_BSCAN.Config_Reg_reg[5]_srl4_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_2_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg[4]_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_3_n_0 ),
        .R(1'b0));
  (* srl_bus_name = "design_gol_i/mdm_1/U0/\MDM_Core_I1/Use_BSCAN.Config_Reg_reg " *) 
  (* srl_name = "design_gol_i/mdm_1/U0/\MDM_Core_I1/Use_BSCAN.Config_Reg_reg[5]_srl4_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_2 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \Use_BSCAN.Config_Reg_reg[5]_srl4_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_2 
       (.A0(1'b1),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .D(\Use_BSCAN.Config_Reg_reg_n_0_[9] ),
        .Q(\Use_BSCAN.Config_Reg_reg[5]_srl4_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_2_n_0 ));
  (* SHREG_EXTRACT = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \Use_BSCAN.Config_Reg_reg[9] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .D(\Use_BSCAN.Config_Reg_reg_n_0_[10] ),
        .PRE(shift_n_reset),
        .Q(\Use_BSCAN.Config_Reg_reg_n_0_[9] ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg_c 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .CLR(shift_n_reset),
        .D(1'b1),
        .Q(\Use_BSCAN.Config_Reg_reg_c_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg_c_0 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .CLR(shift_n_reset),
        .D(\Use_BSCAN.Config_Reg_reg_c_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg_c_0_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg_c_1 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .CLR(shift_n_reset),
        .D(\Use_BSCAN.Config_Reg_reg_c_0_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg_c_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg_c_10 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .CLR(shift_n_reset),
        .D(\Use_BSCAN.Config_Reg_reg_c_9_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg_c_10_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg_c_11 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .CLR(shift_n_reset),
        .D(\Use_BSCAN.Config_Reg_reg_c_10_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg_c_11_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg_c_12 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .CLR(shift_n_reset),
        .D(\Use_BSCAN.Config_Reg_reg_c_11_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg_c_12_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg_c_2 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .CLR(shift_n_reset),
        .D(\Use_BSCAN.Config_Reg_reg_c_1_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg_c_2_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg_c_3 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .CLR(shift_n_reset),
        .D(\Use_BSCAN.Config_Reg_reg_c_2_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg_c_3_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg_c_4 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .CLR(shift_n_reset),
        .D(\Use_BSCAN.Config_Reg_reg_c_3_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg_c_4_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg_c_5 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .CLR(shift_n_reset),
        .D(\Use_BSCAN.Config_Reg_reg_c_4_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg_c_5_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg_c_6 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .CLR(shift_n_reset),
        .D(\Use_BSCAN.Config_Reg_reg_c_5_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg_c_6_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg_c_7 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .CLR(shift_n_reset),
        .D(\Use_BSCAN.Config_Reg_reg_c_6_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg_c_7_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg_c_8 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .CLR(shift_n_reset),
        .D(\Use_BSCAN.Config_Reg_reg_c_7_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg_c_8_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg_c_9 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(1'b1),
        .CLR(shift_n_reset),
        .D(\Use_BSCAN.Config_Reg_reg_c_8_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg_c_9_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \Use_BSCAN.Config_Reg_reg_gate 
       (.I0(\Use_BSCAN.Config_Reg_reg[27]_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_1_n_0 ),
        .I1(\Use_BSCAN.Config_Reg_reg_c_1_n_0 ),
        .O(\Use_BSCAN.Config_Reg_reg_gate_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \Use_BSCAN.Config_Reg_reg_gate__0 
       (.I0(\Use_BSCAN.Config_Reg_reg[11]_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_12_n_0 ),
        .I1(\Use_BSCAN.Config_Reg_reg_c_12_n_0 ),
        .O(\Use_BSCAN.Config_Reg_reg_gate__0_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \Use_BSCAN.Config_Reg_reg_gate__1 
       (.I0(\Use_BSCAN.Config_Reg_reg[4]_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_3_n_0 ),
        .I1(\Use_BSCAN.Config_Reg_reg_c_3_n_0 ),
        .O(\Use_BSCAN.Config_Reg_reg_gate__1_n_0 ));
  LUT5 #(
    .INIT(32'h00000002)) 
    \Use_BSCAN.PORT_Selector_1[3]_i_1 
       (.I0(sel),
        .I1(PORT_Selector[0]),
        .I2(PORT_Selector[1]),
        .I3(PORT_Selector[3]),
        .I4(PORT_Selector[2]),
        .O(MDM_SEL));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.PORT_Selector_1_reg[0] 
       (.C(CLK),
        .CE(MDM_SEL),
        .CLR(AR),
        .D(TDI_Shifter[0]),
        .Q(PORT_Selector_1[0]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.PORT_Selector_1_reg[1] 
       (.C(CLK),
        .CE(MDM_SEL),
        .CLR(AR),
        .D(TDI_Shifter[1]),
        .Q(PORT_Selector_1[1]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.PORT_Selector_1_reg[2] 
       (.C(CLK),
        .CE(MDM_SEL),
        .CLR(AR),
        .D(TDI_Shifter[2]),
        .Q(PORT_Selector_1[2]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.PORT_Selector_1_reg[3] 
       (.C(CLK),
        .CE(MDM_SEL),
        .CLR(AR),
        .D(TDI_Shifter[3]),
        .Q(PORT_Selector_1[3]));
  FDCE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \Use_BSCAN.PORT_Selector_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(AR),
        .D(PORT_Selector_1[0]),
        .Q(PORT_Selector[0]));
  FDCE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \Use_BSCAN.PORT_Selector_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(AR),
        .D(PORT_Selector_1[1]),
        .Q(PORT_Selector[1]));
  FDCE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \Use_BSCAN.PORT_Selector_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(AR),
        .D(PORT_Selector_1[2]),
        .Q(PORT_Selector[2]));
  FDCE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \Use_BSCAN.PORT_Selector_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(AR),
        .D(PORT_Selector_1[3]),
        .Q(PORT_Selector[3]));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    \Use_BSCAN.TDI_Shifter[3]_i_1 
       (.I0(PORT_Selector[2]),
        .I1(PORT_Selector[3]),
        .I2(PORT_Selector[1]),
        .I3(PORT_Selector[0]),
        .I4(sel),
        .I5(\Use_BSCAN.PORT_Selector_reg[0]_2 ),
        .O(p_0_out));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.TDI_Shifter_reg[0] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(p_0_out),
        .CLR(AR),
        .D(TDI_Shifter[1]),
        .Q(TDI_Shifter[0]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.TDI_Shifter_reg[1] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(p_0_out),
        .CLR(AR),
        .D(TDI_Shifter[2]),
        .Q(TDI_Shifter[1]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.TDI_Shifter_reg[2] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(p_0_out),
        .CLR(AR),
        .D(TDI_Shifter[3]),
        .Q(TDI_Shifter[2]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.TDI_Shifter_reg[3] 
       (.C(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .CE(p_0_out),
        .CLR(AR),
        .D(Ext_JTAG_TDI),
        .Q(TDI_Shifter[3]));
  LUT5 #(
    .INIT(32'hEEEEEFEE)) 
    \Use_E2.BSCANE2_I_i_2 
       (.I0(PORT_Selector[2]),
        .I1(PORT_Selector[3]),
        .I2(PORT_Selector[0]),
        .I3(Config_Reg),
        .I4(PORT_Selector[1]),
        .O(\Use_E2.BSCANE2_I_i_2_n_0 ));
endmodule

module address_decoder
   (tx_Buffer_Empty_Pre_reg,
    \s_axi_rresp_i_reg[1] ,
    enable_interrupts_reg,
    ip2bus_error,
    fifo_wr,
    \INFERRED_GEN.cnt_i_reg[2] ,
    D,
    s_axi_awready,
    \s_axi_rdata_i_reg[7] ,
    \INFERRED_GEN.cnt_i_reg[2]_0 ,
    s_axi_arready,
    FIFO_Full_reg,
    reset_TX_FIFO,
    reset_RX_FIFO,
    bus2ip_rdce,
    enable_interrupts_reg_0,
    tx_Buffer_Empty_Pre_reg_0,
    s_axi_rvalid_i_reg,
    s_axi_bvalid_i_reg,
    \s_axi_bresp_i_reg[1] ,
    rx_Data_Present_Pre_reg,
    start2,
    s_axi_aclk,
    tx_Buffer_Full,
    Q,
    \state_reg[0] ,
    s_axi_arvalid,
    \state_reg[1] ,
    out,
    rx_Buffer_Full,
    \INFERRED_GEN.cnt_i_reg[4] ,
    enable_interrupts,
    status_reg,
    s_axi_bvalid_i_reg_0,
    \m_atarget_hot_reg[0] ,
    s_axi_wdata,
    s_axi_aresetn,
    s_axi_rready,
    s_axi_rvalid_i_reg_0,
    s_axi_bready,
    s_axi_bvalid_i_reg_1,
    s_axi_bresp,
    bus2ip_rnw_i,
    \bus2ip_addr_i_reg[3] ,
    \bus2ip_addr_i_reg[2] );
  output tx_Buffer_Empty_Pre_reg;
  output \s_axi_rresp_i_reg[1] ;
  output enable_interrupts_reg;
  output ip2bus_error;
  output fifo_wr;
  output \INFERRED_GEN.cnt_i_reg[2] ;
  output [1:0]D;
  output s_axi_awready;
  output [7:0]\s_axi_rdata_i_reg[7] ;
  output \INFERRED_GEN.cnt_i_reg[2]_0 ;
  output s_axi_arready;
  output FIFO_Full_reg;
  output reset_TX_FIFO;
  output reset_RX_FIFO;
  output [0:0]bus2ip_rdce;
  output enable_interrupts_reg_0;
  output tx_Buffer_Empty_Pre_reg_0;
  output s_axi_rvalid_i_reg;
  output s_axi_bvalid_i_reg;
  output \s_axi_bresp_i_reg[1] ;
  output rx_Data_Present_Pre_reg;
  input start2;
  input s_axi_aclk;
  input tx_Buffer_Full;
  input [0:0]Q;
  input \state_reg[0] ;
  input s_axi_arvalid;
  input [1:0]\state_reg[1] ;
  input [7:0]out;
  input rx_Buffer_Full;
  input [0:0]\INFERRED_GEN.cnt_i_reg[4] ;
  input enable_interrupts;
  input [1:0]status_reg;
  input s_axi_bvalid_i_reg_0;
  input \m_atarget_hot_reg[0] ;
  input [2:0]s_axi_wdata;
  input s_axi_aresetn;
  input s_axi_rready;
  input s_axi_rvalid_i_reg_0;
  input s_axi_bready;
  input s_axi_bvalid_i_reg_1;
  input [0:0]s_axi_bresp;
  input bus2ip_rnw_i;
  input \bus2ip_addr_i_reg[3] ;
  input \bus2ip_addr_i_reg[2] ;

  wire Bus_RNW_reg_i_1_n_0;
  wire [1:0]D;
  wire FIFO_Full_reg;
  wire \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ;
  wire \INFERRED_GEN.cnt_i_reg[2] ;
  wire \INFERRED_GEN.cnt_i_reg[2]_0 ;
  wire [0:0]\INFERRED_GEN.cnt_i_reg[4] ;
  wire [0:0]Q;
  wire \bus2ip_addr_i_reg[2] ;
  wire \bus2ip_addr_i_reg[3] ;
  wire [0:0]bus2ip_rdce;
  wire bus2ip_rnw_i;
  wire ce_expnd_i_0;
  wire ce_expnd_i_1;
  wire ce_expnd_i_2;
  wire ce_expnd_i_3;
  wire cs_ce_clr;
  wire enable_interrupts;
  wire enable_interrupts_reg;
  wire enable_interrupts_reg_0;
  wire fifo_wr;
  wire \m_atarget_hot_reg[0] ;
  wire [7:0]out;
  wire reset_RX_FIFO;
  wire reset_TX_FIFO;
  wire rx_Buffer_Full;
  wire s_axi_aclk;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire s_axi_awready;
  wire s_axi_bready;
  wire s_axi_bvalid_i_reg;
  wire s_axi_bvalid_i_reg_0;
  wire s_axi_bvalid_i_reg_1;
  wire [7:0]\s_axi_rdata_i_reg[7] ;
  wire s_axi_rready;
  wire \s_axi_rresp_i_reg[1] ;
  wire s_axi_rvalid_i_reg;
  wire s_axi_rvalid_i_reg_0;
  wire [2:0]s_axi_wdata;
  wire start2;
  wire \state_reg[0] ;
  wire [1:0]\state_reg[1] ;
  wire [1:0]status_reg;
  wire tx_Buffer_Empty_Pre_reg;
  wire tx_Buffer_Full;

  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    Bus_RNW_reg_i_1
       (.I0(bus2ip_rnw_i),
        .I1(start2),
        .I2(enable_interrupts_reg),
        .O(Bus_RNW_reg_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Bus_RNW_reg_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Bus_RNW_reg_i_1_n_0),
        .Q(enable_interrupts_reg),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] 
       (.C(s_axi_aclk),
        .CE(start2),
        .D(ce_expnd_i_3),
        .Q(\s_axi_rresp_i_reg[1] ),
        .R(cs_ce_clr));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i[1]_i_1 
       (.I0(start2),
        .I1(\bus2ip_addr_i_reg[2] ),
        .I2(\bus2ip_addr_i_reg[3] ),
        .O(ce_expnd_i_2));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] 
       (.C(s_axi_aclk),
        .CE(start2),
        .D(ce_expnd_i_2),
        .Q(tx_Buffer_Empty_Pre_reg),
        .R(cs_ce_clr));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2] 
       (.C(s_axi_aclk),
        .CE(start2),
        .D(ce_expnd_i_1),
        .Q(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .R(cs_ce_clr));
  LUT5 #(
    .INIT(32'hFFFFFFFD)) 
    \GEN_BKEND_CE_REGISTERS[3].ce_out_i[3]_i_1 
       (.I0(s_axi_aresetn),
        .I1(\s_axi_rresp_i_reg[1] ),
        .I2(tx_Buffer_Empty_Pre_reg),
        .I3(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .I4(\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ),
        .O(cs_ce_clr));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \GEN_BKEND_CE_REGISTERS[3].ce_out_i[3]_i_2 
       (.I0(\bus2ip_addr_i_reg[3] ),
        .I1(start2),
        .I2(\bus2ip_addr_i_reg[2] ),
        .O(ce_expnd_i_0));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg[3] 
       (.C(s_axi_aclk),
        .CE(start2),
        .D(ce_expnd_i_0),
        .Q(\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ),
        .R(cs_ce_clr));
  LUT3 #(
    .INIT(8'hF7)) 
    \INFERRED_GEN.cnt_i[3]_i_2 
       (.I0(enable_interrupts_reg),
        .I1(\s_axi_rresp_i_reg[1] ),
        .I2(Q),
        .O(\INFERRED_GEN.cnt_i_reg[2]_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \INFERRED_GEN.cnt_i[4]_i_4 
       (.I0(\s_axi_rresp_i_reg[1] ),
        .I1(enable_interrupts_reg),
        .O(FIFO_Full_reg));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT3 #(
    .INIT(8'hFD)) 
    \INFERRED_GEN.cnt_i[4]_i_5 
       (.I0(tx_Buffer_Empty_Pre_reg),
        .I1(enable_interrupts_reg),
        .I2(tx_Buffer_Full),
        .O(\INFERRED_GEN.cnt_i_reg[2] ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT3 #(
    .INIT(8'h10)) 
    \INFERRED_GEN.data_reg[15][0]_srl16_i_1 
       (.I0(tx_Buffer_Full),
        .I1(enable_interrupts_reg),
        .I2(tx_Buffer_Empty_Pre_reg),
        .O(fifo_wr));
  pselect_f \MEM_DECODE_GEN[0].PER_CE_GEN[0].MULTIPLE_CES_THIS_CS_GEN.CE_I 
       (.\bus2ip_addr_i_reg[2] (\bus2ip_addr_i_reg[2] ),
        .\bus2ip_addr_i_reg[3] (\bus2ip_addr_i_reg[3] ),
        .ce_expnd_i_3(ce_expnd_i_3),
        .start2(start2));
  pselect_f__parameterized1 \MEM_DECODE_GEN[0].PER_CE_GEN[2].MULTIPLE_CES_THIS_CS_GEN.CE_I 
       (.\bus2ip_addr_i_reg[2] (\bus2ip_addr_i_reg[2] ),
        .\bus2ip_addr_i_reg[3] (\bus2ip_addr_i_reg[3] ),
        .ce_expnd_i_1(ce_expnd_i_1),
        .start2(start2));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT2 #(
    .INIT(4'h8)) 
    clr_Status_i_1
       (.I0(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .I1(enable_interrupts_reg),
        .O(bus2ip_rdce));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT4 #(
    .INIT(16'hFB08)) 
    enable_interrupts_i_1
       (.I0(s_axi_wdata[2]),
        .I1(\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ),
        .I2(enable_interrupts_reg),
        .I3(enable_interrupts),
        .O(enable_interrupts_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT3 #(
    .INIT(8'h40)) 
    reset_RX_FIFO_i_1
       (.I0(enable_interrupts_reg),
        .I1(s_axi_wdata[1]),
        .I2(\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ),
        .O(reset_RX_FIFO));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT3 #(
    .INIT(8'h40)) 
    reset_TX_FIFO_i_1
       (.I0(enable_interrupts_reg),
        .I1(s_axi_wdata[0]),
        .I2(\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ),
        .O(reset_TX_FIFO));
  LUT5 #(
    .INIT(32'hFF00FE00)) 
    s_axi_arready_INST_0
       (.I0(\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ),
        .I1(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .I2(tx_Buffer_Empty_Pre_reg),
        .I3(enable_interrupts_reg),
        .I4(\s_axi_rresp_i_reg[1] ),
        .O(s_axi_arready));
  LUT5 #(
    .INIT(32'h08FF0808)) 
    s_axi_bvalid_i_i_1
       (.I0(s_axi_awready),
        .I1(\state_reg[1] [1]),
        .I2(\state_reg[1] [0]),
        .I3(s_axi_bready),
        .I4(s_axi_bvalid_i_reg_1),
        .O(s_axi_bvalid_i_reg));
  LUT5 #(
    .INIT(32'h0F880000)) 
    \s_axi_rdata_i[0]_i_1 
       (.I0(out[0]),
        .I1(\s_axi_rresp_i_reg[1] ),
        .I2(Q),
        .I3(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .I4(enable_interrupts_reg),
        .O(\s_axi_rdata_i_reg[7] [0]));
  LUT5 #(
    .INIT(32'hF0880000)) 
    \s_axi_rdata_i[1]_i_1 
       (.I0(out[1]),
        .I1(\s_axi_rresp_i_reg[1] ),
        .I2(rx_Buffer_Full),
        .I3(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .I4(enable_interrupts_reg),
        .O(\s_axi_rdata_i_reg[7] [1]));
  LUT5 #(
    .INIT(32'hF0880000)) 
    \s_axi_rdata_i[2]_i_1 
       (.I0(out[2]),
        .I1(\s_axi_rresp_i_reg[1] ),
        .I2(\INFERRED_GEN.cnt_i_reg[4] ),
        .I3(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .I4(enable_interrupts_reg),
        .O(\s_axi_rdata_i_reg[7] [2]));
  LUT5 #(
    .INIT(32'hF0880000)) 
    \s_axi_rdata_i[3]_i_1 
       (.I0(out[3]),
        .I1(\s_axi_rresp_i_reg[1] ),
        .I2(tx_Buffer_Full),
        .I3(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .I4(enable_interrupts_reg),
        .O(\s_axi_rdata_i_reg[7] [3]));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT5 #(
    .INIT(32'hF0880000)) 
    \s_axi_rdata_i[4]_i_1 
       (.I0(out[4]),
        .I1(\s_axi_rresp_i_reg[1] ),
        .I2(enable_interrupts),
        .I3(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .I4(enable_interrupts_reg),
        .O(\s_axi_rdata_i_reg[7] [4]));
  LUT5 #(
    .INIT(32'hF0880000)) 
    \s_axi_rdata_i[5]_i_1 
       (.I0(out[5]),
        .I1(\s_axi_rresp_i_reg[1] ),
        .I2(status_reg[0]),
        .I3(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .I4(enable_interrupts_reg),
        .O(\s_axi_rdata_i_reg[7] [5]));
  LUT5 #(
    .INIT(32'hF0880000)) 
    \s_axi_rdata_i[6]_i_1 
       (.I0(out[6]),
        .I1(\s_axi_rresp_i_reg[1] ),
        .I2(status_reg[1]),
        .I3(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .I4(enable_interrupts_reg),
        .O(\s_axi_rdata_i_reg[7] [6]));
  LUT4 #(
    .INIT(16'h4000)) 
    \s_axi_rdata_i[7]_i_2 
       (.I0(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .I1(\s_axi_rresp_i_reg[1] ),
        .I2(enable_interrupts_reg),
        .I3(out[7]),
        .O(\s_axi_rdata_i_reg[7] [7]));
  LUT5 #(
    .INIT(32'h08FF0808)) 
    s_axi_rvalid_i_i_1
       (.I0(s_axi_arready),
        .I1(\state_reg[1] [0]),
        .I2(\state_reg[1] [1]),
        .I3(s_axi_rready),
        .I4(s_axi_rvalid_i_reg_0),
        .O(s_axi_rvalid_i_reg));
  LUT5 #(
    .INIT(32'h0000FFFE)) 
    s_axi_wready_INST_0
       (.I0(\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ),
        .I1(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .I2(\s_axi_rresp_i_reg[1] ),
        .I3(tx_Buffer_Empty_Pre_reg),
        .I4(enable_interrupts_reg),
        .O(s_axi_awready));
  LUT5 #(
    .INIT(32'hCCFFEEFC)) 
    \state[0]_i_1 
       (.I0(s_axi_awready),
        .I1(\state_reg[0] ),
        .I2(s_axi_arvalid),
        .I3(\state_reg[1] [1]),
        .I4(\state_reg[1] [0]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hABAAEFEEABAAABAA)) 
    \state[1]_i_1 
       (.I0(s_axi_bvalid_i_reg_0),
        .I1(\state_reg[1] [0]),
        .I2(s_axi_arvalid),
        .I3(\m_atarget_hot_reg[0] ),
        .I4(\state_reg[1] [1]),
        .I5(s_axi_arready),
        .O(D[1]));
endmodule

module axi_crossbar_v2_1_14_addr_arbiter_sasd
   (m_valid_i,
    SR,
    aa_grant_rnw,
    D,
    \m_atarget_enc_reg[1] ,
    \m_atarget_enc_reg[0] ,
    Q,
    m_ready_d0,
    s_axi_bvalid,
    m_axi_bready,
    \gen_axilite.s_axi_bvalid_i_reg ,
    \m_ready_d_reg[2] ,
    s_axi_wready,
    m_axi_wvalid,
    \m_ready_d_reg[2]_0 ,
    m_axi_awvalid,
    s_ready_i_reg,
    E,
    m_axi_arvalid,
    s_ready_i_reg_0,
    s_axi_awready,
    s_axi_arready,
    s_axi_rvalid,
    \gen_axilite.s_axi_awready_i_reg ,
    aclk,
    aresetn_d,
    m_ready_d,
    \gen_axilite.s_axi_awready_i_reg_0 ,
    \gen_axilite.s_axi_bvalid_i_reg_0 ,
    \m_atarget_hot_reg[2] ,
    s_axi_bready,
    \gen_axilite.s_axi_awready_i_reg_1 ,
    s_axi_wvalid,
    m_valid_i_reg,
    m_ready_d_0,
    \m_atarget_enc_reg[0]_0 ,
    aa_rready,
    r_valid_reg,
    s_axi_rready,
    sr_rvalid,
    s_axi_arprot,
    s_axi_arvalid,
    s_axi_awprot,
    s_axi_araddr,
    s_axi_awaddr,
    s_axi_awvalid,
    mi_bvalid,
    mi_wready);
  output m_valid_i;
  output [0:0]SR;
  output aa_grant_rnw;
  output [2:0]D;
  output [0:0]\m_atarget_enc_reg[1] ;
  output \m_atarget_enc_reg[0] ;
  output [34:0]Q;
  output [0:0]m_ready_d0;
  output [0:0]s_axi_bvalid;
  output [1:0]m_axi_bready;
  output \gen_axilite.s_axi_bvalid_i_reg ;
  output \m_ready_d_reg[2] ;
  output [0:0]s_axi_wready;
  output [1:0]m_axi_wvalid;
  output \m_ready_d_reg[2]_0 ;
  output [1:0]m_axi_awvalid;
  output s_ready_i_reg;
  output [0:0]E;
  output [1:0]m_axi_arvalid;
  output s_ready_i_reg_0;
  output [0:0]s_axi_awready;
  output [0:0]s_axi_arready;
  output [0:0]s_axi_rvalid;
  output \gen_axilite.s_axi_awready_i_reg ;
  input aclk;
  input aresetn_d;
  input [2:0]m_ready_d;
  input \gen_axilite.s_axi_awready_i_reg_0 ;
  input \gen_axilite.s_axi_bvalid_i_reg_0 ;
  input [2:0]\m_atarget_hot_reg[2] ;
  input [0:0]s_axi_bready;
  input \gen_axilite.s_axi_awready_i_reg_1 ;
  input [0:0]s_axi_wvalid;
  input m_valid_i_reg;
  input [1:0]m_ready_d_0;
  input \m_atarget_enc_reg[0]_0 ;
  input aa_rready;
  input r_valid_reg;
  input [0:0]s_axi_rready;
  input sr_rvalid;
  input [2:0]s_axi_arprot;
  input [0:0]s_axi_arvalid;
  input [2:0]s_axi_awprot;
  input [31:0]s_axi_araddr;
  input [31:0]s_axi_awaddr;
  input [0:0]s_axi_awvalid;
  input [0:0]mi_bvalid;
  input [0:0]mi_wready;

  wire [2:0]D;
  wire [0:0]E;
  wire [34:0]\^Q ;
  wire [0:0]SR;
  wire aa_grant_any;
  wire aa_grant_rnw;
  wire aa_rready;
  wire aclk;
  wire aresetn_d;
  wire \gen_axilite.s_axi_awready_i_i_2_n_0 ;
  wire \gen_axilite.s_axi_awready_i_reg ;
  wire \gen_axilite.s_axi_awready_i_reg_0 ;
  wire \gen_axilite.s_axi_awready_i_reg_1 ;
  wire \gen_axilite.s_axi_bvalid_i_reg ;
  wire \gen_axilite.s_axi_bvalid_i_reg_0 ;
  wire \gen_no_arbiter.grant_rnw_i_1_n_0 ;
  wire \gen_no_arbiter.m_grant_hot_i[0]_i_1_n_0 ;
  wire \gen_no_arbiter.m_grant_hot_i[0]_i_2_n_0 ;
  wire \gen_no_arbiter.m_grant_hot_i[0]_i_3_n_0 ;
  wire \gen_no_arbiter.m_grant_hot_i[0]_i_4_n_0 ;
  wire \gen_no_arbiter.m_grant_hot_i[0]_i_5_n_0 ;
  wire \gen_no_arbiter.m_valid_i_i_1_n_0 ;
  wire \gen_no_arbiter.m_valid_i_i_2_n_0 ;
  wire \gen_no_arbiter.s_ready_i[0]_i_1_n_0 ;
  wire \m_atarget_enc[1]_i_2_n_0 ;
  wire \m_atarget_enc[1]_i_3_n_0 ;
  wire \m_atarget_enc[1]_i_4_n_0 ;
  wire \m_atarget_enc[1]_i_5_n_0 ;
  wire \m_atarget_enc[1]_i_6_n_0 ;
  wire \m_atarget_enc[1]_i_7_n_0 ;
  wire \m_atarget_enc_reg[0] ;
  wire \m_atarget_enc_reg[0]_0 ;
  wire [0:0]\m_atarget_enc_reg[1] ;
  wire \m_atarget_hot[0]_i_2_n_0 ;
  wire \m_atarget_hot[1]_i_2_n_0 ;
  wire [2:0]\m_atarget_hot_reg[2] ;
  wire [1:0]m_axi_arvalid;
  wire [1:0]m_axi_awvalid;
  wire [1:0]m_axi_bready;
  wire [1:0]m_axi_wvalid;
  wire [2:0]m_ready_d;
  wire [0:0]m_ready_d0;
  wire [1:0]m_ready_d_0;
  wire \m_ready_d_reg[2] ;
  wire \m_ready_d_reg[2]_0 ;
  wire m_valid_i;
  wire m_valid_i_reg;
  wire [0:0]mi_bvalid;
  wire [0:0]mi_wready;
  wire p_0_in1_in;
  wire r_valid_reg;
  wire \s_arvalid_reg[0]_i_1_n_0 ;
  wire \s_arvalid_reg_reg_n_0_[0] ;
  wire s_awvalid_reg;
  wire \s_awvalid_reg[0]_i_1_n_0 ;
  wire [31:0]s_axi_araddr;
  wire [0:0]s_axi_arready;
  wire [0:0]s_axi_arvalid;
  wire [0:0]s_axi_awready;
  wire [0:0]s_axi_awvalid;
  wire [0:0]s_axi_bvalid;
  wire [0:0]s_axi_rvalid;
  wire [0:0]s_axi_wready;
  wire [0:0]s_axi_wvalid;
  wire s_ready_i;
  wire s_ready_i_reg;
  wire s_ready_i_reg_0;
  wire sr_rvalid;

  assign Q[3:2] = \^Q [3:2];
  LUT6 #(
    .INIT(64'hFFFFFDFF00000200)) 
    \gen_axilite.s_axi_awready_i_i_1 
       (.I0(\gen_axilite.s_axi_awready_i_i_2_n_0 ),
        .I1(m_ready_d[2]),
        .I2(\gen_no_arbiter.m_grant_hot_i[0]_i_3_n_0 ),
        .I3(\m_atarget_hot_reg[2] [2]),
        .I4(mi_bvalid),
        .I5(mi_wready),
        .O(\gen_axilite.s_axi_awready_i_reg ));
  LUT4 #(
    .INIT(16'h0020)) 
    \gen_axilite.s_axi_awready_i_i_2 
       (.I0(s_axi_wvalid),
        .I1(aa_grant_rnw),
        .I2(m_valid_i),
        .I3(m_ready_d[1]),
        .O(\gen_axilite.s_axi_awready_i_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h04)) 
    \gen_axilite.s_axi_bvalid_i_i_2 
       (.I0(aa_grant_rnw),
        .I1(m_valid_i),
        .I2(m_ready_d[0]),
        .O(\gen_axilite.s_axi_bvalid_i_reg ));
  LUT2 #(
    .INIT(4'h8)) 
    \gen_axilite.s_axi_rvalid_i_i_2 
       (.I0(aa_grant_rnw),
        .I1(m_valid_i),
        .O(s_ready_i_reg_0));
  LUT6 #(
    .INIT(64'hFFFFFF5300000050)) 
    \gen_no_arbiter.grant_rnw_i_1 
       (.I0(s_awvalid_reg),
        .I1(s_axi_awvalid),
        .I2(s_axi_arvalid),
        .I3(aa_grant_any),
        .I4(m_valid_i),
        .I5(aa_grant_rnw),
        .O(\gen_no_arbiter.grant_rnw_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.grant_rnw_reg 
       (.C(aclk),
        .CE(1'b1),
        .D(\gen_no_arbiter.grant_rnw_i_1_n_0 ),
        .Q(aa_grant_rnw),
        .R(SR));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_no_arbiter.m_amesg_i[32]_i_1 
       (.I0(aresetn_d),
        .O(SR));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_no_arbiter.m_amesg_i[32]_i_2 
       (.I0(aa_grant_any),
        .O(p_0_in1_in));
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[17] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[16]),
        .Q(\^Q [16]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[18] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[17]),
        .Q(\^Q [17]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[19] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[18]),
        .Q(\^Q [18]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[20] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[19]),
        .Q(\^Q [19]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[21] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[20]),
        .Q(\^Q [20]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[22] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[21]),
        .Q(\^Q [21]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[23] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[22]),
        .Q(\^Q [22]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[24] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[23]),
        .Q(\^Q [23]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[25] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[24]),
        .Q(\^Q [24]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[26] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[25]),
        .Q(\^Q [25]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[27] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[26]),
        .Q(\^Q [26]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[28] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[27]),
        .Q(\^Q [27]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[29] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[28]),
        .Q(\^Q [28]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[30] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[29]),
        .Q(\^Q [29]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[31] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[30]),
        .Q(\^Q [30]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[32] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[31]),
        .Q(\^Q [31]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[3] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[2]),
        .Q(\^Q [2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[4] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[3]),
        .Q(\^Q [3]),
        .R(SR));
  LUT6 #(
    .INIT(64'h0000000088888088)) 
    \gen_no_arbiter.m_grant_hot_i[0]_i_1 
       (.I0(\gen_no_arbiter.m_grant_hot_i[0]_i_2_n_0 ),
        .I1(aresetn_d),
        .I2(\gen_no_arbiter.m_grant_hot_i[0]_i_3_n_0 ),
        .I3(m_ready_d0),
        .I4(\gen_no_arbiter.m_grant_hot_i[0]_i_4_n_0 ),
        .I5(\gen_no_arbiter.m_grant_hot_i[0]_i_5_n_0 ),
        .O(\gen_no_arbiter.m_grant_hot_i[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF0FE)) 
    \gen_no_arbiter.m_grant_hot_i[0]_i_2 
       (.I0(s_axi_awvalid),
        .I1(s_axi_arvalid),
        .I2(aa_grant_any),
        .I3(m_valid_i),
        .O(\gen_no_arbiter.m_grant_hot_i[0]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \gen_no_arbiter.m_grant_hot_i[0]_i_3 
       (.I0(aa_grant_rnw),
        .I1(m_valid_i),
        .O(\gen_no_arbiter.m_grant_hot_i[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0D0D0D0DFFFF0DFF)) 
    \gen_no_arbiter.m_grant_hot_i[0]_i_4 
       (.I0(\gen_axilite.s_axi_awready_i_i_2_n_0 ),
        .I1(\gen_axilite.s_axi_awready_i_reg_1 ),
        .I2(m_ready_d[1]),
        .I3(\gen_axilite.s_axi_bvalid_i_reg ),
        .I4(\gen_axilite.s_axi_bvalid_i_reg_0 ),
        .I5(m_ready_d[0]),
        .O(\gen_no_arbiter.m_grant_hot_i[0]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h45000000)) 
    \gen_no_arbiter.m_grant_hot_i[0]_i_5 
       (.I0(m_valid_i_reg),
        .I1(m_ready_d_0[1]),
        .I2(\m_atarget_enc_reg[0]_0 ),
        .I3(aa_grant_rnw),
        .I4(m_valid_i),
        .O(\gen_no_arbiter.m_grant_hot_i[0]_i_5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_grant_hot_i_reg[0] 
       (.C(aclk),
        .CE(1'b1),
        .D(\gen_no_arbiter.m_grant_hot_i[0]_i_1_n_0 ),
        .Q(aa_grant_any),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h2EEE22E22EEE2EEE)) 
    \gen_no_arbiter.m_valid_i_i_1 
       (.I0(aa_grant_any),
        .I1(m_valid_i),
        .I2(aa_grant_rnw),
        .I3(\gen_no_arbiter.m_valid_i_i_2_n_0 ),
        .I4(\gen_no_arbiter.m_grant_hot_i[0]_i_4_n_0 ),
        .I5(m_ready_d0),
        .O(\gen_no_arbiter.m_valid_i_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0000FF08)) 
    \gen_no_arbiter.m_valid_i_i_2 
       (.I0(m_valid_i),
        .I1(aa_grant_rnw),
        .I2(\m_atarget_enc_reg[0]_0 ),
        .I3(m_ready_d_0[1]),
        .I4(m_valid_i_reg),
        .O(\gen_no_arbiter.m_valid_i_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_valid_i_reg 
       (.C(aclk),
        .CE(1'b1),
        .D(\gen_no_arbiter.m_valid_i_i_1_n_0 ),
        .Q(m_valid_i),
        .R(SR));
  LUT3 #(
    .INIT(8'h40)) 
    \gen_no_arbiter.s_ready_i[0]_i_1 
       (.I0(m_valid_i),
        .I1(aa_grant_any),
        .I2(aresetn_d),
        .O(\gen_no_arbiter.s_ready_i[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.s_ready_i_reg[0] 
       (.C(aclk),
        .CE(1'b1),
        .D(\gen_no_arbiter.s_ready_i[0]_i_1_n_0 ),
        .Q(s_ready_i),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_atarget_enc[0]_i_1 
       (.I0(aresetn_d),
        .I1(\m_atarget_hot[1]_i_2_n_0 ),
        .O(\m_atarget_enc_reg[0] ));
  LUT6 #(
    .INIT(64'hFFFFFFFFEEE0FFFF)) 
    \m_atarget_enc[1]_i_1 
       (.I0(\m_atarget_enc[1]_i_2_n_0 ),
        .I1(\m_atarget_enc[1]_i_3_n_0 ),
        .I2(\m_atarget_enc[1]_i_4_n_0 ),
        .I3(\m_atarget_enc[1]_i_5_n_0 ),
        .I4(\m_atarget_enc[1]_i_6_n_0 ),
        .I5(\m_atarget_enc[1]_i_7_n_0 ),
        .O(\m_atarget_enc_reg[1] ));
  LUT3 #(
    .INIT(8'hDF)) 
    \m_atarget_enc[1]_i_2 
       (.I0(\^Q [30]),
        .I1(\^Q [22]),
        .I2(\^Q [26]),
        .O(\m_atarget_enc[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFDFF)) 
    \m_atarget_enc[1]_i_3 
       (.I0(\^Q [21]),
        .I1(\^Q [24]),
        .I2(\^Q [27]),
        .I3(\^Q [23]),
        .I4(\^Q [20]),
        .I5(\^Q [25]),
        .O(\m_atarget_enc[1]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hFB)) 
    \m_atarget_enc[1]_i_4 
       (.I0(\^Q [26]),
        .I1(\^Q [22]),
        .I2(\^Q [27]),
        .O(\m_atarget_enc[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFDFF)) 
    \m_atarget_enc[1]_i_5 
       (.I0(\^Q [21]),
        .I1(\^Q [24]),
        .I2(\^Q [23]),
        .I3(\^Q [30]),
        .I4(\^Q [20]),
        .I5(\^Q [25]),
        .O(\m_atarget_enc[1]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \m_atarget_enc[1]_i_6 
       (.I0(\^Q [31]),
        .I1(\^Q [28]),
        .I2(\^Q [29]),
        .O(\m_atarget_enc[1]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \m_atarget_enc[1]_i_7 
       (.I0(\^Q [19]),
        .I1(\^Q [18]),
        .I2(\^Q [16]),
        .I3(\^Q [17]),
        .O(\m_atarget_enc[1]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_atarget_hot[0]_i_1 
       (.I0(\m_atarget_hot[0]_i_2_n_0 ),
        .I1(aa_grant_any),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \m_atarget_hot[0]_i_2 
       (.I0(\m_atarget_enc[1]_i_7_n_0 ),
        .I1(\^Q [31]),
        .I2(\^Q [28]),
        .I3(\^Q [29]),
        .I4(\m_atarget_enc[1]_i_5_n_0 ),
        .I5(\m_atarget_enc[1]_i_4_n_0 ),
        .O(\m_atarget_hot[0]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \m_atarget_hot[1]_i_1 
       (.I0(aa_grant_any),
        .I1(\m_atarget_hot[1]_i_2_n_0 ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFFFFFBFFFFFFFFFF)) 
    \m_atarget_hot[1]_i_2 
       (.I0(\m_atarget_enc[1]_i_3_n_0 ),
        .I1(\^Q [30]),
        .I2(\^Q [22]),
        .I3(\^Q [26]),
        .I4(\m_atarget_enc[1]_i_7_n_0 ),
        .I5(\m_atarget_enc[1]_i_6_n_0 ),
        .O(\m_atarget_hot[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_atarget_hot[2]_i_1 
       (.I0(\m_atarget_enc_reg[1] ),
        .I1(aa_grant_any),
        .O(D[2]));
  LUT4 #(
    .INIT(16'h2000)) 
    \m_axi_arvalid[0]_INST_0 
       (.I0(\m_atarget_hot_reg[2] [0]),
        .I1(m_ready_d_0[1]),
        .I2(aa_grant_rnw),
        .I3(m_valid_i),
        .O(m_axi_arvalid[0]));
  LUT4 #(
    .INIT(16'h2000)) 
    \m_axi_arvalid[1]_INST_0 
       (.I0(\m_atarget_hot_reg[2] [1]),
        .I1(m_ready_d_0[1]),
        .I2(aa_grant_rnw),
        .I3(m_valid_i),
        .O(m_axi_arvalid[1]));
  LUT4 #(
    .INIT(16'h0020)) 
    \m_axi_awvalid[0]_INST_0 
       (.I0(\m_atarget_hot_reg[2] [0]),
        .I1(aa_grant_rnw),
        .I2(m_valid_i),
        .I3(m_ready_d[2]),
        .O(m_axi_awvalid[0]));
  LUT4 #(
    .INIT(16'h0020)) 
    \m_axi_awvalid[1]_INST_0 
       (.I0(\m_atarget_hot_reg[2] [1]),
        .I1(aa_grant_rnw),
        .I2(m_valid_i),
        .I3(m_ready_d[2]),
        .O(m_axi_awvalid[1]));
  LUT4 #(
    .INIT(16'h0020)) 
    \m_axi_bready[0]_INST_0 
       (.I0(\m_atarget_hot_reg[2] [0]),
        .I1(m_ready_d[0]),
        .I2(m_valid_i),
        .I3(aa_grant_rnw),
        .O(m_axi_bready[0]));
  LUT4 #(
    .INIT(16'h0020)) 
    \m_axi_bready[1]_INST_0 
       (.I0(\m_atarget_hot_reg[2] [1]),
        .I1(m_ready_d[0]),
        .I2(m_valid_i),
        .I3(aa_grant_rnw),
        .O(m_axi_bready[1]));
  LUT5 #(
    .INIT(32'h00200000)) 
    \m_axi_wvalid[0]_INST_0 
       (.I0(\m_atarget_hot_reg[2] [0]),
        .I1(m_ready_d[1]),
        .I2(m_valid_i),
        .I3(aa_grant_rnw),
        .I4(s_axi_wvalid),
        .O(m_axi_wvalid[0]));
  LUT5 #(
    .INIT(32'h00200000)) 
    \m_axi_wvalid[1]_INST_0 
       (.I0(\m_atarget_hot_reg[2] [1]),
        .I1(m_ready_d[1]),
        .I2(m_valid_i),
        .I3(aa_grant_rnw),
        .I4(s_axi_wvalid),
        .O(m_axi_wvalid[1]));
  LUT4 #(
    .INIT(16'h08FF)) 
    \m_payload_i[34]_i_1 
       (.I0(aa_grant_rnw),
        .I1(m_valid_i),
        .I2(m_ready_d_0[0]),
        .I3(sr_rvalid),
        .O(E));
  LUT4 #(
    .INIT(16'hBAAA)) 
    \m_ready_d[2]_i_2 
       (.I0(m_ready_d[2]),
        .I1(aa_grant_rnw),
        .I2(m_valid_i),
        .I3(\gen_axilite.s_axi_awready_i_reg_0 ),
        .O(m_ready_d0));
  LUT4 #(
    .INIT(16'h00EF)) 
    \m_ready_d[2]_i_3 
       (.I0(\gen_axilite.s_axi_bvalid_i_reg_0 ),
        .I1(aa_grant_rnw),
        .I2(m_valid_i),
        .I3(m_ready_d[0]),
        .O(\m_ready_d_reg[2] ));
  LUT5 #(
    .INIT(32'h0000FBFF)) 
    \m_ready_d[2]_i_4 
       (.I0(\gen_axilite.s_axi_awready_i_reg_1 ),
        .I1(s_axi_wvalid),
        .I2(aa_grant_rnw),
        .I3(m_valid_i),
        .I4(m_ready_d[1]),
        .O(\m_ready_d_reg[2]_0 ));
  LUT5 #(
    .INIT(32'h8AAAAAAA)) 
    m_valid_i_i_2
       (.I0(aa_rready),
        .I1(m_ready_d_0[0]),
        .I2(m_valid_i),
        .I3(aa_grant_rnw),
        .I4(r_valid_reg),
        .O(s_ready_i_reg));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT4 #(
    .INIT(16'h0040)) 
    \s_arvalid_reg[0]_i_1 
       (.I0(s_awvalid_reg),
        .I1(s_axi_arvalid),
        .I2(aresetn_d),
        .I3(s_ready_i),
        .O(\s_arvalid_reg[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \s_arvalid_reg_reg[0] 
       (.C(aclk),
        .CE(1'b1),
        .D(\s_arvalid_reg[0]_i_1_n_0 ),
        .Q(\s_arvalid_reg_reg_n_0_[0] ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000000000D00000)) 
    \s_awvalid_reg[0]_i_1 
       (.I0(s_axi_arvalid),
        .I1(s_awvalid_reg),
        .I2(s_axi_awvalid),
        .I3(\s_arvalid_reg_reg_n_0_[0] ),
        .I4(aresetn_d),
        .I5(s_ready_i),
        .O(\s_awvalid_reg[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \s_awvalid_reg_reg[0] 
       (.C(aclk),
        .CE(1'b1),
        .D(\s_awvalid_reg[0]_i_1_n_0 ),
        .Q(s_awvalid_reg),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_arready[0]_INST_0 
       (.I0(s_ready_i),
        .I1(aa_grant_rnw),
        .O(s_axi_arready));
  LUT2 #(
    .INIT(4'h2)) 
    \s_axi_awready[0]_INST_0 
       (.I0(s_ready_i),
        .I1(aa_grant_rnw),
        .O(s_axi_awready));
  LUT5 #(
    .INIT(32'h00000400)) 
    \s_axi_bvalid[0]_INST_0 
       (.I0(m_ready_d[0]),
        .I1(m_valid_i),
        .I2(aa_grant_rnw),
        .I3(aa_grant_any),
        .I4(\gen_axilite.s_axi_bvalid_i_reg_0 ),
        .O(s_axi_bvalid));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rvalid[0]_INST_0 
       (.I0(aa_grant_any),
        .I1(sr_rvalid),
        .O(s_axi_rvalid));
  LUT5 #(
    .INIT(32'h00000400)) 
    \s_axi_wready[0]_INST_0 
       (.I0(m_ready_d[1]),
        .I1(m_valid_i),
        .I2(aa_grant_rnw),
        .I3(aa_grant_any),
        .I4(\gen_axilite.s_axi_awready_i_reg_1 ),
        .O(s_axi_wready));
endmodule

module axi_crossbar_v2_1_14_axi_crossbar
   (Q,
    \WB_DAXI_Read_Data_reg[0] ,
    s_axi_bvalid,
    m_axi_bready,
    s_axi_wready,
    m_axi_wvalid,
    m_axi_awvalid,
    m_axi_arvalid,
    s_axi_bresp,
    s_axi_awready,
    s_axi_arready,
    s_axi_rvalid,
    m_axi_rready,
    s_axi_rready,
    aresetn,
    aclk,
    s_axi_bready,
    s_axi_wvalid,
    m_axi_rdata,
    m_axi_rvalid,
    m_axi_awready,
    m_axi_wready,
    m_axi_bvalid,
    m_axi_arready,
    m_axi_bresp,
    m_axi_rresp,
    s_axi_arprot,
    s_axi_arvalid,
    s_axi_awprot,
    s_axi_araddr,
    s_axi_awaddr,
    s_axi_awvalid);
  output [34:0]Q;
  output [33:0]\WB_DAXI_Read_Data_reg[0] ;
  output [0:0]s_axi_bvalid;
  output [1:0]m_axi_bready;
  output [0:0]s_axi_wready;
  output [1:0]m_axi_wvalid;
  output [1:0]m_axi_awvalid;
  output [1:0]m_axi_arvalid;
  output [1:0]s_axi_bresp;
  output [0:0]s_axi_awready;
  output [0:0]s_axi_arready;
  output [0:0]s_axi_rvalid;
  output [1:0]m_axi_rready;
  input [0:0]s_axi_rready;
  input aresetn;
  input aclk;
  input [0:0]s_axi_bready;
  input [0:0]s_axi_wvalid;
  input [63:0]m_axi_rdata;
  input [1:0]m_axi_rvalid;
  input [1:0]m_axi_awready;
  input [1:0]m_axi_wready;
  input [1:0]m_axi_bvalid;
  input [1:0]m_axi_arready;
  input [3:0]m_axi_bresp;
  input [3:0]m_axi_rresp;
  input [2:0]s_axi_arprot;
  input [0:0]s_axi_arvalid;
  input [2:0]s_axi_awprot;
  input [31:0]s_axi_araddr;
  input [31:0]s_axi_awaddr;
  input [0:0]s_axi_awvalid;

  wire [34:0]Q;
  wire [33:0]\WB_DAXI_Read_Data_reg[0] ;
  wire aclk;
  wire aresetn;
  wire [1:0]m_axi_arready;
  wire [1:0]m_axi_arvalid;
  wire [1:0]m_axi_awready;
  wire [1:0]m_axi_awvalid;
  wire [1:0]m_axi_bready;
  wire [1:0]m_axi_bvalid;
  wire [63:0]m_axi_rdata;
  wire [1:0]m_axi_rready;
  wire [1:0]m_axi_rvalid;
  wire [1:0]m_axi_wready;
  wire [1:0]m_axi_wvalid;
  wire [31:0]s_axi_araddr;
  wire [0:0]s_axi_arready;
  wire [0:0]s_axi_arvalid;
  wire [0:0]s_axi_awready;
  wire [0:0]s_axi_awvalid;
  wire [0:0]s_axi_bvalid;
  wire [0:0]s_axi_rvalid;
  wire [0:0]s_axi_wready;
  wire [0:0]s_axi_wvalid;
  wire [34:0]\NLW_gen_sasd.crossbar_sasd_0_Q_UNCONNECTED ;
  wire [1:0]\NLW_gen_sasd.crossbar_sasd_0_WB_DAXI_Read_Data_reg[0]_UNCONNECTED ;
  wire [1:1]\NLW_gen_sasd.crossbar_sasd_0_m_axi_arready_UNCONNECTED ;
  wire [1:1]\NLW_gen_sasd.crossbar_sasd_0_m_axi_awready_UNCONNECTED ;
  wire [3:0]\NLW_gen_sasd.crossbar_sasd_0_m_axi_bresp_UNCONNECTED ;
  wire [31:8]\NLW_gen_sasd.crossbar_sasd_0_m_axi_rdata_UNCONNECTED ;
  wire [3:0]\NLW_gen_sasd.crossbar_sasd_0_m_axi_rresp_UNCONNECTED ;
  wire [15:0]\NLW_gen_sasd.crossbar_sasd_0_s_axi_araddr_UNCONNECTED ;
  wire [2:0]\NLW_gen_sasd.crossbar_sasd_0_s_axi_arprot_UNCONNECTED ;
  wire [31:0]\NLW_gen_sasd.crossbar_sasd_0_s_axi_awaddr_UNCONNECTED ;
  wire [2:0]\NLW_gen_sasd.crossbar_sasd_0_s_axi_awprot_UNCONNECTED ;
  wire [0:0]\NLW_gen_sasd.crossbar_sasd_0_s_axi_bready_UNCONNECTED ;
  wire [1:0]\NLW_gen_sasd.crossbar_sasd_0_s_axi_bresp_UNCONNECTED ;
  wire [0:0]\NLW_gen_sasd.crossbar_sasd_0_s_axi_rready_UNCONNECTED ;

  axi_crossbar_v2_1_14_crossbar_sasd \gen_sasd.crossbar_sasd_0 
       (.Q({\NLW_gen_sasd.crossbar_sasd_0_Q_UNCONNECTED [34:4],Q[3:2],\NLW_gen_sasd.crossbar_sasd_0_Q_UNCONNECTED [1:0]}),
        .\WB_DAXI_Read_Data_reg[0] ({\WB_DAXI_Read_Data_reg[0] [33:2],\NLW_gen_sasd.crossbar_sasd_0_WB_DAXI_Read_Data_reg[0]_UNCONNECTED [1:0]}),
        .aclk(aclk),
        .aresetn(aresetn),
        .m_axi_arready({\NLW_gen_sasd.crossbar_sasd_0_m_axi_arready_UNCONNECTED [1],m_axi_arready[0]}),
        .m_axi_arvalid(m_axi_arvalid),
        .m_axi_awready({\NLW_gen_sasd.crossbar_sasd_0_m_axi_awready_UNCONNECTED [1],m_axi_awready[0]}),
        .m_axi_awvalid(m_axi_awvalid),
        .m_axi_bready(m_axi_bready),
        .m_axi_bresp(\NLW_gen_sasd.crossbar_sasd_0_m_axi_bresp_UNCONNECTED [3:0]),
        .m_axi_bvalid(m_axi_bvalid),
        .m_axi_rdata({m_axi_rdata[63:32],\NLW_gen_sasd.crossbar_sasd_0_m_axi_rdata_UNCONNECTED [31:8],m_axi_rdata[7:0]}),
        .m_axi_rready(m_axi_rready),
        .m_axi_rresp(\NLW_gen_sasd.crossbar_sasd_0_m_axi_rresp_UNCONNECTED [3:0]),
        .m_axi_rvalid(m_axi_rvalid),
        .m_axi_wready(m_axi_wready),
        .m_axi_wvalid(m_axi_wvalid),
        .s_axi_araddr({s_axi_araddr[31:16],\NLW_gen_sasd.crossbar_sasd_0_s_axi_araddr_UNCONNECTED [15:4],s_axi_araddr[3:2],\NLW_gen_sasd.crossbar_sasd_0_s_axi_araddr_UNCONNECTED [1:0]}),
        .s_axi_arprot(\NLW_gen_sasd.crossbar_sasd_0_s_axi_arprot_UNCONNECTED [2:0]),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(\NLW_gen_sasd.crossbar_sasd_0_s_axi_awaddr_UNCONNECTED [31:0]),
        .s_axi_awprot(\NLW_gen_sasd.crossbar_sasd_0_s_axi_awprot_UNCONNECTED [2:0]),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(\NLW_gen_sasd.crossbar_sasd_0_s_axi_bready_UNCONNECTED [0]),
        .s_axi_bresp(\NLW_gen_sasd.crossbar_sasd_0_s_axi_bresp_UNCONNECTED [1:0]),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_rready(\NLW_gen_sasd.crossbar_sasd_0_s_axi_rready_UNCONNECTED [0]),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wready(s_axi_wready),
        .s_axi_wvalid(s_axi_wvalid));
endmodule

module axi_crossbar_v2_1_14_crossbar_sasd
   (Q,
    \WB_DAXI_Read_Data_reg[0] ,
    s_axi_bvalid,
    m_axi_bready,
    s_axi_wready,
    m_axi_wvalid,
    m_axi_awvalid,
    m_axi_arvalid,
    s_axi_bresp,
    s_axi_awready,
    s_axi_arready,
    s_axi_rvalid,
    m_axi_rready,
    s_axi_rready,
    aresetn,
    aclk,
    s_axi_bready,
    s_axi_wvalid,
    m_axi_rdata,
    m_axi_rvalid,
    m_axi_awready,
    m_axi_wready,
    m_axi_bvalid,
    m_axi_arready,
    m_axi_bresp,
    m_axi_rresp,
    s_axi_arprot,
    s_axi_arvalid,
    s_axi_awprot,
    s_axi_araddr,
    s_axi_awaddr,
    s_axi_awvalid);
  output [34:0]Q;
  output [33:0]\WB_DAXI_Read_Data_reg[0] ;
  output [0:0]s_axi_bvalid;
  output [1:0]m_axi_bready;
  output [0:0]s_axi_wready;
  output [1:0]m_axi_wvalid;
  output [1:0]m_axi_awvalid;
  output [1:0]m_axi_arvalid;
  output [1:0]s_axi_bresp;
  output [0:0]s_axi_awready;
  output [0:0]s_axi_arready;
  output [0:0]s_axi_rvalid;
  output [1:0]m_axi_rready;
  input [0:0]s_axi_rready;
  input aresetn;
  input aclk;
  input [0:0]s_axi_bready;
  input [0:0]s_axi_wvalid;
  input [63:0]m_axi_rdata;
  input [1:0]m_axi_rvalid;
  input [1:0]m_axi_awready;
  input [1:0]m_axi_wready;
  input [1:0]m_axi_bvalid;
  input [1:0]m_axi_arready;
  input [3:0]m_axi_bresp;
  input [3:0]m_axi_rresp;
  input [2:0]s_axi_arprot;
  input [0:0]s_axi_arvalid;
  input [2:0]s_axi_awprot;
  input [31:0]s_axi_araddr;
  input [31:0]s_axi_awaddr;
  input [0:0]s_axi_awvalid;

  wire [34:0]Q;
  wire [33:0]\WB_DAXI_Read_Data_reg[0] ;
  wire aa_grant_rnw;
  wire aa_rready;
  wire aclk;
  wire addr_arbiter_inst_n_3;
  wire addr_arbiter_inst_n_47;
  wire addr_arbiter_inst_n_48;
  wire addr_arbiter_inst_n_5;
  wire addr_arbiter_inst_n_52;
  wire addr_arbiter_inst_n_55;
  wire addr_arbiter_inst_n_59;
  wire addr_arbiter_inst_n_63;
  wire addr_arbiter_inst_n_7;
  wire any_error;
  wire aresetn;
  wire aresetn_d;
  wire \gen_decerr.decerr_slave_inst_n_2 ;
  wire \gen_decerr.decerr_slave_inst_n_3 ;
  wire \gen_decerr.decerr_slave_inst_n_4 ;
  wire \gen_decerr.decerr_slave_inst_n_5 ;
  wire \gen_decerr.decerr_slave_inst_n_6 ;
  wire [1:0]m_atarget_enc;
  wire [2:0]m_atarget_hot;
  wire [1:1]m_atarget_hot0;
  wire [1:0]m_axi_arready;
  wire [1:0]m_axi_arvalid;
  wire [1:0]m_axi_awready;
  wire [1:0]m_axi_awvalid;
  wire [1:0]m_axi_bready;
  wire [1:0]m_axi_bvalid;
  wire [63:0]m_axi_rdata;
  wire [1:0]m_axi_rready;
  wire [1:0]m_axi_rvalid;
  wire [1:0]m_axi_wready;
  wire [1:0]m_axi_wvalid;
  wire [1:0]m_ready_d;
  wire [2:2]m_ready_d0;
  wire [2:0]m_ready_d_0;
  wire m_valid_i;
  wire [2:2]mi_bvalid;
  wire [2:2]mi_wready;
  wire p_1_in;
  wire reg_slice_r_n_2;
  wire reset;
  wire [31:0]s_axi_araddr;
  wire [0:0]s_axi_arready;
  wire [0:0]s_axi_arvalid;
  wire [0:0]s_axi_awready;
  wire [0:0]s_axi_awvalid;
  wire [0:0]s_axi_bvalid;
  wire [0:0]s_axi_rvalid;
  wire [0:0]s_axi_wready;
  wire [0:0]s_axi_wvalid;
  wire splitter_aw_n_0;
  wire sr_rvalid;
  wire [34:0]NLW_addr_arbiter_inst_Q_UNCONNECTED;
  wire [15:0]NLW_addr_arbiter_inst_s_axi_araddr_UNCONNECTED;
  wire [2:0]NLW_addr_arbiter_inst_s_axi_arprot_UNCONNECTED;
  wire [31:0]NLW_addr_arbiter_inst_s_axi_awaddr_UNCONNECTED;
  wire [2:0]NLW_addr_arbiter_inst_s_axi_awprot_UNCONNECTED;
  wire [0:0]NLW_addr_arbiter_inst_s_axi_bready_UNCONNECTED;
  wire [0:0]NLW_addr_arbiter_inst_s_axi_rready_UNCONNECTED;
  wire [1:1]\NLW_gen_decerr.decerr_slave_inst_m_axi_arready_UNCONNECTED ;
  wire [1:1]\NLW_gen_decerr.decerr_slave_inst_m_axi_awready_UNCONNECTED ;
  wire [1:0]\NLW_reg_slice_r_WB_DAXI_Read_Data_reg[0]_UNCONNECTED ;
  wire [31:8]NLW_reg_slice_r_m_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_reg_slice_r_m_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_reg_slice_r_s_axi_rready_UNCONNECTED;

  axi_crossbar_v2_1_14_addr_arbiter_sasd addr_arbiter_inst
       (.D({addr_arbiter_inst_n_3,m_atarget_hot0,addr_arbiter_inst_n_5}),
        .E(p_1_in),
        .Q({NLW_addr_arbiter_inst_Q_UNCONNECTED[34:4],Q[3:2],NLW_addr_arbiter_inst_Q_UNCONNECTED[1:0]}),
        .SR(reset),
        .aa_grant_rnw(aa_grant_rnw),
        .aa_rready(aa_rready),
        .aclk(aclk),
        .aresetn_d(aresetn_d),
        .\gen_axilite.s_axi_awready_i_reg (addr_arbiter_inst_n_63),
        .\gen_axilite.s_axi_awready_i_reg_0 (\gen_decerr.decerr_slave_inst_n_3 ),
        .\gen_axilite.s_axi_awready_i_reg_1 (\gen_decerr.decerr_slave_inst_n_4 ),
        .\gen_axilite.s_axi_bvalid_i_reg (addr_arbiter_inst_n_47),
        .\gen_axilite.s_axi_bvalid_i_reg_0 (\gen_decerr.decerr_slave_inst_n_5 ),
        .\m_atarget_enc_reg[0] (addr_arbiter_inst_n_7),
        .\m_atarget_enc_reg[0]_0 (\gen_decerr.decerr_slave_inst_n_6 ),
        .\m_atarget_enc_reg[1] (any_error),
        .\m_atarget_hot_reg[2] (m_atarget_hot),
        .m_axi_arvalid(m_axi_arvalid),
        .m_axi_awvalid(m_axi_awvalid),
        .m_axi_bready(m_axi_bready),
        .m_axi_wvalid(m_axi_wvalid),
        .m_ready_d(m_ready_d_0),
        .m_ready_d0(m_ready_d0),
        .m_ready_d_0(m_ready_d),
        .\m_ready_d_reg[2] (addr_arbiter_inst_n_48),
        .\m_ready_d_reg[2]_0 (addr_arbiter_inst_n_52),
        .m_valid_i(m_valid_i),
        .m_valid_i_reg(reg_slice_r_n_2),
        .mi_bvalid(mi_bvalid),
        .mi_wready(mi_wready),
        .r_valid_reg(\gen_decerr.decerr_slave_inst_n_2 ),
        .s_axi_araddr({s_axi_araddr[31:16],NLW_addr_arbiter_inst_s_axi_araddr_UNCONNECTED[15:4],s_axi_araddr[3:2],NLW_addr_arbiter_inst_s_axi_araddr_UNCONNECTED[1:0]}),
        .s_axi_arprot(NLW_addr_arbiter_inst_s_axi_arprot_UNCONNECTED[2:0]),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(NLW_addr_arbiter_inst_s_axi_awaddr_UNCONNECTED[31:0]),
        .s_axi_awprot(NLW_addr_arbiter_inst_s_axi_awprot_UNCONNECTED[2:0]),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(NLW_addr_arbiter_inst_s_axi_bready_UNCONNECTED[0]),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_rready(NLW_addr_arbiter_inst_s_axi_rready_UNCONNECTED[0]),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wready(s_axi_wready),
        .s_axi_wvalid(s_axi_wvalid),
        .s_ready_i_reg(addr_arbiter_inst_n_55),
        .s_ready_i_reg_0(addr_arbiter_inst_n_59),
        .sr_rvalid(sr_rvalid));
  FDRE #(
    .INIT(1'b0)) 
    aresetn_d_reg
       (.C(aclk),
        .CE(1'b1),
        .D(aresetn),
        .Q(aresetn_d),
        .R(1'b0));
  axi_crossbar_v2_1_14_decerr_slave \gen_decerr.decerr_slave_inst 
       (.Q(m_atarget_hot[2]),
        .SR(reset),
        .aa_rready(aa_rready),
        .aclk(aclk),
        .aresetn_d(aresetn_d),
        .\gen_no_arbiter.grant_rnw_reg (addr_arbiter_inst_n_47),
        .\gen_no_arbiter.grant_rnw_reg_0 (addr_arbiter_inst_n_59),
        .\gen_no_arbiter.m_grant_hot_i_reg[0] (\gen_decerr.decerr_slave_inst_n_3 ),
        .\gen_no_arbiter.m_valid_i_reg (\gen_decerr.decerr_slave_inst_n_4 ),
        .m_atarget_enc(m_atarget_enc),
        .m_axi_arready({\NLW_gen_decerr.decerr_slave_inst_m_axi_arready_UNCONNECTED [1],m_axi_arready[0]}),
        .m_axi_awready({\NLW_gen_decerr.decerr_slave_inst_m_axi_awready_UNCONNECTED [1],m_axi_awready[0]}),
        .m_axi_bvalid(m_axi_bvalid),
        .m_axi_rvalid(m_axi_rvalid),
        .m_axi_wready(m_axi_wready),
        .m_ready_d(m_ready_d[1]),
        .\m_ready_d_reg[1] (\gen_decerr.decerr_slave_inst_n_6 ),
        .\m_ready_d_reg[1]_0 (splitter_aw_n_0),
        .\m_ready_d_reg[2] (addr_arbiter_inst_n_63),
        .mem_access_completed_reg(\gen_decerr.decerr_slave_inst_n_5 ),
        .mi_bvalid(mi_bvalid),
        .mi_wready(mi_wready),
        .s_ready_i_reg(\gen_decerr.decerr_slave_inst_n_2 ));
  FDRE #(
    .INIT(1'b0)) 
    \m_atarget_enc_reg[0] 
       (.C(aclk),
        .CE(1'b1),
        .D(addr_arbiter_inst_n_7),
        .Q(m_atarget_enc[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_atarget_enc_reg[1] 
       (.C(aclk),
        .CE(1'b1),
        .D(any_error),
        .Q(m_atarget_enc[1]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \m_atarget_hot_reg[0] 
       (.C(aclk),
        .CE(1'b1),
        .D(addr_arbiter_inst_n_5),
        .Q(m_atarget_hot[0]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \m_atarget_hot_reg[1] 
       (.C(aclk),
        .CE(1'b1),
        .D(m_atarget_hot0),
        .Q(m_atarget_hot[1]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \m_atarget_hot_reg[2] 
       (.C(aclk),
        .CE(1'b1),
        .D(addr_arbiter_inst_n_3),
        .Q(m_atarget_hot[2]),
        .R(reset));
  axi_register_slice_v2_1_13_axic_register_slice reg_slice_r
       (.E(p_1_in),
        .Q(m_atarget_hot[1:0]),
        .SR(reset),
        .\WB_DAXI_Read_Data_reg[0] ({\WB_DAXI_Read_Data_reg[0] [33:2],\NLW_reg_slice_r_WB_DAXI_Read_Data_reg[0]_UNCONNECTED [1:0]}),
        .aa_grant_rnw(aa_grant_rnw),
        .aa_rready(aa_rready),
        .aclk(aclk),
        .\gen_no_arbiter.grant_rnw_reg (addr_arbiter_inst_n_59),
        .m_atarget_enc(m_atarget_enc),
        .m_axi_rdata({m_axi_rdata[63:32],NLW_reg_slice_r_m_axi_rdata_UNCONNECTED[31:8],m_axi_rdata[7:0]}),
        .m_axi_rready(m_axi_rready),
        .m_axi_rresp(NLW_reg_slice_r_m_axi_rresp_UNCONNECTED[3:0]),
        .m_ready_d(m_ready_d[0]),
        .\m_ready_d_reg[1] (reg_slice_r_n_2),
        .m_valid_i(m_valid_i),
        .s_axi_rready(NLW_reg_slice_r_s_axi_rready_UNCONNECTED[0]),
        .s_ready_i_reg_0(addr_arbiter_inst_n_55),
        .sr_rvalid(sr_rvalid));
  axi_crossbar_v2_1_14_splitter__parameterized0 splitter_ar
       (.aa_grant_rnw(aa_grant_rnw),
        .aclk(aclk),
        .aresetn_d(aresetn_d),
        .\m_atarget_enc_reg[0] (\gen_decerr.decerr_slave_inst_n_6 ),
        .m_ready_d(m_ready_d),
        .m_valid_i(m_valid_i),
        .m_valid_i_reg(reg_slice_r_n_2));
  axi_crossbar_v2_1_14_splitter splitter_aw
       (.M_AXI_DP_WVALID_i_reg(addr_arbiter_inst_n_52),
        .Q(m_atarget_hot[2]),
        .aa_grant_rnw(aa_grant_rnw),
        .aclk(aclk),
        .aresetn_d(aresetn_d),
        .\gen_axilite.s_axi_bvalid_i_reg (splitter_aw_n_0),
        .\gen_no_arbiter.grant_rnw_reg (addr_arbiter_inst_n_48),
        .m_ready_d(m_ready_d_0),
        .m_ready_d0(m_ready_d0),
        .m_valid_i(m_valid_i),
        .s_axi_wvalid(s_axi_wvalid));
endmodule

module axi_crossbar_v2_1_14_decerr_slave
   (mi_bvalid,
    mi_wready,
    s_ready_i_reg,
    \gen_no_arbiter.m_grant_hot_i_reg[0] ,
    \gen_no_arbiter.m_valid_i_reg ,
    mem_access_completed_reg,
    \m_ready_d_reg[1] ,
    SR,
    aclk,
    \m_ready_d_reg[2] ,
    m_axi_rvalid,
    m_atarget_enc,
    m_axi_awready,
    m_axi_wready,
    m_axi_bvalid,
    m_axi_arready,
    Q,
    \gen_no_arbiter.grant_rnw_reg ,
    \m_ready_d_reg[1]_0 ,
    \gen_no_arbiter.grant_rnw_reg_0 ,
    m_ready_d,
    aa_rready,
    aresetn_d);
  output [0:0]mi_bvalid;
  output [0:0]mi_wready;
  output s_ready_i_reg;
  output \gen_no_arbiter.m_grant_hot_i_reg[0] ;
  output \gen_no_arbiter.m_valid_i_reg ;
  output mem_access_completed_reg;
  output \m_ready_d_reg[1] ;
  input [0:0]SR;
  input aclk;
  input \m_ready_d_reg[2] ;
  input [1:0]m_axi_rvalid;
  input [1:0]m_atarget_enc;
  input [1:0]m_axi_awready;
  input [1:0]m_axi_wready;
  input [1:0]m_axi_bvalid;
  input [1:0]m_axi_arready;
  input [0:0]Q;
  input \gen_no_arbiter.grant_rnw_reg ;
  input \m_ready_d_reg[1]_0 ;
  input \gen_no_arbiter.grant_rnw_reg_0 ;
  input [0:0]m_ready_d;
  input aa_rready;
  input aresetn_d;

  wire [0:0]Q;
  wire [0:0]SR;
  wire aa_rready;
  wire aclk;
  wire aresetn_d;
  wire \gen_axilite.s_axi_arready_i_i_1_n_0 ;
  wire \gen_axilite.s_axi_bvalid_i_i_1_n_0 ;
  wire \gen_axilite.s_axi_rvalid_i_i_1_n_0 ;
  wire \gen_no_arbiter.grant_rnw_reg ;
  wire \gen_no_arbiter.grant_rnw_reg_0 ;
  wire \gen_no_arbiter.m_grant_hot_i_reg[0] ;
  wire \gen_no_arbiter.m_valid_i_reg ;
  wire [1:0]m_atarget_enc;
  wire [1:0]m_axi_arready;
  wire [1:0]m_axi_awready;
  wire [1:0]m_axi_bvalid;
  wire [1:0]m_axi_rvalid;
  wire [1:0]m_axi_wready;
  wire [0:0]m_ready_d;
  wire \m_ready_d_reg[1] ;
  wire \m_ready_d_reg[1]_0 ;
  wire \m_ready_d_reg[2] ;
  wire mem_access_completed_reg;
  wire [2:2]mi_arready;
  wire [0:0]mi_bvalid;
  wire [2:2]mi_rvalid;
  wire [0:0]mi_wready;
  wire s_ready_i_reg;

  LUT6 #(
    .INIT(64'hAA008AAAAA00AAAA)) 
    \gen_axilite.s_axi_arready_i_i_1 
       (.I0(aresetn_d),
        .I1(m_ready_d),
        .I2(\gen_no_arbiter.grant_rnw_reg_0 ),
        .I3(mi_arready),
        .I4(mi_rvalid),
        .I5(Q),
        .O(\gen_axilite.s_axi_arready_i_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axilite.s_axi_arready_i_reg 
       (.C(aclk),
        .CE(1'b1),
        .D(\gen_axilite.s_axi_arready_i_i_1_n_0 ),
        .Q(mi_arready),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axilite.s_axi_awready_i_reg 
       (.C(aclk),
        .CE(1'b1),
        .D(\m_ready_d_reg[2] ),
        .Q(mi_wready),
        .R(SR));
  LUT5 #(
    .INIT(32'h77770F00)) 
    \gen_axilite.s_axi_bvalid_i_i_1 
       (.I0(Q),
        .I1(\gen_no_arbiter.grant_rnw_reg ),
        .I2(\m_ready_d_reg[1]_0 ),
        .I3(mi_wready),
        .I4(mi_bvalid),
        .O(\gen_axilite.s_axi_bvalid_i_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axilite.s_axi_bvalid_i_reg 
       (.C(aclk),
        .CE(1'b1),
        .D(\gen_axilite.s_axi_bvalid_i_i_1_n_0 ),
        .Q(mi_bvalid),
        .R(SR));
  LUT6 #(
    .INIT(64'h00FFFFFF08080000)) 
    \gen_axilite.s_axi_rvalid_i_i_1 
       (.I0(mi_arready),
        .I1(\gen_no_arbiter.grant_rnw_reg_0 ),
        .I2(m_ready_d),
        .I3(aa_rready),
        .I4(Q),
        .I5(mi_rvalid),
        .O(\gen_axilite.s_axi_rvalid_i_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axilite.s_axi_rvalid_i_reg 
       (.C(aclk),
        .CE(1'b1),
        .D(\gen_axilite.s_axi_rvalid_i_i_1_n_0 ),
        .Q(mi_rvalid),
        .R(SR));
  LUT4 #(
    .INIT(16'hC1F1)) 
    \m_ready_d[1]_i_2 
       (.I0(m_axi_arready[0]),
        .I1(m_atarget_enc[0]),
        .I2(m_atarget_enc[1]),
        .I3(mi_arready),
        .O(\m_ready_d_reg[1] ));
  LUT4 #(
    .INIT(16'h0FAC)) 
    \m_ready_d[2]_i_5 
       (.I0(mi_wready),
        .I1(m_axi_awready[0]),
        .I2(m_atarget_enc[1]),
        .I3(m_atarget_enc[0]),
        .O(\gen_no_arbiter.m_grant_hot_i_reg[0] ));
  LUT5 #(
    .INIT(32'h00F0AACC)) 
    m_valid_i_i_3
       (.I0(m_axi_rvalid[1]),
        .I1(m_axi_rvalid[0]),
        .I2(mi_rvalid),
        .I3(m_atarget_enc[0]),
        .I4(m_atarget_enc[1]),
        .O(s_ready_i_reg));
  LUT5 #(
    .INIT(32'hF530F53F)) 
    \s_axi_bvalid[0]_INST_0_i_1 
       (.I0(mi_bvalid),
        .I1(m_axi_bvalid[1]),
        .I2(m_atarget_enc[0]),
        .I3(m_atarget_enc[1]),
        .I4(m_axi_bvalid[0]),
        .O(mem_access_completed_reg));
  LUT5 #(
    .INIT(32'hF530F53F)) 
    \s_axi_wready[0]_INST_0_i_1 
       (.I0(mi_wready),
        .I1(m_axi_wready[1]),
        .I2(m_atarget_enc[0]),
        .I3(m_atarget_enc[1]),
        .I4(m_axi_wready[0]),
        .O(\gen_no_arbiter.m_valid_i_reg ));
endmodule

module axi_crossbar_v2_1_14_splitter
   (\gen_axilite.s_axi_bvalid_i_reg ,
    m_ready_d,
    s_axi_wvalid,
    m_valid_i,
    aa_grant_rnw,
    Q,
    aresetn_d,
    m_ready_d0,
    \gen_no_arbiter.grant_rnw_reg ,
    M_AXI_DP_WVALID_i_reg,
    aclk);
  output \gen_axilite.s_axi_bvalid_i_reg ;
  output [2:0]m_ready_d;
  input [0:0]s_axi_wvalid;
  input m_valid_i;
  input aa_grant_rnw;
  input [0:0]Q;
  input aresetn_d;
  input [0:0]m_ready_d0;
  input \gen_no_arbiter.grant_rnw_reg ;
  input M_AXI_DP_WVALID_i_reg;
  input aclk;

  wire M_AXI_DP_WVALID_i_reg;
  wire [0:0]Q;
  wire aa_grant_rnw;
  wire aclk;
  wire aresetn_d;
  wire \gen_axilite.s_axi_bvalid_i_reg ;
  wire \gen_no_arbiter.grant_rnw_reg ;
  wire [2:0]m_ready_d;
  wire [0:0]m_ready_d0;
  wire \m_ready_d[0]_i_1_n_0 ;
  wire \m_ready_d[1]_i_1_n_0 ;
  wire \m_ready_d[2]_i_1_n_0 ;
  wire m_valid_i;
  wire [0:0]s_axi_wvalid;

  LUT6 #(
    .INIT(64'hFFFFFBFFFFFFFFFF)) 
    \gen_axilite.s_axi_bvalid_i_i_3 
       (.I0(m_ready_d[1]),
        .I1(s_axi_wvalid),
        .I2(m_ready_d[2]),
        .I3(m_valid_i),
        .I4(aa_grant_rnw),
        .I5(Q),
        .O(\gen_axilite.s_axi_bvalid_i_reg ));
  LUT4 #(
    .INIT(16'h0A02)) 
    \m_ready_d[0]_i_1 
       (.I0(aresetn_d),
        .I1(m_ready_d0),
        .I2(\gen_no_arbiter.grant_rnw_reg ),
        .I3(M_AXI_DP_WVALID_i_reg),
        .O(\m_ready_d[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT4 #(
    .INIT(16'h00A2)) 
    \m_ready_d[1]_i_1 
       (.I0(aresetn_d),
        .I1(m_ready_d0),
        .I2(\gen_no_arbiter.grant_rnw_reg ),
        .I3(M_AXI_DP_WVALID_i_reg),
        .O(\m_ready_d[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT4 #(
    .INIT(16'h8880)) 
    \m_ready_d[2]_i_1 
       (.I0(aresetn_d),
        .I1(m_ready_d0),
        .I2(\gen_no_arbiter.grant_rnw_reg ),
        .I3(M_AXI_DP_WVALID_i_reg),
        .O(\m_ready_d[2]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \m_ready_d_reg[0] 
       (.C(aclk),
        .CE(1'b1),
        .D(\m_ready_d[0]_i_1_n_0 ),
        .Q(m_ready_d[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_ready_d_reg[1] 
       (.C(aclk),
        .CE(1'b1),
        .D(\m_ready_d[1]_i_1_n_0 ),
        .Q(m_ready_d[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_ready_d_reg[2] 
       (.C(aclk),
        .CE(1'b1),
        .D(\m_ready_d[2]_i_1_n_0 ),
        .Q(m_ready_d[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "axi_crossbar_v2_1_14_splitter" *) 
module axi_crossbar_v2_1_14_splitter__parameterized0
   (m_ready_d,
    aresetn_d,
    m_valid_i,
    aa_grant_rnw,
    \m_atarget_enc_reg[0] ,
    m_valid_i_reg,
    aclk);
  output [1:0]m_ready_d;
  input aresetn_d;
  input m_valid_i;
  input aa_grant_rnw;
  input \m_atarget_enc_reg[0] ;
  input m_valid_i_reg;
  input aclk;

  wire aa_grant_rnw;
  wire aclk;
  wire aresetn_d;
  wire \m_atarget_enc_reg[0] ;
  wire [1:0]m_ready_d;
  wire \m_ready_d[0]_i_1_n_0 ;
  wire \m_ready_d[1]_i_1_n_0 ;
  wire m_valid_i;
  wire m_valid_i_reg;

  LUT6 #(
    .INIT(64'h000000000000AA2A)) 
    \m_ready_d[0]_i_1 
       (.I0(aresetn_d),
        .I1(m_valid_i),
        .I2(aa_grant_rnw),
        .I3(\m_atarget_enc_reg[0] ),
        .I4(m_ready_d[1]),
        .I5(m_valid_i_reg),
        .O(\m_ready_d[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAAAA008000000000)) 
    \m_ready_d[1]_i_1 
       (.I0(aresetn_d),
        .I1(m_valid_i),
        .I2(aa_grant_rnw),
        .I3(\m_atarget_enc_reg[0] ),
        .I4(m_ready_d[1]),
        .I5(m_valid_i_reg),
        .O(\m_ready_d[1]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \m_ready_d_reg[0] 
       (.C(aclk),
        .CE(1'b1),
        .D(\m_ready_d[0]_i_1_n_0 ),
        .Q(m_ready_d[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_ready_d_reg[1] 
       (.C(aclk),
        .CE(1'b1),
        .D(\m_ready_d[1]_i_1_n_0 ),
        .Q(m_ready_d[1]),
        .R(1'b0));
endmodule

module axi_lite_ipif
   (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ,
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ,
    s_axi_rresp,
    Bus_RNW_reg,
    s_axi_rvalid_i_reg,
    s_axi_bvalid_i_reg,
    s_axi_bresp,
    fifo_wr,
    \INFERRED_GEN.cnt_i_reg[2] ,
    s_axi_awready,
    \INFERRED_GEN.cnt_i_reg[2]_0 ,
    s_axi_arready,
    FIFO_Full_reg,
    reset_TX_FIFO,
    reset_RX_FIFO,
    bus2ip_rdce,
    enable_interrupts_reg,
    tx_Buffer_Empty_Pre_reg,
    rx_Data_Present_Pre_reg,
    s_axi_rdata,
    bus2ip_reset,
    s_axi_aclk,
    tx_Buffer_Full,
    Q,
    s_axi_arvalid,
    out,
    rx_Buffer_Full,
    \INFERRED_GEN.cnt_i_reg[4] ,
    enable_interrupts,
    status_reg,
    s_axi_wdata,
    s_axi_aresetn,
    s_axi_bready,
    s_axi_rready,
    s_axi_awvalid,
    s_axi_wvalid,
    s_axi_awaddr,
    s_axi_araddr);
  output \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  output \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  output [0:0]s_axi_rresp;
  output Bus_RNW_reg;
  output s_axi_rvalid_i_reg;
  output s_axi_bvalid_i_reg;
  output [0:0]s_axi_bresp;
  output fifo_wr;
  output \INFERRED_GEN.cnt_i_reg[2] ;
  output s_axi_awready;
  output \INFERRED_GEN.cnt_i_reg[2]_0 ;
  output s_axi_arready;
  output FIFO_Full_reg;
  output reset_TX_FIFO;
  output reset_RX_FIFO;
  output [0:0]bus2ip_rdce;
  output enable_interrupts_reg;
  output tx_Buffer_Empty_Pre_reg;
  output rx_Data_Present_Pre_reg;
  output [7:0]s_axi_rdata;
  input bus2ip_reset;
  input s_axi_aclk;
  input tx_Buffer_Full;
  input [0:0]Q;
  input s_axi_arvalid;
  input [7:0]out;
  input rx_Buffer_Full;
  input [0:0]\INFERRED_GEN.cnt_i_reg[4] ;
  input enable_interrupts;
  input [1:0]status_reg;
  input [2:0]s_axi_wdata;
  input s_axi_aresetn;
  input s_axi_bready;
  input s_axi_rready;
  input s_axi_awvalid;
  input s_axi_wvalid;
  input [1:0]s_axi_awaddr;
  input [1:0]s_axi_araddr;

  wire Bus_RNW_reg;
  wire FIFO_Full_reg;
  wire \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  wire \INFERRED_GEN.cnt_i_reg[2] ;
  wire \INFERRED_GEN.cnt_i_reg[2]_0 ;
  wire [0:0]\INFERRED_GEN.cnt_i_reg[4] ;
  wire [0:0]Q;
  wire [0:0]bus2ip_rdce;
  wire bus2ip_reset;
  wire enable_interrupts;
  wire enable_interrupts_reg;
  wire fifo_wr;
  wire [7:0]out;
  wire reset_RX_FIFO;
  wire reset_TX_FIFO;
  wire rx_Buffer_Full;
  wire s_axi_aclk;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire [1:0]s_axi_awaddr;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid_i_reg;
  wire [7:0]s_axi_rdata;
  wire s_axi_rready;
  wire s_axi_rvalid_i_reg;
  wire [2:0]s_axi_wdata;
  wire s_axi_wvalid;
  wire [1:0]status_reg;
  wire tx_Buffer_Full;
  wire NLW_I_SLAVE_ATTACHMENT_rx_Data_Present_Pre_reg_UNCONNECTED;
  wire NLW_I_SLAVE_ATTACHMENT_tx_Buffer_Empty_Pre_reg_0_UNCONNECTED;
  wire [1:0]NLW_I_SLAVE_ATTACHMENT_s_axi_araddr_UNCONNECTED;
  wire [0:0]NLW_I_SLAVE_ATTACHMENT_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_I_SLAVE_ATTACHMENT_s_axi_rresp_UNCONNECTED;

  slave_attachment I_SLAVE_ATTACHMENT
       (.FIFO_Full_reg(FIFO_Full_reg),
        .\INFERRED_GEN.cnt_i_reg[2] (\INFERRED_GEN.cnt_i_reg[2] ),
        .\INFERRED_GEN.cnt_i_reg[2]_0 (\INFERRED_GEN.cnt_i_reg[2]_0 ),
        .\INFERRED_GEN.cnt_i_reg[4] (\INFERRED_GEN.cnt_i_reg[4] ),
        .Q(Q),
        .bus2ip_rdce(bus2ip_rdce),
        .bus2ip_reset(bus2ip_reset),
        .enable_interrupts(enable_interrupts),
        .enable_interrupts_reg(Bus_RNW_reg),
        .enable_interrupts_reg_0(enable_interrupts_reg),
        .fifo_wr(fifo_wr),
        .out(out),
        .reset_RX_FIFO(reset_RX_FIFO),
        .reset_TX_FIFO(reset_TX_FIFO),
        .rx_Buffer_Full(rx_Buffer_Full),
        .rx_Data_Present_Pre_reg(NLW_I_SLAVE_ATTACHMENT_rx_Data_Present_Pre_reg_UNCONNECTED),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr(NLW_I_SLAVE_ATTACHMENT_s_axi_araddr_UNCONNECTED[1:0]),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(s_axi_awaddr),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(NLW_I_SLAVE_ATTACHMENT_s_axi_bresp_UNCONNECTED[0]),
        .s_axi_bvalid_i_reg_0(s_axi_bvalid_i_reg),
        .s_axi_rdata(s_axi_rdata),
        .s_axi_rready(s_axi_rready),
        .s_axi_rresp(NLW_I_SLAVE_ATTACHMENT_s_axi_rresp_UNCONNECTED[0]),
        .\s_axi_rresp_i_reg[1]_0 (\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .s_axi_rvalid_i_reg_0(s_axi_rvalid_i_reg),
        .s_axi_wdata(s_axi_wdata),
        .s_axi_wvalid(s_axi_wvalid),
        .status_reg(status_reg),
        .tx_Buffer_Empty_Pre_reg(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .tx_Buffer_Empty_Pre_reg_0(NLW_I_SLAVE_ATTACHMENT_tx_Buffer_Empty_Pre_reg_0_UNCONNECTED),
        .tx_Buffer_Full(tx_Buffer_Full));
endmodule

module axi_register_slice_v2_1_13_axic_register_slice
   (sr_rvalid,
    aa_rready,
    \m_ready_d_reg[1] ,
    m_axi_rready,
    \WB_DAXI_Read_Data_reg[0] ,
    aclk,
    m_ready_d,
    \gen_no_arbiter.grant_rnw_reg ,
    s_axi_rready,
    s_ready_i_reg_0,
    aa_grant_rnw,
    m_valid_i,
    m_axi_rdata,
    m_atarget_enc,
    m_axi_rresp,
    Q,
    SR,
    E);
  output sr_rvalid;
  output aa_rready;
  output \m_ready_d_reg[1] ;
  output [1:0]m_axi_rready;
  output [33:0]\WB_DAXI_Read_Data_reg[0] ;
  input aclk;
  input [0:0]m_ready_d;
  input \gen_no_arbiter.grant_rnw_reg ;
  input [0:0]s_axi_rready;
  input s_ready_i_reg_0;
  input aa_grant_rnw;
  input m_valid_i;
  input [63:0]m_axi_rdata;
  input [1:0]m_atarget_enc;
  input [3:0]m_axi_rresp;
  input [1:0]Q;
  input [0:0]SR;
  input [0:0]E;

  wire [0:0]E;
  wire [1:0]Q;
  wire [0:0]SR;
  wire [33:0]\WB_DAXI_Read_Data_reg[0] ;
  wire aa_grant_rnw;
  wire aa_rready;
  wire aclk;
  wire \aresetn_d_reg_n_0_[0] ;
  wire \aresetn_d_reg_n_0_[1] ;
  wire \gen_no_arbiter.grant_rnw_reg ;
  wire [1:0]m_atarget_enc;
  wire [63:0]m_axi_rdata;
  wire [1:0]m_axi_rready;
  wire \m_payload_i_reg_n_0_[0] ;
  wire [0:0]m_ready_d;
  wire \m_ready_d_reg[1] ;
  wire m_valid_i;
  wire m_valid_i_i_1_n_0;
  wire s_ready_i_i_1_n_0;
  wire s_ready_i_reg_0;
  wire [34:0]skid_buffer;
  wire \skid_buffer[10]_i_1_n_0 ;
  wire \skid_buffer[11]_i_1_n_0 ;
  wire \skid_buffer[12]_i_1_n_0 ;
  wire \skid_buffer[13]_i_1_n_0 ;
  wire \skid_buffer[14]_i_1_n_0 ;
  wire \skid_buffer[15]_i_1_n_0 ;
  wire \skid_buffer[16]_i_1_n_0 ;
  wire \skid_buffer[17]_i_1_n_0 ;
  wire \skid_buffer[18]_i_1_n_0 ;
  wire \skid_buffer[19]_i_1_n_0 ;
  wire \skid_buffer[20]_i_1_n_0 ;
  wire \skid_buffer[21]_i_1_n_0 ;
  wire \skid_buffer[22]_i_1_n_0 ;
  wire \skid_buffer[23]_i_1_n_0 ;
  wire \skid_buffer[24]_i_1_n_0 ;
  wire \skid_buffer[25]_i_1_n_0 ;
  wire \skid_buffer[26]_i_1_n_0 ;
  wire \skid_buffer[27]_i_1_n_0 ;
  wire \skid_buffer[28]_i_1_n_0 ;
  wire \skid_buffer[29]_i_1_n_0 ;
  wire \skid_buffer[30]_i_1_n_0 ;
  wire \skid_buffer[31]_i_1_n_0 ;
  wire \skid_buffer[32]_i_1_n_0 ;
  wire \skid_buffer[33]_i_1_n_0 ;
  wire \skid_buffer[34]_i_1_n_0 ;
  wire \skid_buffer[3]_i_1_n_0 ;
  wire \skid_buffer[4]_i_1_n_0 ;
  wire \skid_buffer[5]_i_1_n_0 ;
  wire \skid_buffer[6]_i_1_n_0 ;
  wire \skid_buffer[7]_i_1_n_0 ;
  wire \skid_buffer[8]_i_1_n_0 ;
  wire \skid_buffer[9]_i_1_n_0 ;
  wire \skid_buffer_reg_n_0_[0] ;
  wire \skid_buffer_reg_n_0_[10] ;
  wire \skid_buffer_reg_n_0_[11] ;
  wire \skid_buffer_reg_n_0_[12] ;
  wire \skid_buffer_reg_n_0_[13] ;
  wire \skid_buffer_reg_n_0_[14] ;
  wire \skid_buffer_reg_n_0_[15] ;
  wire \skid_buffer_reg_n_0_[16] ;
  wire \skid_buffer_reg_n_0_[17] ;
  wire \skid_buffer_reg_n_0_[18] ;
  wire \skid_buffer_reg_n_0_[19] ;
  wire \skid_buffer_reg_n_0_[20] ;
  wire \skid_buffer_reg_n_0_[21] ;
  wire \skid_buffer_reg_n_0_[22] ;
  wire \skid_buffer_reg_n_0_[23] ;
  wire \skid_buffer_reg_n_0_[24] ;
  wire \skid_buffer_reg_n_0_[25] ;
  wire \skid_buffer_reg_n_0_[26] ;
  wire \skid_buffer_reg_n_0_[27] ;
  wire \skid_buffer_reg_n_0_[28] ;
  wire \skid_buffer_reg_n_0_[29] ;
  wire \skid_buffer_reg_n_0_[30] ;
  wire \skid_buffer_reg_n_0_[31] ;
  wire \skid_buffer_reg_n_0_[32] ;
  wire \skid_buffer_reg_n_0_[33] ;
  wire \skid_buffer_reg_n_0_[34] ;
  wire \skid_buffer_reg_n_0_[3] ;
  wire \skid_buffer_reg_n_0_[4] ;
  wire \skid_buffer_reg_n_0_[5] ;
  wire \skid_buffer_reg_n_0_[6] ;
  wire \skid_buffer_reg_n_0_[7] ;
  wire \skid_buffer_reg_n_0_[8] ;
  wire \skid_buffer_reg_n_0_[9] ;
  wire sr_rvalid;

  FDRE #(
    .INIT(1'b0)) 
    \aresetn_d_reg[0] 
       (.C(aclk),
        .CE(1'b1),
        .D(1'b1),
        .Q(\aresetn_d_reg_n_0_[0] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \aresetn_d_reg[1] 
       (.C(aclk),
        .CE(1'b1),
        .D(\aresetn_d_reg_n_0_[0] ),
        .Q(\aresetn_d_reg_n_0_[1] ),
        .R(SR));
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_rready[0]_INST_0 
       (.I0(aa_rready),
        .I1(Q[0]),
        .O(m_axi_rready[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_rready[1]_INST_0 
       (.I0(aa_rready),
        .I1(Q[1]),
        .O(m_axi_rready[1]));
  LUT6 #(
    .INIT(64'h3202FFFF32020000)) 
    \m_payload_i[10]_i_1 
       (.I0(m_axi_rdata[7]),
        .I1(m_atarget_enc[1]),
        .I2(m_atarget_enc[0]),
        .I3(m_axi_rdata[39]),
        .I4(aa_rready),
        .I5(\skid_buffer_reg_n_0_[10] ),
        .O(skid_buffer[10]));
  LUT5 #(
    .INIT(32'h40FF4000)) 
    \m_payload_i[11]_i_1 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[0]),
        .I2(m_axi_rdata[40]),
        .I3(aa_rready),
        .I4(\skid_buffer_reg_n_0_[11] ),
        .O(skid_buffer[11]));
  LUT5 #(
    .INIT(32'h40FF4000)) 
    \m_payload_i[12]_i_1 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[0]),
        .I2(m_axi_rdata[41]),
        .I3(aa_rready),
        .I4(\skid_buffer_reg_n_0_[12] ),
        .O(skid_buffer[12]));
  LUT5 #(
    .INIT(32'h40FF4000)) 
    \m_payload_i[13]_i_1 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[0]),
        .I2(m_axi_rdata[42]),
        .I3(aa_rready),
        .I4(\skid_buffer_reg_n_0_[13] ),
        .O(skid_buffer[13]));
  LUT5 #(
    .INIT(32'h40FF4000)) 
    \m_payload_i[14]_i_1 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[0]),
        .I2(m_axi_rdata[43]),
        .I3(aa_rready),
        .I4(\skid_buffer_reg_n_0_[14] ),
        .O(skid_buffer[14]));
  LUT5 #(
    .INIT(32'h40FF4000)) 
    \m_payload_i[15]_i_1 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[0]),
        .I2(m_axi_rdata[44]),
        .I3(aa_rready),
        .I4(\skid_buffer_reg_n_0_[15] ),
        .O(skid_buffer[15]));
  LUT5 #(
    .INIT(32'h40FF4000)) 
    \m_payload_i[16]_i_1 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[0]),
        .I2(m_axi_rdata[45]),
        .I3(aa_rready),
        .I4(\skid_buffer_reg_n_0_[16] ),
        .O(skid_buffer[16]));
  LUT5 #(
    .INIT(32'h40FF4000)) 
    \m_payload_i[17]_i_1 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[0]),
        .I2(m_axi_rdata[46]),
        .I3(aa_rready),
        .I4(\skid_buffer_reg_n_0_[17] ),
        .O(skid_buffer[17]));
  LUT5 #(
    .INIT(32'h40FF4000)) 
    \m_payload_i[18]_i_1 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[0]),
        .I2(m_axi_rdata[47]),
        .I3(aa_rready),
        .I4(\skid_buffer_reg_n_0_[18] ),
        .O(skid_buffer[18]));
  LUT5 #(
    .INIT(32'h40FF4000)) 
    \m_payload_i[19]_i_1 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[0]),
        .I2(m_axi_rdata[48]),
        .I3(aa_rready),
        .I4(\skid_buffer_reg_n_0_[19] ),
        .O(skid_buffer[19]));
  LUT5 #(
    .INIT(32'h40FF4000)) 
    \m_payload_i[20]_i_1 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[0]),
        .I2(m_axi_rdata[49]),
        .I3(aa_rready),
        .I4(\skid_buffer_reg_n_0_[20] ),
        .O(skid_buffer[20]));
  LUT5 #(
    .INIT(32'h40FF4000)) 
    \m_payload_i[21]_i_1 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[0]),
        .I2(m_axi_rdata[50]),
        .I3(aa_rready),
        .I4(\skid_buffer_reg_n_0_[21] ),
        .O(skid_buffer[21]));
  LUT5 #(
    .INIT(32'h40FF4000)) 
    \m_payload_i[22]_i_1 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[0]),
        .I2(m_axi_rdata[51]),
        .I3(aa_rready),
        .I4(\skid_buffer_reg_n_0_[22] ),
        .O(skid_buffer[22]));
  LUT5 #(
    .INIT(32'h40FF4000)) 
    \m_payload_i[23]_i_1 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[0]),
        .I2(m_axi_rdata[52]),
        .I3(aa_rready),
        .I4(\skid_buffer_reg_n_0_[23] ),
        .O(skid_buffer[23]));
  LUT5 #(
    .INIT(32'h40FF4000)) 
    \m_payload_i[24]_i_1 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[0]),
        .I2(m_axi_rdata[53]),
        .I3(aa_rready),
        .I4(\skid_buffer_reg_n_0_[24] ),
        .O(skid_buffer[24]));
  LUT5 #(
    .INIT(32'h40FF4000)) 
    \m_payload_i[25]_i_1 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[0]),
        .I2(m_axi_rdata[54]),
        .I3(aa_rready),
        .I4(\skid_buffer_reg_n_0_[25] ),
        .O(skid_buffer[25]));
  LUT5 #(
    .INIT(32'h40FF4000)) 
    \m_payload_i[26]_i_1 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[0]),
        .I2(m_axi_rdata[55]),
        .I3(aa_rready),
        .I4(\skid_buffer_reg_n_0_[26] ),
        .O(skid_buffer[26]));
  LUT5 #(
    .INIT(32'h40FF4000)) 
    \m_payload_i[27]_i_1 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[0]),
        .I2(m_axi_rdata[56]),
        .I3(aa_rready),
        .I4(\skid_buffer_reg_n_0_[27] ),
        .O(skid_buffer[27]));
  LUT5 #(
    .INIT(32'h40FF4000)) 
    \m_payload_i[28]_i_1 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[0]),
        .I2(m_axi_rdata[57]),
        .I3(aa_rready),
        .I4(\skid_buffer_reg_n_0_[28] ),
        .O(skid_buffer[28]));
  LUT5 #(
    .INIT(32'h40FF4000)) 
    \m_payload_i[29]_i_1 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[0]),
        .I2(m_axi_rdata[58]),
        .I3(aa_rready),
        .I4(\skid_buffer_reg_n_0_[29] ),
        .O(skid_buffer[29]));
  LUT5 #(
    .INIT(32'h40FF4000)) 
    \m_payload_i[30]_i_1 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[0]),
        .I2(m_axi_rdata[59]),
        .I3(aa_rready),
        .I4(\skid_buffer_reg_n_0_[30] ),
        .O(skid_buffer[30]));
  LUT5 #(
    .INIT(32'h40FF4000)) 
    \m_payload_i[31]_i_1 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[0]),
        .I2(m_axi_rdata[60]),
        .I3(aa_rready),
        .I4(\skid_buffer_reg_n_0_[31] ),
        .O(skid_buffer[31]));
  LUT5 #(
    .INIT(32'h40FF4000)) 
    \m_payload_i[32]_i_1 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[0]),
        .I2(m_axi_rdata[61]),
        .I3(aa_rready),
        .I4(\skid_buffer_reg_n_0_[32] ),
        .O(skid_buffer[32]));
  LUT5 #(
    .INIT(32'h40FF4000)) 
    \m_payload_i[33]_i_1 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[0]),
        .I2(m_axi_rdata[62]),
        .I3(aa_rready),
        .I4(\skid_buffer_reg_n_0_[33] ),
        .O(skid_buffer[33]));
  LUT5 #(
    .INIT(32'h40FF4000)) 
    \m_payload_i[34]_i_2 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[0]),
        .I2(m_axi_rdata[63]),
        .I3(aa_rready),
        .I4(\skid_buffer_reg_n_0_[34] ),
        .O(skid_buffer[34]));
  LUT6 #(
    .INIT(64'h3202FFFF32020000)) 
    \m_payload_i[3]_i_1 
       (.I0(m_axi_rdata[0]),
        .I1(m_atarget_enc[1]),
        .I2(m_atarget_enc[0]),
        .I3(m_axi_rdata[32]),
        .I4(aa_rready),
        .I5(\skid_buffer_reg_n_0_[3] ),
        .O(skid_buffer[3]));
  LUT6 #(
    .INIT(64'h3202FFFF32020000)) 
    \m_payload_i[4]_i_1 
       (.I0(m_axi_rdata[1]),
        .I1(m_atarget_enc[1]),
        .I2(m_atarget_enc[0]),
        .I3(m_axi_rdata[33]),
        .I4(aa_rready),
        .I5(\skid_buffer_reg_n_0_[4] ),
        .O(skid_buffer[4]));
  LUT6 #(
    .INIT(64'h3202FFFF32020000)) 
    \m_payload_i[5]_i_1 
       (.I0(m_axi_rdata[2]),
        .I1(m_atarget_enc[1]),
        .I2(m_atarget_enc[0]),
        .I3(m_axi_rdata[34]),
        .I4(aa_rready),
        .I5(\skid_buffer_reg_n_0_[5] ),
        .O(skid_buffer[5]));
  LUT6 #(
    .INIT(64'h3202FFFF32020000)) 
    \m_payload_i[6]_i_1 
       (.I0(m_axi_rdata[3]),
        .I1(m_atarget_enc[1]),
        .I2(m_atarget_enc[0]),
        .I3(m_axi_rdata[35]),
        .I4(aa_rready),
        .I5(\skid_buffer_reg_n_0_[6] ),
        .O(skid_buffer[6]));
  LUT6 #(
    .INIT(64'h3202FFFF32020000)) 
    \m_payload_i[7]_i_1 
       (.I0(m_axi_rdata[4]),
        .I1(m_atarget_enc[1]),
        .I2(m_atarget_enc[0]),
        .I3(m_axi_rdata[36]),
        .I4(aa_rready),
        .I5(\skid_buffer_reg_n_0_[7] ),
        .O(skid_buffer[7]));
  LUT6 #(
    .INIT(64'h3202FFFF32020000)) 
    \m_payload_i[8]_i_1 
       (.I0(m_axi_rdata[5]),
        .I1(m_atarget_enc[1]),
        .I2(m_atarget_enc[0]),
        .I3(m_axi_rdata[37]),
        .I4(aa_rready),
        .I5(\skid_buffer_reg_n_0_[8] ),
        .O(skid_buffer[8]));
  LUT6 #(
    .INIT(64'h3202FFFF32020000)) 
    \m_payload_i[9]_i_1 
       (.I0(m_axi_rdata[6]),
        .I1(m_atarget_enc[1]),
        .I2(m_atarget_enc[0]),
        .I3(m_axi_rdata[38]),
        .I4(aa_rready),
        .I5(\skid_buffer_reg_n_0_[9] ),
        .O(skid_buffer[9]));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[0] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[0]),
        .Q(\m_payload_i_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[10] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[10]),
        .Q(\WB_DAXI_Read_Data_reg[0] [9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[11] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[11]),
        .Q(\WB_DAXI_Read_Data_reg[0] [10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[12] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[12]),
        .Q(\WB_DAXI_Read_Data_reg[0] [11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[13] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[13]),
        .Q(\WB_DAXI_Read_Data_reg[0] [12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[14] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[14]),
        .Q(\WB_DAXI_Read_Data_reg[0] [13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[15] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[15]),
        .Q(\WB_DAXI_Read_Data_reg[0] [14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[16] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[16]),
        .Q(\WB_DAXI_Read_Data_reg[0] [15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[17] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[17]),
        .Q(\WB_DAXI_Read_Data_reg[0] [16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[18] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[18]),
        .Q(\WB_DAXI_Read_Data_reg[0] [17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[19] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[19]),
        .Q(\WB_DAXI_Read_Data_reg[0] [18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[20] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[20]),
        .Q(\WB_DAXI_Read_Data_reg[0] [19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[21] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[21]),
        .Q(\WB_DAXI_Read_Data_reg[0] [20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[22] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[22]),
        .Q(\WB_DAXI_Read_Data_reg[0] [21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[23] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[23]),
        .Q(\WB_DAXI_Read_Data_reg[0] [22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[24] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[24]),
        .Q(\WB_DAXI_Read_Data_reg[0] [23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[25] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[25]),
        .Q(\WB_DAXI_Read_Data_reg[0] [24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[26] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[26]),
        .Q(\WB_DAXI_Read_Data_reg[0] [25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[27] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[27]),
        .Q(\WB_DAXI_Read_Data_reg[0] [26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[28] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[28]),
        .Q(\WB_DAXI_Read_Data_reg[0] [27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[29] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[29]),
        .Q(\WB_DAXI_Read_Data_reg[0] [28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[30] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[30]),
        .Q(\WB_DAXI_Read_Data_reg[0] [29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[31] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[31]),
        .Q(\WB_DAXI_Read_Data_reg[0] [30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[32] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[32]),
        .Q(\WB_DAXI_Read_Data_reg[0] [31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[33] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[33]),
        .Q(\WB_DAXI_Read_Data_reg[0] [32]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[34] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[34]),
        .Q(\WB_DAXI_Read_Data_reg[0] [33]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[3] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[3]),
        .Q(\WB_DAXI_Read_Data_reg[0] [2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[4] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[4]),
        .Q(\WB_DAXI_Read_Data_reg[0] [3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[5] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[5]),
        .Q(\WB_DAXI_Read_Data_reg[0] [4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[6] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[6]),
        .Q(\WB_DAXI_Read_Data_reg[0] [5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[7] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[7]),
        .Q(\WB_DAXI_Read_Data_reg[0] [6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[8] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[8]),
        .Q(\WB_DAXI_Read_Data_reg[0] [7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[9] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[9]),
        .Q(\WB_DAXI_Read_Data_reg[0] [8]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h00007FFF)) 
    \m_ready_d[1]_i_3 
       (.I0(sr_rvalid),
        .I1(\m_payload_i_reg_n_0_[0] ),
        .I2(aa_grant_rnw),
        .I3(m_valid_i),
        .I4(m_ready_d),
        .O(\m_ready_d_reg[1] ));
  LUT5 #(
    .INIT(32'hA222A2A2)) 
    m_valid_i_i_1
       (.I0(\aresetn_d_reg_n_0_[1] ),
        .I1(s_ready_i_reg_0),
        .I2(sr_rvalid),
        .I3(m_ready_d),
        .I4(\gen_no_arbiter.grant_rnw_reg ),
        .O(m_valid_i_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    m_valid_i_reg
       (.C(aclk),
        .CE(1'b1),
        .D(m_valid_i_i_1_n_0),
        .Q(sr_rvalid),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hAAAA2A22)) 
    s_ready_i_i_1
       (.I0(\aresetn_d_reg_n_0_[0] ),
        .I1(sr_rvalid),
        .I2(m_ready_d),
        .I3(\gen_no_arbiter.grant_rnw_reg ),
        .I4(s_ready_i_reg_0),
        .O(s_ready_i_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    s_ready_i_reg
       (.C(aclk),
        .CE(1'b1),
        .D(s_ready_i_i_1_n_0),
        .Q(aa_rready),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h77F0)) 
    \skid_buffer[0]_i_1 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[0]),
        .I2(\skid_buffer_reg_n_0_[0] ),
        .I3(aa_rready),
        .O(skid_buffer[0]));
  LUT4 #(
    .INIT(16'h3202)) 
    \skid_buffer[10]_i_1 
       (.I0(m_axi_rdata[7]),
        .I1(m_atarget_enc[1]),
        .I2(m_atarget_enc[0]),
        .I3(m_axi_rdata[39]),
        .O(\skid_buffer[10]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \skid_buffer[11]_i_1 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[0]),
        .I2(m_axi_rdata[40]),
        .O(\skid_buffer[11]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \skid_buffer[12]_i_1 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[0]),
        .I2(m_axi_rdata[41]),
        .O(\skid_buffer[12]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \skid_buffer[13]_i_1 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[0]),
        .I2(m_axi_rdata[42]),
        .O(\skid_buffer[13]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \skid_buffer[14]_i_1 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[0]),
        .I2(m_axi_rdata[43]),
        .O(\skid_buffer[14]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \skid_buffer[15]_i_1 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[0]),
        .I2(m_axi_rdata[44]),
        .O(\skid_buffer[15]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \skid_buffer[16]_i_1 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[0]),
        .I2(m_axi_rdata[45]),
        .O(\skid_buffer[16]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \skid_buffer[17]_i_1 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[0]),
        .I2(m_axi_rdata[46]),
        .O(\skid_buffer[17]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \skid_buffer[18]_i_1 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[0]),
        .I2(m_axi_rdata[47]),
        .O(\skid_buffer[18]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \skid_buffer[19]_i_1 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[0]),
        .I2(m_axi_rdata[48]),
        .O(\skid_buffer[19]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \skid_buffer[20]_i_1 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[0]),
        .I2(m_axi_rdata[49]),
        .O(\skid_buffer[20]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \skid_buffer[21]_i_1 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[0]),
        .I2(m_axi_rdata[50]),
        .O(\skid_buffer[21]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \skid_buffer[22]_i_1 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[0]),
        .I2(m_axi_rdata[51]),
        .O(\skid_buffer[22]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \skid_buffer[23]_i_1 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[0]),
        .I2(m_axi_rdata[52]),
        .O(\skid_buffer[23]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \skid_buffer[24]_i_1 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[0]),
        .I2(m_axi_rdata[53]),
        .O(\skid_buffer[24]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \skid_buffer[25]_i_1 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[0]),
        .I2(m_axi_rdata[54]),
        .O(\skid_buffer[25]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \skid_buffer[26]_i_1 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[0]),
        .I2(m_axi_rdata[55]),
        .O(\skid_buffer[26]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \skid_buffer[27]_i_1 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[0]),
        .I2(m_axi_rdata[56]),
        .O(\skid_buffer[27]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \skid_buffer[28]_i_1 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[0]),
        .I2(m_axi_rdata[57]),
        .O(\skid_buffer[28]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \skid_buffer[29]_i_1 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[0]),
        .I2(m_axi_rdata[58]),
        .O(\skid_buffer[29]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \skid_buffer[30]_i_1 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[0]),
        .I2(m_axi_rdata[59]),
        .O(\skid_buffer[30]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \skid_buffer[31]_i_1 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[0]),
        .I2(m_axi_rdata[60]),
        .O(\skid_buffer[31]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \skid_buffer[32]_i_1 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[0]),
        .I2(m_axi_rdata[61]),
        .O(\skid_buffer[32]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \skid_buffer[33]_i_1 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[0]),
        .I2(m_axi_rdata[62]),
        .O(\skid_buffer[33]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \skid_buffer[34]_i_1 
       (.I0(m_atarget_enc[1]),
        .I1(m_atarget_enc[0]),
        .I2(m_axi_rdata[63]),
        .O(\skid_buffer[34]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h3202)) 
    \skid_buffer[3]_i_1 
       (.I0(m_axi_rdata[0]),
        .I1(m_atarget_enc[1]),
        .I2(m_atarget_enc[0]),
        .I3(m_axi_rdata[32]),
        .O(\skid_buffer[3]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h3202)) 
    \skid_buffer[4]_i_1 
       (.I0(m_axi_rdata[1]),
        .I1(m_atarget_enc[1]),
        .I2(m_atarget_enc[0]),
        .I3(m_axi_rdata[33]),
        .O(\skid_buffer[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h3202)) 
    \skid_buffer[5]_i_1 
       (.I0(m_axi_rdata[2]),
        .I1(m_atarget_enc[1]),
        .I2(m_atarget_enc[0]),
        .I3(m_axi_rdata[34]),
        .O(\skid_buffer[5]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h3202)) 
    \skid_buffer[6]_i_1 
       (.I0(m_axi_rdata[3]),
        .I1(m_atarget_enc[1]),
        .I2(m_atarget_enc[0]),
        .I3(m_axi_rdata[35]),
        .O(\skid_buffer[6]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h3202)) 
    \skid_buffer[7]_i_1 
       (.I0(m_axi_rdata[4]),
        .I1(m_atarget_enc[1]),
        .I2(m_atarget_enc[0]),
        .I3(m_axi_rdata[36]),
        .O(\skid_buffer[7]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h3202)) 
    \skid_buffer[8]_i_1 
       (.I0(m_axi_rdata[5]),
        .I1(m_atarget_enc[1]),
        .I2(m_atarget_enc[0]),
        .I3(m_axi_rdata[37]),
        .O(\skid_buffer[8]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h3202)) 
    \skid_buffer[9]_i_1 
       (.I0(m_axi_rdata[6]),
        .I1(m_atarget_enc[1]),
        .I2(m_atarget_enc[0]),
        .I3(m_axi_rdata[38]),
        .O(\skid_buffer[9]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[0] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[0]),
        .Q(\skid_buffer_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[10] 
       (.C(aclk),
        .CE(aa_rready),
        .D(\skid_buffer[10]_i_1_n_0 ),
        .Q(\skid_buffer_reg_n_0_[10] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[11] 
       (.C(aclk),
        .CE(aa_rready),
        .D(\skid_buffer[11]_i_1_n_0 ),
        .Q(\skid_buffer_reg_n_0_[11] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[12] 
       (.C(aclk),
        .CE(aa_rready),
        .D(\skid_buffer[12]_i_1_n_0 ),
        .Q(\skid_buffer_reg_n_0_[12] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[13] 
       (.C(aclk),
        .CE(aa_rready),
        .D(\skid_buffer[13]_i_1_n_0 ),
        .Q(\skid_buffer_reg_n_0_[13] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[14] 
       (.C(aclk),
        .CE(aa_rready),
        .D(\skid_buffer[14]_i_1_n_0 ),
        .Q(\skid_buffer_reg_n_0_[14] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[15] 
       (.C(aclk),
        .CE(aa_rready),
        .D(\skid_buffer[15]_i_1_n_0 ),
        .Q(\skid_buffer_reg_n_0_[15] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[16] 
       (.C(aclk),
        .CE(aa_rready),
        .D(\skid_buffer[16]_i_1_n_0 ),
        .Q(\skid_buffer_reg_n_0_[16] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[17] 
       (.C(aclk),
        .CE(aa_rready),
        .D(\skid_buffer[17]_i_1_n_0 ),
        .Q(\skid_buffer_reg_n_0_[17] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[18] 
       (.C(aclk),
        .CE(aa_rready),
        .D(\skid_buffer[18]_i_1_n_0 ),
        .Q(\skid_buffer_reg_n_0_[18] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[19] 
       (.C(aclk),
        .CE(aa_rready),
        .D(\skid_buffer[19]_i_1_n_0 ),
        .Q(\skid_buffer_reg_n_0_[19] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[20] 
       (.C(aclk),
        .CE(aa_rready),
        .D(\skid_buffer[20]_i_1_n_0 ),
        .Q(\skid_buffer_reg_n_0_[20] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[21] 
       (.C(aclk),
        .CE(aa_rready),
        .D(\skid_buffer[21]_i_1_n_0 ),
        .Q(\skid_buffer_reg_n_0_[21] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[22] 
       (.C(aclk),
        .CE(aa_rready),
        .D(\skid_buffer[22]_i_1_n_0 ),
        .Q(\skid_buffer_reg_n_0_[22] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[23] 
       (.C(aclk),
        .CE(aa_rready),
        .D(\skid_buffer[23]_i_1_n_0 ),
        .Q(\skid_buffer_reg_n_0_[23] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[24] 
       (.C(aclk),
        .CE(aa_rready),
        .D(\skid_buffer[24]_i_1_n_0 ),
        .Q(\skid_buffer_reg_n_0_[24] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[25] 
       (.C(aclk),
        .CE(aa_rready),
        .D(\skid_buffer[25]_i_1_n_0 ),
        .Q(\skid_buffer_reg_n_0_[25] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[26] 
       (.C(aclk),
        .CE(aa_rready),
        .D(\skid_buffer[26]_i_1_n_0 ),
        .Q(\skid_buffer_reg_n_0_[26] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[27] 
       (.C(aclk),
        .CE(aa_rready),
        .D(\skid_buffer[27]_i_1_n_0 ),
        .Q(\skid_buffer_reg_n_0_[27] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[28] 
       (.C(aclk),
        .CE(aa_rready),
        .D(\skid_buffer[28]_i_1_n_0 ),
        .Q(\skid_buffer_reg_n_0_[28] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[29] 
       (.C(aclk),
        .CE(aa_rready),
        .D(\skid_buffer[29]_i_1_n_0 ),
        .Q(\skid_buffer_reg_n_0_[29] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[30] 
       (.C(aclk),
        .CE(aa_rready),
        .D(\skid_buffer[30]_i_1_n_0 ),
        .Q(\skid_buffer_reg_n_0_[30] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[31] 
       (.C(aclk),
        .CE(aa_rready),
        .D(\skid_buffer[31]_i_1_n_0 ),
        .Q(\skid_buffer_reg_n_0_[31] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[32] 
       (.C(aclk),
        .CE(aa_rready),
        .D(\skid_buffer[32]_i_1_n_0 ),
        .Q(\skid_buffer_reg_n_0_[32] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[33] 
       (.C(aclk),
        .CE(aa_rready),
        .D(\skid_buffer[33]_i_1_n_0 ),
        .Q(\skid_buffer_reg_n_0_[33] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[34] 
       (.C(aclk),
        .CE(aa_rready),
        .D(\skid_buffer[34]_i_1_n_0 ),
        .Q(\skid_buffer_reg_n_0_[34] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[3] 
       (.C(aclk),
        .CE(aa_rready),
        .D(\skid_buffer[3]_i_1_n_0 ),
        .Q(\skid_buffer_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[4] 
       (.C(aclk),
        .CE(aa_rready),
        .D(\skid_buffer[4]_i_1_n_0 ),
        .Q(\skid_buffer_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[5] 
       (.C(aclk),
        .CE(aa_rready),
        .D(\skid_buffer[5]_i_1_n_0 ),
        .Q(\skid_buffer_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[6] 
       (.C(aclk),
        .CE(aa_rready),
        .D(\skid_buffer[6]_i_1_n_0 ),
        .Q(\skid_buffer_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[7] 
       (.C(aclk),
        .CE(aa_rready),
        .D(\skid_buffer[7]_i_1_n_0 ),
        .Q(\skid_buffer_reg_n_0_[7] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[8] 
       (.C(aclk),
        .CE(aa_rready),
        .D(\skid_buffer[8]_i_1_n_0 ),
        .Q(\skid_buffer_reg_n_0_[8] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[9] 
       (.C(aclk),
        .CE(aa_rready),
        .D(\skid_buffer[9]_i_1_n_0 ),
        .Q(\skid_buffer_reg_n_0_[9] ),
        .R(1'b0));
endmodule

(* C_BAUDRATE = "115200" *) (* C_DATA_BITS = "8" *) (* C_FAMILY = "zynq" *) 
(* C_ODD_PARITY = "0" *) (* C_S_AXI_ACLK_FREQ_HZ = "100000000" *) (* C_S_AXI_ADDR_WIDTH = "4" *) 
(* C_S_AXI_DATA_WIDTH = "32" *) (* C_USE_PARITY = "0" *) (* DowngradeIPIdentifiedWarnings = "yes" *) 
module axi_uartlite
   (s_axi_aclk,
    s_axi_aresetn,
    interrupt,
    s_axi_awaddr,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_araddr,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rvalid,
    s_axi_rready,
    rx,
    tx);
  (* max_fanout = "10000" *) input s_axi_aclk;
  (* max_fanout = "10000" *) input s_axi_aresetn;
  output interrupt;
  input [3:0]s_axi_awaddr;
  input s_axi_awvalid;
  output s_axi_awready;
  input [31:0]s_axi_wdata;
  input [3:0]s_axi_wstrb;
  input s_axi_wvalid;
  output s_axi_wready;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [3:0]s_axi_araddr;
  input s_axi_arvalid;
  output s_axi_arready;
  output [31:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rvalid;
  input s_axi_rready;
  input rx;
  output tx;

  wire AXI_LITE_IPIF_I_n_10;
  wire AXI_LITE_IPIF_I_n_12;
  wire AXI_LITE_IPIF_I_n_16;
  wire AXI_LITE_IPIF_I_n_8;
  wire \I_SLAVE_ATTACHMENT/I_DECODER/Bus_RNW_reg ;
  wire \I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  wire \I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  wire \UARTLITE_RX_I/rx_Data_Empty ;
  wire \UARTLITE_TX_I/fifo_wr ;
  wire [1:1]bus2ip_rdce;
  wire bus2ip_reset;
  wire enable_interrupts;
  wire reset_RX_FIFO;
  wire reset_TX_FIFO;
  wire rx;
  wire rx_Buffer_Full;
  wire [0:7]rx_Data;
  (* MAX_FANOUT = "10000" *) (* RTL_MAX_FANOUT = "found" *) wire s_axi_aclk;
  (* MAX_FANOUT = "10000" *) (* RTL_MAX_FANOUT = "found" *) wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire [3:0]s_axi_awaddr;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid;
  wire [31:0]s_axi_rdata;
  wire s_axi_rready;
  wire s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire s_axi_wvalid;
  wire [1:2]status_reg;
  wire tx;
  wire tx_Buffer_Empty;
  wire tx_Buffer_Full;
  wire NLW_AXI_LITE_IPIF_I_rx_Data_Present_Pre_reg_UNCONNECTED;
  wire NLW_AXI_LITE_IPIF_I_tx_Buffer_Empty_Pre_reg_UNCONNECTED;
  wire [1:0]NLW_AXI_LITE_IPIF_I_s_axi_araddr_UNCONNECTED;
  wire [0:0]NLW_AXI_LITE_IPIF_I_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_AXI_LITE_IPIF_I_s_axi_rresp_UNCONNECTED;
  wire \NLW_UARTLITE_CORE_I_ACTIVE_LOW_PR_OUT_DFF[0].peripheral_aresetn_reg[0]_UNCONNECTED ;
  wire \NLW_UARTLITE_CORE_I_INFERRED_GEN.cnt_i_reg[4]_UNCONNECTED ;
  wire NLW_UARTLITE_CORE_I_interrupt_UNCONNECTED;

  assign s_axi_wready = s_axi_awready;
  axi_lite_ipif AXI_LITE_IPIF_I
       (.Bus_RNW_reg(\I_SLAVE_ATTACHMENT/I_DECODER/Bus_RNW_reg ),
        .FIFO_Full_reg(AXI_LITE_IPIF_I_n_12),
        .\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg (\I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg (\I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .\INFERRED_GEN.cnt_i_reg[2] (AXI_LITE_IPIF_I_n_8),
        .\INFERRED_GEN.cnt_i_reg[2]_0 (AXI_LITE_IPIF_I_n_10),
        .\INFERRED_GEN.cnt_i_reg[4] (tx_Buffer_Empty),
        .Q(\UARTLITE_RX_I/rx_Data_Empty ),
        .bus2ip_rdce(bus2ip_rdce),
        .bus2ip_reset(bus2ip_reset),
        .enable_interrupts(enable_interrupts),
        .enable_interrupts_reg(AXI_LITE_IPIF_I_n_16),
        .fifo_wr(\UARTLITE_TX_I/fifo_wr ),
        .out({rx_Data[0],rx_Data[1],rx_Data[2],rx_Data[3],rx_Data[4],rx_Data[5],rx_Data[6],rx_Data[7]}),
        .reset_RX_FIFO(reset_RX_FIFO),
        .reset_TX_FIFO(reset_TX_FIFO),
        .rx_Buffer_Full(rx_Buffer_Full),
        .rx_Data_Present_Pre_reg(NLW_AXI_LITE_IPIF_I_rx_Data_Present_Pre_reg_UNCONNECTED),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr(NLW_AXI_LITE_IPIF_I_s_axi_araddr_UNCONNECTED[1:0]),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(s_axi_awaddr[3:2]),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(NLW_AXI_LITE_IPIF_I_s_axi_bresp_UNCONNECTED[0]),
        .s_axi_bvalid_i_reg(s_axi_bvalid),
        .s_axi_rdata(s_axi_rdata[7:0]),
        .s_axi_rready(s_axi_rready),
        .s_axi_rresp(NLW_AXI_LITE_IPIF_I_s_axi_rresp_UNCONNECTED[0]),
        .s_axi_rvalid_i_reg(s_axi_rvalid),
        .s_axi_wdata({s_axi_wdata[4],s_axi_wdata[1:0]}),
        .s_axi_wvalid(s_axi_wvalid),
        .status_reg({status_reg[1],status_reg[2]}),
        .tx_Buffer_Empty_Pre_reg(NLW_AXI_LITE_IPIF_I_tx_Buffer_Empty_Pre_reg_UNCONNECTED),
        .tx_Buffer_Full(tx_Buffer_Full));
  uartlite_core UARTLITE_CORE_I
       (.\ACTIVE_LOW_PR_OUT_DFF[0].peripheral_aresetn_reg[0] (\NLW_UARTLITE_CORE_I_ACTIVE_LOW_PR_OUT_DFF[0].peripheral_aresetn_reg[0]_UNCONNECTED ),
        .Bus_RNW_reg(\I_SLAVE_ATTACHMENT/I_DECODER/Bus_RNW_reg ),
        .Bus_RNW_reg_reg(AXI_LITE_IPIF_I_n_10),
        .FIFO_Full_reg(\UARTLITE_RX_I/rx_Data_Empty ),
        .\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg (\I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] (AXI_LITE_IPIF_I_n_12),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg (\I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] (AXI_LITE_IPIF_I_n_8),
        .\INFERRED_GEN.cnt_i_reg[4] (\NLW_UARTLITE_CORE_I_INFERRED_GEN.cnt_i_reg[4]_UNCONNECTED ),
        .\MEM_DataBus_Write_Data_reg[27] (AXI_LITE_IPIF_I_n_16),
        .Q(tx_Buffer_Empty),
        .bus2ip_rdce(bus2ip_rdce),
        .bus2ip_reset(bus2ip_reset),
        .enable_interrupts(enable_interrupts),
        .fifo_wr(\UARTLITE_TX_I/fifo_wr ),
        .interrupt(NLW_UARTLITE_CORE_I_interrupt_UNCONNECTED),
        .out({rx_Data[0],rx_Data[1],rx_Data[2],rx_Data[3],rx_Data[4],rx_Data[5],rx_Data[6],rx_Data[7]}),
        .reset_RX_FIFO(reset_RX_FIFO),
        .reset_TX_FIFO(reset_TX_FIFO),
        .rx(rx),
        .rx_Buffer_Full(rx_Buffer_Full),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_wdata(s_axi_wdata[7:0]),
        .status_reg({status_reg[1],status_reg[2]}),
        .tx(tx),
        .tx_Buffer_Full(tx_Buffer_Full));
endmodule

module baudrate
   (en_16x_Baud,
    SR,
    s_axi_aclk);
  output en_16x_Baud;
  input [0:0]SR;
  input s_axi_aclk;

  wire EN_16x_Baud_i_1_n_0;
  wire [0:0]SR;
  wire \count[0]_i_1_n_0 ;
  wire \count[1]_i_1_n_0 ;
  wire \count[2]_i_1_n_0 ;
  wire \count[3]_i_1_n_0 ;
  wire \count[4]_i_1_n_0 ;
  wire \count[5]_i_1_n_0 ;
  wire \count_reg_n_0_[0] ;
  wire \count_reg_n_0_[1] ;
  wire \count_reg_n_0_[2] ;
  wire \count_reg_n_0_[3] ;
  wire \count_reg_n_0_[4] ;
  wire \count_reg_n_0_[5] ;
  wire en_16x_Baud;
  wire s_axi_aclk;

  LUT6 #(
    .INIT(64'h0000000000000001)) 
    EN_16x_Baud_i_1
       (.I0(\count_reg_n_0_[5] ),
        .I1(\count_reg_n_0_[4] ),
        .I2(\count_reg_n_0_[1] ),
        .I3(\count_reg_n_0_[0] ),
        .I4(\count_reg_n_0_[3] ),
        .I5(\count_reg_n_0_[2] ),
        .O(EN_16x_Baud_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    EN_16x_Baud_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(EN_16x_Baud_i_1_n_0),
        .Q(en_16x_Baud),
        .R(SR));
  LUT1 #(
    .INIT(2'h1)) 
    \count[0]_i_1 
       (.I0(\count_reg_n_0_[0] ),
        .O(\count[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF00FF00FF00FF00E)) 
    \count[1]_i_1 
       (.I0(\count_reg_n_0_[2] ),
        .I1(\count_reg_n_0_[3] ),
        .I2(\count_reg_n_0_[0] ),
        .I3(\count_reg_n_0_[1] ),
        .I4(\count_reg_n_0_[4] ),
        .I5(\count_reg_n_0_[5] ),
        .O(\count[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT3 #(
    .INIT(8'hA9)) 
    \count[2]_i_1 
       (.I0(\count_reg_n_0_[2] ),
        .I1(\count_reg_n_0_[0] ),
        .I2(\count_reg_n_0_[1] ),
        .O(\count[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCCC9CCC9CCC9CCC8)) 
    \count[3]_i_1 
       (.I0(\count_reg_n_0_[2] ),
        .I1(\count_reg_n_0_[3] ),
        .I2(\count_reg_n_0_[0] ),
        .I3(\count_reg_n_0_[1] ),
        .I4(\count_reg_n_0_[4] ),
        .I5(\count_reg_n_0_[5] ),
        .O(\count[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT5 #(
    .INIT(32'hAAAAAAA9)) 
    \count[4]_i_1 
       (.I0(\count_reg_n_0_[4] ),
        .I1(\count_reg_n_0_[2] ),
        .I2(\count_reg_n_0_[0] ),
        .I3(\count_reg_n_0_[1] ),
        .I4(\count_reg_n_0_[3] ),
        .O(\count[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAA9)) 
    \count[5]_i_1 
       (.I0(\count_reg_n_0_[5] ),
        .I1(\count_reg_n_0_[3] ),
        .I2(\count_reg_n_0_[1] ),
        .I3(\count_reg_n_0_[0] ),
        .I4(\count_reg_n_0_[2] ),
        .I5(\count_reg_n_0_[4] ),
        .O(\count[5]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\count[0]_i_1_n_0 ),
        .Q(\count_reg_n_0_[0] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\count[1]_i_1_n_0 ),
        .Q(\count_reg_n_0_[1] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\count[2]_i_1_n_0 ),
        .Q(\count_reg_n_0_[2] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\count[3]_i_1_n_0 ),
        .Q(\count_reg_n_0_[3] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\count[4]_i_1_n_0 ),
        .Q(\count_reg_n_0_[4] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\count[5]_i_1_n_0 ),
        .Q(\count_reg_n_0_[5] ),
        .R(SR));
endmodule

module ca_core
   (reset,
    internal_max_iter,
    r_FF_reg,
    s00_axi_aclk,
    Q,
    start_iter,
    shift_ca,
    s00_axi_aresetn,
    stop_iter,
    r_FF,
    \Register_GOLDIR_reg[0] );
  output reset;
  output internal_max_iter;
  output r_FF_reg;
  input s00_axi_aclk;
  input [31:0]Q;
  input start_iter;
  input shift_ca;
  input s00_axi_aresetn;
  input stop_iter;
  input r_FF;
  input [0:0]\Register_GOLDIR_reg[0] ;

  wire [31:0]Q;
  wire [0:0]\Register_GOLDIR_reg[0] ;
  wire \cnt_iter[0]_i_1_n_0 ;
  wire \cnt_iter[0]_i_6_n_0 ;
  wire [31:0]cnt_iter_reg;
  wire \cnt_iter_reg[0]_i_2_n_0 ;
  wire \cnt_iter_reg[0]_i_2_n_4 ;
  wire \cnt_iter_reg[0]_i_2_n_5 ;
  wire \cnt_iter_reg[0]_i_2_n_6 ;
  wire \cnt_iter_reg[0]_i_2_n_7 ;
  wire \cnt_iter_reg[12]_i_1_n_0 ;
  wire \cnt_iter_reg[12]_i_1_n_4 ;
  wire \cnt_iter_reg[12]_i_1_n_5 ;
  wire \cnt_iter_reg[12]_i_1_n_6 ;
  wire \cnt_iter_reg[12]_i_1_n_7 ;
  wire \cnt_iter_reg[16]_i_1_n_0 ;
  wire \cnt_iter_reg[16]_i_1_n_4 ;
  wire \cnt_iter_reg[16]_i_1_n_5 ;
  wire \cnt_iter_reg[16]_i_1_n_6 ;
  wire \cnt_iter_reg[16]_i_1_n_7 ;
  wire \cnt_iter_reg[20]_i_1_n_0 ;
  wire \cnt_iter_reg[20]_i_1_n_4 ;
  wire \cnt_iter_reg[20]_i_1_n_5 ;
  wire \cnt_iter_reg[20]_i_1_n_6 ;
  wire \cnt_iter_reg[20]_i_1_n_7 ;
  wire \cnt_iter_reg[24]_i_1_n_0 ;
  wire \cnt_iter_reg[24]_i_1_n_4 ;
  wire \cnt_iter_reg[24]_i_1_n_5 ;
  wire \cnt_iter_reg[24]_i_1_n_6 ;
  wire \cnt_iter_reg[24]_i_1_n_7 ;
  wire \cnt_iter_reg[28]_i_1_n_4 ;
  wire \cnt_iter_reg[28]_i_1_n_5 ;
  wire \cnt_iter_reg[28]_i_1_n_6 ;
  wire \cnt_iter_reg[28]_i_1_n_7 ;
  wire \cnt_iter_reg[4]_i_1_n_0 ;
  wire \cnt_iter_reg[4]_i_1_n_4 ;
  wire \cnt_iter_reg[4]_i_1_n_5 ;
  wire \cnt_iter_reg[4]_i_1_n_6 ;
  wire \cnt_iter_reg[4]_i_1_n_7 ;
  wire \cnt_iter_reg[8]_i_1_n_0 ;
  wire \cnt_iter_reg[8]_i_1_n_4 ;
  wire \cnt_iter_reg[8]_i_1_n_5 ;
  wire \cnt_iter_reg[8]_i_1_n_6 ;
  wire \cnt_iter_reg[8]_i_1_n_7 ;
  wire internal_ce0;
  wire internal_ce0_carry__0_i_1_n_0;
  wire internal_ce0_carry__0_i_2_n_0;
  wire internal_ce0_carry__0_i_3_n_0;
  wire internal_ce0_carry__0_i_4_n_0;
  wire internal_ce0_carry__0_n_0;
  wire internal_ce0_carry__1_i_1_n_0;
  wire internal_ce0_carry__1_i_2_n_0;
  wire internal_ce0_carry__1_i_3_n_0;
  wire internal_ce0_carry_i_1_n_0;
  wire internal_ce0_carry_i_2_n_0;
  wire internal_ce0_carry_i_3_n_0;
  wire internal_ce0_carry_i_4_n_0;
  wire internal_ce0_carry_n_0;
  wire internal_ce_i_1_n_0;
  wire internal_ce_reg_n_0;
  wire internal_max_iter;
  wire internal_max_iter_i_1_n_0;
  wire internal_max_iter_i_2_n_0;
  wire internal_shift_i_1_n_0;
  wire internal_shift_reg_rep_n_0;
  wire internal_shift_rep_i_1_n_0;
  wire [31:1]minusOp;
  wire minusOp_carry__0_i_1_n_0;
  wire minusOp_carry__0_i_2_n_0;
  wire minusOp_carry__0_i_3_n_0;
  wire minusOp_carry__0_i_4_n_0;
  wire minusOp_carry__0_n_0;
  wire minusOp_carry__1_i_1_n_0;
  wire minusOp_carry__1_i_2_n_0;
  wire minusOp_carry__1_i_3_n_0;
  wire minusOp_carry__1_i_4_n_0;
  wire minusOp_carry__1_n_0;
  wire minusOp_carry__2_i_1_n_0;
  wire minusOp_carry__2_i_2_n_0;
  wire minusOp_carry__2_i_3_n_0;
  wire minusOp_carry__2_i_4_n_0;
  wire minusOp_carry__2_n_0;
  wire minusOp_carry__3_i_1_n_0;
  wire minusOp_carry__3_i_2_n_0;
  wire minusOp_carry__3_i_3_n_0;
  wire minusOp_carry__3_i_4_n_0;
  wire minusOp_carry__3_n_0;
  wire minusOp_carry__4_i_1_n_0;
  wire minusOp_carry__4_i_2_n_0;
  wire minusOp_carry__4_i_3_n_0;
  wire minusOp_carry__4_i_4_n_0;
  wire minusOp_carry__4_n_0;
  wire minusOp_carry__5_i_1_n_0;
  wire minusOp_carry__5_i_2_n_0;
  wire minusOp_carry__5_i_3_n_0;
  wire minusOp_carry__5_i_4_n_0;
  wire minusOp_carry__5_n_0;
  wire minusOp_carry__6_i_1_n_0;
  wire minusOp_carry__6_i_2_n_0;
  wire minusOp_carry__6_i_3_n_0;
  wire minusOp_carry_i_1_n_0;
  wire minusOp_carry_i_2_n_0;
  wire minusOp_carry_i_3_n_0;
  wire minusOp_carry_i_4_n_0;
  wire minusOp_carry_n_0;
  wire r_FF;
  wire r_FF_reg;
  wire reset;
  wire s00_axi_aclk;
  wire s00_axi_aresetn;
  wire shift;
  wire shift_ca;
  wire start_iter;
  wire state;
  wire state_i_1_n_0;
  wire stop_iter;
  wire [2:0]\NLW_cnt_iter_reg[0]_i_2_CO_UNCONNECTED ;
  wire [2:0]\NLW_cnt_iter_reg[12]_i_1_CO_UNCONNECTED ;
  wire [2:0]\NLW_cnt_iter_reg[16]_i_1_CO_UNCONNECTED ;
  wire [2:0]\NLW_cnt_iter_reg[20]_i_1_CO_UNCONNECTED ;
  wire [2:0]\NLW_cnt_iter_reg[24]_i_1_CO_UNCONNECTED ;
  wire [3:0]\NLW_cnt_iter_reg[28]_i_1_CO_UNCONNECTED ;
  wire [2:0]\NLW_cnt_iter_reg[4]_i_1_CO_UNCONNECTED ;
  wire [2:0]\NLW_cnt_iter_reg[8]_i_1_CO_UNCONNECTED ;
  wire [2:0]NLW_internal_ce0_carry_CO_UNCONNECTED;
  wire [3:0]NLW_internal_ce0_carry_O_UNCONNECTED;
  wire [2:0]NLW_internal_ce0_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_internal_ce0_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_internal_ce0_carry__1_CO_UNCONNECTED;
  wire [3:0]NLW_internal_ce0_carry__1_O_UNCONNECTED;
  wire [2:0]NLW_minusOp_carry_CO_UNCONNECTED;
  wire [2:0]NLW_minusOp_carry__0_CO_UNCONNECTED;
  wire [2:0]NLW_minusOp_carry__1_CO_UNCONNECTED;
  wire [2:0]NLW_minusOp_carry__2_CO_UNCONNECTED;
  wire [2:0]NLW_minusOp_carry__3_CO_UNCONNECTED;
  wire [2:0]NLW_minusOp_carry__4_CO_UNCONNECTED;
  wire [2:0]NLW_minusOp_carry__5_CO_UNCONNECTED;
  wire [3:0]NLW_minusOp_carry__6_CO_UNCONNECTED;
  wire [3:3]NLW_minusOp_carry__6_O_UNCONNECTED;

  grid Field
       (.\Register_GOLDIR_reg[0] (\Register_GOLDIR_reg[0] ),
        .ce(internal_ce_reg_n_0),
        .internal_shift_reg_rep(internal_shift_reg_rep_n_0),
        .r_FF(r_FF),
        .r_FF_reg(r_FF_reg),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift),
        .shift_ca(shift_ca));
  LUT2 #(
    .INIT(4'h7)) 
    \cnt_iter[0]_i_1 
       (.I0(s00_axi_aresetn),
        .I1(state),
        .O(\cnt_iter[0]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cnt_iter[0]_i_6 
       (.I0(cnt_iter_reg[0]),
        .O(\cnt_iter[0]_i_6_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \cnt_iter_reg[0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\cnt_iter_reg[0]_i_2_n_7 ),
        .Q(cnt_iter_reg[0]),
        .R(\cnt_iter[0]_i_1_n_0 ));
  CARRY4 \cnt_iter_reg[0]_i_2 
       (.CI(1'b0),
        .CO({\cnt_iter_reg[0]_i_2_n_0 ,\NLW_cnt_iter_reg[0]_i_2_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\cnt_iter_reg[0]_i_2_n_4 ,\cnt_iter_reg[0]_i_2_n_5 ,\cnt_iter_reg[0]_i_2_n_6 ,\cnt_iter_reg[0]_i_2_n_7 }),
        .S({cnt_iter_reg[3:1],\cnt_iter[0]_i_6_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \cnt_iter_reg[10] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\cnt_iter_reg[8]_i_1_n_5 ),
        .Q(cnt_iter_reg[10]),
        .R(\cnt_iter[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \cnt_iter_reg[11] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\cnt_iter_reg[8]_i_1_n_4 ),
        .Q(cnt_iter_reg[11]),
        .R(\cnt_iter[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \cnt_iter_reg[12] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\cnt_iter_reg[12]_i_1_n_7 ),
        .Q(cnt_iter_reg[12]),
        .R(\cnt_iter[0]_i_1_n_0 ));
  CARRY4 \cnt_iter_reg[12]_i_1 
       (.CI(\cnt_iter_reg[8]_i_1_n_0 ),
        .CO({\cnt_iter_reg[12]_i_1_n_0 ,\NLW_cnt_iter_reg[12]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\cnt_iter_reg[12]_i_1_n_4 ,\cnt_iter_reg[12]_i_1_n_5 ,\cnt_iter_reg[12]_i_1_n_6 ,\cnt_iter_reg[12]_i_1_n_7 }),
        .S(cnt_iter_reg[15:12]));
  FDRE #(
    .INIT(1'b0)) 
    \cnt_iter_reg[13] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\cnt_iter_reg[12]_i_1_n_6 ),
        .Q(cnt_iter_reg[13]),
        .R(\cnt_iter[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \cnt_iter_reg[14] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\cnt_iter_reg[12]_i_1_n_5 ),
        .Q(cnt_iter_reg[14]),
        .R(\cnt_iter[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \cnt_iter_reg[15] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\cnt_iter_reg[12]_i_1_n_4 ),
        .Q(cnt_iter_reg[15]),
        .R(\cnt_iter[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \cnt_iter_reg[16] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\cnt_iter_reg[16]_i_1_n_7 ),
        .Q(cnt_iter_reg[16]),
        .R(\cnt_iter[0]_i_1_n_0 ));
  CARRY4 \cnt_iter_reg[16]_i_1 
       (.CI(\cnt_iter_reg[12]_i_1_n_0 ),
        .CO({\cnt_iter_reg[16]_i_1_n_0 ,\NLW_cnt_iter_reg[16]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\cnt_iter_reg[16]_i_1_n_4 ,\cnt_iter_reg[16]_i_1_n_5 ,\cnt_iter_reg[16]_i_1_n_6 ,\cnt_iter_reg[16]_i_1_n_7 }),
        .S(cnt_iter_reg[19:16]));
  FDRE #(
    .INIT(1'b0)) 
    \cnt_iter_reg[17] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\cnt_iter_reg[16]_i_1_n_6 ),
        .Q(cnt_iter_reg[17]),
        .R(\cnt_iter[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \cnt_iter_reg[18] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\cnt_iter_reg[16]_i_1_n_5 ),
        .Q(cnt_iter_reg[18]),
        .R(\cnt_iter[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \cnt_iter_reg[19] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\cnt_iter_reg[16]_i_1_n_4 ),
        .Q(cnt_iter_reg[19]),
        .R(\cnt_iter[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \cnt_iter_reg[1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\cnt_iter_reg[0]_i_2_n_6 ),
        .Q(cnt_iter_reg[1]),
        .R(\cnt_iter[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \cnt_iter_reg[20] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\cnt_iter_reg[20]_i_1_n_7 ),
        .Q(cnt_iter_reg[20]),
        .R(\cnt_iter[0]_i_1_n_0 ));
  CARRY4 \cnt_iter_reg[20]_i_1 
       (.CI(\cnt_iter_reg[16]_i_1_n_0 ),
        .CO({\cnt_iter_reg[20]_i_1_n_0 ,\NLW_cnt_iter_reg[20]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\cnt_iter_reg[20]_i_1_n_4 ,\cnt_iter_reg[20]_i_1_n_5 ,\cnt_iter_reg[20]_i_1_n_6 ,\cnt_iter_reg[20]_i_1_n_7 }),
        .S(cnt_iter_reg[23:20]));
  FDRE #(
    .INIT(1'b0)) 
    \cnt_iter_reg[21] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\cnt_iter_reg[20]_i_1_n_6 ),
        .Q(cnt_iter_reg[21]),
        .R(\cnt_iter[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \cnt_iter_reg[22] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\cnt_iter_reg[20]_i_1_n_5 ),
        .Q(cnt_iter_reg[22]),
        .R(\cnt_iter[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \cnt_iter_reg[23] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\cnt_iter_reg[20]_i_1_n_4 ),
        .Q(cnt_iter_reg[23]),
        .R(\cnt_iter[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \cnt_iter_reg[24] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\cnt_iter_reg[24]_i_1_n_7 ),
        .Q(cnt_iter_reg[24]),
        .R(\cnt_iter[0]_i_1_n_0 ));
  CARRY4 \cnt_iter_reg[24]_i_1 
       (.CI(\cnt_iter_reg[20]_i_1_n_0 ),
        .CO({\cnt_iter_reg[24]_i_1_n_0 ,\NLW_cnt_iter_reg[24]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\cnt_iter_reg[24]_i_1_n_4 ,\cnt_iter_reg[24]_i_1_n_5 ,\cnt_iter_reg[24]_i_1_n_6 ,\cnt_iter_reg[24]_i_1_n_7 }),
        .S(cnt_iter_reg[27:24]));
  FDRE #(
    .INIT(1'b0)) 
    \cnt_iter_reg[25] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\cnt_iter_reg[24]_i_1_n_6 ),
        .Q(cnt_iter_reg[25]),
        .R(\cnt_iter[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \cnt_iter_reg[26] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\cnt_iter_reg[24]_i_1_n_5 ),
        .Q(cnt_iter_reg[26]),
        .R(\cnt_iter[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \cnt_iter_reg[27] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\cnt_iter_reg[24]_i_1_n_4 ),
        .Q(cnt_iter_reg[27]),
        .R(\cnt_iter[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \cnt_iter_reg[28] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\cnt_iter_reg[28]_i_1_n_7 ),
        .Q(cnt_iter_reg[28]),
        .R(\cnt_iter[0]_i_1_n_0 ));
  CARRY4 \cnt_iter_reg[28]_i_1 
       (.CI(\cnt_iter_reg[24]_i_1_n_0 ),
        .CO(\NLW_cnt_iter_reg[28]_i_1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\cnt_iter_reg[28]_i_1_n_4 ,\cnt_iter_reg[28]_i_1_n_5 ,\cnt_iter_reg[28]_i_1_n_6 ,\cnt_iter_reg[28]_i_1_n_7 }),
        .S(cnt_iter_reg[31:28]));
  FDRE #(
    .INIT(1'b0)) 
    \cnt_iter_reg[29] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\cnt_iter_reg[28]_i_1_n_6 ),
        .Q(cnt_iter_reg[29]),
        .R(\cnt_iter[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \cnt_iter_reg[2] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\cnt_iter_reg[0]_i_2_n_5 ),
        .Q(cnt_iter_reg[2]),
        .R(\cnt_iter[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \cnt_iter_reg[30] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\cnt_iter_reg[28]_i_1_n_5 ),
        .Q(cnt_iter_reg[30]),
        .R(\cnt_iter[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \cnt_iter_reg[31] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\cnt_iter_reg[28]_i_1_n_4 ),
        .Q(cnt_iter_reg[31]),
        .R(\cnt_iter[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \cnt_iter_reg[3] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\cnt_iter_reg[0]_i_2_n_4 ),
        .Q(cnt_iter_reg[3]),
        .R(\cnt_iter[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \cnt_iter_reg[4] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\cnt_iter_reg[4]_i_1_n_7 ),
        .Q(cnt_iter_reg[4]),
        .R(\cnt_iter[0]_i_1_n_0 ));
  CARRY4 \cnt_iter_reg[4]_i_1 
       (.CI(\cnt_iter_reg[0]_i_2_n_0 ),
        .CO({\cnt_iter_reg[4]_i_1_n_0 ,\NLW_cnt_iter_reg[4]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\cnt_iter_reg[4]_i_1_n_4 ,\cnt_iter_reg[4]_i_1_n_5 ,\cnt_iter_reg[4]_i_1_n_6 ,\cnt_iter_reg[4]_i_1_n_7 }),
        .S(cnt_iter_reg[7:4]));
  FDRE #(
    .INIT(1'b0)) 
    \cnt_iter_reg[5] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\cnt_iter_reg[4]_i_1_n_6 ),
        .Q(cnt_iter_reg[5]),
        .R(\cnt_iter[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \cnt_iter_reg[6] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\cnt_iter_reg[4]_i_1_n_5 ),
        .Q(cnt_iter_reg[6]),
        .R(\cnt_iter[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \cnt_iter_reg[7] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\cnt_iter_reg[4]_i_1_n_4 ),
        .Q(cnt_iter_reg[7]),
        .R(\cnt_iter[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \cnt_iter_reg[8] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\cnt_iter_reg[8]_i_1_n_7 ),
        .Q(cnt_iter_reg[8]),
        .R(\cnt_iter[0]_i_1_n_0 ));
  CARRY4 \cnt_iter_reg[8]_i_1 
       (.CI(\cnt_iter_reg[4]_i_1_n_0 ),
        .CO({\cnt_iter_reg[8]_i_1_n_0 ,\NLW_cnt_iter_reg[8]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\cnt_iter_reg[8]_i_1_n_4 ,\cnt_iter_reg[8]_i_1_n_5 ,\cnt_iter_reg[8]_i_1_n_6 ,\cnt_iter_reg[8]_i_1_n_7 }),
        .S(cnt_iter_reg[11:8]));
  FDRE #(
    .INIT(1'b0)) 
    \cnt_iter_reg[9] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\cnt_iter_reg[8]_i_1_n_6 ),
        .Q(cnt_iter_reg[9]),
        .R(\cnt_iter[0]_i_1_n_0 ));
  CARRY4 internal_ce0_carry
       (.CI(1'b0),
        .CO({internal_ce0_carry_n_0,NLW_internal_ce0_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_internal_ce0_carry_O_UNCONNECTED[3:0]),
        .S({internal_ce0_carry_i_1_n_0,internal_ce0_carry_i_2_n_0,internal_ce0_carry_i_3_n_0,internal_ce0_carry_i_4_n_0}));
  CARRY4 internal_ce0_carry__0
       (.CI(internal_ce0_carry_n_0),
        .CO({internal_ce0_carry__0_n_0,NLW_internal_ce0_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_internal_ce0_carry__0_O_UNCONNECTED[3:0]),
        .S({internal_ce0_carry__0_i_1_n_0,internal_ce0_carry__0_i_2_n_0,internal_ce0_carry__0_i_3_n_0,internal_ce0_carry__0_i_4_n_0}));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    internal_ce0_carry__0_i_1
       (.I0(cnt_iter_reg[21]),
        .I1(minusOp[21]),
        .I2(minusOp[23]),
        .I3(cnt_iter_reg[23]),
        .I4(minusOp[22]),
        .I5(cnt_iter_reg[22]),
        .O(internal_ce0_carry__0_i_1_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    internal_ce0_carry__0_i_2
       (.I0(cnt_iter_reg[18]),
        .I1(minusOp[18]),
        .I2(minusOp[20]),
        .I3(cnt_iter_reg[20]),
        .I4(minusOp[19]),
        .I5(cnt_iter_reg[19]),
        .O(internal_ce0_carry__0_i_2_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    internal_ce0_carry__0_i_3
       (.I0(cnt_iter_reg[15]),
        .I1(minusOp[15]),
        .I2(minusOp[17]),
        .I3(cnt_iter_reg[17]),
        .I4(minusOp[16]),
        .I5(cnt_iter_reg[16]),
        .O(internal_ce0_carry__0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    internal_ce0_carry__0_i_4
       (.I0(cnt_iter_reg[12]),
        .I1(minusOp[12]),
        .I2(minusOp[14]),
        .I3(cnt_iter_reg[14]),
        .I4(minusOp[13]),
        .I5(cnt_iter_reg[13]),
        .O(internal_ce0_carry__0_i_4_n_0));
  CARRY4 internal_ce0_carry__1
       (.CI(internal_ce0_carry__0_n_0),
        .CO({NLW_internal_ce0_carry__1_CO_UNCONNECTED[3],internal_ce0,NLW_internal_ce0_carry__1_CO_UNCONNECTED[1:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_internal_ce0_carry__1_O_UNCONNECTED[3:0]),
        .S({1'b0,internal_ce0_carry__1_i_1_n_0,internal_ce0_carry__1_i_2_n_0,internal_ce0_carry__1_i_3_n_0}));
  LUT4 #(
    .INIT(16'h9009)) 
    internal_ce0_carry__1_i_1
       (.I0(cnt_iter_reg[30]),
        .I1(minusOp[30]),
        .I2(cnt_iter_reg[31]),
        .I3(minusOp[31]),
        .O(internal_ce0_carry__1_i_1_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    internal_ce0_carry__1_i_2
       (.I0(cnt_iter_reg[27]),
        .I1(minusOp[27]),
        .I2(minusOp[29]),
        .I3(cnt_iter_reg[29]),
        .I4(minusOp[28]),
        .I5(cnt_iter_reg[28]),
        .O(internal_ce0_carry__1_i_2_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    internal_ce0_carry__1_i_3
       (.I0(cnt_iter_reg[24]),
        .I1(minusOp[24]),
        .I2(minusOp[26]),
        .I3(cnt_iter_reg[26]),
        .I4(minusOp[25]),
        .I5(cnt_iter_reg[25]),
        .O(internal_ce0_carry__1_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    internal_ce0_carry_i_1
       (.I0(cnt_iter_reg[9]),
        .I1(minusOp[9]),
        .I2(minusOp[11]),
        .I3(cnt_iter_reg[11]),
        .I4(minusOp[10]),
        .I5(cnt_iter_reg[10]),
        .O(internal_ce0_carry_i_1_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    internal_ce0_carry_i_2
       (.I0(cnt_iter_reg[6]),
        .I1(minusOp[6]),
        .I2(minusOp[8]),
        .I3(cnt_iter_reg[8]),
        .I4(minusOp[7]),
        .I5(cnt_iter_reg[7]),
        .O(internal_ce0_carry_i_2_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    internal_ce0_carry_i_3
       (.I0(cnt_iter_reg[3]),
        .I1(minusOp[3]),
        .I2(minusOp[5]),
        .I3(cnt_iter_reg[5]),
        .I4(minusOp[4]),
        .I5(cnt_iter_reg[4]),
        .O(internal_ce0_carry_i_3_n_0));
  LUT6 #(
    .INIT(64'h6006000000006006)) 
    internal_ce0_carry_i_4
       (.I0(cnt_iter_reg[0]),
        .I1(Q[0]),
        .I2(minusOp[2]),
        .I3(cnt_iter_reg[2]),
        .I4(minusOp[1]),
        .I5(cnt_iter_reg[1]),
        .O(internal_ce0_carry_i_4_n_0));
  LUT6 #(
    .INIT(64'h03FF03AA00FF00AA)) 
    internal_ce_i_1
       (.I0(start_iter),
        .I1(stop_iter),
        .I2(internal_ce0),
        .I3(state),
        .I4(shift_ca),
        .I5(internal_ce_reg_n_0),
        .O(internal_ce_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    internal_ce_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(internal_ce_i_1_n_0),
        .Q(internal_ce_reg_n_0),
        .R(reset));
  LUT6 #(
    .INIT(64'hBA00BA000000AA00)) 
    internal_max_iter_i_1
       (.I0(internal_max_iter),
        .I1(stop_iter),
        .I2(internal_ce0),
        .I3(s00_axi_aresetn),
        .I4(internal_max_iter_i_2_n_0),
        .I5(state),
        .O(internal_max_iter_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    internal_max_iter_i_2
       (.I0(start_iter),
        .I1(shift_ca),
        .O(internal_max_iter_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    internal_max_iter_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(internal_max_iter_i_1_n_0),
        .Q(internal_max_iter),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFF55FC55)) 
    internal_shift_i_1
       (.I0(shift_ca),
        .I1(internal_ce0),
        .I2(stop_iter),
        .I3(state),
        .I4(shift),
        .O(internal_shift_i_1_n_0));
  (* ORIG_CELL_NAME = "internal_shift_reg" *) 
  FDSE #(
    .INIT(1'b1)) 
    internal_shift_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(internal_shift_i_1_n_0),
        .Q(shift),
        .S(reset));
  (* ORIG_CELL_NAME = "internal_shift_reg" *) 
  FDSE #(
    .INIT(1'b1)) 
    internal_shift_reg_rep
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(internal_shift_rep_i_1_n_0),
        .Q(internal_shift_reg_rep_n_0),
        .S(reset));
  LUT5 #(
    .INIT(32'hFF55FC55)) 
    internal_shift_rep_i_1
       (.I0(shift_ca),
        .I1(internal_ce0),
        .I2(stop_iter),
        .I3(state),
        .I4(shift),
        .O(internal_shift_rep_i_1_n_0));
  CARRY4 minusOp_carry
       (.CI(1'b0),
        .CO({minusOp_carry_n_0,NLW_minusOp_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(Q[0]),
        .DI(Q[4:1]),
        .O(minusOp[4:1]),
        .S({minusOp_carry_i_1_n_0,minusOp_carry_i_2_n_0,minusOp_carry_i_3_n_0,minusOp_carry_i_4_n_0}));
  CARRY4 minusOp_carry__0
       (.CI(minusOp_carry_n_0),
        .CO({minusOp_carry__0_n_0,NLW_minusOp_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(Q[8:5]),
        .O(minusOp[8:5]),
        .S({minusOp_carry__0_i_1_n_0,minusOp_carry__0_i_2_n_0,minusOp_carry__0_i_3_n_0,minusOp_carry__0_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__0_i_1
       (.I0(Q[8]),
        .O(minusOp_carry__0_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__0_i_2
       (.I0(Q[7]),
        .O(minusOp_carry__0_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__0_i_3
       (.I0(Q[6]),
        .O(minusOp_carry__0_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__0_i_4
       (.I0(Q[5]),
        .O(minusOp_carry__0_i_4_n_0));
  CARRY4 minusOp_carry__1
       (.CI(minusOp_carry__0_n_0),
        .CO({minusOp_carry__1_n_0,NLW_minusOp_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(Q[12:9]),
        .O(minusOp[12:9]),
        .S({minusOp_carry__1_i_1_n_0,minusOp_carry__1_i_2_n_0,minusOp_carry__1_i_3_n_0,minusOp_carry__1_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__1_i_1
       (.I0(Q[12]),
        .O(minusOp_carry__1_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__1_i_2
       (.I0(Q[11]),
        .O(minusOp_carry__1_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__1_i_3
       (.I0(Q[10]),
        .O(minusOp_carry__1_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__1_i_4
       (.I0(Q[9]),
        .O(minusOp_carry__1_i_4_n_0));
  CARRY4 minusOp_carry__2
       (.CI(minusOp_carry__1_n_0),
        .CO({minusOp_carry__2_n_0,NLW_minusOp_carry__2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(Q[16:13]),
        .O(minusOp[16:13]),
        .S({minusOp_carry__2_i_1_n_0,minusOp_carry__2_i_2_n_0,minusOp_carry__2_i_3_n_0,minusOp_carry__2_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__2_i_1
       (.I0(Q[16]),
        .O(minusOp_carry__2_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__2_i_2
       (.I0(Q[15]),
        .O(minusOp_carry__2_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__2_i_3
       (.I0(Q[14]),
        .O(minusOp_carry__2_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__2_i_4
       (.I0(Q[13]),
        .O(minusOp_carry__2_i_4_n_0));
  CARRY4 minusOp_carry__3
       (.CI(minusOp_carry__2_n_0),
        .CO({minusOp_carry__3_n_0,NLW_minusOp_carry__3_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(Q[20:17]),
        .O(minusOp[20:17]),
        .S({minusOp_carry__3_i_1_n_0,minusOp_carry__3_i_2_n_0,minusOp_carry__3_i_3_n_0,minusOp_carry__3_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__3_i_1
       (.I0(Q[20]),
        .O(minusOp_carry__3_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__3_i_2
       (.I0(Q[19]),
        .O(minusOp_carry__3_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__3_i_3
       (.I0(Q[18]),
        .O(minusOp_carry__3_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__3_i_4
       (.I0(Q[17]),
        .O(minusOp_carry__3_i_4_n_0));
  CARRY4 minusOp_carry__4
       (.CI(minusOp_carry__3_n_0),
        .CO({minusOp_carry__4_n_0,NLW_minusOp_carry__4_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(Q[24:21]),
        .O(minusOp[24:21]),
        .S({minusOp_carry__4_i_1_n_0,minusOp_carry__4_i_2_n_0,minusOp_carry__4_i_3_n_0,minusOp_carry__4_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__4_i_1
       (.I0(Q[24]),
        .O(minusOp_carry__4_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__4_i_2
       (.I0(Q[23]),
        .O(minusOp_carry__4_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__4_i_3
       (.I0(Q[22]),
        .O(minusOp_carry__4_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__4_i_4
       (.I0(Q[21]),
        .O(minusOp_carry__4_i_4_n_0));
  CARRY4 minusOp_carry__5
       (.CI(minusOp_carry__4_n_0),
        .CO({minusOp_carry__5_n_0,NLW_minusOp_carry__5_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(Q[28:25]),
        .O(minusOp[28:25]),
        .S({minusOp_carry__5_i_1_n_0,minusOp_carry__5_i_2_n_0,minusOp_carry__5_i_3_n_0,minusOp_carry__5_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__5_i_1
       (.I0(Q[28]),
        .O(minusOp_carry__5_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__5_i_2
       (.I0(Q[27]),
        .O(minusOp_carry__5_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__5_i_3
       (.I0(Q[26]),
        .O(minusOp_carry__5_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__5_i_4
       (.I0(Q[25]),
        .O(minusOp_carry__5_i_4_n_0));
  CARRY4 minusOp_carry__6
       (.CI(minusOp_carry__5_n_0),
        .CO(NLW_minusOp_carry__6_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,Q[30:29]}),
        .O({NLW_minusOp_carry__6_O_UNCONNECTED[3],minusOp[31:29]}),
        .S({1'b0,minusOp_carry__6_i_1_n_0,minusOp_carry__6_i_2_n_0,minusOp_carry__6_i_3_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__6_i_1
       (.I0(Q[31]),
        .O(minusOp_carry__6_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__6_i_2
       (.I0(Q[30]),
        .O(minusOp_carry__6_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__6_i_3
       (.I0(Q[29]),
        .O(minusOp_carry__6_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry_i_1
       (.I0(Q[4]),
        .O(minusOp_carry_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry_i_2
       (.I0(Q[3]),
        .O(minusOp_carry_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry_i_3
       (.I0(Q[2]),
        .O(minusOp_carry_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry_i_4
       (.I0(Q[1]),
        .O(minusOp_carry_i_4_n_0));
  LUT5 #(
    .INIT(32'h10101F10)) 
    state_i_1
       (.I0(internal_ce0),
        .I1(stop_iter),
        .I2(state),
        .I3(start_iter),
        .I4(shift_ca),
        .O(state_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    state_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(state_i_1_n_0),
        .Q(state),
        .R(reset));
  LUT1 #(
    .INIT(2'h1)) 
    w_ready_i_1
       (.I0(s00_axi_aresetn),
        .O(reset));
endmodule

module cdc_sync
   (p_26_out,
    scndry_out,
    EN_16x_Baud_reg,
    in,
    s_axi_aresetn,
    start_Edge_Detected,
    rx,
    s_axi_aclk);
  output p_26_out;
  output scndry_out;
  input EN_16x_Baud_reg;
  input [0:0]in;
  input s_axi_aresetn;
  input start_Edge_Detected;
  input rx;
  input s_axi_aclk;

  wire EN_16x_Baud_reg;
  wire [0:0]in;
  wire p_26_out;
  wire rx;
  wire s_axi_aclk;
  wire s_axi_aresetn;
  wire s_level_out_d1_cdc_to;
  wire s_level_out_d2;
  wire s_level_out_d3;
  wire scndry_out;
  wire start_Edge_Detected;

  initial assign \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to .notifier = 1'bx;
(* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(rx),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  initial assign \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2 .notifier = 1'bx;
(* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  initial assign \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3 .notifier = 1'bx;
(* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  initial assign \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 .notifier = 1'bx;
(* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(scndry_out),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFF00E200)) 
    \SERIAL_TO_PARALLEL[1].fifo_din[1]_i_1 
       (.I0(scndry_out),
        .I1(EN_16x_Baud_reg),
        .I2(in),
        .I3(s_axi_aresetn),
        .I4(start_Edge_Detected),
        .O(p_26_out));
endmodule

(* ORIG_REF_NAME = "cdc_sync" *) 
module cdc_sync__parameterized0
   (lpf_exr_reg,
    scndry_out,
    ext_reset_in,
    mb_debug_sys_rst,
    lpf_exr,
    p_3_out,
    slowest_sync_clk);
  output lpf_exr_reg;
  output scndry_out;
  input ext_reset_in;
  input mb_debug_sys_rst;
  input lpf_exr;
  input [2:0]p_3_out;
  input slowest_sync_clk;

  wire exr_d1;
  wire ext_reset_in;
  wire lpf_exr;
  wire lpf_exr_reg;
  wire mb_debug_sys_rst;
  wire [2:0]p_3_out;
  wire s_level_out_d1_cdc_to;
  wire s_level_out_d2;
  wire s_level_out_d3;
  wire scndry_out;
  wire slowest_sync_clk;

  initial assign \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to .notifier = 1'bx;
(* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(exr_d1),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to_i_1 
       (.I0(ext_reset_in),
        .I1(mb_debug_sys_rst),
        .O(exr_d1));
  initial assign \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2 .notifier = 1'bx;
(* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  initial assign \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3 .notifier = 1'bx;
(* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  initial assign \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 .notifier = 1'bx;
(* ASYNC_REG *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(scndry_out),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEAAAAAA8)) 
    lpf_exr_i_1
       (.I0(lpf_exr),
        .I1(p_3_out[0]),
        .I2(scndry_out),
        .I3(p_3_out[1]),
        .I4(p_3_out[2]),
        .O(lpf_exr_reg));
endmodule

module \cell 
   (FDRE_I1_0,
    prox,
    Q,
    \Register_GOLDIR_reg[0] ,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]prox;
  input Q;
  input [0:0]\Register_GOLDIR_reg[0] ;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire Q;
  wire [0:0]\Register_GOLDIR_reg[0] ;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire [1:0]prox;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({1'b0,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'h96)) 
    LUT6_BIT0
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(Q),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    LUT6_BIT1
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(Q),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(\Register_GOLDIR_reg[0] ),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_585
   (FDRE_I1_0,
    prox,
    Q,
    FDRE_I1_1,
    FDRE_I1_2,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]prox;
  input Q;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire [1:0]prox;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    LUT6_BIT0
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(Q),
        .I3(FDRE_I1_1),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h7EE8)) 
    LUT6_BIT1
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(Q),
        .I3(FDRE_I1_1),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    LUT6_BIT2
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(Q),
        .I3(FDRE_I1_1),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_2),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_586
   (FDRE_I1_0,
    prox,
    Q,
    FDRE_I1_1,
    FDRE_I1_2,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]prox;
  input Q;
  input FDRE_I1_1;
  input [0:0]FDRE_I1_2;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire [0:0]FDRE_I1_2;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire [1:0]prox;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    LUT6_BIT0
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(Q),
        .I3(FDRE_I1_1),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h7EE8)) 
    LUT6_BIT1
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(Q),
        .I3(FDRE_I1_1),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    LUT6_BIT2
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(Q),
        .I3(FDRE_I1_1),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_2),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_587
   (FDRE_I1_0,
    prox,
    Q,
    FDRE_I1_1,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]prox;
  input Q;
  input [1:0]FDRE_I1_1;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire [1:0]FDRE_I1_1;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire [1:0]prox;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    LUT6_BIT0
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(Q),
        .I3(FDRE_I1_1[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h7EE8)) 
    LUT6_BIT1
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(Q),
        .I3(FDRE_I1_1[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    LUT6_BIT2
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(Q),
        .I3(FDRE_I1_1[1]),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_1[0]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_588
   (FDRE_I1_0,
    prox,
    Q,
    FDRE_I1_1,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]prox;
  input Q;
  input [1:0]FDRE_I1_1;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire [1:0]FDRE_I1_1;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire [1:0]prox;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    LUT6_BIT0
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(Q),
        .I3(FDRE_I1_1[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h7EE8)) 
    LUT6_BIT1
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(Q),
        .I3(FDRE_I1_1[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    LUT6_BIT2
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(Q),
        .I3(FDRE_I1_1[1]),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_1[0]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_589
   (FDRE_I1_0,
    prox,
    Q,
    FDRE_I1_1,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]prox;
  input Q;
  input [1:0]FDRE_I1_1;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire [1:0]FDRE_I1_1;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire [1:0]prox;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    LUT6_BIT0
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(Q),
        .I3(FDRE_I1_1[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h7EE8)) 
    LUT6_BIT1
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(Q),
        .I3(FDRE_I1_1[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    LUT6_BIT2
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(Q),
        .I3(FDRE_I1_1[1]),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_1[0]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_590
   (FDRE_I1_0,
    prox,
    Q,
    FDRE_I1_1,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]prox;
  input Q;
  input [1:0]FDRE_I1_1;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire [1:0]FDRE_I1_1;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire [1:0]prox;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    LUT6_BIT0
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(Q),
        .I3(FDRE_I1_1[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h7EE8)) 
    LUT6_BIT1
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(Q),
        .I3(FDRE_I1_1[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    LUT6_BIT2
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(Q),
        .I3(FDRE_I1_1[1]),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_1[0]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_591
   (FDRE_I1_0,
    prox,
    Q,
    FDRE_I1_1,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]prox;
  input Q;
  input [1:0]FDRE_I1_1;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire [1:0]FDRE_I1_1;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire [1:0]prox;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    LUT6_BIT0
       (.I0(prox[0]),
        .I1(Q),
        .I2(prox[1]),
        .I3(FDRE_I1_1[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h7EE8)) 
    LUT6_BIT1
       (.I0(prox[0]),
        .I1(Q),
        .I2(prox[1]),
        .I3(FDRE_I1_1[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    LUT6_BIT2
       (.I0(prox[0]),
        .I1(Q),
        .I2(prox[1]),
        .I3(FDRE_I1_1[1]),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_1[0]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_592
   (Q,
    prox,
    FDRE_I1_0,
    shift,
    ce,
    s00_axi_aclk);
  output Q;
  input [1:0]prox;
  input [0:0]FDRE_I1_0;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire [0:0]FDRE_I1_0;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire [1:0]prox;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({1'b0,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(Q),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT2 #(
    .INIT(4'h6)) 
    LUT6_BIT0
       (.I0(prox[0]),
        .I1(prox[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT2 #(
    .INIT(4'h8)) 
    LUT6_BIT1
       (.I0(prox[0]),
        .I1(prox[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(Q),
        .I1(FDRE_I1_0),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_593
   (FDRE_I1_0,
    prox,
    Q,
    FDRE_I1_1,
    FDRE_I1_2,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]prox;
  input Q;
  input FDRE_I1_1;
  input [0:0]FDRE_I1_2;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire [0:0]FDRE_I1_2;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire [1:0]prox;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    LUT6_BIT0
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(Q),
        .I3(FDRE_I1_1),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h7EE8)) 
    LUT6_BIT1
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(Q),
        .I3(FDRE_I1_1),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    LUT6_BIT2
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(Q),
        .I3(FDRE_I1_1),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_2),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_594
   (FDRE_I1_0,
    prox,
    Q,
    FDRE_I1_1,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]prox;
  input Q;
  input [1:0]FDRE_I1_1;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire [1:0]FDRE_I1_1;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire [1:0]prox;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    LUT6_BIT0
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(Q),
        .I3(FDRE_I1_1[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h7EE8)) 
    LUT6_BIT1
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(Q),
        .I3(FDRE_I1_1[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    LUT6_BIT2
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(Q),
        .I3(FDRE_I1_1[1]),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_1[0]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_595
   (FDRE_I1_0,
    prox,
    Q,
    FDRE_I1_1,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]prox;
  input Q;
  input [1:0]FDRE_I1_1;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire [1:0]FDRE_I1_1;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire [1:0]prox;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    LUT6_BIT0
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(Q),
        .I3(FDRE_I1_1[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h7EE8)) 
    LUT6_BIT1
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(Q),
        .I3(FDRE_I1_1[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    LUT6_BIT2
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(Q),
        .I3(FDRE_I1_1[1]),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_1[0]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_596
   (FDRE_I1_0,
    prox,
    Q,
    FDRE_I1_1,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]prox;
  input Q;
  input [1:0]FDRE_I1_1;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire [1:0]FDRE_I1_1;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire [1:0]prox;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    LUT6_BIT0
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(Q),
        .I3(FDRE_I1_1[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h7EE8)) 
    LUT6_BIT1
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(Q),
        .I3(FDRE_I1_1[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    LUT6_BIT2
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(Q),
        .I3(FDRE_I1_1[1]),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_1[0]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_597
   (FDRE_I1_0,
    prox,
    Q,
    FDRE_I1_1,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]prox;
  input Q;
  input [1:0]FDRE_I1_1;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire [1:0]FDRE_I1_1;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire [1:0]prox;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    LUT6_BIT0
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(Q),
        .I3(FDRE_I1_1[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h7EE8)) 
    LUT6_BIT1
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(Q),
        .I3(FDRE_I1_1[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    LUT6_BIT2
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(Q),
        .I3(FDRE_I1_1[1]),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_1[0]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_598
   (FDRE_I1_0,
    prox,
    Q,
    FDRE_I1_1,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]prox;
  input Q;
  input [1:0]FDRE_I1_1;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire [1:0]FDRE_I1_1;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire [1:0]prox;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    LUT6_BIT0
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(Q),
        .I3(FDRE_I1_1[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h7EE8)) 
    LUT6_BIT1
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(Q),
        .I3(FDRE_I1_1[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    LUT6_BIT2
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(Q),
        .I3(FDRE_I1_1[1]),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_1[0]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_599
   (FDRE_I1_0,
    prox,
    Q,
    FDRE_I1_1,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]prox;
  input Q;
  input [1:0]FDRE_I1_1;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire [1:0]FDRE_I1_1;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire [1:0]prox;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    LUT6_BIT0
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(Q),
        .I3(FDRE_I1_1[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h7EE8)) 
    LUT6_BIT1
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(Q),
        .I3(FDRE_I1_1[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    LUT6_BIT2
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(Q),
        .I3(FDRE_I1_1[1]),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_1[0]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_600
   (FDRE_I1_0,
    Q,
    FDRE_I1_1,
    FDRE_I1_2,
    prox,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input Q;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input [1:0]prox;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire [1:0]prox;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    LUT6_BIT0
       (.I0(Q),
        .I1(FDRE_I1_1),
        .I2(FDRE_I1_2),
        .I3(prox[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h7EE8)) 
    LUT6_BIT1
       (.I0(Q),
        .I1(FDRE_I1_1),
        .I2(FDRE_I1_2),
        .I3(prox[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    LUT6_BIT2
       (.I0(Q),
        .I1(FDRE_I1_1),
        .I2(FDRE_I1_2),
        .I3(prox[1]),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(prox[0]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_601
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    prox,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input [1:0]prox;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire [1:0]prox;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(prox[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(prox[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(prox[1]),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(prox[0]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_602
   (FDRE_I1_0,
    prox,
    Q,
    FDRE_I1_1,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [2:0]prox;
  input Q;
  input FDRE_I1_1;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire [2:0]prox;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    LUT6_BIT0
       (.I0(prox[2]),
        .I1(prox[0]),
        .I2(prox[1]),
        .I3(Q),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h7EE8)) 
    LUT6_BIT1
       (.I0(prox[2]),
        .I1(prox[0]),
        .I2(prox[1]),
        .I3(Q),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    LUT6_BIT2
       (.I0(prox[2]),
        .I1(prox[0]),
        .I2(prox[1]),
        .I3(Q),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_1),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_603
   (FDRE_I1_0,
    prox,
    Q,
    FDRE_I1_1,
    FDRE_I1_2,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [2:0]prox;
  input Q;
  input [1:0]FDRE_I1_1;
  input [1:0]FDRE_I1_2;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire [1:0]FDRE_I1_1;
  wire [1:0]FDRE_I1_2;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire [2:0]prox;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_2[0]),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_2[0]}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(prox[2]),
        .I1(prox[0]),
        .I2(prox[1]),
        .I3(Q),
        .I4(FDRE_I1_1[1]),
        .I5(FDRE_I1_2[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(prox[2]),
        .I1(prox[0]),
        .I2(prox[1]),
        .I3(Q),
        .I4(FDRE_I1_1[1]),
        .I5(FDRE_I1_2[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(prox[2]),
        .I1(prox[0]),
        .I2(prox[1]),
        .I3(Q),
        .I4(FDRE_I1_1[1]),
        .I5(FDRE_I1_2[1]),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_1[0]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_604
   (FDRE_I1_0,
    prox,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [2:0]prox;
  input [1:0]FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input [0:0]FDRE_I1_3;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire [1:0]FDRE_I1_1;
  wire FDRE_I1_2;
  wire [0:0]FDRE_I1_3;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire [2:0]prox;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_1[1]),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_1[1]}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(prox[2]),
        .I1(prox[0]),
        .I2(prox[1]),
        .I3(FDRE_I1_1[0]),
        .I4(Q),
        .I5(FDRE_I1_2),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(prox[2]),
        .I1(prox[0]),
        .I2(prox[1]),
        .I3(FDRE_I1_1[0]),
        .I4(Q),
        .I5(FDRE_I1_2),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(prox[2]),
        .I1(prox[0]),
        .I2(prox[1]),
        .I3(FDRE_I1_1[0]),
        .I4(Q),
        .I5(FDRE_I1_2),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_3),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_605
   (Q,
    prox,
    FDRE_I1_0,
    FDRE_I1_1,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output Q;
  input [2:0]prox;
  input [1:0]FDRE_I1_0;
  input [2:0]FDRE_I1_1;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire [1:0]FDRE_I1_0;
  wire [2:0]FDRE_I1_1;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire [2:0]prox;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_0[1]),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_0[1]}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(Q),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(prox[2]),
        .I1(prox[0]),
        .I2(prox[1]),
        .I3(FDRE_I1_0[0]),
        .I4(FDRE_I1_1[1]),
        .I5(FDRE_I1_1[2]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(prox[2]),
        .I1(prox[0]),
        .I2(prox[1]),
        .I3(FDRE_I1_0[0]),
        .I4(FDRE_I1_1[1]),
        .I5(FDRE_I1_1[2]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(prox[2]),
        .I1(prox[0]),
        .I2(prox[1]),
        .I3(FDRE_I1_0[0]),
        .I4(FDRE_I1_1[1]),
        .I5(FDRE_I1_1[2]),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(Q),
        .I1(FDRE_I1_1[0]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_606
   (Q,
    prox,
    FDRE_I1_0,
    FDRE_I1_1,
    shift,
    ce,
    s00_axi_aclk);
  output Q;
  input [2:0]prox;
  input [1:0]FDRE_I1_0;
  input [2:0]FDRE_I1_1;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire [1:0]FDRE_I1_0;
  wire [2:0]FDRE_I1_1;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire [2:0]prox;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_0[1]),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_0[1]}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(Q),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(prox[2]),
        .I1(prox[0]),
        .I2(prox[1]),
        .I3(FDRE_I1_0[0]),
        .I4(FDRE_I1_1[1]),
        .I5(FDRE_I1_1[2]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(prox[2]),
        .I1(prox[0]),
        .I2(prox[1]),
        .I3(FDRE_I1_0[0]),
        .I4(FDRE_I1_1[1]),
        .I5(FDRE_I1_1[2]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(prox[2]),
        .I1(prox[0]),
        .I2(prox[1]),
        .I3(FDRE_I1_0[0]),
        .I4(FDRE_I1_1[1]),
        .I5(FDRE_I1_1[2]),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(Q),
        .I1(FDRE_I1_1[0]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_607
   (Q,
    prox,
    FDRE_I1_0,
    FDRE_I1_1,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output Q;
  input [2:0]prox;
  input [1:0]FDRE_I1_0;
  input [2:0]FDRE_I1_1;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire [1:0]FDRE_I1_0;
  wire [2:0]FDRE_I1_1;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire [2:0]prox;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_0[1]),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_0[1]}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(Q),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(prox[2]),
        .I1(prox[0]),
        .I2(prox[1]),
        .I3(FDRE_I1_0[0]),
        .I4(FDRE_I1_1[1]),
        .I5(FDRE_I1_1[2]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(prox[2]),
        .I1(prox[0]),
        .I2(prox[1]),
        .I3(FDRE_I1_0[0]),
        .I4(FDRE_I1_1[1]),
        .I5(FDRE_I1_1[2]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(prox[2]),
        .I1(prox[0]),
        .I2(prox[1]),
        .I3(FDRE_I1_0[0]),
        .I4(FDRE_I1_1[1]),
        .I5(FDRE_I1_1[2]),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(Q),
        .I1(FDRE_I1_1[0]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_608
   (Q,
    prox,
    FDRE_I1_0,
    FDRE_I1_1,
    shift,
    ce,
    s00_axi_aclk);
  output Q;
  input [2:0]prox;
  input [1:0]FDRE_I1_0;
  input [2:0]FDRE_I1_1;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire [1:0]FDRE_I1_0;
  wire [2:0]FDRE_I1_1;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire [2:0]prox;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_0[1]),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_0[1]}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(Q),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(prox[2]),
        .I1(prox[0]),
        .I2(prox[1]),
        .I3(FDRE_I1_0[0]),
        .I4(FDRE_I1_1[1]),
        .I5(FDRE_I1_1[2]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(prox[2]),
        .I1(prox[0]),
        .I2(prox[1]),
        .I3(FDRE_I1_0[0]),
        .I4(FDRE_I1_1[1]),
        .I5(FDRE_I1_1[2]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(prox[2]),
        .I1(prox[0]),
        .I2(prox[1]),
        .I3(FDRE_I1_0[0]),
        .I4(FDRE_I1_1[1]),
        .I5(FDRE_I1_1[2]),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(Q),
        .I1(FDRE_I1_1[0]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_609
   (FDRE_I1_0,
    prox,
    Q,
    FDRE_I1_1,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [3:0]prox;
  input Q;
  input [2:0]FDRE_I1_1;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire [2:0]FDRE_I1_1;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire [3:0]prox;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(prox[3]),
        .DI({1'b0,1'b0,1'b0,prox[3]}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(prox[0]),
        .I1(Q),
        .I2(prox[1]),
        .I3(prox[2]),
        .I4(FDRE_I1_1[1]),
        .I5(FDRE_I1_1[2]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(prox[0]),
        .I1(Q),
        .I2(prox[1]),
        .I3(prox[2]),
        .I4(FDRE_I1_1[1]),
        .I5(FDRE_I1_1[2]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(prox[0]),
        .I1(Q),
        .I2(prox[1]),
        .I3(prox[2]),
        .I4(FDRE_I1_1[1]),
        .I5(FDRE_I1_1[2]),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_1[0]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_610
   (Q,
    prox,
    FDRE_I1_0,
    shift,
    ce,
    s00_axi_aclk);
  output Q;
  input [3:0]prox;
  input [0:0]FDRE_I1_0;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire [0:0]FDRE_I1_0;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire [3:0]prox;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(prox[0]),
        .DI({1'b0,1'b0,1'b0,prox[0]}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({1'b0,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(Q),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'h96)) 
    LUT6_BIT0
       (.I0(prox[1]),
        .I1(prox[2]),
        .I2(prox[3]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    LUT6_BIT1
       (.I0(prox[1]),
        .I1(prox[2]),
        .I2(prox[3]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(Q),
        .I1(FDRE_I1_0),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_611
   (FDRE_I1_0,
    prox,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [2:0]prox;
  input [1:0]FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input [0:0]FDRE_I1_3;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire [1:0]FDRE_I1_1;
  wire FDRE_I1_2;
  wire [0:0]FDRE_I1_3;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire [2:0]prox;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_1[1]),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_1[1]}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(prox[2]),
        .I1(prox[0]),
        .I2(prox[1]),
        .I3(FDRE_I1_1[0]),
        .I4(Q),
        .I5(FDRE_I1_2),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(prox[2]),
        .I1(prox[0]),
        .I2(prox[1]),
        .I3(FDRE_I1_1[0]),
        .I4(Q),
        .I5(FDRE_I1_2),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(prox[2]),
        .I1(prox[0]),
        .I2(prox[1]),
        .I3(FDRE_I1_1[0]),
        .I4(Q),
        .I5(FDRE_I1_2),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_3),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_612
   (Q,
    prox,
    FDRE_I1_0,
    FDRE_I1_1,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output Q;
  input [2:0]prox;
  input [1:0]FDRE_I1_0;
  input [2:0]FDRE_I1_1;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire [1:0]FDRE_I1_0;
  wire [2:0]FDRE_I1_1;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire [2:0]prox;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_0[1]),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_0[1]}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(Q),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(prox[2]),
        .I1(prox[0]),
        .I2(prox[1]),
        .I3(FDRE_I1_0[0]),
        .I4(FDRE_I1_1[1]),
        .I5(FDRE_I1_1[2]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(prox[2]),
        .I1(prox[0]),
        .I2(prox[1]),
        .I3(FDRE_I1_0[0]),
        .I4(FDRE_I1_1[1]),
        .I5(FDRE_I1_1[2]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(prox[2]),
        .I1(prox[0]),
        .I2(prox[1]),
        .I3(FDRE_I1_0[0]),
        .I4(FDRE_I1_1[1]),
        .I5(FDRE_I1_1[2]),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(Q),
        .I1(FDRE_I1_1[0]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_613
   (Q,
    prox,
    FDRE_I1_0,
    FDRE_I1_1,
    shift,
    ce,
    s00_axi_aclk);
  output Q;
  input [2:0]prox;
  input [1:0]FDRE_I1_0;
  input [2:0]FDRE_I1_1;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire [1:0]FDRE_I1_0;
  wire [2:0]FDRE_I1_1;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire [2:0]prox;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_0[1]),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_0[1]}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(Q),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(prox[2]),
        .I1(prox[0]),
        .I2(prox[1]),
        .I3(FDRE_I1_0[0]),
        .I4(FDRE_I1_1[1]),
        .I5(FDRE_I1_1[2]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(prox[2]),
        .I1(prox[0]),
        .I2(prox[1]),
        .I3(FDRE_I1_0[0]),
        .I4(FDRE_I1_1[1]),
        .I5(FDRE_I1_1[2]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(prox[2]),
        .I1(prox[0]),
        .I2(prox[1]),
        .I3(FDRE_I1_0[0]),
        .I4(FDRE_I1_1[1]),
        .I5(FDRE_I1_1[2]),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(Q),
        .I1(FDRE_I1_1[0]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_614
   (Q,
    prox,
    FDRE_I1_0,
    FDRE_I1_1,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output Q;
  input [2:0]prox;
  input [1:0]FDRE_I1_0;
  input [2:0]FDRE_I1_1;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire [1:0]FDRE_I1_0;
  wire [2:0]FDRE_I1_1;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire [2:0]prox;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_0[1]),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_0[1]}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(Q),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(prox[2]),
        .I1(prox[0]),
        .I2(prox[1]),
        .I3(FDRE_I1_0[0]),
        .I4(FDRE_I1_1[1]),
        .I5(FDRE_I1_1[2]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(prox[2]),
        .I1(prox[0]),
        .I2(prox[1]),
        .I3(FDRE_I1_0[0]),
        .I4(FDRE_I1_1[1]),
        .I5(FDRE_I1_1[2]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(prox[2]),
        .I1(prox[0]),
        .I2(prox[1]),
        .I3(FDRE_I1_0[0]),
        .I4(FDRE_I1_1[1]),
        .I5(FDRE_I1_1[2]),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(Q),
        .I1(FDRE_I1_1[0]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_615
   (Q,
    prox,
    FDRE_I1_0,
    FDRE_I1_1,
    shift,
    ce,
    s00_axi_aclk);
  output Q;
  input [2:0]prox;
  input [1:0]FDRE_I1_0;
  input [2:0]FDRE_I1_1;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire [1:0]FDRE_I1_0;
  wire [2:0]FDRE_I1_1;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire [2:0]prox;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_0[1]),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_0[1]}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(Q),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(prox[2]),
        .I1(prox[0]),
        .I2(prox[1]),
        .I3(FDRE_I1_0[0]),
        .I4(FDRE_I1_1[1]),
        .I5(FDRE_I1_1[2]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(prox[2]),
        .I1(prox[0]),
        .I2(prox[1]),
        .I3(FDRE_I1_0[0]),
        .I4(FDRE_I1_1[1]),
        .I5(FDRE_I1_1[2]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(prox[2]),
        .I1(prox[0]),
        .I2(prox[1]),
        .I3(FDRE_I1_0[0]),
        .I4(FDRE_I1_1[1]),
        .I5(FDRE_I1_1[2]),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(Q),
        .I1(FDRE_I1_1[0]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_616
   (Q,
    prox,
    FDRE_I1_0,
    FDRE_I1_1,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output Q;
  input [2:0]prox;
  input [1:0]FDRE_I1_0;
  input [2:0]FDRE_I1_1;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire [1:0]FDRE_I1_0;
  wire [2:0]FDRE_I1_1;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire [2:0]prox;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_0[1]),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_0[1]}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(Q),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(prox[2]),
        .I1(prox[0]),
        .I2(prox[1]),
        .I3(FDRE_I1_0[0]),
        .I4(FDRE_I1_1[1]),
        .I5(FDRE_I1_1[2]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(prox[2]),
        .I1(prox[0]),
        .I2(prox[1]),
        .I3(FDRE_I1_0[0]),
        .I4(FDRE_I1_1[1]),
        .I5(FDRE_I1_1[2]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(prox[2]),
        .I1(prox[0]),
        .I2(prox[1]),
        .I3(FDRE_I1_0[0]),
        .I4(FDRE_I1_1[1]),
        .I5(FDRE_I1_1[2]),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(Q),
        .I1(FDRE_I1_1[0]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_617
   (Q,
    prox,
    FDRE_I1_0,
    FDRE_I1_1,
    shift,
    ce,
    s00_axi_aclk);
  output Q;
  input [2:0]prox;
  input [1:0]FDRE_I1_0;
  input [2:0]FDRE_I1_1;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire [1:0]FDRE_I1_0;
  wire [2:0]FDRE_I1_1;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire [2:0]prox;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_0[1]),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_0[1]}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(Q),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(prox[2]),
        .I1(prox[0]),
        .I2(prox[1]),
        .I3(FDRE_I1_0[0]),
        .I4(FDRE_I1_1[1]),
        .I5(FDRE_I1_1[2]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(prox[2]),
        .I1(prox[0]),
        .I2(prox[1]),
        .I3(FDRE_I1_0[0]),
        .I4(FDRE_I1_1[1]),
        .I5(FDRE_I1_1[2]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(prox[2]),
        .I1(prox[0]),
        .I2(prox[1]),
        .I3(FDRE_I1_0[0]),
        .I4(FDRE_I1_1[1]),
        .I5(FDRE_I1_1[2]),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(Q),
        .I1(FDRE_I1_1[0]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_618
   (FDRE_I1_0,
    prox,
    Q,
    FDRE_I1_1,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [3:0]prox;
  input Q;
  input [2:0]FDRE_I1_1;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire [2:0]FDRE_I1_1;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire [3:0]prox;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(prox[3]),
        .DI({1'b0,1'b0,1'b0,prox[3]}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(prox[0]),
        .I1(Q),
        .I2(prox[1]),
        .I3(prox[2]),
        .I4(FDRE_I1_1[1]),
        .I5(FDRE_I1_1[2]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(prox[0]),
        .I1(Q),
        .I2(prox[1]),
        .I3(prox[2]),
        .I4(FDRE_I1_1[1]),
        .I5(FDRE_I1_1[2]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(prox[0]),
        .I1(Q),
        .I2(prox[1]),
        .I3(prox[2]),
        .I4(FDRE_I1_1[1]),
        .I5(FDRE_I1_1[2]),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_1[0]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_619
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    prox,
    FDRE_I1_3,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input [2:0]prox;
  input FDRE_I1_3;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire [1:0]FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire [2:0]prox;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_1[1]),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_1[1]}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(prox[0]),
        .I4(prox[1]),
        .I5(prox[2]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(prox[0]),
        .I4(prox[1]),
        .I5(prox[2]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(prox[0]),
        .I4(prox[1]),
        .I5(prox[2]),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_3),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_620
   (r_FF_reg,
    Q,
    shift_ca,
    r_FF,
    FDRE_I1_0,
    FDRE_I1_1,
    shift,
    ce,
    s00_axi_aclk);
  output r_FF_reg;
  output Q;
  input shift_ca;
  input r_FF;
  input [1:0]FDRE_I1_0;
  input FDRE_I1_1;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire [1:0]FDRE_I1_0;
  wire FDRE_I1_1;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire r_FF;
  wire r_FF_reg;
  wire s00_axi_aclk;
  wire shift;
  wire shift_ca;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [3:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_1),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_1}),
        .O({NLW_CARRY4_obj_O_UNCONNECTED[3],carry4_out[2:1],NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({1'b0,1'b0,FDRE_I1_0[0],lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(Q),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT5 #(
    .INIT(32'h3E80CCCC)) 
    LUT6_LAST_BIT1
       (.I0(Q),
        .I1(FDRE_I1_0[1]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(shift),
        .O(lut6_2_last_o6));
  LUT3 #(
    .INIT(8'hB8)) 
    r_FF_i_1
       (.I0(Q),
        .I1(shift_ca),
        .I2(r_FF),
        .O(r_FF_reg));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_621
   (Q,
    FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output Q;
  input [1:0]FDRE_I1_0;
  input [1:0]FDRE_I1_1;
  input FDRE_I1_2;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire [1:0]FDRE_I1_0;
  wire [1:0]FDRE_I1_1;
  wire FDRE_I1_2;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_2),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_2}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({1'b0,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(Q),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'h96)) 
    LUT6_BIT0
       (.I0(FDRE_I1_0[0]),
        .I1(FDRE_I1_1[0]),
        .I2(FDRE_I1_1[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_0[0]),
        .I1(FDRE_I1_1[0]),
        .I2(FDRE_I1_1[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(Q),
        .I1(FDRE_I1_0[1]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_622
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire [1:0]FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_3),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_3}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({1'b0,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'h96)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2),
        .I2(Q),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2),
        .I2(Q),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_1[1]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_623
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]FDRE_I1_1;
  input [1:0]FDRE_I1_2;
  input Q;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire [1:0]FDRE_I1_1;
  wire [1:0]FDRE_I1_2;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(Q),
        .DI({1'b0,1'b0,1'b0,Q}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({1'b0,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'h96)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2[0]),
        .I2(FDRE_I1_2[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2[0]),
        .I2(FDRE_I1_2[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_1[1]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_624
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]FDRE_I1_1;
  input [1:0]FDRE_I1_2;
  input Q;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire [1:0]FDRE_I1_1;
  wire [1:0]FDRE_I1_2;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(Q),
        .DI({1'b0,1'b0,1'b0,Q}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({1'b0,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'h96)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2[0]),
        .I2(FDRE_I1_2[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2[0]),
        .I2(FDRE_I1_2[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_1[1]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_625
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]FDRE_I1_1;
  input [1:0]FDRE_I1_2;
  input Q;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire [1:0]FDRE_I1_1;
  wire [1:0]FDRE_I1_2;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(Q),
        .DI({1'b0,1'b0,1'b0,Q}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({1'b0,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'h96)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2[0]),
        .I2(FDRE_I1_2[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2[0]),
        .I2(FDRE_I1_2[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_1[1]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_626
   (FDRE_I1_0,
    prox,
    FDRE_I1_1,
    Q,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]prox;
  input [1:0]FDRE_I1_1;
  input Q;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire [1:0]FDRE_I1_1;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire [1:0]prox;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(Q),
        .DI({1'b0,1'b0,1'b0,Q}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({1'b0,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'h96)) 
    LUT6_BIT0
       (.I0(prox[0]),
        .I1(FDRE_I1_1[0]),
        .I2(FDRE_I1_1[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    LUT6_BIT1
       (.I0(prox[0]),
        .I1(FDRE_I1_1[0]),
        .I2(FDRE_I1_1[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(prox[1]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_627
   (Q,
    prox,
    FDRE_I1_0,
    FDRE_I1_1,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output Q;
  input [1:0]prox;
  input [1:0]FDRE_I1_0;
  input FDRE_I1_1;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire [1:0]FDRE_I1_0;
  wire FDRE_I1_1;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire [1:0]prox;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(prox[1]),
        .DI({1'b0,1'b0,1'b0,prox[1]}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({1'b0,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(Q),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'h96)) 
    LUT6_BIT0
       (.I0(prox[0]),
        .I1(FDRE_I1_0[0]),
        .I2(FDRE_I1_0[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    LUT6_BIT1
       (.I0(prox[0]),
        .I1(FDRE_I1_0[0]),
        .I2(FDRE_I1_0[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(Q),
        .I1(FDRE_I1_1),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_628
   (Q,
    prox,
    FDRE_I1_0,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output Q;
  input [1:0]prox;
  input [0:0]FDRE_I1_0;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire [0:0]FDRE_I1_0;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire [1:0]prox;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [3:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(prox[0]),
        .DI({1'b0,1'b0,1'b0,prox[0]}),
        .O({NLW_CARRY4_obj_O_UNCONNECTED[3],carry4_out[2:1],NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({1'b0,1'b0,prox[1],lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(Q),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT5 #(
    .INIT(32'h3E80CCCC)) 
    LUT6_LAST_BIT1
       (.I0(Q),
        .I1(FDRE_I1_0),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_629
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire [1:0]FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_3),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_3}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({1'b0,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'h96)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2),
        .I2(Q),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2),
        .I2(Q),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_1[1]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_630
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]FDRE_I1_1;
  input [1:0]FDRE_I1_2;
  input Q;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire [1:0]FDRE_I1_1;
  wire [1:0]FDRE_I1_2;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(Q),
        .DI({1'b0,1'b0,1'b0,Q}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({1'b0,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'h96)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2[0]),
        .I2(FDRE_I1_2[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2[0]),
        .I2(FDRE_I1_2[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_1[1]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_631
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]FDRE_I1_1;
  input [1:0]FDRE_I1_2;
  input Q;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire [1:0]FDRE_I1_1;
  wire [1:0]FDRE_I1_2;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(Q),
        .DI({1'b0,1'b0,1'b0,Q}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({1'b0,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'h96)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2[0]),
        .I2(FDRE_I1_2[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2[0]),
        .I2(FDRE_I1_2[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_1[1]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_632
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]FDRE_I1_1;
  input [1:0]FDRE_I1_2;
  input Q;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire [1:0]FDRE_I1_1;
  wire [1:0]FDRE_I1_2;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(Q),
        .DI({1'b0,1'b0,1'b0,Q}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({1'b0,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'h96)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2[0]),
        .I2(FDRE_I1_2[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2[0]),
        .I2(FDRE_I1_2[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_1[1]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_633
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]FDRE_I1_1;
  input [1:0]FDRE_I1_2;
  input Q;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire [1:0]FDRE_I1_1;
  wire [1:0]FDRE_I1_2;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(Q),
        .DI({1'b0,1'b0,1'b0,Q}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({1'b0,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'h96)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2[0]),
        .I2(FDRE_I1_2[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2[0]),
        .I2(FDRE_I1_2[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_1[1]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_634
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]FDRE_I1_1;
  input [1:0]FDRE_I1_2;
  input Q;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire [1:0]FDRE_I1_1;
  wire [1:0]FDRE_I1_2;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(Q),
        .DI({1'b0,1'b0,1'b0,Q}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({1'b0,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'h96)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2[0]),
        .I2(FDRE_I1_2[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2[0]),
        .I2(FDRE_I1_2[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_1[1]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_635
   (FDRE_I1_0,
    prox,
    FDRE_I1_1,
    Q,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]prox;
  input [1:0]FDRE_I1_1;
  input Q;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire [1:0]FDRE_I1_1;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire [1:0]prox;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(Q),
        .DI({1'b0,1'b0,1'b0,Q}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({1'b0,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'h96)) 
    LUT6_BIT0
       (.I0(prox[0]),
        .I1(FDRE_I1_1[0]),
        .I2(FDRE_I1_1[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    LUT6_BIT1
       (.I0(prox[0]),
        .I1(FDRE_I1_1[0]),
        .I2(FDRE_I1_1[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(prox[1]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_636
   (Q,
    FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output Q;
  input [1:0]FDRE_I1_0;
  input [1:0]FDRE_I1_1;
  input FDRE_I1_2;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire [1:0]FDRE_I1_0;
  wire [1:0]FDRE_I1_1;
  wire FDRE_I1_2;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_2),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_2}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({1'b0,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(Q),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'h96)) 
    LUT6_BIT0
       (.I0(FDRE_I1_0[0]),
        .I1(FDRE_I1_1[0]),
        .I2(FDRE_I1_1[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_0[0]),
        .I1(FDRE_I1_1[0]),
        .I2(FDRE_I1_1[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(Q),
        .I1(FDRE_I1_0[1]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_637
   (Q,
    FDRE_I1_0,
    prox,
    FDRE_I1_1,
    FDRE_I1_2,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output Q;
  input FDRE_I1_0;
  input [1:0]prox;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire [1:0]prox;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_1),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_1}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({1'b0,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(Q),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'h96)) 
    LUT6_BIT0
       (.I0(FDRE_I1_0),
        .I1(prox[0]),
        .I2(prox[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_0),
        .I1(prox[0]),
        .I2(prox[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(Q),
        .I1(FDRE_I1_2),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_638
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire [1:0]FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_3),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_3}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({1'b0,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'h96)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1[0]),
        .I1(Q),
        .I2(FDRE_I1_2),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1[0]),
        .I1(Q),
        .I2(FDRE_I1_2),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_1[1]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_639
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire [1:0]FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_1[1]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_640
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire [1:0]FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_1[1]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_641
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]FDRE_I1_1;
  input [1:0]FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire [1:0]FDRE_I1_1;
  wire [1:0]FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_5),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_5}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2[0]),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_2[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2[0]),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_2[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2[0]),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_2[1]),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_1[1]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_642
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]FDRE_I1_1;
  input [1:0]FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire [1:0]FDRE_I1_1;
  wire [1:0]FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_5),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_5}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2[0]),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_2[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2[0]),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_2[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2[0]),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_2[1]),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_1[1]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_643
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]FDRE_I1_1;
  input [1:0]FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire [1:0]FDRE_I1_1;
  wire [1:0]FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_5),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_5}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2[0]),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_2[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2[0]),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_2[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2[0]),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_2[1]),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_1[1]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_644
   (FDRE_I1_0,
    prox,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]prox;
  input [1:0]FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire [1:0]FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire [1:0]prox;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_4),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_4}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(prox[0]),
        .I1(FDRE_I1_1[0]),
        .I2(Q),
        .I3(FDRE_I1_2),
        .I4(FDRE_I1_3),
        .I5(FDRE_I1_1[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(prox[0]),
        .I1(FDRE_I1_1[0]),
        .I2(Q),
        .I3(FDRE_I1_2),
        .I4(FDRE_I1_3),
        .I5(FDRE_I1_1[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(prox[0]),
        .I1(FDRE_I1_1[0]),
        .I2(Q),
        .I3(FDRE_I1_2),
        .I4(FDRE_I1_3),
        .I5(FDRE_I1_1[1]),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(prox[1]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_645
   (FDRE_I1_0,
    prox,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [3:0]prox;
  input [1:0]FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire [1:0]FDRE_I1_1;
  wire FDRE_I1_2;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire [3:0]prox;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(prox[1]),
        .DI({1'b0,1'b0,1'b0,prox[1]}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(prox[0]),
        .I1(FDRE_I1_1[0]),
        .I2(prox[2]),
        .I3(prox[3]),
        .I4(Q),
        .I5(FDRE_I1_1[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(prox[0]),
        .I1(FDRE_I1_1[0]),
        .I2(prox[2]),
        .I3(prox[3]),
        .I4(Q),
        .I5(FDRE_I1_1[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(prox[0]),
        .I1(FDRE_I1_1[0]),
        .I2(prox[2]),
        .I3(prox[3]),
        .I4(Q),
        .I5(FDRE_I1_1[1]),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_2),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_646
   (Q,
    prox,
    FDRE_I1_0,
    shift,
    ce,
    s00_axi_aclk);
  output Q;
  input [3:0]prox;
  input FDRE_I1_0;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire [3:0]prox;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(prox[1]),
        .DI({1'b0,1'b0,1'b0,prox[1]}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({1'b0,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(Q),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'h96)) 
    LUT6_BIT0
       (.I0(prox[2]),
        .I1(prox[3]),
        .I2(FDRE_I1_0),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    LUT6_BIT1
       (.I0(prox[2]),
        .I1(prox[3]),
        .I2(FDRE_I1_0),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(Q),
        .I1(prox[0]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_647
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire [1:0]FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_1[1]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_648
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]FDRE_I1_1;
  input [1:0]FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire [1:0]FDRE_I1_1;
  wire [1:0]FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_5),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_5}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2[0]),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_2[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2[0]),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_2[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2[0]),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_2[1]),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_1[1]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_649
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]FDRE_I1_1;
  input [1:0]FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire [1:0]FDRE_I1_1;
  wire [1:0]FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_5),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_5}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2[0]),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_2[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2[0]),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_2[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2[0]),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_2[1]),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_1[1]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_650
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]FDRE_I1_1;
  input [1:0]FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire [1:0]FDRE_I1_1;
  wire [1:0]FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_5),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_5}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2[0]),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_2[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2[0]),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_2[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2[0]),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_2[1]),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_1[1]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_651
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]FDRE_I1_1;
  input [1:0]FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire [1:0]FDRE_I1_1;
  wire [1:0]FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_5),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_5}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2[0]),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_2[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2[0]),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_2[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1[0]),
        .I1(FDRE_I1_2[0]),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_2[1]),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_1[1]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_652
   (FDRE_I1_0,
    prox,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]prox;
  input [1:0]FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire [1:0]FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire [1:0]prox;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_4),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_4}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(prox[0]),
        .I1(FDRE_I1_1[0]),
        .I2(Q),
        .I3(FDRE_I1_2),
        .I4(FDRE_I1_3),
        .I5(FDRE_I1_1[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(prox[0]),
        .I1(FDRE_I1_1[0]),
        .I2(Q),
        .I3(FDRE_I1_2),
        .I4(FDRE_I1_3),
        .I5(FDRE_I1_1[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(prox[0]),
        .I1(FDRE_I1_1[0]),
        .I2(Q),
        .I3(FDRE_I1_2),
        .I4(FDRE_I1_3),
        .I5(FDRE_I1_1[1]),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(prox[1]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_653
   (FDRE_I1_0,
    prox,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]prox;
  input [1:0]FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire [1:0]FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire [1:0]prox;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_4),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_4}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(prox[0]),
        .I1(FDRE_I1_1[0]),
        .I2(Q),
        .I3(FDRE_I1_2),
        .I4(FDRE_I1_3),
        .I5(FDRE_I1_1[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(prox[0]),
        .I1(FDRE_I1_1[0]),
        .I2(Q),
        .I3(FDRE_I1_2),
        .I4(FDRE_I1_3),
        .I5(FDRE_I1_1[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(prox[0]),
        .I1(FDRE_I1_1[0]),
        .I2(Q),
        .I3(FDRE_I1_2),
        .I4(FDRE_I1_3),
        .I5(FDRE_I1_1[1]),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(prox[1]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_654
   (FDRE_I1_0,
    FDRE_I1_1,
    prox,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input [1:0]prox;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire [1:0]prox;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_4),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_4}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(prox[0]),
        .I2(Q),
        .I3(FDRE_I1_2),
        .I4(FDRE_I1_3),
        .I5(prox[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(prox[0]),
        .I2(Q),
        .I3(FDRE_I1_2),
        .I4(FDRE_I1_3),
        .I5(prox[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(prox[0]),
        .I2(Q),
        .I3(FDRE_I1_2),
        .I4(FDRE_I1_3),
        .I5(prox[1]),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_5),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_655
   (FDRE_I1_0,
    FDRE_I1_1,
    prox,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input [1:0]prox;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire [1:0]prox;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_4),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_4}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(prox[0]),
        .I2(Q),
        .I3(FDRE_I1_2),
        .I4(FDRE_I1_3),
        .I5(prox[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(prox[0]),
        .I2(Q),
        .I3(FDRE_I1_2),
        .I4(FDRE_I1_3),
        .I5(prox[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(prox[0]),
        .I2(Q),
        .I3(FDRE_I1_2),
        .I4(FDRE_I1_3),
        .I5(prox[1]),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_5),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_656
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_4),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_657
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_658
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_659
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_660
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_661
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_662
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_663
   (FDRE_I1_0,
    prox,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]prox;
  input [1:0]FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire [1:0]FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire [1:0]prox;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(prox[1]),
        .DI({1'b0,1'b0,1'b0,prox[1]}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(prox[0]),
        .I1(FDRE_I1_1[0]),
        .I2(Q),
        .I3(FDRE_I1_1[1]),
        .I4(FDRE_I1_2),
        .I5(FDRE_I1_3),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(prox[0]),
        .I1(FDRE_I1_1[0]),
        .I2(Q),
        .I3(FDRE_I1_1[1]),
        .I4(FDRE_I1_2),
        .I5(FDRE_I1_3),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(prox[0]),
        .I1(FDRE_I1_1[0]),
        .I2(Q),
        .I3(FDRE_I1_1[1]),
        .I4(FDRE_I1_2),
        .I5(FDRE_I1_3),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_4),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_664
   (Q,
    prox,
    FDRE_I1_0,
    FDRE_I1_1,
    shift,
    ce,
    s00_axi_aclk);
  output Q;
  input [1:0]prox;
  input [1:0]FDRE_I1_0;
  input FDRE_I1_1;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire [1:0]FDRE_I1_0;
  wire FDRE_I1_1;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire [1:0]prox;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_0[0]),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_0[0]}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({1'b0,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(Q),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'h96)) 
    LUT6_BIT0
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(FDRE_I1_0[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    LUT6_BIT1
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(FDRE_I1_0[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(Q),
        .I1(FDRE_I1_1),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_665
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_666
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_667
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_668
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_669
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_670
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_671
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_672
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_673
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_674
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_3),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_3}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({1'b0,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'h96)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_4),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_675
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_676
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_677
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_678
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_679
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_680
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_681
   (FDRE_I1_0,
    prox,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]prox;
  input FDRE_I1_1;
  input [1:0]FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire [1:0]FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire [1:0]prox;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(prox[1]),
        .DI({1'b0,1'b0,1'b0,prox[1]}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(prox[0]),
        .I1(FDRE_I1_1),
        .I2(FDRE_I1_2[0]),
        .I3(FDRE_I1_2[1]),
        .I4(Q),
        .I5(FDRE_I1_3),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(prox[0]),
        .I1(FDRE_I1_1),
        .I2(FDRE_I1_2[0]),
        .I3(FDRE_I1_2[1]),
        .I4(Q),
        .I5(FDRE_I1_3),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(prox[0]),
        .I1(FDRE_I1_1),
        .I2(FDRE_I1_2[0]),
        .I3(FDRE_I1_2[1]),
        .I4(Q),
        .I5(FDRE_I1_3),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_4),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_682
   (Q,
    prox,
    FDRE_I1_0,
    FDRE_I1_1,
    shift,
    ce,
    s00_axi_aclk);
  output Q;
  input [1:0]prox;
  input [1:0]FDRE_I1_0;
  input FDRE_I1_1;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire [1:0]FDRE_I1_0;
  wire FDRE_I1_1;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire [1:0]prox;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_1),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_1}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({1'b0,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(Q),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'h96)) 
    LUT6_BIT0
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(FDRE_I1_0[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    LUT6_BIT1
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(FDRE_I1_0[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(Q),
        .I1(FDRE_I1_0[0]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_683
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_684
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_685
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_686
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_687
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_688
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_689
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_690
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_691
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_692
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_4),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_693
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_694
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_695
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_696
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_697
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_698
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_699
   (FDRE_I1_0,
    prox,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]prox;
  input [1:0]FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire [1:0]FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire [1:0]prox;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(prox[1]),
        .DI({1'b0,1'b0,1'b0,prox[1]}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(prox[0]),
        .I1(FDRE_I1_1[0]),
        .I2(Q),
        .I3(FDRE_I1_1[1]),
        .I4(FDRE_I1_2),
        .I5(FDRE_I1_3),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(prox[0]),
        .I1(FDRE_I1_1[0]),
        .I2(Q),
        .I3(FDRE_I1_1[1]),
        .I4(FDRE_I1_2),
        .I5(FDRE_I1_3),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(prox[0]),
        .I1(FDRE_I1_1[0]),
        .I2(Q),
        .I3(FDRE_I1_1[1]),
        .I4(FDRE_I1_2),
        .I5(FDRE_I1_3),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_4),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_700
   (Q,
    prox,
    FDRE_I1_0,
    FDRE_I1_1,
    shift,
    ce,
    s00_axi_aclk);
  output Q;
  input [1:0]prox;
  input [1:0]FDRE_I1_0;
  input FDRE_I1_1;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire [1:0]FDRE_I1_0;
  wire FDRE_I1_1;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire [1:0]prox;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_0[0]),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_0[0]}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({1'b0,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(Q),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'h96)) 
    LUT6_BIT0
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(FDRE_I1_0[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    LUT6_BIT1
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(FDRE_I1_0[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(Q),
        .I1(FDRE_I1_1),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_701
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_702
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_703
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_704
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_705
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_706
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_707
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_708
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_709
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_710
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_3),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_3}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({1'b0,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'h96)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_4),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_711
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_712
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_713
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_714
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_715
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_716
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_717
   (FDRE_I1_0,
    prox,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]prox;
  input FDRE_I1_1;
  input [1:0]FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire [1:0]FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire [1:0]prox;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(prox[1]),
        .DI({1'b0,1'b0,1'b0,prox[1]}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(prox[0]),
        .I1(FDRE_I1_1),
        .I2(FDRE_I1_2[0]),
        .I3(FDRE_I1_2[1]),
        .I4(Q),
        .I5(FDRE_I1_3),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(prox[0]),
        .I1(FDRE_I1_1),
        .I2(FDRE_I1_2[0]),
        .I3(FDRE_I1_2[1]),
        .I4(Q),
        .I5(FDRE_I1_3),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(prox[0]),
        .I1(FDRE_I1_1),
        .I2(FDRE_I1_2[0]),
        .I3(FDRE_I1_2[1]),
        .I4(Q),
        .I5(FDRE_I1_3),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_4),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_718
   (Q,
    prox,
    FDRE_I1_0,
    FDRE_I1_1,
    shift,
    ce,
    s00_axi_aclk);
  output Q;
  input [1:0]prox;
  input [1:0]FDRE_I1_0;
  input FDRE_I1_1;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire [1:0]FDRE_I1_0;
  wire FDRE_I1_1;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire [1:0]prox;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_1),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_1}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({1'b0,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(Q),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'h96)) 
    LUT6_BIT0
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(FDRE_I1_0[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    LUT6_BIT1
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(FDRE_I1_0[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(Q),
        .I1(FDRE_I1_0[0]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_719
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_720
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_721
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_722
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_723
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_724
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_725
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_726
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_727
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_728
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_4),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_729
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_730
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_731
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_732
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_733
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_734
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_735
   (FDRE_I1_0,
    prox,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]prox;
  input [1:0]FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire [1:0]FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire [1:0]prox;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(prox[1]),
        .DI({1'b0,1'b0,1'b0,prox[1]}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(prox[0]),
        .I1(FDRE_I1_1[0]),
        .I2(Q),
        .I3(FDRE_I1_1[1]),
        .I4(FDRE_I1_2),
        .I5(FDRE_I1_3),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(prox[0]),
        .I1(FDRE_I1_1[0]),
        .I2(Q),
        .I3(FDRE_I1_1[1]),
        .I4(FDRE_I1_2),
        .I5(FDRE_I1_3),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(prox[0]),
        .I1(FDRE_I1_1[0]),
        .I2(Q),
        .I3(FDRE_I1_1[1]),
        .I4(FDRE_I1_2),
        .I5(FDRE_I1_3),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_4),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_736
   (Q,
    prox,
    FDRE_I1_0,
    FDRE_I1_1,
    shift,
    ce,
    s00_axi_aclk);
  output Q;
  input [1:0]prox;
  input [1:0]FDRE_I1_0;
  input FDRE_I1_1;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire [1:0]FDRE_I1_0;
  wire FDRE_I1_1;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire [1:0]prox;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_0[0]),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_0[0]}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({1'b0,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(Q),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'h96)) 
    LUT6_BIT0
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(FDRE_I1_0[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    LUT6_BIT1
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(FDRE_I1_0[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(Q),
        .I1(FDRE_I1_1),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_737
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_738
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_739
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_740
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_741
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_742
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_743
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_744
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_745
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_746
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_3),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_3}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({1'b0,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'h96)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_4),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_747
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_748
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_749
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_750
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_751
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_752
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_753
   (FDRE_I1_0,
    prox,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]prox;
  input FDRE_I1_1;
  input [1:0]FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire [1:0]FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire [1:0]prox;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(prox[1]),
        .DI({1'b0,1'b0,1'b0,prox[1]}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(prox[0]),
        .I1(FDRE_I1_1),
        .I2(FDRE_I1_2[0]),
        .I3(FDRE_I1_2[1]),
        .I4(Q),
        .I5(FDRE_I1_3),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(prox[0]),
        .I1(FDRE_I1_1),
        .I2(FDRE_I1_2[0]),
        .I3(FDRE_I1_2[1]),
        .I4(Q),
        .I5(FDRE_I1_3),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(prox[0]),
        .I1(FDRE_I1_1),
        .I2(FDRE_I1_2[0]),
        .I3(FDRE_I1_2[1]),
        .I4(Q),
        .I5(FDRE_I1_3),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_4),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_754
   (Q,
    prox,
    FDRE_I1_0,
    FDRE_I1_1,
    shift,
    ce,
    s00_axi_aclk);
  output Q;
  input [1:0]prox;
  input [1:0]FDRE_I1_0;
  input FDRE_I1_1;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire [1:0]FDRE_I1_0;
  wire FDRE_I1_1;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire [1:0]prox;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_1),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_1}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({1'b0,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(Q),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'h96)) 
    LUT6_BIT0
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(FDRE_I1_0[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    LUT6_BIT1
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(FDRE_I1_0[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(Q),
        .I1(FDRE_I1_0[0]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_755
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_756
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_757
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_758
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_759
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_760
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_761
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_762
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_763
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_764
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_4),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_765
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input [1:0]FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire [1:0]FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_5),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_5}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3[0]),
        .I4(FDRE_I1_3[1]),
        .I5(FDRE_I1_4),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3[0]),
        .I4(FDRE_I1_3[1]),
        .I5(FDRE_I1_4),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3[0]),
        .I4(FDRE_I1_3[1]),
        .I5(FDRE_I1_4),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_6),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_766
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_767
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_768
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_769
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_770
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_771
   (FDRE_I1_0,
    prox,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]prox;
  input [1:0]FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire [1:0]FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire [1:0]prox;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(prox[1]),
        .DI({1'b0,1'b0,1'b0,prox[1]}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(prox[0]),
        .I1(FDRE_I1_1[0]),
        .I2(Q),
        .I3(FDRE_I1_1[1]),
        .I4(FDRE_I1_2),
        .I5(FDRE_I1_3),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(prox[0]),
        .I1(FDRE_I1_1[0]),
        .I2(Q),
        .I3(FDRE_I1_1[1]),
        .I4(FDRE_I1_2),
        .I5(FDRE_I1_3),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(prox[0]),
        .I1(FDRE_I1_1[0]),
        .I2(Q),
        .I3(FDRE_I1_1[1]),
        .I4(FDRE_I1_2),
        .I5(FDRE_I1_3),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_4),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_772
   (Q,
    prox,
    FDRE_I1_0,
    FDRE_I1_1,
    shift,
    ce,
    s00_axi_aclk);
  output Q;
  input [1:0]prox;
  input [1:0]FDRE_I1_0;
  input FDRE_I1_1;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire [1:0]FDRE_I1_0;
  wire FDRE_I1_1;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire [1:0]prox;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_0[0]),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_0[0]}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({1'b0,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(Q),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'h96)) 
    LUT6_BIT0
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(FDRE_I1_0[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    LUT6_BIT1
       (.I0(prox[0]),
        .I1(prox[1]),
        .I2(FDRE_I1_0[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(Q),
        .I1(FDRE_I1_1),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_773
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_774
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_775
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_776
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_777
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_778
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_779
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_780
   (FDRE_I1_0,
    FDRE_I1_1,
    Q,
    prox,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input Q;
  input [1:0]prox;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire [1:0]prox;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_4),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_4}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(prox[0]),
        .I3(prox[1]),
        .I4(FDRE_I1_2),
        .I5(FDRE_I1_3),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(prox[0]),
        .I3(prox[1]),
        .I4(FDRE_I1_2),
        .I5(FDRE_I1_3),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(Q),
        .I2(prox[0]),
        .I3(prox[1]),
        .I4(FDRE_I1_2),
        .I5(FDRE_I1_3),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_5),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_781
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    FDRE_I1_3,
    Q,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input [1:0]FDRE_I1_3;
  input Q;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire [1:0]FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_5),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_5}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(FDRE_I1_3[0]),
        .I3(FDRE_I1_3[1]),
        .I4(Q),
        .I5(FDRE_I1_4),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(FDRE_I1_3[0]),
        .I3(FDRE_I1_3[1]),
        .I4(Q),
        .I5(FDRE_I1_4),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(FDRE_I1_3[0]),
        .I3(FDRE_I1_3[1]),
        .I4(Q),
        .I5(FDRE_I1_4),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_6),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_782
   (Q,
    FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output Q;
  input FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_3),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_3}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({1'b0,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(Q),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'h96)) 
    LUT6_BIT0
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_1),
        .I2(FDRE_I1_2),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_1),
        .I2(FDRE_I1_2),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(Q),
        .I1(FDRE_I1_4),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_783
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    Q,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input Q;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(FDRE_I1_3),
        .I3(FDRE_I1_4),
        .I4(FDRE_I1_5),
        .I5(Q),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(FDRE_I1_3),
        .I3(FDRE_I1_4),
        .I4(FDRE_I1_5),
        .I5(Q),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(FDRE_I1_3),
        .I3(FDRE_I1_4),
        .I4(FDRE_I1_5),
        .I5(Q),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_784
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_785
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_786
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_787
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_788
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    FDRE_I1_3,
    Q,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input Q;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(FDRE_I1_3),
        .I3(Q),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(FDRE_I1_3),
        .I3(Q),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(FDRE_I1_3),
        .I3(Q),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_789
   (FDRE_I1_0,
    prox,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input [1:0]prox;
  input FDRE_I1_1;
  input [1:0]FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire [1:0]FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire [1:0]prox;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(prox[1]),
        .DI({1'b0,1'b0,1'b0,prox[1]}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(prox[0]),
        .I1(FDRE_I1_1),
        .I2(FDRE_I1_2[0]),
        .I3(FDRE_I1_2[1]),
        .I4(Q),
        .I5(FDRE_I1_3),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(prox[0]),
        .I1(FDRE_I1_1),
        .I2(FDRE_I1_2[0]),
        .I3(FDRE_I1_2[1]),
        .I4(Q),
        .I5(FDRE_I1_3),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(prox[0]),
        .I1(FDRE_I1_1),
        .I2(FDRE_I1_2[0]),
        .I3(FDRE_I1_2[1]),
        .I4(Q),
        .I5(FDRE_I1_3),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_4),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_790
   (Q,
    FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    shift,
    ce,
    s00_axi_aclk);
  output Q;
  input [1:0]FDRE_I1_0;
  input [1:0]FDRE_I1_1;
  input FDRE_I1_2;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire [1:0]FDRE_I1_0;
  wire [1:0]FDRE_I1_1;
  wire FDRE_I1_2;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_2),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_2}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({1'b0,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(Q),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'h96)) 
    LUT6_BIT0
       (.I0(FDRE_I1_0[0]),
        .I1(FDRE_I1_0[1]),
        .I2(FDRE_I1_1[1]),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_0[0]),
        .I1(FDRE_I1_0[1]),
        .I2(FDRE_I1_1[1]),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(Q),
        .I1(FDRE_I1_1[0]),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_791
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_792
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_793
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_794
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_795
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_796
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    Q,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input Q;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(Q),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_797
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    FDRE_I1_3,
    Q,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input Q;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(FDRE_I1_3),
        .I3(Q),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(FDRE_I1_3),
        .I3(Q),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(FDRE_I1_3),
        .I3(Q),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_798
   (FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    Q,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    internal_shift_reg_rep,
    ce,
    s00_axi_aclk);
  output FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input Q;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input internal_shift_reg_rep;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire internal_shift_reg_rep;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(FDRE_I1_0),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(FDRE_I1_3),
        .I3(FDRE_I1_4),
        .I4(Q),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(FDRE_I1_3),
        .I3(FDRE_I1_4),
        .I4(Q),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_1),
        .I1(FDRE_I1_2),
        .I2(FDRE_I1_3),
        .I3(FDRE_I1_4),
        .I4(Q),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(internal_shift_reg_rep),
        .O(lut6_2_last_o6));
endmodule

(* ORIG_REF_NAME = "cell" *) 
module cell_799
   (Q,
    FDRE_I1_0,
    FDRE_I1_1,
    FDRE_I1_2,
    FDRE_I1_3,
    FDRE_I1_4,
    FDRE_I1_5,
    FDRE_I1_6,
    FDRE_I1_7,
    shift,
    ce,
    s00_axi_aclk);
  output Q;
  input FDRE_I1_0;
  input FDRE_I1_1;
  input FDRE_I1_2;
  input FDRE_I1_3;
  input FDRE_I1_4;
  input FDRE_I1_5;
  input FDRE_I1_6;
  input FDRE_I1_7;
  input shift;
  input ce;
  input s00_axi_aclk;

  wire FDRE_I1_0;
  wire FDRE_I1_1;
  wire FDRE_I1_2;
  wire FDRE_I1_3;
  wire FDRE_I1_4;
  wire FDRE_I1_5;
  wire FDRE_I1_6;
  wire FDRE_I1_7;
  wire Q;
  wire [3:1]carry4_out;
  wire ce;
  wire lut6_2_last_o6;
  wire lut6_bit0_o6;
  wire lut6_bit1_o6;
  wire lut6_bit2_o6;
  wire s00_axi_aclk;
  wire shift;
  wire [3:0]NLW_CARRY4_obj_CO_UNCONNECTED;
  wire [0:0]NLW_CARRY4_obj_O_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  CARRY4 CARRY4_obj
       (.CI(1'b0),
        .CO(NLW_CARRY4_obj_CO_UNCONNECTED[3:0]),
        .CYINIT(FDRE_I1_6),
        .DI({1'b0,1'b0,1'b0,FDRE_I1_6}),
        .O({carry4_out,NLW_CARRY4_obj_O_UNCONNECTED[0]}),
        .S({lut6_bit2_o6,lut6_bit1_o6,lut6_bit0_o6,lut6_2_last_o6}));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_I1
       (.C(s00_axi_aclk),
        .CE(ce),
        .D(lut6_2_last_o6),
        .Q(Q),
        .R(1'b0));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    LUT6_BIT0
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_1),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit0_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    LUT6_BIT1
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_1),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit1_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    LUT6_BIT2
       (.I0(FDRE_I1_0),
        .I1(FDRE_I1_1),
        .I2(FDRE_I1_2),
        .I3(FDRE_I1_3),
        .I4(FDRE_I1_4),
        .I5(FDRE_I1_5),
        .O(lut6_bit2_o6));
  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00003E80CCCCCCCC)) 
    LUT6_LAST_BIT1
       (.I0(Q),
        .I1(FDRE_I1_7),
        .I2(carry4_out[1]),
        .I3(carry4_out[2]),
        .I4(carry4_out[3]),
        .I5(shift),
        .O(lut6_2_last_o6));
endmodule

module cntr_incr_decr_addn_f
   (Q,
    fifo_full_p1,
    tx_Start0,
    Interrupt0,
    SS,
    fifo_Read,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] ,
    tx_Buffer_Full,
    Bus_RNW_reg,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ,
    tx_Start,
    tx_DataBits,
    tx_Data_Enable_reg,
    tx_Buffer_Empty_Pre,
    enable_interrupts,
    rx_Data_Present_Pre,
    \INFERRED_GEN.cnt_i_reg[4]_0 ,
    reset_TX_FIFO_reg,
    s_axi_aresetn,
    s_axi_aclk);
  output [4:0]Q;
  output fifo_full_p1;
  output tx_Start0;
  output Interrupt0;
  output [0:0]SS;
  input fifo_Read;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] ;
  input tx_Buffer_Full;
  input Bus_RNW_reg;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  input tx_Start;
  input tx_DataBits;
  input tx_Data_Enable_reg;
  input tx_Buffer_Empty_Pre;
  input enable_interrupts;
  input rx_Data_Present_Pre;
  input [0:0]\INFERRED_GEN.cnt_i_reg[4]_0 ;
  input reset_TX_FIFO_reg;
  input s_axi_aresetn;
  input s_axi_aclk;

  wire Bus_RNW_reg;
  wire FIFO_Full_i_2__0_n_0;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] ;
  wire \INFERRED_GEN.cnt_i[3]_i_2__0_n_0 ;
  wire \INFERRED_GEN.cnt_i[4]_i_3__0_n_0 ;
  wire \INFERRED_GEN.cnt_i[4]_i_4__0_n_0 ;
  wire [4:0]Q;
  wire [0:0]SS;
  wire [4:0]addr_i_p1;
  wire fifo_Read;
  wire fifo_full_p1;
  wire reset_TX_FIFO_reg;
  wire s_axi_aclk;
  wire s_axi_aresetn;
  wire tx_Buffer_Full;
  wire tx_DataBits;
  wire tx_Data_Enable_reg;
  wire tx_Start;
  wire tx_Start0;

  LUT6 #(
    .INIT(64'h0000000000490000)) 
    FIFO_Full_i_1
       (.I0(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] ),
        .I1(Q[0]),
        .I2(fifo_Read),
        .I3(Q[4]),
        .I4(Q[3]),
        .I5(FIFO_Full_i_2__0_n_0),
        .O(fifo_full_p1));
  LUT2 #(
    .INIT(4'h7)) 
    FIFO_Full_i_2__0
       (.I0(Q[1]),
        .I1(Q[2]),
        .O(FIFO_Full_i_2__0_n_0));
  LUT6 #(
    .INIT(64'hBBB4BBBB444B4444)) 
    \INFERRED_GEN.cnt_i[0]_i_1 
       (.I0(Q[4]),
        .I1(fifo_Read),
        .I2(tx_Buffer_Full),
        .I3(Bus_RNW_reg),
        .I4(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .I5(Q[0]),
        .O(addr_i_p1[0]));
  LUT5 #(
    .INIT(32'hAA9A65AA)) 
    \INFERRED_GEN.cnt_i[1]_i_1 
       (.I0(Q[1]),
        .I1(Q[4]),
        .I2(fifo_Read),
        .I3(Q[0]),
        .I4(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] ),
        .O(addr_i_p1[1]));
  LUT6 #(
    .INIT(64'hCCCCC9CC6C66CCCC)) 
    \INFERRED_GEN.cnt_i[2]_i_1 
       (.I0(Q[1]),
        .I1(Q[2]),
        .I2(Q[4]),
        .I3(fifo_Read),
        .I4(Q[0]),
        .I5(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] ),
        .O(addr_i_p1[2]));
  LUT6 #(
    .INIT(64'hB4F0F0F0F0F0F0D2)) 
    \INFERRED_GEN.cnt_i[3]_i_1 
       (.I0(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] ),
        .I1(Q[0]),
        .I2(Q[3]),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(\INFERRED_GEN.cnt_i[3]_i_2__0_n_0 ),
        .O(addr_i_p1[3]));
  LUT2 #(
    .INIT(4'hB)) 
    \INFERRED_GEN.cnt_i[3]_i_2__0 
       (.I0(Q[4]),
        .I1(fifo_Read),
        .O(\INFERRED_GEN.cnt_i[3]_i_2__0_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \INFERRED_GEN.cnt_i[4]_i_1__0 
       (.I0(reset_TX_FIFO_reg),
        .I1(s_axi_aresetn),
        .O(SS));
  LUT6 #(
    .INIT(64'hF0F0FCFCF005F0F0)) 
    \INFERRED_GEN.cnt_i[4]_i_2 
       (.I0(fifo_Read),
        .I1(\INFERRED_GEN.cnt_i[4]_i_3__0_n_0 ),
        .I2(Q[4]),
        .I3(\INFERRED_GEN.cnt_i[4]_i_4__0_n_0 ),
        .I4(Q[0]),
        .I5(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] ),
        .O(addr_i_p1[4]));
  LUT4 #(
    .INIT(16'h0004)) 
    \INFERRED_GEN.cnt_i[4]_i_3__0 
       (.I0(Q[3]),
        .I1(fifo_Read),
        .I2(Q[2]),
        .I3(Q[1]),
        .O(\INFERRED_GEN.cnt_i[4]_i_3__0_n_0 ));
  LUT3 #(
    .INIT(8'h7F)) 
    \INFERRED_GEN.cnt_i[4]_i_4__0 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[3]),
        .O(\INFERRED_GEN.cnt_i[4]_i_4__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \INFERRED_GEN.cnt_i_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(addr_i_p1[0]),
        .Q(Q[0]),
        .S(SS));
  FDSE #(
    .INIT(1'b1)) 
    \INFERRED_GEN.cnt_i_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(addr_i_p1[1]),
        .Q(Q[1]),
        .S(SS));
  FDSE #(
    .INIT(1'b1)) 
    \INFERRED_GEN.cnt_i_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(addr_i_p1[2]),
        .Q(Q[2]),
        .S(SS));
  FDSE #(
    .INIT(1'b1)) 
    \INFERRED_GEN.cnt_i_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(addr_i_p1[3]),
        .Q(Q[3]),
        .S(SS));
  FDSE #(
    .INIT(1'b1)) 
    \INFERRED_GEN.cnt_i_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(addr_i_p1[4]),
        .Q(Q[4]),
        .S(SS));
  LUT4 #(
    .INIT(16'h2232)) 
    tx_Start_i_1
       (.I0(tx_Start),
        .I1(tx_DataBits),
        .I2(tx_Data_Enable_reg),
        .I3(Q[4]),
        .O(tx_Start0));
endmodule

(* ORIG_REF_NAME = "cntr_incr_decr_addn_f" *) 
module cntr_incr_decr_addn_f_802
   (fifo_full_p1,
    Q,
    SS,
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] ,
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ,
    Bus_RNW_reg,
    Bus_RNW_reg_reg,
    fifo_Write,
    FIFO_Full_reg,
    valid_rx,
    reset_RX_FIFO_reg,
    s_axi_aresetn,
    s_axi_aclk);
  output fifo_full_p1;
  output [4:0]Q;
  output [0:0]SS;
  input \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] ;
  input \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  input Bus_RNW_reg;
  input Bus_RNW_reg_reg;
  input fifo_Write;
  input FIFO_Full_reg;
  input valid_rx;
  input reset_RX_FIFO_reg;
  input s_axi_aresetn;
  input s_axi_aclk;

  wire Bus_RNW_reg;
  wire Bus_RNW_reg_reg;
  wire FIFO_Full_i_2_n_0;
  wire FIFO_Full_reg;
  wire \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] ;
  wire \INFERRED_GEN.cnt_i[4]_i_3_n_0 ;
  wire \INFERRED_GEN.cnt_i[4]_i_5__0_n_0 ;
  wire \INFERRED_GEN.cnt_i[4]_i_6_n_0 ;
  wire [4:0]Q;
  wire [0:0]SS;
  wire [4:0]addr_i_p1;
  wire fifo_Write;
  wire fifo_full_p1;
  wire reset_RX_FIFO_reg;
  wire s_axi_aclk;
  wire s_axi_aresetn;
  wire valid_rx;

  LUT6 #(
    .INIT(64'h0020000000100020)) 
    FIFO_Full_i_1__0
       (.I0(\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] ),
        .I1(Q[4]),
        .I2(Q[3]),
        .I3(FIFO_Full_i_2_n_0),
        .I4(Q[0]),
        .I5(\INFERRED_GEN.cnt_i[4]_i_6_n_0 ),
        .O(fifo_full_p1));
  LUT2 #(
    .INIT(4'h7)) 
    FIFO_Full_i_2
       (.I0(Q[1]),
        .I1(Q[2]),
        .O(FIFO_Full_i_2_n_0));
  LUT5 #(
    .INIT(32'h9AAA6555)) 
    \INFERRED_GEN.cnt_i[0]_i_1__0 
       (.I0(\INFERRED_GEN.cnt_i[4]_i_6_n_0 ),
        .I1(Q[4]),
        .I2(\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .I3(Bus_RNW_reg),
        .I4(Q[0]),
        .O(addr_i_p1[0]));
  LUT6 #(
    .INIT(64'hAAAAAA6A5595AAAA)) 
    \INFERRED_GEN.cnt_i[1]_i_1__0 
       (.I0(Q[1]),
        .I1(Bus_RNW_reg),
        .I2(\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .I3(Q[4]),
        .I4(Q[0]),
        .I5(\INFERRED_GEN.cnt_i[4]_i_6_n_0 ),
        .O(addr_i_p1[1]));
  LUT5 #(
    .INIT(32'hCCC96CCC)) 
    \INFERRED_GEN.cnt_i[2]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[2]),
        .I2(Bus_RNW_reg_reg),
        .I3(Q[0]),
        .I4(\INFERRED_GEN.cnt_i[4]_i_6_n_0 ),
        .O(addr_i_p1[2]));
  LUT6 #(
    .INIT(64'hF0F0F0E178F0F0F0)) 
    \INFERRED_GEN.cnt_i[3]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[3]),
        .I3(Bus_RNW_reg_reg),
        .I4(Q[0]),
        .I5(\INFERRED_GEN.cnt_i[4]_i_6_n_0 ),
        .O(addr_i_p1[3]));
  LUT2 #(
    .INIT(4'hB)) 
    \INFERRED_GEN.cnt_i[4]_i_1 
       (.I0(reset_RX_FIFO_reg),
        .I1(s_axi_aresetn),
        .O(SS));
  LUT6 #(
    .INIT(64'hFAFAFAFAF00CF0F0)) 
    \INFERRED_GEN.cnt_i[4]_i_2__0 
       (.I0(\INFERRED_GEN.cnt_i[4]_i_3_n_0 ),
        .I1(\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] ),
        .I2(Q[4]),
        .I3(\INFERRED_GEN.cnt_i[4]_i_5__0_n_0 ),
        .I4(Q[0]),
        .I5(\INFERRED_GEN.cnt_i[4]_i_6_n_0 ),
        .O(addr_i_p1[4]));
  LUT6 #(
    .INIT(64'h0000000000000008)) 
    \INFERRED_GEN.cnt_i[4]_i_3 
       (.I0(\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .I1(Bus_RNW_reg),
        .I2(Q[0]),
        .I3(Q[3]),
        .I4(Q[2]),
        .I5(Q[1]),
        .O(\INFERRED_GEN.cnt_i[4]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'h7F)) 
    \INFERRED_GEN.cnt_i[4]_i_5__0 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[3]),
        .O(\INFERRED_GEN.cnt_i[4]_i_5__0_n_0 ));
  LUT3 #(
    .INIT(8'hDF)) 
    \INFERRED_GEN.cnt_i[4]_i_6 
       (.I0(fifo_Write),
        .I1(FIFO_Full_reg),
        .I2(valid_rx),
        .O(\INFERRED_GEN.cnt_i[4]_i_6_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \INFERRED_GEN.cnt_i_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(addr_i_p1[0]),
        .Q(Q[0]),
        .S(SS));
  FDSE #(
    .INIT(1'b1)) 
    \INFERRED_GEN.cnt_i_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(addr_i_p1[1]),
        .Q(Q[1]),
        .S(SS));
  FDSE #(
    .INIT(1'b1)) 
    \INFERRED_GEN.cnt_i_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(addr_i_p1[2]),
        .Q(Q[2]),
        .S(SS));
  FDSE #(
    .INIT(1'b1)) 
    \INFERRED_GEN.cnt_i_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(addr_i_p1[3]),
        .Q(Q[3]),
        .S(SS));
  FDSE #(
    .INIT(1'b1)) 
    \INFERRED_GEN.cnt_i_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(addr_i_p1[4]),
        .Q(Q[4]),
        .S(SS));
endmodule

(* HW_HANDOFF = "design_gol.hwdef" *) 
module design_gol
   (reset_rtl,
    rx,
    sys_clock,
    tx);
  input reset_rtl;
  input rx;
  input sys_clock;
  output tx;

  wire [0:7]Dbg_Reg_En;
  wire M_AXI_DP_ARREADY;
  wire M_AXI_DP_AWREADY;
  wire M_AXI_DP_BVALID;
  wire [31:0]M_AXI_DP_RDATA;
  wire M_AXI_DP_RVALID;
  wire M_AXI_DP_WREADY;
  wire axi_interconnect_0_M00_AXI_ARREADY;
  wire axi_interconnect_0_M00_AXI_AWREADY;
  wire axi_interconnect_0_M00_AXI_BVALID;
  wire [31:0]axi_interconnect_0_M00_AXI_RDATA;
  wire axi_interconnect_0_M00_AXI_RVALID;
  wire axi_interconnect_0_M00_AXI_WREADY;
  wire axi_interconnect_0_M01_AXI_ARVALID;
  wire axi_interconnect_0_M01_AXI_AWVALID;
  wire axi_interconnect_0_M01_AXI_BREADY;
  wire axi_interconnect_0_M01_AXI_BVALID;
  wire [31:0]axi_interconnect_0_M01_AXI_RDATA;
  wire axi_interconnect_0_M01_AXI_RREADY;
  wire axi_interconnect_0_M01_AXI_RVALID;
  wire axi_interconnect_0_M01_AXI_WREADY;
  wire axi_interconnect_0_M01_AXI_WVALID;
  wire axi_interconnect_0_n_133;
  wire axi_interconnect_0_n_134;
  wire axi_interconnect_0_n_169;
  wire axi_interconnect_0_n_170;
  wire axi_interconnect_0_n_61;
  wire axi_interconnect_0_n_62;
  wire clk_wiz_1_locked;
  wire mdm_1_debug_sys_rst;
  wire microblaze_0_Clk;
  wire [31:0]microblaze_0_M_AXI_DP_ARADDR;
  wire microblaze_0_M_AXI_DP_ARVALID;
  wire microblaze_0_M_AXI_DP_AWVALID;
  wire [31:0]microblaze_0_M_AXI_DP_WDATA;
  wire microblaze_0_M_AXI_DP_WVALID;
  wire microblaze_0_debug_CAPTURE;
  wire microblaze_0_debug_CLK;
  wire microblaze_0_debug_RST;
  wire microblaze_0_debug_SHIFT;
  wire microblaze_0_debug_TDI;
  wire microblaze_0_debug_TDO;
  wire microblaze_0_debug_UPDATE;
  wire [0:31]microblaze_0_dlmb_1_ABUS;
  wire microblaze_0_dlmb_1_ADDRSTROBE;
  wire [0:3]microblaze_0_dlmb_1_BE;
  wire [0:31]microblaze_0_dlmb_1_READDBUS;
  wire microblaze_0_dlmb_1_READY;
  wire [0:31]microblaze_0_dlmb_1_WRITEDBUS;
  wire microblaze_0_dlmb_1_WRITESTROBE;
  wire [0:31]microblaze_0_ilmb_1_ABUS;
  wire microblaze_0_ilmb_1_ADDRSTROBE;
  wire [0:31]microblaze_0_ilmb_1_READDBUS;
  wire microblaze_0_ilmb_1_READY;
  wire reset_rtl;
  wire rst_clk_wiz_1_100M_bus_struct_reset;
  wire rst_clk_wiz_1_100M_interconnect_aresetn_0;
  wire rst_clk_wiz_1_100M_mb_reset;
  wire rst_clk_wiz_1_100M_peripheral_aresetn_0;
  wire rx;
  wire [31:0]s00_axi_wdata;
  wire s_axi_arvalid;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_rready;
  wire [31:0]s_axi_wdata;
  wire s_axi_wvalid;
  wire sys_clock;
  wire tx;
  wire NLW_axi_interconnect_0_M00_ACLK_UNCONNECTED;
  wire NLW_axi_interconnect_0_M00_ARESETN_UNCONNECTED;
  wire NLW_axi_interconnect_0_M01_ACLK_UNCONNECTED;
  wire NLW_axi_interconnect_0_M01_ARESETN_UNCONNECTED;
  wire NLW_axi_interconnect_0_M01_AXI_arready_UNCONNECTED;
  wire NLW_axi_interconnect_0_M01_AXI_awready_UNCONNECTED;
  wire NLW_axi_interconnect_0_S00_ACLK_UNCONNECTED;
  wire NLW_axi_interconnect_0_S00_ARESETN_UNCONNECTED;
  wire [31:0]NLW_axi_interconnect_0_M00_AXI_araddr_UNCONNECTED;
  wire [31:0]NLW_axi_interconnect_0_M00_AXI_awaddr_UNCONNECTED;
  wire [1:0]NLW_axi_interconnect_0_M00_AXI_bresp_UNCONNECTED;
  wire [31:8]NLW_axi_interconnect_0_M00_AXI_rdata_UNCONNECTED;
  wire [1:0]NLW_axi_interconnect_0_M00_AXI_rresp_UNCONNECTED;
  wire [31:8]NLW_axi_interconnect_0_M00_AXI_wdata_UNCONNECTED;
  wire [3:0]NLW_axi_interconnect_0_M00_AXI_wstrb_UNCONNECTED;
  wire [31:0]NLW_axi_interconnect_0_M01_AXI_araddr_UNCONNECTED;
  wire [2:0]NLW_axi_interconnect_0_M01_AXI_arprot_UNCONNECTED;
  wire [31:0]NLW_axi_interconnect_0_M01_AXI_awaddr_UNCONNECTED;
  wire [2:0]NLW_axi_interconnect_0_M01_AXI_awprot_UNCONNECTED;
  wire [1:0]NLW_axi_interconnect_0_M01_AXI_bresp_UNCONNECTED;
  wire [1:0]NLW_axi_interconnect_0_M01_AXI_rresp_UNCONNECTED;
  wire [3:0]NLW_axi_interconnect_0_M01_AXI_wstrb_UNCONNECTED;
  wire [15:0]NLW_axi_interconnect_0_S00_AXI_araddr_UNCONNECTED;
  wire [2:0]NLW_axi_interconnect_0_S00_AXI_arprot_UNCONNECTED;
  wire [31:0]NLW_axi_interconnect_0_S00_AXI_awaddr_UNCONNECTED;
  wire [2:0]NLW_axi_interconnect_0_S00_AXI_awprot_UNCONNECTED;
  wire [0:0]NLW_axi_interconnect_0_S00_AXI_bready_UNCONNECTED;
  wire [1:0]NLW_axi_interconnect_0_S00_AXI_bresp_UNCONNECTED;
  wire [0:0]NLW_axi_interconnect_0_S00_AXI_rready_UNCONNECTED;
  wire [1:0]NLW_axi_interconnect_0_S00_AXI_rresp_UNCONNECTED;
  wire [3:0]NLW_axi_interconnect_0_S00_AXI_wstrb_UNCONNECTED;
  wire NLW_axi_uartlite_0_interrupt_UNCONNECTED;
  wire [3:0]NLW_axi_uartlite_0_s_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_axi_uartlite_0_s_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_axi_uartlite_0_s_axi_bresp_UNCONNECTED;
  wire [31:8]NLW_axi_uartlite_0_s_axi_rdata_UNCONNECTED;
  wire [1:0]NLW_axi_uartlite_0_s_axi_rresp_UNCONNECTED;
  wire [31:8]NLW_axi_uartlite_0_s_axi_wdata_UNCONNECTED;
  wire [3:0]NLW_axi_uartlite_0_s_axi_wstrb_UNCONNECTED;
  wire NLW_game_of_life_0_s00_axi_arready_UNCONNECTED;
  wire NLW_game_of_life_0_s00_axi_awready_UNCONNECTED;
  wire [1:0]NLW_game_of_life_0_s00_axi_araddr_UNCONNECTED;
  wire [2:0]NLW_game_of_life_0_s00_axi_arprot_UNCONNECTED;
  wire [1:0]NLW_game_of_life_0_s00_axi_awaddr_UNCONNECTED;
  wire [2:0]NLW_game_of_life_0_s00_axi_awprot_UNCONNECTED;
  wire [1:0]NLW_game_of_life_0_s00_axi_bresp_UNCONNECTED;
  wire [1:0]NLW_game_of_life_0_s00_axi_rresp_UNCONNECTED;
  wire [3:0]NLW_game_of_life_0_s00_axi_wstrb_UNCONNECTED;
  wire NLW_mdm_1_Dbg_Disable_0_UNCONNECTED;
  wire NLW_microblaze_0_DCE_UNCONNECTED;
  wire NLW_microblaze_0_DUE_UNCONNECTED;
  wire NLW_microblaze_0_DWait_UNCONNECTED;
  wire NLW_microblaze_0_Dbg_Disable_UNCONNECTED;
  wire NLW_microblaze_0_ICE_UNCONNECTED;
  wire NLW_microblaze_0_IFetch_UNCONNECTED;
  wire NLW_microblaze_0_IUE_UNCONNECTED;
  wire NLW_microblaze_0_IWAIT_UNCONNECTED;
  wire NLW_microblaze_0_Interrupt_UNCONNECTED;
  wire NLW_microblaze_0_M_AXI_DP_BREADY_UNCONNECTED;
  wire NLW_microblaze_0_M_AXI_DP_RREADY_UNCONNECTED;
  wire NLW_microblaze_0_Read_Strobe_UNCONNECTED;
  wire [0:31]NLW_microblaze_0_Data_Addr_UNCONNECTED;
  wire [0:31]NLW_microblaze_0_Instr_Addr_UNCONNECTED;
  wire [0:1]NLW_microblaze_0_Interrupt_Ack_UNCONNECTED;
  wire [0:31]NLW_microblaze_0_Interrupt_Address_UNCONNECTED;
  wire [15:0]NLW_microblaze_0_M_AXI_DP_ARADDR_UNCONNECTED;
  wire [2:0]NLW_microblaze_0_M_AXI_DP_ARPROT_UNCONNECTED;
  wire [31:0]NLW_microblaze_0_M_AXI_DP_AWADDR_UNCONNECTED;
  wire [2:0]NLW_microblaze_0_M_AXI_DP_AWPROT_UNCONNECTED;
  wire [1:0]NLW_microblaze_0_M_AXI_DP_BRESP_UNCONNECTED;
  wire [1:0]NLW_microblaze_0_M_AXI_DP_RRESP_UNCONNECTED;
  wire [3:0]NLW_microblaze_0_M_AXI_DP_WSTRB_UNCONNECTED;
  wire NLW_microblaze_0_local_memory_DLMB_ce_UNCONNECTED;
  wire NLW_microblaze_0_local_memory_DLMB_readstrobe_UNCONNECTED;
  wire NLW_microblaze_0_local_memory_DLMB_ue_UNCONNECTED;
  wire NLW_microblaze_0_local_memory_DLMB_wait_UNCONNECTED;
  wire NLW_microblaze_0_local_memory_ILMB_ce_UNCONNECTED;
  wire NLW_microblaze_0_local_memory_ILMB_readstrobe_UNCONNECTED;
  wire NLW_microblaze_0_local_memory_ILMB_ue_UNCONNECTED;
  wire NLW_microblaze_0_local_memory_ILMB_wait_UNCONNECTED;
  wire [0:31]NLW_microblaze_0_local_memory_DLMB_abus_UNCONNECTED;
  wire [0:31]NLW_microblaze_0_local_memory_ILMB_abus_UNCONNECTED;
  wire NLW_rst_clk_wiz_1_100M_aux_reset_in_UNCONNECTED;
  wire [0:0]NLW_rst_clk_wiz_1_100M_peripheral_reset_UNCONNECTED;

  design_gol_axi_interconnect_0_0 axi_interconnect_0
       (.ACLK(microblaze_0_Clk),
        .ARESETN(rst_clk_wiz_1_100M_interconnect_aresetn_0),
        .M00_ACLK(NLW_axi_interconnect_0_M00_ACLK_UNCONNECTED),
        .M00_ARESETN(NLW_axi_interconnect_0_M00_ARESETN_UNCONNECTED),
        .M00_AXI_araddr(NLW_axi_interconnect_0_M00_AXI_araddr_UNCONNECTED[31:0]),
        .M00_AXI_arready(axi_interconnect_0_M00_AXI_ARREADY),
        .M00_AXI_arvalid(s_axi_arvalid),
        .M00_AXI_awaddr({NLW_axi_interconnect_0_M00_AXI_awaddr_UNCONNECTED[31:4],axi_interconnect_0_n_61,axi_interconnect_0_n_62,NLW_axi_interconnect_0_M00_AXI_awaddr_UNCONNECTED[1:0]}),
        .M00_AXI_awready(axi_interconnect_0_M00_AXI_AWREADY),
        .M00_AXI_awvalid(s_axi_awvalid),
        .M00_AXI_bready(s_axi_bready),
        .M00_AXI_bresp(NLW_axi_interconnect_0_M00_AXI_bresp_UNCONNECTED[1:0]),
        .M00_AXI_bvalid(axi_interconnect_0_M00_AXI_BVALID),
        .M00_AXI_rdata({NLW_axi_interconnect_0_M00_AXI_rdata_UNCONNECTED[31:8],axi_interconnect_0_M00_AXI_RDATA[7:0]}),
        .M00_AXI_rready(s_axi_rready),
        .M00_AXI_rresp(NLW_axi_interconnect_0_M00_AXI_rresp_UNCONNECTED[1:0]),
        .M00_AXI_rvalid(axi_interconnect_0_M00_AXI_RVALID),
        .M00_AXI_wdata({NLW_axi_interconnect_0_M00_AXI_wdata_UNCONNECTED[31:8],s_axi_wdata[7:0]}),
        .M00_AXI_wready(axi_interconnect_0_M00_AXI_WREADY),
        .M00_AXI_wstrb(NLW_axi_interconnect_0_M00_AXI_wstrb_UNCONNECTED[3:0]),
        .M00_AXI_wvalid(s_axi_wvalid),
        .M01_ACLK(NLW_axi_interconnect_0_M01_ACLK_UNCONNECTED),
        .M01_ARESETN(NLW_axi_interconnect_0_M01_ARESETN_UNCONNECTED),
        .M01_AXI_araddr({NLW_axi_interconnect_0_M01_AXI_araddr_UNCONNECTED[31:4],axi_interconnect_0_n_133,axi_interconnect_0_n_134,NLW_axi_interconnect_0_M01_AXI_araddr_UNCONNECTED[1:0]}),
        .M01_AXI_arprot(NLW_axi_interconnect_0_M01_AXI_arprot_UNCONNECTED[2:0]),
        .M01_AXI_arready(NLW_axi_interconnect_0_M01_AXI_arready_UNCONNECTED),
        .M01_AXI_arvalid(axi_interconnect_0_M01_AXI_ARVALID),
        .M01_AXI_awaddr({NLW_axi_interconnect_0_M01_AXI_awaddr_UNCONNECTED[31:4],axi_interconnect_0_n_169,axi_interconnect_0_n_170,NLW_axi_interconnect_0_M01_AXI_awaddr_UNCONNECTED[1:0]}),
        .M01_AXI_awprot(NLW_axi_interconnect_0_M01_AXI_awprot_UNCONNECTED[2:0]),
        .M01_AXI_awready(NLW_axi_interconnect_0_M01_AXI_awready_UNCONNECTED),
        .M01_AXI_awvalid(axi_interconnect_0_M01_AXI_AWVALID),
        .M01_AXI_bready(axi_interconnect_0_M01_AXI_BREADY),
        .M01_AXI_bresp(NLW_axi_interconnect_0_M01_AXI_bresp_UNCONNECTED[1:0]),
        .M01_AXI_bvalid(axi_interconnect_0_M01_AXI_BVALID),
        .M01_AXI_rdata(axi_interconnect_0_M01_AXI_RDATA),
        .M01_AXI_rready(axi_interconnect_0_M01_AXI_RREADY),
        .M01_AXI_rresp(NLW_axi_interconnect_0_M01_AXI_rresp_UNCONNECTED[1:0]),
        .M01_AXI_rvalid(axi_interconnect_0_M01_AXI_RVALID),
        .M01_AXI_wdata(s00_axi_wdata),
        .M01_AXI_wready(axi_interconnect_0_M01_AXI_WREADY),
        .M01_AXI_wstrb(NLW_axi_interconnect_0_M01_AXI_wstrb_UNCONNECTED[3:0]),
        .M01_AXI_wvalid(axi_interconnect_0_M01_AXI_WVALID),
        .S00_ACLK(NLW_axi_interconnect_0_S00_ACLK_UNCONNECTED),
        .S00_ARESETN(NLW_axi_interconnect_0_S00_ARESETN_UNCONNECTED),
        .S00_AXI_araddr({microblaze_0_M_AXI_DP_ARADDR[31:16],NLW_axi_interconnect_0_S00_AXI_araddr_UNCONNECTED[15:4],microblaze_0_M_AXI_DP_ARADDR[3:2],NLW_axi_interconnect_0_S00_AXI_araddr_UNCONNECTED[1:0]}),
        .S00_AXI_arprot(NLW_axi_interconnect_0_S00_AXI_arprot_UNCONNECTED[2:0]),
        .S00_AXI_arready(M_AXI_DP_ARREADY),
        .S00_AXI_arvalid(microblaze_0_M_AXI_DP_ARVALID),
        .S00_AXI_awaddr(NLW_axi_interconnect_0_S00_AXI_awaddr_UNCONNECTED[31:0]),
        .S00_AXI_awprot(NLW_axi_interconnect_0_S00_AXI_awprot_UNCONNECTED[2:0]),
        .S00_AXI_awready(M_AXI_DP_AWREADY),
        .S00_AXI_awvalid(microblaze_0_M_AXI_DP_AWVALID),
        .S00_AXI_bready(NLW_axi_interconnect_0_S00_AXI_bready_UNCONNECTED[0]),
        .S00_AXI_bresp(NLW_axi_interconnect_0_S00_AXI_bresp_UNCONNECTED[1:0]),
        .S00_AXI_bvalid(M_AXI_DP_BVALID),
        .S00_AXI_rdata(M_AXI_DP_RDATA),
        .S00_AXI_rready(NLW_axi_interconnect_0_S00_AXI_rready_UNCONNECTED[0]),
        .S00_AXI_rresp(NLW_axi_interconnect_0_S00_AXI_rresp_UNCONNECTED[1:0]),
        .S00_AXI_rvalid(M_AXI_DP_RVALID),
        .S00_AXI_wdata(microblaze_0_M_AXI_DP_WDATA),
        .S00_AXI_wready(M_AXI_DP_WREADY),
        .S00_AXI_wstrb(NLW_axi_interconnect_0_S00_AXI_wstrb_UNCONNECTED[3:0]),
        .S00_AXI_wvalid(microblaze_0_M_AXI_DP_WVALID));
  (* CHECK_LICENSE_TYPE = "design_gol_axi_uartlite_0_0,axi_uartlite,{}" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* X_CORE_INFO = "axi_uartlite,Vivado 2017.2" *) 
  design_gol_axi_uartlite_0_0 axi_uartlite_0
       (.interrupt(NLW_axi_uartlite_0_interrupt_UNCONNECTED),
        .rx(rx),
        .s_axi_aclk(microblaze_0_Clk),
        .s_axi_araddr(NLW_axi_uartlite_0_s_axi_araddr_UNCONNECTED[3:0]),
        .s_axi_aresetn(rst_clk_wiz_1_100M_peripheral_aresetn_0),
        .s_axi_arready(axi_interconnect_0_M00_AXI_ARREADY),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr({axi_interconnect_0_n_61,axi_interconnect_0_n_62,NLW_axi_uartlite_0_s_axi_awaddr_UNCONNECTED[1:0]}),
        .s_axi_awready(axi_interconnect_0_M00_AXI_AWREADY),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(NLW_axi_uartlite_0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(axi_interconnect_0_M00_AXI_BVALID),
        .s_axi_rdata({NLW_axi_uartlite_0_s_axi_rdata_UNCONNECTED[31:8],axi_interconnect_0_M00_AXI_RDATA[7:0]}),
        .s_axi_rready(s_axi_rready),
        .s_axi_rresp(NLW_axi_uartlite_0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(axi_interconnect_0_M00_AXI_RVALID),
        .s_axi_wdata({NLW_axi_uartlite_0_s_axi_wdata_UNCONNECTED[31:8],s_axi_wdata[7:0]}),
        .s_axi_wready(axi_interconnect_0_M00_AXI_WREADY),
        .s_axi_wstrb(NLW_axi_uartlite_0_s_axi_wstrb_UNCONNECTED[3:0]),
        .s_axi_wvalid(s_axi_wvalid),
        .tx(tx));
  design_gol_clk_wiz_1_0 clk_wiz_1
       (.clk_in1(sys_clock),
        .clk_out1(microblaze_0_Clk),
        .locked(clk_wiz_1_locked),
        .reset(reset_rtl));
  (* CHECK_LICENSE_TYPE = "design_gol_game_of_life_0_1,game_of_life_v1_0,{}" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* X_CORE_INFO = "game_of_life_v1_0,Vivado 2017.2" *) 
  design_gol_game_of_life_0_1 game_of_life_0
       (.s00_axi_aclk(microblaze_0_Clk),
        .s00_axi_araddr({axi_interconnect_0_n_133,axi_interconnect_0_n_134,NLW_game_of_life_0_s00_axi_araddr_UNCONNECTED[1:0]}),
        .s00_axi_aresetn(rst_clk_wiz_1_100M_peripheral_aresetn_0),
        .s00_axi_arprot(NLW_game_of_life_0_s00_axi_arprot_UNCONNECTED[2:0]),
        .s00_axi_arready(NLW_game_of_life_0_s00_axi_arready_UNCONNECTED),
        .s00_axi_arvalid(axi_interconnect_0_M01_AXI_ARVALID),
        .s00_axi_awaddr({axi_interconnect_0_n_169,axi_interconnect_0_n_170,NLW_game_of_life_0_s00_axi_awaddr_UNCONNECTED[1:0]}),
        .s00_axi_awprot(NLW_game_of_life_0_s00_axi_awprot_UNCONNECTED[2:0]),
        .s00_axi_awready(NLW_game_of_life_0_s00_axi_awready_UNCONNECTED),
        .s00_axi_awvalid(axi_interconnect_0_M01_AXI_AWVALID),
        .s00_axi_bready(axi_interconnect_0_M01_AXI_BREADY),
        .s00_axi_bresp(NLW_game_of_life_0_s00_axi_bresp_UNCONNECTED[1:0]),
        .s00_axi_bvalid(axi_interconnect_0_M01_AXI_BVALID),
        .s00_axi_rdata(axi_interconnect_0_M01_AXI_RDATA),
        .s00_axi_rready(axi_interconnect_0_M01_AXI_RREADY),
        .s00_axi_rresp(NLW_game_of_life_0_s00_axi_rresp_UNCONNECTED[1:0]),
        .s00_axi_rvalid(axi_interconnect_0_M01_AXI_RVALID),
        .s00_axi_wdata(s00_axi_wdata),
        .s00_axi_wready(axi_interconnect_0_M01_AXI_WREADY),
        .s00_axi_wstrb(NLW_game_of_life_0_s00_axi_wstrb_UNCONNECTED[3:0]),
        .s00_axi_wvalid(axi_interconnect_0_M01_AXI_WVALID));
  (* CHECK_LICENSE_TYPE = "design_gol_mdm_1_0,MDM,{}" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* X_CORE_INFO = "MDM,Vivado 2017.2" *) 
  design_gol_mdm_1_0 mdm_1
       (.Dbg_Capture_0(microblaze_0_debug_CAPTURE),
        .Dbg_Clk_0(microblaze_0_debug_CLK),
        .Dbg_Disable_0(NLW_mdm_1_Dbg_Disable_0_UNCONNECTED),
        .Dbg_Reg_En_0(Dbg_Reg_En),
        .Dbg_Rst_0(microblaze_0_debug_RST),
        .Dbg_Shift_0(microblaze_0_debug_SHIFT),
        .Dbg_TDI_0(microblaze_0_debug_TDI),
        .Dbg_TDO_0(microblaze_0_debug_TDO),
        .Dbg_Update_0(microblaze_0_debug_UPDATE),
        .Debug_SYS_Rst(mdm_1_debug_sys_rst));
  (* BMM_INFO_PROCESSOR = "microblaze-le > design_gol microblaze_0_local_memory/dlmb_bram_if_cntlr" *) 
  (* CHECK_LICENSE_TYPE = "design_gol_microblaze_0_0,MicroBlaze,{}" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* X_CORE_INFO = "MicroBlaze,Vivado 2017.2" *) 
  design_gol_microblaze_0_0 microblaze_0
       (.Byte_Enable(microblaze_0_dlmb_1_BE),
        .Clk(microblaze_0_Clk),
        .DCE(NLW_microblaze_0_DCE_UNCONNECTED),
        .DReady(microblaze_0_dlmb_1_READY),
        .DUE(NLW_microblaze_0_DUE_UNCONNECTED),
        .DWait(NLW_microblaze_0_DWait_UNCONNECTED),
        .D_AS(microblaze_0_dlmb_1_ADDRSTROBE),
        .Data_Addr({NLW_microblaze_0_Data_Addr_UNCONNECTED[0:9],microblaze_0_dlmb_1_ABUS[10],NLW_microblaze_0_Data_Addr_UNCONNECTED[11:17],microblaze_0_dlmb_1_ABUS[18:29],NLW_microblaze_0_Data_Addr_UNCONNECTED[30:31]}),
        .Data_Read(microblaze_0_dlmb_1_READDBUS),
        .Data_Write(microblaze_0_dlmb_1_WRITEDBUS),
        .Dbg_Capture(microblaze_0_debug_CAPTURE),
        .Dbg_Clk(microblaze_0_debug_CLK),
        .Dbg_Disable(NLW_microblaze_0_Dbg_Disable_UNCONNECTED),
        .Dbg_Reg_En(Dbg_Reg_En),
        .Dbg_Shift(microblaze_0_debug_SHIFT),
        .Dbg_TDI(microblaze_0_debug_TDI),
        .Dbg_TDO(microblaze_0_debug_TDO),
        .Dbg_Update(microblaze_0_debug_UPDATE),
        .Debug_Rst(microblaze_0_debug_RST),
        .ICE(NLW_microblaze_0_ICE_UNCONNECTED),
        .IFetch(NLW_microblaze_0_IFetch_UNCONNECTED),
        .IReady(microblaze_0_ilmb_1_READY),
        .IUE(NLW_microblaze_0_IUE_UNCONNECTED),
        .IWAIT(NLW_microblaze_0_IWAIT_UNCONNECTED),
        .I_AS(microblaze_0_ilmb_1_ADDRSTROBE),
        .Instr(microblaze_0_ilmb_1_READDBUS),
        .Instr_Addr({NLW_microblaze_0_Instr_Addr_UNCONNECTED[0:17],microblaze_0_ilmb_1_ABUS[18:29],NLW_microblaze_0_Instr_Addr_UNCONNECTED[30:31]}),
        .Interrupt(NLW_microblaze_0_Interrupt_UNCONNECTED),
        .Interrupt_Ack(NLW_microblaze_0_Interrupt_Ack_UNCONNECTED[0:1]),
        .Interrupt_Address(NLW_microblaze_0_Interrupt_Address_UNCONNECTED[0:31]),
        .M_AXI_DP_ARADDR({microblaze_0_M_AXI_DP_ARADDR[31:16],NLW_microblaze_0_M_AXI_DP_ARADDR_UNCONNECTED[15:4],microblaze_0_M_AXI_DP_ARADDR[3:2],NLW_microblaze_0_M_AXI_DP_ARADDR_UNCONNECTED[1:0]}),
        .M_AXI_DP_ARPROT(NLW_microblaze_0_M_AXI_DP_ARPROT_UNCONNECTED[2:0]),
        .M_AXI_DP_ARREADY(M_AXI_DP_ARREADY),
        .M_AXI_DP_ARVALID(microblaze_0_M_AXI_DP_ARVALID),
        .M_AXI_DP_AWADDR(NLW_microblaze_0_M_AXI_DP_AWADDR_UNCONNECTED[31:0]),
        .M_AXI_DP_AWPROT(NLW_microblaze_0_M_AXI_DP_AWPROT_UNCONNECTED[2:0]),
        .M_AXI_DP_AWREADY(M_AXI_DP_AWREADY),
        .M_AXI_DP_AWVALID(microblaze_0_M_AXI_DP_AWVALID),
        .M_AXI_DP_BREADY(NLW_microblaze_0_M_AXI_DP_BREADY_UNCONNECTED),
        .M_AXI_DP_BRESP(NLW_microblaze_0_M_AXI_DP_BRESP_UNCONNECTED[1:0]),
        .M_AXI_DP_BVALID(M_AXI_DP_BVALID),
        .M_AXI_DP_RDATA(M_AXI_DP_RDATA),
        .M_AXI_DP_RREADY(NLW_microblaze_0_M_AXI_DP_RREADY_UNCONNECTED),
        .M_AXI_DP_RRESP(NLW_microblaze_0_M_AXI_DP_RRESP_UNCONNECTED[1:0]),
        .M_AXI_DP_RVALID(M_AXI_DP_RVALID),
        .M_AXI_DP_WDATA(microblaze_0_M_AXI_DP_WDATA),
        .M_AXI_DP_WREADY(M_AXI_DP_WREADY),
        .M_AXI_DP_WSTRB(NLW_microblaze_0_M_AXI_DP_WSTRB_UNCONNECTED[3:0]),
        .M_AXI_DP_WVALID(microblaze_0_M_AXI_DP_WVALID),
        .Read_Strobe(NLW_microblaze_0_Read_Strobe_UNCONNECTED),
        .Reset(rst_clk_wiz_1_100M_mb_reset),
        .Write_Strobe(microblaze_0_dlmb_1_WRITESTROBE));
  microblaze_0_local_memory_imp_1GIH4L3 microblaze_0_local_memory
       (.DLMB_abus({NLW_microblaze_0_local_memory_DLMB_abus_UNCONNECTED[0:9],microblaze_0_dlmb_1_ABUS[10],NLW_microblaze_0_local_memory_DLMB_abus_UNCONNECTED[11:17],microblaze_0_dlmb_1_ABUS[18:29],NLW_microblaze_0_local_memory_DLMB_abus_UNCONNECTED[30:31]}),
        .DLMB_addrstrobe(microblaze_0_dlmb_1_ADDRSTROBE),
        .DLMB_be(microblaze_0_dlmb_1_BE),
        .DLMB_ce(NLW_microblaze_0_local_memory_DLMB_ce_UNCONNECTED),
        .DLMB_readdbus(microblaze_0_dlmb_1_READDBUS),
        .DLMB_readstrobe(NLW_microblaze_0_local_memory_DLMB_readstrobe_UNCONNECTED),
        .DLMB_ready(microblaze_0_dlmb_1_READY),
        .DLMB_ue(NLW_microblaze_0_local_memory_DLMB_ue_UNCONNECTED),
        .DLMB_wait(NLW_microblaze_0_local_memory_DLMB_wait_UNCONNECTED),
        .DLMB_writedbus(microblaze_0_dlmb_1_WRITEDBUS),
        .DLMB_writestrobe(microblaze_0_dlmb_1_WRITESTROBE),
        .ILMB_abus({NLW_microblaze_0_local_memory_ILMB_abus_UNCONNECTED[0:17],microblaze_0_ilmb_1_ABUS[18:29],NLW_microblaze_0_local_memory_ILMB_abus_UNCONNECTED[30:31]}),
        .ILMB_addrstrobe(microblaze_0_ilmb_1_ADDRSTROBE),
        .ILMB_ce(NLW_microblaze_0_local_memory_ILMB_ce_UNCONNECTED),
        .ILMB_readdbus(microblaze_0_ilmb_1_READDBUS),
        .ILMB_readstrobe(NLW_microblaze_0_local_memory_ILMB_readstrobe_UNCONNECTED),
        .ILMB_ready(microblaze_0_ilmb_1_READY),
        .ILMB_ue(NLW_microblaze_0_local_memory_ILMB_ue_UNCONNECTED),
        .ILMB_wait(NLW_microblaze_0_local_memory_ILMB_wait_UNCONNECTED),
        .bus_struct_reset(rst_clk_wiz_1_100M_bus_struct_reset),
        .clk_out1(microblaze_0_Clk));
  (* CHECK_LICENSE_TYPE = "design_gol_rst_clk_wiz_1_100M_0,proc_sys_reset,{}" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* X_CORE_INFO = "proc_sys_reset,Vivado 2017.2" *) 
  design_gol_rst_clk_wiz_1_100M_0 rst_clk_wiz_1_100M
       (.aux_reset_in(NLW_rst_clk_wiz_1_100M_aux_reset_in_UNCONNECTED),
        .bus_struct_reset(rst_clk_wiz_1_100M_bus_struct_reset),
        .dcm_locked(clk_wiz_1_locked),
        .ext_reset_in(reset_rtl),
        .interconnect_aresetn(rst_clk_wiz_1_100M_interconnect_aresetn_0),
        .mb_debug_sys_rst(mdm_1_debug_sys_rst),
        .mb_reset(rst_clk_wiz_1_100M_mb_reset),
        .peripheral_aresetn(rst_clk_wiz_1_100M_peripheral_aresetn_0),
        .peripheral_reset(NLW_rst_clk_wiz_1_100M_peripheral_reset_UNCONNECTED[0]),
        .slowest_sync_clk(microblaze_0_Clk));
endmodule

module design_gol_axi_interconnect_0_0
   (ACLK,
    ARESETN,
    M00_ACLK,
    M00_ARESETN,
    M00_AXI_araddr,
    M00_AXI_arready,
    M00_AXI_arvalid,
    M00_AXI_awaddr,
    M00_AXI_awready,
    M00_AXI_awvalid,
    M00_AXI_bready,
    M00_AXI_bresp,
    M00_AXI_bvalid,
    M00_AXI_rdata,
    M00_AXI_rready,
    M00_AXI_rresp,
    M00_AXI_rvalid,
    M00_AXI_wdata,
    M00_AXI_wready,
    M00_AXI_wstrb,
    M00_AXI_wvalid,
    M01_ACLK,
    M01_ARESETN,
    M01_AXI_araddr,
    M01_AXI_arprot,
    M01_AXI_arready,
    M01_AXI_arvalid,
    M01_AXI_awaddr,
    M01_AXI_awprot,
    M01_AXI_awready,
    M01_AXI_awvalid,
    M01_AXI_bready,
    M01_AXI_bresp,
    M01_AXI_bvalid,
    M01_AXI_rdata,
    M01_AXI_rready,
    M01_AXI_rresp,
    M01_AXI_rvalid,
    M01_AXI_wdata,
    M01_AXI_wready,
    M01_AXI_wstrb,
    M01_AXI_wvalid,
    S00_ACLK,
    S00_ARESETN,
    S00_AXI_araddr,
    S00_AXI_arprot,
    S00_AXI_arready,
    S00_AXI_arvalid,
    S00_AXI_awaddr,
    S00_AXI_awprot,
    S00_AXI_awready,
    S00_AXI_awvalid,
    S00_AXI_bready,
    S00_AXI_bresp,
    S00_AXI_bvalid,
    S00_AXI_rdata,
    S00_AXI_rready,
    S00_AXI_rresp,
    S00_AXI_rvalid,
    S00_AXI_wdata,
    S00_AXI_wready,
    S00_AXI_wstrb,
    S00_AXI_wvalid);
  input ACLK;
  input ARESETN;
  input M00_ACLK;
  input M00_ARESETN;
  output [31:0]M00_AXI_araddr;
  input [0:0]M00_AXI_arready;
  output [0:0]M00_AXI_arvalid;
  output [31:0]M00_AXI_awaddr;
  input [0:0]M00_AXI_awready;
  output [0:0]M00_AXI_awvalid;
  output [0:0]M00_AXI_bready;
  input [1:0]M00_AXI_bresp;
  input [0:0]M00_AXI_bvalid;
  input [31:0]M00_AXI_rdata;
  output [0:0]M00_AXI_rready;
  input [1:0]M00_AXI_rresp;
  input [0:0]M00_AXI_rvalid;
  output [31:0]M00_AXI_wdata;
  input [0:0]M00_AXI_wready;
  output [3:0]M00_AXI_wstrb;
  output [0:0]M00_AXI_wvalid;
  input M01_ACLK;
  input M01_ARESETN;
  output [31:0]M01_AXI_araddr;
  output [2:0]M01_AXI_arprot;
  input M01_AXI_arready;
  output M01_AXI_arvalid;
  output [31:0]M01_AXI_awaddr;
  output [2:0]M01_AXI_awprot;
  input M01_AXI_awready;
  output M01_AXI_awvalid;
  output M01_AXI_bready;
  input [1:0]M01_AXI_bresp;
  input M01_AXI_bvalid;
  input [31:0]M01_AXI_rdata;
  output M01_AXI_rready;
  input [1:0]M01_AXI_rresp;
  input M01_AXI_rvalid;
  output [31:0]M01_AXI_wdata;
  input M01_AXI_wready;
  output [3:0]M01_AXI_wstrb;
  output M01_AXI_wvalid;
  input S00_ACLK;
  input S00_ARESETN;
  input [31:0]S00_AXI_araddr;
  input [2:0]S00_AXI_arprot;
  output [0:0]S00_AXI_arready;
  input [0:0]S00_AXI_arvalid;
  input [31:0]S00_AXI_awaddr;
  input [2:0]S00_AXI_awprot;
  output [0:0]S00_AXI_awready;
  input [0:0]S00_AXI_awvalid;
  input [0:0]S00_AXI_bready;
  output [1:0]S00_AXI_bresp;
  output [0:0]S00_AXI_bvalid;
  output [31:0]S00_AXI_rdata;
  input [0:0]S00_AXI_rready;
  output [1:0]S00_AXI_rresp;
  output [0:0]S00_AXI_rvalid;
  input [31:0]S00_AXI_wdata;
  output [0:0]S00_AXI_wready;
  input [3:0]S00_AXI_wstrb;
  input [0:0]S00_AXI_wvalid;

  wire ACLK;
  wire ARESETN;
  wire [0:0]M00_AXI_arready;
  wire [0:0]M00_AXI_arvalid;
  wire [31:0]M00_AXI_awaddr;
  wire [0:0]M00_AXI_awready;
  wire [0:0]M00_AXI_awvalid;
  wire [0:0]M00_AXI_bready;
  wire [0:0]M00_AXI_bvalid;
  wire [31:0]M00_AXI_rdata;
  wire [0:0]M00_AXI_rready;
  wire [0:0]M00_AXI_rvalid;
  wire [31:0]M00_AXI_wdata;
  wire [0:0]M00_AXI_wready;
  wire [0:0]M00_AXI_wvalid;
  wire [31:0]M01_AXI_araddr;
  wire M01_AXI_arvalid;
  wire [31:0]M01_AXI_awaddr;
  wire M01_AXI_awvalid;
  wire M01_AXI_bready;
  wire M01_AXI_bvalid;
  wire [31:0]M01_AXI_rdata;
  wire M01_AXI_rready;
  wire M01_AXI_rvalid;
  wire [31:0]M01_AXI_wdata;
  wire M01_AXI_wready;
  wire M01_AXI_wvalid;
  wire [31:0]S00_AXI_araddr;
  wire [0:0]S00_AXI_arready;
  wire [0:0]S00_AXI_arvalid;
  wire [0:0]S00_AXI_awready;
  wire [0:0]S00_AXI_awvalid;
  wire [0:0]S00_AXI_bvalid;
  wire [31:0]S00_AXI_rdata;
  wire [0:0]S00_AXI_rvalid;
  wire [31:0]S00_AXI_wdata;
  wire [0:0]S00_AXI_wready;
  wire [0:0]S00_AXI_wvalid;
  wire [63:0]NLW_xbar_m_axi_araddr_UNCONNECTED;
  wire [5:0]NLW_xbar_m_axi_arprot_UNCONNECTED;
  wire [1:1]NLW_xbar_m_axi_arready_UNCONNECTED;
  wire [63:0]NLW_xbar_m_axi_awaddr_UNCONNECTED;
  wire [5:0]NLW_xbar_m_axi_awprot_UNCONNECTED;
  wire [1:1]NLW_xbar_m_axi_awready_UNCONNECTED;
  wire [3:0]NLW_xbar_m_axi_bresp_UNCONNECTED;
  wire [31:8]NLW_xbar_m_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_xbar_m_axi_rresp_UNCONNECTED;
  wire [31:8]NLW_xbar_m_axi_wdata_UNCONNECTED;
  wire [7:0]NLW_xbar_m_axi_wstrb_UNCONNECTED;
  wire [15:0]NLW_xbar_s_axi_araddr_UNCONNECTED;
  wire [2:0]NLW_xbar_s_axi_arprot_UNCONNECTED;
  wire [31:0]NLW_xbar_s_axi_awaddr_UNCONNECTED;
  wire [2:0]NLW_xbar_s_axi_awprot_UNCONNECTED;
  wire [0:0]NLW_xbar_s_axi_bready_UNCONNECTED;
  wire [1:0]NLW_xbar_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_xbar_s_axi_rready_UNCONNECTED;
  wire [1:0]NLW_xbar_s_axi_rresp_UNCONNECTED;
  wire [3:0]NLW_xbar_s_axi_wstrb_UNCONNECTED;

  (* CHECK_LICENSE_TYPE = "design_gol_xbar_0,axi_crossbar_v2_1_14_axi_crossbar,{}" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* X_CORE_INFO = "axi_crossbar_v2_1_14_axi_crossbar,Vivado 2017.2" *) 
  design_gol_xbar_0 xbar
       (.aclk(ACLK),
        .aresetn(ARESETN),
        .m_axi_araddr({NLW_xbar_m_axi_araddr_UNCONNECTED[63:36],M01_AXI_araddr[3:2],NLW_xbar_m_axi_araddr_UNCONNECTED[33:0]}),
        .m_axi_arprot(NLW_xbar_m_axi_arprot_UNCONNECTED[5:0]),
        .m_axi_arready({NLW_xbar_m_axi_arready_UNCONNECTED[1],M00_AXI_arready}),
        .m_axi_arvalid({M01_AXI_arvalid,M00_AXI_arvalid}),
        .m_axi_awaddr({NLW_xbar_m_axi_awaddr_UNCONNECTED[63:36],M01_AXI_awaddr[3:2],NLW_xbar_m_axi_awaddr_UNCONNECTED[33:4],M00_AXI_awaddr[3:2],NLW_xbar_m_axi_awaddr_UNCONNECTED[1:0]}),
        .m_axi_awprot(NLW_xbar_m_axi_awprot_UNCONNECTED[5:0]),
        .m_axi_awready({NLW_xbar_m_axi_awready_UNCONNECTED[1],M00_AXI_awready}),
        .m_axi_awvalid({M01_AXI_awvalid,M00_AXI_awvalid}),
        .m_axi_bready({M01_AXI_bready,M00_AXI_bready}),
        .m_axi_bresp(NLW_xbar_m_axi_bresp_UNCONNECTED[3:0]),
        .m_axi_bvalid({M01_AXI_bvalid,M00_AXI_bvalid}),
        .m_axi_rdata({M01_AXI_rdata,NLW_xbar_m_axi_rdata_UNCONNECTED[31:8],M00_AXI_rdata[7:0]}),
        .m_axi_rready({M01_AXI_rready,M00_AXI_rready}),
        .m_axi_rresp(NLW_xbar_m_axi_rresp_UNCONNECTED[3:0]),
        .m_axi_rvalid({M01_AXI_rvalid,M00_AXI_rvalid}),
        .m_axi_wdata({M01_AXI_wdata,NLW_xbar_m_axi_wdata_UNCONNECTED[31:8],M00_AXI_wdata[7:0]}),
        .m_axi_wready({M01_AXI_wready,M00_AXI_wready}),
        .m_axi_wstrb(NLW_xbar_m_axi_wstrb_UNCONNECTED[7:0]),
        .m_axi_wvalid({M01_AXI_wvalid,M00_AXI_wvalid}),
        .s_axi_araddr({S00_AXI_araddr[31:16],NLW_xbar_s_axi_araddr_UNCONNECTED[15:4],S00_AXI_araddr[3:2],NLW_xbar_s_axi_araddr_UNCONNECTED[1:0]}),
        .s_axi_arprot(NLW_xbar_s_axi_arprot_UNCONNECTED[2:0]),
        .s_axi_arready(S00_AXI_arready),
        .s_axi_arvalid(S00_AXI_arvalid),
        .s_axi_awaddr(NLW_xbar_s_axi_awaddr_UNCONNECTED[31:0]),
        .s_axi_awprot(NLW_xbar_s_axi_awprot_UNCONNECTED[2:0]),
        .s_axi_awready(S00_AXI_awready),
        .s_axi_awvalid(S00_AXI_awvalid),
        .s_axi_bready(NLW_xbar_s_axi_bready_UNCONNECTED[0]),
        .s_axi_bresp(NLW_xbar_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(S00_AXI_bvalid),
        .s_axi_rdata(S00_AXI_rdata),
        .s_axi_rready(NLW_xbar_s_axi_rready_UNCONNECTED[0]),
        .s_axi_rresp(NLW_xbar_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(S00_AXI_rvalid),
        .s_axi_wdata(S00_AXI_wdata),
        .s_axi_wready(S00_AXI_wready),
        .s_axi_wstrb(NLW_xbar_s_axi_wstrb_UNCONNECTED[3:0]),
        .s_axi_wvalid(S00_AXI_wvalid));
endmodule

(* CHECK_LICENSE_TYPE = "design_gol_axi_uartlite_0_0,axi_uartlite,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "axi_uartlite,Vivado 2017.2" *) 
module design_gol_axi_uartlite_0_0
   (s_axi_aclk,
    s_axi_aresetn,
    interrupt,
    s_axi_awaddr,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_araddr,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rvalid,
    s_axi_rready,
    rx,
    tx);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 ACLK CLK" *) input s_axi_aclk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 ARESETN RST" *) input s_axi_aresetn;
  (* X_INTERFACE_INFO = "xilinx.com:signal:interrupt:1.0 INTERRUPT INTERRUPT" *) output interrupt;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI AWADDR" *) input [3:0]s_axi_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI AWVALID" *) input s_axi_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI AWREADY" *) output s_axi_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI WDATA" *) input [31:0]s_axi_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI WSTRB" *) input [3:0]s_axi_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI WVALID" *) input s_axi_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI WREADY" *) output s_axi_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI BRESP" *) output [1:0]s_axi_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI BVALID" *) output s_axi_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI BREADY" *) input s_axi_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI ARADDR" *) input [3:0]s_axi_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI ARVALID" *) input s_axi_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI ARREADY" *) output s_axi_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI RDATA" *) output [31:0]s_axi_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI RRESP" *) output [1:0]s_axi_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI RVALID" *) output s_axi_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI RREADY" *) input s_axi_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:uart:1.0 UART RxD" *) input rx;
  (* X_INTERFACE_INFO = "xilinx.com:interface:uart:1.0 UART TxD" *) output tx;

  wire rx;
  wire s_axi_aclk;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire [3:0]s_axi_awaddr;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid;
  wire [31:0]s_axi_rdata;
  wire s_axi_rready;
  wire s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire tx;
  wire NLW_U0_interrupt_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [31:8]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [31:8]NLW_U0_s_axi_wdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_wstrb_UNCONNECTED;

  (* C_BAUDRATE = "115200" *) 
  (* C_DATA_BITS = "8" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_ODD_PARITY = "0" *) 
  (* C_S_AXI_ACLK_FREQ_HZ = "100000000" *) 
  (* C_S_AXI_ADDR_WIDTH = "4" *) 
  (* C_S_AXI_DATA_WIDTH = "32" *) 
  (* C_USE_PARITY = "0" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  axi_uartlite U0
       (.interrupt(NLW_U0_interrupt_UNCONNECTED),
        .rx(rx),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr(NLW_U0_s_axi_araddr_UNCONNECTED[3:0]),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr({s_axi_awaddr[3:2],NLW_U0_s_axi_awaddr_UNCONNECTED[1:0]}),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_rdata({NLW_U0_s_axi_rdata_UNCONNECTED[31:8],s_axi_rdata[7:0]}),
        .s_axi_rready(s_axi_rready),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wdata({NLW_U0_s_axi_wdata_UNCONNECTED[31:8],s_axi_wdata[7:0]}),
        .s_axi_wready(s_axi_wready),
        .s_axi_wstrb(NLW_U0_s_axi_wstrb_UNCONNECTED[3:0]),
        .s_axi_wvalid(s_axi_wvalid),
        .tx(tx));
endmodule

module design_gol_clk_wiz_1_0
   (clk_out1,
    reset,
    locked,
    clk_in1);
  output clk_out1;
  input reset;
  output locked;
  input clk_in1;

  wire clk_in1;
  wire clk_out1;
  wire locked;
  wire reset;

  design_gol_clk_wiz_1_0_clk_wiz inst
       (.clk_in1(clk_in1),
        .clk_out1(clk_out1),
        .locked(locked),
        .reset(reset));
endmodule

module design_gol_clk_wiz_1_0_clk_wiz
   (clk_out1,
    reset,
    locked,
    clk_in1);
  output clk_out1;
  input reset;
  output locked;
  input clk_in1;

  wire clk_in1;
  wire clk_in1_design_gol_clk_wiz_1_0;
  wire clk_out1;
  wire clk_out1_design_gol_clk_wiz_1_0;
  wire clkfbout_buf_design_gol_clk_wiz_1_0;
  wire clkfbout_design_gol_clk_wiz_1_0;
  wire locked;
  wire reset;
  wire NLW_mmcm_adv_inst_CLKFBOUTB_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKFBSTOPPED_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKINSTOPPED_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT0B_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT1_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT1B_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT2_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT2B_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT3_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT3B_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT4_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT5_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT6_UNCONNECTED;
  wire NLW_mmcm_adv_inst_DRDY_UNCONNECTED;
  wire NLW_mmcm_adv_inst_PSDONE_UNCONNECTED;
  wire [15:0]NLW_mmcm_adv_inst_DO_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  BUFG clkf_buf
       (.I(clkfbout_design_gol_clk_wiz_1_0),
        .O(clkfbout_buf_design_gol_clk_wiz_1_0));
  (* CAPACITANCE = "DONT_CARE" *) 
  (* IBUF_DELAY_VALUE = "0" *) 
  (* IFD_DELAY_VALUE = "AUTO" *) 
  (* box_type = "PRIMITIVE" *) 
  IBUF #(
    .IOSTANDARD("DEFAULT")) 
    clkin1_ibufg
       (.I(clk_in1),
        .O(clk_in1_design_gol_clk_wiz_1_0));
  (* box_type = "PRIMITIVE" *) 
  BUFG clkout1_buf
       (.I(clk_out1_design_gol_clk_wiz_1_0),
        .O(clk_out1));
  (* box_type = "PRIMITIVE" *) 
  MMCME2_ADV #(
    .BANDWIDTH("OPTIMIZED"),
    .CLKFBOUT_MULT_F(10.000000),
    .CLKFBOUT_PHASE(0.000000),
    .CLKFBOUT_USE_FINE_PS("FALSE"),
    .CLKIN1_PERIOD(10.000000),
    .CLKIN2_PERIOD(0.000000),
    .CLKOUT0_DIVIDE_F(10.000000),
    .CLKOUT0_DUTY_CYCLE(0.500000),
    .CLKOUT0_PHASE(0.000000),
    .CLKOUT0_USE_FINE_PS("FALSE"),
    .CLKOUT1_DIVIDE(1),
    .CLKOUT1_DUTY_CYCLE(0.500000),
    .CLKOUT1_PHASE(0.000000),
    .CLKOUT1_USE_FINE_PS("FALSE"),
    .CLKOUT2_DIVIDE(1),
    .CLKOUT2_DUTY_CYCLE(0.500000),
    .CLKOUT2_PHASE(0.000000),
    .CLKOUT2_USE_FINE_PS("FALSE"),
    .CLKOUT3_DIVIDE(1),
    .CLKOUT3_DUTY_CYCLE(0.500000),
    .CLKOUT3_PHASE(0.000000),
    .CLKOUT3_USE_FINE_PS("FALSE"),
    .CLKOUT4_CASCADE("FALSE"),
    .CLKOUT4_DIVIDE(1),
    .CLKOUT4_DUTY_CYCLE(0.500000),
    .CLKOUT4_PHASE(0.000000),
    .CLKOUT4_USE_FINE_PS("FALSE"),
    .CLKOUT5_DIVIDE(1),
    .CLKOUT5_DUTY_CYCLE(0.500000),
    .CLKOUT5_PHASE(0.000000),
    .CLKOUT5_USE_FINE_PS("FALSE"),
    .CLKOUT6_DIVIDE(1),
    .CLKOUT6_DUTY_CYCLE(0.500000),
    .CLKOUT6_PHASE(0.000000),
    .CLKOUT6_USE_FINE_PS("FALSE"),
    .COMPENSATION("ZHOLD"),
    .DIVCLK_DIVIDE(1),
    .IS_CLKINSEL_INVERTED(1'b0),
    .IS_PSEN_INVERTED(1'b0),
    .IS_PSINCDEC_INVERTED(1'b0),
    .IS_PWRDWN_INVERTED(1'b0),
    .IS_RST_INVERTED(1'b0),
    .REF_JITTER1(0.010000),
    .REF_JITTER2(0.010000),
    .SS_EN("FALSE"),
    .SS_MODE("CENTER_HIGH"),
    .SS_MOD_PERIOD(10000),
    .STARTUP_WAIT("FALSE")) 
    mmcm_adv_inst
       (.CLKFBIN(clkfbout_buf_design_gol_clk_wiz_1_0),
        .CLKFBOUT(clkfbout_design_gol_clk_wiz_1_0),
        .CLKFBOUTB(NLW_mmcm_adv_inst_CLKFBOUTB_UNCONNECTED),
        .CLKFBSTOPPED(NLW_mmcm_adv_inst_CLKFBSTOPPED_UNCONNECTED),
        .CLKIN1(clk_in1_design_gol_clk_wiz_1_0),
        .CLKIN2(1'b0),
        .CLKINSEL(1'b1),
        .CLKINSTOPPED(NLW_mmcm_adv_inst_CLKINSTOPPED_UNCONNECTED),
        .CLKOUT0(clk_out1_design_gol_clk_wiz_1_0),
        .CLKOUT0B(NLW_mmcm_adv_inst_CLKOUT0B_UNCONNECTED),
        .CLKOUT1(NLW_mmcm_adv_inst_CLKOUT1_UNCONNECTED),
        .CLKOUT1B(NLW_mmcm_adv_inst_CLKOUT1B_UNCONNECTED),
        .CLKOUT2(NLW_mmcm_adv_inst_CLKOUT2_UNCONNECTED),
        .CLKOUT2B(NLW_mmcm_adv_inst_CLKOUT2B_UNCONNECTED),
        .CLKOUT3(NLW_mmcm_adv_inst_CLKOUT3_UNCONNECTED),
        .CLKOUT3B(NLW_mmcm_adv_inst_CLKOUT3B_UNCONNECTED),
        .CLKOUT4(NLW_mmcm_adv_inst_CLKOUT4_UNCONNECTED),
        .CLKOUT5(NLW_mmcm_adv_inst_CLKOUT5_UNCONNECTED),
        .CLKOUT6(NLW_mmcm_adv_inst_CLKOUT6_UNCONNECTED),
        .DADDR({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DCLK(1'b0),
        .DEN(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DO(NLW_mmcm_adv_inst_DO_UNCONNECTED[15:0]),
        .DRDY(NLW_mmcm_adv_inst_DRDY_UNCONNECTED),
        .DWE(1'b0),
        .LOCKED(locked),
        .PSCLK(1'b0),
        .PSDONE(NLW_mmcm_adv_inst_PSDONE_UNCONNECTED),
        .PSEN(1'b0),
        .PSINCDEC(1'b0),
        .PWRDWN(1'b0),
        .RST(reset));
endmodule

(* CHECK_LICENSE_TYPE = "design_gol_dlmb_bram_if_cntlr_0,lmb_bram_if_cntlr,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "lmb_bram_if_cntlr,Vivado 2017.2" *) 
module design_gol_dlmb_bram_if_cntlr_0
   (LMB_Clk,
    LMB_Rst,
    LMB_ABus,
    LMB_WriteDBus,
    LMB_AddrStrobe,
    LMB_ReadStrobe,
    LMB_WriteStrobe,
    LMB_BE,
    Sl_DBus,
    Sl_Ready,
    Sl_Wait,
    Sl_UE,
    Sl_CE,
    BRAM_Rst_A,
    BRAM_Clk_A,
    BRAM_Addr_A,
    BRAM_EN_A,
    BRAM_WEN_A,
    BRAM_Dout_A,
    BRAM_Din_A);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 CLK.LMB_Clk CLK" *) input LMB_Clk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 RST.LMB_Rst RST" *) input LMB_Rst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 SLMB ABUS" *) input [0:31]LMB_ABus;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 SLMB WRITEDBUS" *) input [0:31]LMB_WriteDBus;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 SLMB ADDRSTROBE" *) input LMB_AddrStrobe;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 SLMB READSTROBE" *) input LMB_ReadStrobe;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 SLMB WRITESTROBE" *) input LMB_WriteStrobe;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 SLMB BE" *) input [0:3]LMB_BE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 SLMB READDBUS" *) output [0:31]Sl_DBus;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 SLMB READY" *) output Sl_Ready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 SLMB WAIT" *) output Sl_Wait;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 SLMB UE" *) output Sl_UE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 SLMB CE" *) output Sl_CE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORT RST" *) output BRAM_Rst_A;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORT CLK" *) output BRAM_Clk_A;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORT ADDR" *) output [0:31]BRAM_Addr_A;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORT EN" *) output BRAM_EN_A;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORT WE" *) output [0:3]BRAM_WEN_A;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORT DIN" *) output [0:31]BRAM_Dout_A;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORT DOUT" *) input [0:31]BRAM_Din_A;

  wire \<const0> ;
  wire [0:31]BRAM_Din_A;
  wire [0:3]BRAM_WEN_A;
  wire [0:31]LMB_ABus;
  wire LMB_AddrStrobe;
  wire [0:3]LMB_BE;
  wire LMB_Clk;
  wire LMB_Rst;
  wire [0:31]LMB_WriteDBus;
  wire LMB_WriteStrobe;
  wire Sl_Ready;

  assign BRAM_Addr_A[18:29] = LMB_ABus[18:29];
  assign BRAM_Clk_A = LMB_Clk;
  assign BRAM_Dout_A[0:31] = LMB_WriteDBus;
  assign BRAM_EN_A = LMB_AddrStrobe;
  assign BRAM_Rst_A = \<const0> ;
  assign Sl_DBus[0:31] = BRAM_Din_A;
  GND GND
       (.G(\<const0> ));
  lmb_bram_if_cntlr U0
       (.BRAM_WEN_A(BRAM_WEN_A),
        .LMB_ABus(LMB_ABus[10]),
        .LMB_AddrStrobe(LMB_AddrStrobe),
        .LMB_BE(LMB_BE),
        .LMB_Clk(LMB_Clk),
        .LMB_Rst(LMB_Rst),
        .LMB_WriteStrobe(LMB_WriteStrobe),
        .Sl_Ready(Sl_Ready));
endmodule

(* CHECK_LICENSE_TYPE = "design_gol_dlmb_v10_0,lmb_v10,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "lmb_v10,Vivado 2017.2" *) 
module design_gol_dlmb_v10_0
   (LMB_Clk,
    SYS_Rst,
    LMB_Rst,
    M_ABus,
    M_ReadStrobe,
    M_WriteStrobe,
    M_AddrStrobe,
    M_DBus,
    M_BE,
    Sl_DBus,
    Sl_Ready,
    Sl_Wait,
    Sl_UE,
    Sl_CE,
    LMB_ABus,
    LMB_ReadStrobe,
    LMB_WriteStrobe,
    LMB_AddrStrobe,
    LMB_ReadDBus,
    LMB_WriteDBus,
    LMB_Ready,
    LMB_Wait,
    LMB_UE,
    LMB_CE,
    LMB_BE);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 CLK.LMB_Clk CLK" *) input LMB_Clk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 RST.SYS_Rst RST" *) input SYS_Rst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 RST, xilinx.com:interface:lmb:1.0 LMB_M RST" *) output LMB_Rst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_M ABUS" *) input [0:31]M_ABus;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_M READSTROBE" *) input M_ReadStrobe;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_M WRITESTROBE" *) input M_WriteStrobe;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_M ADDRSTROBE" *) input M_AddrStrobe;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_M WRITEDBUS" *) input [0:31]M_DBus;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_M BE" *) input [0:3]M_BE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 READDBUS" *) input [0:31]Sl_DBus;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 READY" *) input [0:0]Sl_Ready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 WAIT" *) input [0:0]Sl_Wait;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 UE" *) input [0:0]Sl_UE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 CE" *) input [0:0]Sl_CE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 ABUS" *) output [0:31]LMB_ABus;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 READSTROBE" *) output LMB_ReadStrobe;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 WRITESTROBE" *) output LMB_WriteStrobe;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 ADDRSTROBE" *) output LMB_AddrStrobe;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_M READDBUS" *) output [0:31]LMB_ReadDBus;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 WRITEDBUS" *) output [0:31]LMB_WriteDBus;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_M READY" *) output LMB_Ready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_M WAIT" *) output LMB_Wait;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_M UE" *) output LMB_UE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_M CE" *) output LMB_CE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 BE" *) output [0:3]LMB_BE;

  wire [0:31]LMB_ABus;
  wire LMB_AddrStrobe;
  wire [0:3]LMB_BE;
  wire [0:31]LMB_ReadDBus;
  wire LMB_Ready;
  wire [0:31]LMB_WriteDBus;
  wire LMB_WriteStrobe;
  wire [0:31]M_ABus;
  wire M_AddrStrobe;
  wire [0:3]M_BE;
  wire [0:31]M_DBus;
  wire M_WriteStrobe;
  wire [0:31]Sl_DBus;
  wire [0:0]Sl_Ready;
  wire NLW_U0_LMB_CE_UNCONNECTED;
  wire NLW_U0_LMB_Clk_UNCONNECTED;
  wire NLW_U0_LMB_ReadStrobe_UNCONNECTED;
  wire NLW_U0_LMB_Rst_UNCONNECTED;
  wire NLW_U0_LMB_UE_UNCONNECTED;
  wire NLW_U0_LMB_Wait_UNCONNECTED;
  wire NLW_U0_M_ReadStrobe_UNCONNECTED;
  wire NLW_U0_SYS_Rst_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_ABus_UNCONNECTED;
  wire [0:31]NLW_U0_M_ABus_UNCONNECTED;
  wire [0:0]NLW_U0_Sl_CE_UNCONNECTED;
  wire [0:0]NLW_U0_Sl_UE_UNCONNECTED;
  wire [0:0]NLW_U0_Sl_Wait_UNCONNECTED;

  (* C_EXT_RESET_HIGH = "1" *) 
  (* C_LMB_AWIDTH = "32" *) 
  (* C_LMB_DWIDTH = "32" *) 
  (* C_LMB_NUM_SLAVES = "1" *) 
  lmb_v10__1 U0
       (.LMB_ABus({NLW_U0_LMB_ABus_UNCONNECTED[0:9],LMB_ABus[10],NLW_U0_LMB_ABus_UNCONNECTED[11:17],LMB_ABus[18:29],NLW_U0_LMB_ABus_UNCONNECTED[30:31]}),
        .LMB_AddrStrobe(LMB_AddrStrobe),
        .LMB_BE(LMB_BE),
        .LMB_CE(NLW_U0_LMB_CE_UNCONNECTED),
        .LMB_Clk(NLW_U0_LMB_Clk_UNCONNECTED),
        .LMB_ReadDBus(LMB_ReadDBus),
        .LMB_ReadStrobe(NLW_U0_LMB_ReadStrobe_UNCONNECTED),
        .LMB_Ready(LMB_Ready),
        .LMB_Rst(NLW_U0_LMB_Rst_UNCONNECTED),
        .LMB_UE(NLW_U0_LMB_UE_UNCONNECTED),
        .LMB_Wait(NLW_U0_LMB_Wait_UNCONNECTED),
        .LMB_WriteDBus(LMB_WriteDBus),
        .LMB_WriteStrobe(LMB_WriteStrobe),
        .M_ABus({NLW_U0_M_ABus_UNCONNECTED[0:9],M_ABus[10],NLW_U0_M_ABus_UNCONNECTED[11:17],M_ABus[18:29],NLW_U0_M_ABus_UNCONNECTED[30:31]}),
        .M_AddrStrobe(M_AddrStrobe),
        .M_BE(M_BE),
        .M_DBus(M_DBus),
        .M_ReadStrobe(NLW_U0_M_ReadStrobe_UNCONNECTED),
        .M_WriteStrobe(M_WriteStrobe),
        .SYS_Rst(NLW_U0_SYS_Rst_UNCONNECTED),
        .Sl_CE(NLW_U0_Sl_CE_UNCONNECTED[0]),
        .Sl_DBus(Sl_DBus),
        .Sl_Ready(Sl_Ready),
        .Sl_UE(NLW_U0_Sl_UE_UNCONNECTED[0]),
        .Sl_Wait(NLW_U0_Sl_Wait_UNCONNECTED[0]));
endmodule

(* CHECK_LICENSE_TYPE = "design_gol_game_of_life_0_1,game_of_life_v1_0,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "game_of_life_v1_0,Vivado 2017.2" *) 
module design_gol_game_of_life_0_1
   (s00_axi_awaddr,
    s00_axi_awprot,
    s00_axi_awvalid,
    s00_axi_awready,
    s00_axi_wdata,
    s00_axi_wstrb,
    s00_axi_wvalid,
    s00_axi_wready,
    s00_axi_bresp,
    s00_axi_bvalid,
    s00_axi_bready,
    s00_axi_araddr,
    s00_axi_arprot,
    s00_axi_arvalid,
    s00_axi_arready,
    s00_axi_rdata,
    s00_axi_rresp,
    s00_axi_rvalid,
    s00_axi_rready,
    s00_axi_aclk,
    s00_axi_aresetn);
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI AWADDR" *) input [3:0]s00_axi_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI AWPROT" *) input [2:0]s00_axi_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI AWVALID" *) input s00_axi_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI AWREADY" *) output s00_axi_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI WDATA" *) input [31:0]s00_axi_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI WSTRB" *) input [3:0]s00_axi_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI WVALID" *) input s00_axi_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI WREADY" *) output s00_axi_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI BRESP" *) output [1:0]s00_axi_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI BVALID" *) output s00_axi_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI BREADY" *) input s00_axi_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI ARADDR" *) input [3:0]s00_axi_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI ARPROT" *) input [2:0]s00_axi_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI ARVALID" *) input s00_axi_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI ARREADY" *) output s00_axi_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI RDATA" *) output [31:0]s00_axi_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI RRESP" *) output [1:0]s00_axi_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI RVALID" *) output s00_axi_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI RREADY" *) input s00_axi_rready;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 S00_AXI_CLK CLK, xilinx.com:signal:clock:1.0 s00_axi_aclk CLK" *) input s00_axi_aclk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 S00_AXI_RST RST, xilinx.com:signal:reset:1.0 s00_axi_aresetn RST" *) input s00_axi_aresetn;

  wire s00_axi_aclk;
  wire [3:0]s00_axi_araddr;
  wire s00_axi_aresetn;
  wire s00_axi_arvalid;
  wire [3:0]s00_axi_awaddr;
  wire s00_axi_awvalid;
  wire s00_axi_bready;
  wire s00_axi_bvalid;
  wire [31:0]s00_axi_rdata;
  wire s00_axi_rready;
  wire s00_axi_rvalid;
  wire [31:0]s00_axi_wdata;
  wire s00_axi_wready;
  wire s00_axi_wvalid;

  game_of_life_v1_0 U0
       (.s00_axi_aclk(s00_axi_aclk),
        .s00_axi_araddr(s00_axi_araddr[3:2]),
        .s00_axi_aresetn(s00_axi_aresetn),
        .s00_axi_arvalid(s00_axi_arvalid),
        .s00_axi_awaddr(s00_axi_awaddr[3:2]),
        .s00_axi_awvalid(s00_axi_awvalid),
        .s00_axi_bready(s00_axi_bready),
        .s00_axi_bvalid(s00_axi_bvalid),
        .s00_axi_rdata(s00_axi_rdata),
        .s00_axi_rready(s00_axi_rready),
        .s00_axi_rvalid(s00_axi_rvalid),
        .s00_axi_wdata(s00_axi_wdata),
        .s00_axi_wvalid(s00_axi_wvalid),
        .w_ready_reg_0(s00_axi_wready));
endmodule

(* CHECK_LICENSE_TYPE = "design_gol_ilmb_bram_if_cntlr_0,lmb_bram_if_cntlr,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "lmb_bram_if_cntlr,Vivado 2017.2" *) 
module design_gol_ilmb_bram_if_cntlr_0
   (LMB_Clk,
    LMB_Rst,
    LMB_ABus,
    LMB_WriteDBus,
    LMB_AddrStrobe,
    LMB_ReadStrobe,
    LMB_WriteStrobe,
    LMB_BE,
    Sl_DBus,
    Sl_Ready,
    Sl_Wait,
    Sl_UE,
    Sl_CE,
    BRAM_Rst_A,
    BRAM_Clk_A,
    BRAM_Addr_A,
    BRAM_EN_A,
    BRAM_WEN_A,
    BRAM_Dout_A,
    BRAM_Din_A);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 CLK.LMB_Clk CLK" *) input LMB_Clk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 RST.LMB_Rst RST" *) input LMB_Rst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 SLMB ABUS" *) input [0:31]LMB_ABus;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 SLMB WRITEDBUS" *) input [0:31]LMB_WriteDBus;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 SLMB ADDRSTROBE" *) input LMB_AddrStrobe;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 SLMB READSTROBE" *) input LMB_ReadStrobe;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 SLMB WRITESTROBE" *) input LMB_WriteStrobe;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 SLMB BE" *) input [0:3]LMB_BE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 SLMB READDBUS" *) output [0:31]Sl_DBus;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 SLMB READY" *) output Sl_Ready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 SLMB WAIT" *) output Sl_Wait;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 SLMB UE" *) output Sl_UE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 SLMB CE" *) output Sl_CE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORT RST" *) output BRAM_Rst_A;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORT CLK" *) output BRAM_Clk_A;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORT ADDR" *) output [0:31]BRAM_Addr_A;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORT EN" *) output BRAM_EN_A;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORT WE" *) output [0:3]BRAM_WEN_A;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORT DIN" *) output [0:31]BRAM_Dout_A;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORT DOUT" *) input [0:31]BRAM_Din_A;

  wire \<const0> ;
  wire [0:31]BRAM_Din_A;
  wire [0:3]BRAM_WEN_A;
  wire [0:31]LMB_ABus;
  wire LMB_AddrStrobe;
  wire [0:3]LMB_BE;
  wire LMB_Clk;
  wire LMB_Rst;
  wire [0:31]LMB_WriteDBus;
  wire Sl_Ready;
  wire NLW_U0_LMB_WriteStrobe_UNCONNECTED;
  wire [1:3]NLW_U0_LMB_BE_UNCONNECTED;

  assign BRAM_Addr_A[18:29] = LMB_ABus[18:29];
  assign BRAM_Clk_A = LMB_Clk;
  assign BRAM_Dout_A[0:31] = LMB_WriteDBus;
  assign BRAM_EN_A = LMB_AddrStrobe;
  assign BRAM_Rst_A = \<const0> ;
  assign Sl_DBus[0:31] = BRAM_Din_A;
  GND GND
       (.G(\<const0> ));
  lmb_bram_if_cntlr__parameterized1 U0
       (.BRAM_WEN_A(BRAM_WEN_A),
        .LMB_AddrStrobe(LMB_AddrStrobe),
        .LMB_BE({LMB_BE[0],NLW_U0_LMB_BE_UNCONNECTED[1:3]}),
        .LMB_Clk(LMB_Clk),
        .LMB_Rst(LMB_Rst),
        .LMB_WriteStrobe(NLW_U0_LMB_WriteStrobe_UNCONNECTED),
        .Sl_Ready(Sl_Ready));
endmodule

(* CHECK_LICENSE_TYPE = "design_gol_ilmb_v10_0,lmb_v10,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "lmb_v10,Vivado 2017.2" *) 
module design_gol_ilmb_v10_0
   (LMB_Clk,
    SYS_Rst,
    LMB_Rst,
    M_ABus,
    M_ReadStrobe,
    M_WriteStrobe,
    M_AddrStrobe,
    M_DBus,
    M_BE,
    Sl_DBus,
    Sl_Ready,
    Sl_Wait,
    Sl_UE,
    Sl_CE,
    LMB_ABus,
    LMB_ReadStrobe,
    LMB_WriteStrobe,
    LMB_AddrStrobe,
    LMB_ReadDBus,
    LMB_WriteDBus,
    LMB_Ready,
    LMB_Wait,
    LMB_UE,
    LMB_CE,
    LMB_BE);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 CLK.LMB_Clk CLK" *) input LMB_Clk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 RST.SYS_Rst RST" *) input SYS_Rst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 RST, xilinx.com:interface:lmb:1.0 LMB_M RST" *) output LMB_Rst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_M ABUS" *) input [0:31]M_ABus;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_M READSTROBE" *) input M_ReadStrobe;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_M WRITESTROBE" *) input M_WriteStrobe;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_M ADDRSTROBE" *) input M_AddrStrobe;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_M WRITEDBUS" *) input [0:31]M_DBus;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_M BE" *) input [0:3]M_BE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 READDBUS" *) input [0:31]Sl_DBus;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 READY" *) input [0:0]Sl_Ready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 WAIT" *) input [0:0]Sl_Wait;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 UE" *) input [0:0]Sl_UE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 CE" *) input [0:0]Sl_CE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 ABUS" *) output [0:31]LMB_ABus;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 READSTROBE" *) output LMB_ReadStrobe;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 WRITESTROBE" *) output LMB_WriteStrobe;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 ADDRSTROBE" *) output LMB_AddrStrobe;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_M READDBUS" *) output [0:31]LMB_ReadDBus;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 WRITEDBUS" *) output [0:31]LMB_WriteDBus;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_M READY" *) output LMB_Ready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_M WAIT" *) output LMB_Wait;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_M UE" *) output LMB_UE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_M CE" *) output LMB_CE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 BE" *) output [0:3]LMB_BE;

  wire [0:31]LMB_ABus;
  wire LMB_AddrStrobe;
  wire [0:3]LMB_BE;
  wire [0:31]LMB_ReadDBus;
  wire LMB_Ready;
  wire [0:31]LMB_WriteDBus;
  wire [0:31]M_ABus;
  wire M_AddrStrobe;
  wire [0:3]M_BE;
  wire [0:31]M_DBus;
  wire [0:31]Sl_DBus;
  wire [0:0]Sl_Ready;
  wire NLW_U0_LMB_CE_UNCONNECTED;
  wire NLW_U0_LMB_Clk_UNCONNECTED;
  wire NLW_U0_LMB_ReadStrobe_UNCONNECTED;
  wire NLW_U0_LMB_Rst_UNCONNECTED;
  wire NLW_U0_LMB_UE_UNCONNECTED;
  wire NLW_U0_LMB_Wait_UNCONNECTED;
  wire NLW_U0_LMB_WriteStrobe_UNCONNECTED;
  wire NLW_U0_M_ReadStrobe_UNCONNECTED;
  wire NLW_U0_M_WriteStrobe_UNCONNECTED;
  wire NLW_U0_SYS_Rst_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_ABus_UNCONNECTED;
  wire [1:3]NLW_U0_LMB_BE_UNCONNECTED;
  wire [0:31]NLW_U0_M_ABus_UNCONNECTED;
  wire [1:3]NLW_U0_M_BE_UNCONNECTED;
  wire [0:0]NLW_U0_Sl_CE_UNCONNECTED;
  wire [0:0]NLW_U0_Sl_UE_UNCONNECTED;
  wire [0:0]NLW_U0_Sl_Wait_UNCONNECTED;

  (* C_EXT_RESET_HIGH = "1" *) 
  (* C_LMB_AWIDTH = "32" *) 
  (* C_LMB_DWIDTH = "32" *) 
  (* C_LMB_NUM_SLAVES = "1" *) 
  lmb_v10 U0
       (.LMB_ABus({NLW_U0_LMB_ABus_UNCONNECTED[0:17],LMB_ABus[18:29],NLW_U0_LMB_ABus_UNCONNECTED[30:31]}),
        .LMB_AddrStrobe(LMB_AddrStrobe),
        .LMB_BE({LMB_BE[0],NLW_U0_LMB_BE_UNCONNECTED[1:3]}),
        .LMB_CE(NLW_U0_LMB_CE_UNCONNECTED),
        .LMB_Clk(NLW_U0_LMB_Clk_UNCONNECTED),
        .LMB_ReadDBus(LMB_ReadDBus),
        .LMB_ReadStrobe(NLW_U0_LMB_ReadStrobe_UNCONNECTED),
        .LMB_Ready(LMB_Ready),
        .LMB_Rst(NLW_U0_LMB_Rst_UNCONNECTED),
        .LMB_UE(NLW_U0_LMB_UE_UNCONNECTED),
        .LMB_Wait(NLW_U0_LMB_Wait_UNCONNECTED),
        .LMB_WriteDBus(LMB_WriteDBus),
        .LMB_WriteStrobe(NLW_U0_LMB_WriteStrobe_UNCONNECTED),
        .M_ABus({NLW_U0_M_ABus_UNCONNECTED[0:17],M_ABus[18:29],NLW_U0_M_ABus_UNCONNECTED[30:31]}),
        .M_AddrStrobe(M_AddrStrobe),
        .M_BE({M_BE[0],NLW_U0_M_BE_UNCONNECTED[1:3]}),
        .M_DBus(M_DBus),
        .M_ReadStrobe(NLW_U0_M_ReadStrobe_UNCONNECTED),
        .M_WriteStrobe(NLW_U0_M_WriteStrobe_UNCONNECTED),
        .SYS_Rst(NLW_U0_SYS_Rst_UNCONNECTED),
        .Sl_CE(NLW_U0_Sl_CE_UNCONNECTED[0]),
        .Sl_DBus(Sl_DBus),
        .Sl_Ready(Sl_Ready),
        .Sl_UE(NLW_U0_Sl_UE_UNCONNECTED[0]),
        .Sl_Wait(NLW_U0_Sl_Wait_UNCONNECTED[0]));
endmodule

(* CHECK_LICENSE_TYPE = "design_gol_lmb_bram_0,blk_mem_gen_v8_3_6,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "blk_mem_gen_v8_3_6,Vivado 2017.2" *) 
module design_gol_lmb_bram_0
   (clka,
    rsta,
    ena,
    wea,
    addra,
    dina,
    douta,
    clkb,
    rstb,
    enb,
    web,
    addrb,
    dinb,
    doutb);
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) input clka;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTA RST" *) input rsta;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTA EN" *) input ena;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTA WE" *) input [3:0]wea;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [31:0]addra;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTA DIN" *) input [31:0]dina;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTA DOUT" *) output [31:0]douta;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTB CLK" *) input clkb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTB RST" *) input rstb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTB EN" *) input enb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTB WE" *) input [3:0]web;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTB ADDR" *) input [31:0]addrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTB DIN" *) input [31:0]dinb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTB DOUT" *) output [31:0]doutb;

  wire [31:0]addra;
  wire [31:0]addrb;
  wire clka;
  wire clkb;
  wire [31:0]dina;
  wire [31:0]dinb;
  wire [31:0]douta;
  wire [31:0]doutb;
  wire ena;
  wire enb;
  wire rsta;
  wire rstb;
  wire [3:0]wea;
  wire [3:0]web;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_deepsleep_UNCONNECTED;
  wire NLW_U0_eccpipece_UNCONNECTED;
  wire NLW_U0_injectdbiterr_UNCONNECTED;
  wire NLW_U0_injectsbiterr_UNCONNECTED;
  wire NLW_U0_regcea_UNCONNECTED;
  wire NLW_U0_regceb_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_aclk_UNCONNECTED;
  wire NLW_U0_s_aresetn_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_arvalid_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_awvalid_UNCONNECTED;
  wire NLW_U0_s_axi_bready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_injectdbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_injectsbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rready_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wlast_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axi_wvalid_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_shutdown_UNCONNECTED;
  wire NLW_U0_sleep_UNCONNECTED;
  wire [31:0]NLW_U0_addra_UNCONNECTED;
  wire [31:0]NLW_U0_addrb_UNCONNECTED;
  wire [31:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_arlen_UNCONNECTED;
  wire [2:0]NLW_U0_s_axi_arsize_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_awlen_UNCONNECTED;
  wire [2:0]NLW_U0_s_axi_awsize_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_wdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_wstrb_UNCONNECTED;

  (* C_ADDRA_WIDTH = "32" *) 
  (* C_ADDRB_WIDTH = "32" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "8" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "0" *) 
  (* C_COUNT_36K_BRAM = "4" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "0" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "1" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     20.388 mW" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "1" *) 
  (* C_HAS_ENB = "1" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "1" *) 
  (* C_HAS_RSTB = "1" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "design_gol_lmb_bram_0.mem" *) 
  (* C_INIT_FILE_NAME = "no_coe_file_loaded" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "0" *) 
  (* C_MEM_TYPE = "2" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "4096" *) 
  (* C_READ_DEPTH_B = "4096" *) 
  (* C_READ_WIDTH_A = "32" *) 
  (* C_READ_WIDTH_B = "32" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "ALL" *) 
  (* C_USE_BRAM_BLOCK = "1" *) 
  (* C_USE_BYTE_WEA = "1" *) 
  (* C_USE_BYTE_WEB = "1" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "4" *) 
  (* C_WEB_WIDTH = "4" *) 
  (* C_WRITE_DEPTH_A = "4096" *) 
  (* C_WRITE_DEPTH_B = "4096" *) 
  (* C_WRITE_MODE_A = "WRITE_FIRST" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "32" *) 
  (* C_WRITE_WIDTH_B = "32" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  blk_mem_gen_v8_3_6 U0
       (.addra({NLW_U0_addra_UNCONNECTED[31:14],addra[13:2],NLW_U0_addra_UNCONNECTED[1:0]}),
        .addrb({NLW_U0_addrb_UNCONNECTED[31:14],addrb[13:2],NLW_U0_addrb_UNCONNECTED[1:0]}),
        .clka(clka),
        .clkb(clkb),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(NLW_U0_deepsleep_UNCONNECTED),
        .dina(dina),
        .dinb(dinb),
        .douta(douta),
        .doutb(doutb),
        .eccpipece(NLW_U0_eccpipece_UNCONNECTED),
        .ena(ena),
        .enb(enb),
        .injectdbiterr(NLW_U0_injectdbiterr_UNCONNECTED),
        .injectsbiterr(NLW_U0_injectsbiterr_UNCONNECTED),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[31:0]),
        .regcea(NLW_U0_regcea_UNCONNECTED),
        .regceb(NLW_U0_regceb_UNCONNECTED),
        .rsta(rsta),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(rstb),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(NLW_U0_s_aclk_UNCONNECTED),
        .s_aresetn(NLW_U0_s_aresetn_UNCONNECTED),
        .s_axi_araddr(NLW_U0_s_axi_araddr_UNCONNECTED[31:0]),
        .s_axi_arburst(NLW_U0_s_axi_arburst_UNCONNECTED[1:0]),
        .s_axi_arid(NLW_U0_s_axi_arid_UNCONNECTED[3:0]),
        .s_axi_arlen(NLW_U0_s_axi_arlen_UNCONNECTED[7:0]),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize(NLW_U0_s_axi_arsize_UNCONNECTED[2:0]),
        .s_axi_arvalid(NLW_U0_s_axi_arvalid_UNCONNECTED),
        .s_axi_awaddr(NLW_U0_s_axi_awaddr_UNCONNECTED[31:0]),
        .s_axi_awburst(NLW_U0_s_axi_awburst_UNCONNECTED[1:0]),
        .s_axi_awid(NLW_U0_s_axi_awid_UNCONNECTED[3:0]),
        .s_axi_awlen(NLW_U0_s_axi_awlen_UNCONNECTED[7:0]),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize(NLW_U0_s_axi_awsize_UNCONNECTED[2:0]),
        .s_axi_awvalid(NLW_U0_s_axi_awvalid_UNCONNECTED),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(NLW_U0_s_axi_bready_UNCONNECTED),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(NLW_U0_s_axi_injectdbiterr_UNCONNECTED),
        .s_axi_injectsbiterr(NLW_U0_s_axi_injectsbiterr_UNCONNECTED),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[31:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[31:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(NLW_U0_s_axi_rready_UNCONNECTED),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(NLW_U0_s_axi_wdata_UNCONNECTED[31:0]),
        .s_axi_wlast(NLW_U0_s_axi_wlast_UNCONNECTED),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(NLW_U0_s_axi_wstrb_UNCONNECTED[3:0]),
        .s_axi_wvalid(NLW_U0_s_axi_wvalid_UNCONNECTED),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(NLW_U0_shutdown_UNCONNECTED),
        .sleep(NLW_U0_sleep_UNCONNECTED),
        .wea(wea),
        .web(web));
endmodule

(* CHECK_LICENSE_TYPE = "design_gol_mdm_1_0,MDM,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "MDM,Vivado 2017.2" *) 
module design_gol_mdm_1_0
   (Debug_SYS_Rst,
    Dbg_Clk_0,
    Dbg_TDI_0,
    Dbg_TDO_0,
    Dbg_Reg_En_0,
    Dbg_Capture_0,
    Dbg_Shift_0,
    Dbg_Update_0,
    Dbg_Rst_0,
    Dbg_Disable_0);
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 RST.Debug_SYS_Rst RST" *) output Debug_SYS_Rst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:mbdebug:3.0 MBDEBUG_0 CLK" *) output Dbg_Clk_0;
  (* X_INTERFACE_INFO = "xilinx.com:interface:mbdebug:3.0 MBDEBUG_0 TDI" *) output Dbg_TDI_0;
  (* X_INTERFACE_INFO = "xilinx.com:interface:mbdebug:3.0 MBDEBUG_0 TDO" *) input Dbg_TDO_0;
  (* X_INTERFACE_INFO = "xilinx.com:interface:mbdebug:3.0 MBDEBUG_0 REG_EN" *) output [0:7]Dbg_Reg_En_0;
  (* X_INTERFACE_INFO = "xilinx.com:interface:mbdebug:3.0 MBDEBUG_0 CAPTURE" *) output Dbg_Capture_0;
  (* X_INTERFACE_INFO = "xilinx.com:interface:mbdebug:3.0 MBDEBUG_0 SHIFT" *) output Dbg_Shift_0;
  (* X_INTERFACE_INFO = "xilinx.com:interface:mbdebug:3.0 MBDEBUG_0 UPDATE" *) output Dbg_Update_0;
  (* X_INTERFACE_INFO = "xilinx.com:interface:mbdebug:3.0 MBDEBUG_0 RST" *) output Dbg_Rst_0;
  (* X_INTERFACE_INFO = "xilinx.com:interface:mbdebug:3.0 MBDEBUG_0 DISABLE" *) output Dbg_Disable_0;

  wire Dbg_Capture_0;
  wire Dbg_Clk_0;
  wire [0:7]Dbg_Reg_En_0;
  wire Dbg_Rst_0;
  wire Dbg_Shift_0;
  wire Dbg_TDI_0;
  wire Dbg_TDO_0;
  wire Dbg_Update_0;
  wire Debug_SYS_Rst;
  wire NLW_U0_Config_Reset_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_0_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_1_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_10_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_11_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_12_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_13_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_14_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_15_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_16_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_17_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_18_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_19_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_2_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_20_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_21_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_22_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_23_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_24_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_25_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_26_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_27_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_28_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_29_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_3_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_30_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_31_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_4_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_5_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_6_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_7_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_8_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_9_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_0_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_1_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_10_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_11_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_12_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_13_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_14_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_15_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_16_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_17_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_18_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_19_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_2_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_20_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_21_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_22_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_23_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_24_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_25_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_26_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_27_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_28_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_29_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_3_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_30_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_31_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_4_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_5_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_6_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_7_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_8_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_9_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_0_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_1_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_10_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_11_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_12_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_13_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_14_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_15_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_16_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_17_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_18_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_19_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_2_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_20_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_21_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_22_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_23_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_24_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_25_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_26_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_27_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_28_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_29_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_3_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_30_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_31_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_4_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_5_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_6_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_7_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_8_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_9_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_0_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_1_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_10_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_11_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_12_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_13_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_14_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_15_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_16_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_17_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_18_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_19_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_2_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_20_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_21_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_22_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_23_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_24_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_25_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_26_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_27_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_28_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_29_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_3_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_30_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_31_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_4_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_5_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_6_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_7_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_8_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_9_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_0_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_1_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_10_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_11_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_12_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_13_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_14_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_15_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_16_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_17_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_18_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_19_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_2_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_20_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_21_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_22_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_23_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_24_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_25_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_26_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_27_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_28_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_29_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_3_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_30_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_31_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_4_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_5_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_6_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_7_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_8_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_9_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_0_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_1_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_10_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_11_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_12_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_13_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_14_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_15_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_16_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_17_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_18_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_19_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_2_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_20_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_21_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_22_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_23_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_24_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_25_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_26_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_27_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_28_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_29_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_3_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_30_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_31_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_4_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_5_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_6_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_7_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_8_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_9_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_1_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_10_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_11_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_12_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_13_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_14_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_15_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_16_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_17_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_18_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_19_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_2_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_20_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_21_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_22_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_23_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_24_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_25_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_26_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_27_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_28_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_29_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_3_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_30_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_31_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_4_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_5_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_6_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_7_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_8_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_9_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_1_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_10_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_11_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_12_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_13_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_14_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_15_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_16_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_17_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_18_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_19_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_2_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_20_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_21_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_22_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_23_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_24_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_25_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_26_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_27_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_28_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_29_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_3_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_30_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_31_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_4_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_5_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_6_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_7_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_8_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_9_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_0_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_1_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_10_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_11_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_12_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_13_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_14_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_15_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_16_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_17_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_18_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_19_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_2_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_20_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_21_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_22_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_23_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_24_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_25_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_26_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_27_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_28_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_29_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_3_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_30_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_31_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_4_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_5_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_6_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_7_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_8_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_9_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_0_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_1_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_10_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_11_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_12_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_13_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_14_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_15_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_16_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_17_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_18_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_19_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_2_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_20_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_21_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_22_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_23_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_24_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_25_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_26_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_27_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_28_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_29_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_3_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_30_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_31_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_4_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_5_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_6_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_7_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_8_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_9_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_0_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_1_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_10_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_11_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_12_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_13_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_14_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_15_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_16_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_17_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_18_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_19_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_2_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_20_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_21_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_22_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_23_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_24_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_25_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_26_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_27_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_28_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_29_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_3_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_30_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_31_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_4_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_5_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_6_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_7_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_8_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_9_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_1_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_10_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_11_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_12_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_13_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_14_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_15_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_16_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_17_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_18_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_19_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_2_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_20_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_21_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_22_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_23_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_24_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_25_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_26_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_27_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_28_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_29_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_3_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_30_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_31_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_4_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_5_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_6_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_7_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_8_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_9_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_1_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_10_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_11_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_12_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_13_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_14_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_15_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_16_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_17_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_18_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_19_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_2_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_20_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_21_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_22_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_23_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_24_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_25_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_26_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_27_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_28_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_29_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_3_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_30_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_31_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_4_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_5_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_6_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_7_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_8_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_9_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_1_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_10_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_11_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_12_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_13_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_14_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_15_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_16_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_17_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_18_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_19_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_2_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_20_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_21_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_22_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_23_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_24_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_25_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_26_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_27_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_28_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_29_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_3_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_30_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_31_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_4_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_5_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_6_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_7_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_8_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_9_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_1_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_10_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_11_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_12_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_13_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_14_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_15_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_16_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_17_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_18_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_19_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_2_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_20_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_21_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_22_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_23_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_24_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_25_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_26_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_27_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_28_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_29_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_3_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_30_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_31_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_4_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_5_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_6_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_7_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_8_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_9_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_0_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_1_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_10_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_11_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_12_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_13_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_14_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_15_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_16_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_17_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_18_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_19_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_2_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_20_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_21_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_22_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_23_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_24_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_25_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_26_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_27_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_28_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_29_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_3_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_30_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_31_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_4_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_5_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_6_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_7_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_8_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_9_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_0_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_1_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_10_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_11_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_12_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_13_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_14_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_15_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_16_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_17_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_18_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_19_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_2_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_20_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_21_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_22_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_23_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_24_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_25_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_26_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_27_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_28_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_29_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_3_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_30_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_31_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_4_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_5_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_6_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_7_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_8_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_9_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_0_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_1_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_10_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_11_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_12_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_13_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_14_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_15_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_16_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_17_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_18_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_19_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_2_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_20_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_21_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_22_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_23_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_24_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_25_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_26_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_27_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_28_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_29_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_3_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_30_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_31_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_4_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_5_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_6_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_7_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_8_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_9_UNCONNECTED;
  wire NLW_U0_Dbg_Update_1_UNCONNECTED;
  wire NLW_U0_Dbg_Update_10_UNCONNECTED;
  wire NLW_U0_Dbg_Update_11_UNCONNECTED;
  wire NLW_U0_Dbg_Update_12_UNCONNECTED;
  wire NLW_U0_Dbg_Update_13_UNCONNECTED;
  wire NLW_U0_Dbg_Update_14_UNCONNECTED;
  wire NLW_U0_Dbg_Update_15_UNCONNECTED;
  wire NLW_U0_Dbg_Update_16_UNCONNECTED;
  wire NLW_U0_Dbg_Update_17_UNCONNECTED;
  wire NLW_U0_Dbg_Update_18_UNCONNECTED;
  wire NLW_U0_Dbg_Update_19_UNCONNECTED;
  wire NLW_U0_Dbg_Update_2_UNCONNECTED;
  wire NLW_U0_Dbg_Update_20_UNCONNECTED;
  wire NLW_U0_Dbg_Update_21_UNCONNECTED;
  wire NLW_U0_Dbg_Update_22_UNCONNECTED;
  wire NLW_U0_Dbg_Update_23_UNCONNECTED;
  wire NLW_U0_Dbg_Update_24_UNCONNECTED;
  wire NLW_U0_Dbg_Update_25_UNCONNECTED;
  wire NLW_U0_Dbg_Update_26_UNCONNECTED;
  wire NLW_U0_Dbg_Update_27_UNCONNECTED;
  wire NLW_U0_Dbg_Update_28_UNCONNECTED;
  wire NLW_U0_Dbg_Update_29_UNCONNECTED;
  wire NLW_U0_Dbg_Update_3_UNCONNECTED;
  wire NLW_U0_Dbg_Update_30_UNCONNECTED;
  wire NLW_U0_Dbg_Update_31_UNCONNECTED;
  wire NLW_U0_Dbg_Update_4_UNCONNECTED;
  wire NLW_U0_Dbg_Update_5_UNCONNECTED;
  wire NLW_U0_Dbg_Update_6_UNCONNECTED;
  wire NLW_U0_Dbg_Update_7_UNCONNECTED;
  wire NLW_U0_Dbg_Update_8_UNCONNECTED;
  wire NLW_U0_Dbg_Update_9_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_0_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_1_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_10_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_11_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_12_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_13_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_14_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_15_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_16_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_17_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_18_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_19_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_2_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_20_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_21_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_22_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_23_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_24_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_25_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_26_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_27_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_28_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_29_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_3_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_30_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_31_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_4_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_5_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_6_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_7_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_8_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_9_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_0_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_1_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_10_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_11_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_12_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_13_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_14_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_15_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_16_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_17_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_18_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_19_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_2_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_20_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_21_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_22_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_23_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_24_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_25_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_26_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_27_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_28_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_29_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_3_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_30_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_31_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_4_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_5_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_6_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_7_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_8_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_9_UNCONNECTED;
  wire NLW_U0_Ext_BRK_UNCONNECTED;
  wire NLW_U0_Ext_JTAG_CAPTURE_UNCONNECTED;
  wire NLW_U0_Ext_JTAG_DRCK_UNCONNECTED;
  wire NLW_U0_Ext_JTAG_RESET_UNCONNECTED;
  wire NLW_U0_Ext_JTAG_SEL_UNCONNECTED;
  wire NLW_U0_Ext_JTAG_SHIFT_UNCONNECTED;
  wire NLW_U0_Ext_JTAG_TDI_UNCONNECTED;
  wire NLW_U0_Ext_JTAG_TDO_UNCONNECTED;
  wire NLW_U0_Ext_JTAG_UPDATE_UNCONNECTED;
  wire NLW_U0_Ext_NM_BRK_UNCONNECTED;
  wire NLW_U0_Interrupt_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_0_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_1_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_10_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_11_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_12_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_13_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_14_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_15_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_16_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_17_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_18_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_19_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_2_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_20_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_21_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_22_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_23_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_24_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_25_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_26_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_27_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_28_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_29_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_3_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_30_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_31_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_4_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_5_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_6_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_7_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_8_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_9_UNCONNECTED;
  wire NLW_U0_LMB_CE_0_UNCONNECTED;
  wire NLW_U0_LMB_CE_1_UNCONNECTED;
  wire NLW_U0_LMB_CE_10_UNCONNECTED;
  wire NLW_U0_LMB_CE_11_UNCONNECTED;
  wire NLW_U0_LMB_CE_12_UNCONNECTED;
  wire NLW_U0_LMB_CE_13_UNCONNECTED;
  wire NLW_U0_LMB_CE_14_UNCONNECTED;
  wire NLW_U0_LMB_CE_15_UNCONNECTED;
  wire NLW_U0_LMB_CE_16_UNCONNECTED;
  wire NLW_U0_LMB_CE_17_UNCONNECTED;
  wire NLW_U0_LMB_CE_18_UNCONNECTED;
  wire NLW_U0_LMB_CE_19_UNCONNECTED;
  wire NLW_U0_LMB_CE_2_UNCONNECTED;
  wire NLW_U0_LMB_CE_20_UNCONNECTED;
  wire NLW_U0_LMB_CE_21_UNCONNECTED;
  wire NLW_U0_LMB_CE_22_UNCONNECTED;
  wire NLW_U0_LMB_CE_23_UNCONNECTED;
  wire NLW_U0_LMB_CE_24_UNCONNECTED;
  wire NLW_U0_LMB_CE_25_UNCONNECTED;
  wire NLW_U0_LMB_CE_26_UNCONNECTED;
  wire NLW_U0_LMB_CE_27_UNCONNECTED;
  wire NLW_U0_LMB_CE_28_UNCONNECTED;
  wire NLW_U0_LMB_CE_29_UNCONNECTED;
  wire NLW_U0_LMB_CE_3_UNCONNECTED;
  wire NLW_U0_LMB_CE_30_UNCONNECTED;
  wire NLW_U0_LMB_CE_31_UNCONNECTED;
  wire NLW_U0_LMB_CE_4_UNCONNECTED;
  wire NLW_U0_LMB_CE_5_UNCONNECTED;
  wire NLW_U0_LMB_CE_6_UNCONNECTED;
  wire NLW_U0_LMB_CE_7_UNCONNECTED;
  wire NLW_U0_LMB_CE_8_UNCONNECTED;
  wire NLW_U0_LMB_CE_9_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_0_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_1_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_10_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_11_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_12_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_13_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_14_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_15_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_16_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_17_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_18_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_19_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_2_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_20_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_21_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_22_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_23_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_24_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_25_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_26_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_27_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_28_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_29_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_3_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_30_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_31_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_4_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_5_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_6_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_7_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_8_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_9_UNCONNECTED;
  wire NLW_U0_LMB_Ready_0_UNCONNECTED;
  wire NLW_U0_LMB_Ready_1_UNCONNECTED;
  wire NLW_U0_LMB_Ready_10_UNCONNECTED;
  wire NLW_U0_LMB_Ready_11_UNCONNECTED;
  wire NLW_U0_LMB_Ready_12_UNCONNECTED;
  wire NLW_U0_LMB_Ready_13_UNCONNECTED;
  wire NLW_U0_LMB_Ready_14_UNCONNECTED;
  wire NLW_U0_LMB_Ready_15_UNCONNECTED;
  wire NLW_U0_LMB_Ready_16_UNCONNECTED;
  wire NLW_U0_LMB_Ready_17_UNCONNECTED;
  wire NLW_U0_LMB_Ready_18_UNCONNECTED;
  wire NLW_U0_LMB_Ready_19_UNCONNECTED;
  wire NLW_U0_LMB_Ready_2_UNCONNECTED;
  wire NLW_U0_LMB_Ready_20_UNCONNECTED;
  wire NLW_U0_LMB_Ready_21_UNCONNECTED;
  wire NLW_U0_LMB_Ready_22_UNCONNECTED;
  wire NLW_U0_LMB_Ready_23_UNCONNECTED;
  wire NLW_U0_LMB_Ready_24_UNCONNECTED;
  wire NLW_U0_LMB_Ready_25_UNCONNECTED;
  wire NLW_U0_LMB_Ready_26_UNCONNECTED;
  wire NLW_U0_LMB_Ready_27_UNCONNECTED;
  wire NLW_U0_LMB_Ready_28_UNCONNECTED;
  wire NLW_U0_LMB_Ready_29_UNCONNECTED;
  wire NLW_U0_LMB_Ready_3_UNCONNECTED;
  wire NLW_U0_LMB_Ready_30_UNCONNECTED;
  wire NLW_U0_LMB_Ready_31_UNCONNECTED;
  wire NLW_U0_LMB_Ready_4_UNCONNECTED;
  wire NLW_U0_LMB_Ready_5_UNCONNECTED;
  wire NLW_U0_LMB_Ready_6_UNCONNECTED;
  wire NLW_U0_LMB_Ready_7_UNCONNECTED;
  wire NLW_U0_LMB_Ready_8_UNCONNECTED;
  wire NLW_U0_LMB_Ready_9_UNCONNECTED;
  wire NLW_U0_LMB_UE_0_UNCONNECTED;
  wire NLW_U0_LMB_UE_1_UNCONNECTED;
  wire NLW_U0_LMB_UE_10_UNCONNECTED;
  wire NLW_U0_LMB_UE_11_UNCONNECTED;
  wire NLW_U0_LMB_UE_12_UNCONNECTED;
  wire NLW_U0_LMB_UE_13_UNCONNECTED;
  wire NLW_U0_LMB_UE_14_UNCONNECTED;
  wire NLW_U0_LMB_UE_15_UNCONNECTED;
  wire NLW_U0_LMB_UE_16_UNCONNECTED;
  wire NLW_U0_LMB_UE_17_UNCONNECTED;
  wire NLW_U0_LMB_UE_18_UNCONNECTED;
  wire NLW_U0_LMB_UE_19_UNCONNECTED;
  wire NLW_U0_LMB_UE_2_UNCONNECTED;
  wire NLW_U0_LMB_UE_20_UNCONNECTED;
  wire NLW_U0_LMB_UE_21_UNCONNECTED;
  wire NLW_U0_LMB_UE_22_UNCONNECTED;
  wire NLW_U0_LMB_UE_23_UNCONNECTED;
  wire NLW_U0_LMB_UE_24_UNCONNECTED;
  wire NLW_U0_LMB_UE_25_UNCONNECTED;
  wire NLW_U0_LMB_UE_26_UNCONNECTED;
  wire NLW_U0_LMB_UE_27_UNCONNECTED;
  wire NLW_U0_LMB_UE_28_UNCONNECTED;
  wire NLW_U0_LMB_UE_29_UNCONNECTED;
  wire NLW_U0_LMB_UE_3_UNCONNECTED;
  wire NLW_U0_LMB_UE_30_UNCONNECTED;
  wire NLW_U0_LMB_UE_31_UNCONNECTED;
  wire NLW_U0_LMB_UE_4_UNCONNECTED;
  wire NLW_U0_LMB_UE_5_UNCONNECTED;
  wire NLW_U0_LMB_UE_6_UNCONNECTED;
  wire NLW_U0_LMB_UE_7_UNCONNECTED;
  wire NLW_U0_LMB_UE_8_UNCONNECTED;
  wire NLW_U0_LMB_UE_9_UNCONNECTED;
  wire NLW_U0_LMB_Wait_0_UNCONNECTED;
  wire NLW_U0_LMB_Wait_1_UNCONNECTED;
  wire NLW_U0_LMB_Wait_10_UNCONNECTED;
  wire NLW_U0_LMB_Wait_11_UNCONNECTED;
  wire NLW_U0_LMB_Wait_12_UNCONNECTED;
  wire NLW_U0_LMB_Wait_13_UNCONNECTED;
  wire NLW_U0_LMB_Wait_14_UNCONNECTED;
  wire NLW_U0_LMB_Wait_15_UNCONNECTED;
  wire NLW_U0_LMB_Wait_16_UNCONNECTED;
  wire NLW_U0_LMB_Wait_17_UNCONNECTED;
  wire NLW_U0_LMB_Wait_18_UNCONNECTED;
  wire NLW_U0_LMB_Wait_19_UNCONNECTED;
  wire NLW_U0_LMB_Wait_2_UNCONNECTED;
  wire NLW_U0_LMB_Wait_20_UNCONNECTED;
  wire NLW_U0_LMB_Wait_21_UNCONNECTED;
  wire NLW_U0_LMB_Wait_22_UNCONNECTED;
  wire NLW_U0_LMB_Wait_23_UNCONNECTED;
  wire NLW_U0_LMB_Wait_24_UNCONNECTED;
  wire NLW_U0_LMB_Wait_25_UNCONNECTED;
  wire NLW_U0_LMB_Wait_26_UNCONNECTED;
  wire NLW_U0_LMB_Wait_27_UNCONNECTED;
  wire NLW_U0_LMB_Wait_28_UNCONNECTED;
  wire NLW_U0_LMB_Wait_29_UNCONNECTED;
  wire NLW_U0_LMB_Wait_3_UNCONNECTED;
  wire NLW_U0_LMB_Wait_30_UNCONNECTED;
  wire NLW_U0_LMB_Wait_31_UNCONNECTED;
  wire NLW_U0_LMB_Wait_4_UNCONNECTED;
  wire NLW_U0_LMB_Wait_5_UNCONNECTED;
  wire NLW_U0_LMB_Wait_6_UNCONNECTED;
  wire NLW_U0_LMB_Wait_7_UNCONNECTED;
  wire NLW_U0_LMB_Wait_8_UNCONNECTED;
  wire NLW_U0_LMB_Wait_9_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_0_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_1_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_10_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_11_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_12_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_13_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_14_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_15_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_16_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_17_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_18_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_19_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_2_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_20_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_21_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_22_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_23_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_24_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_25_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_26_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_27_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_28_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_29_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_3_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_30_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_31_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_4_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_5_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_6_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_7_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_8_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_9_UNCONNECTED;
  wire NLW_U0_M_AXIS_ACLK_UNCONNECTED;
  wire NLW_U0_M_AXIS_ARESETN_UNCONNECTED;
  wire NLW_U0_M_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_ACLK_UNCONNECTED;
  wire NLW_U0_M_AXI_ARESETN_UNCONNECTED;
  wire NLW_U0_M_AXI_ARLOCK_UNCONNECTED;
  wire NLW_U0_M_AXI_ARREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_ARVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_AWLOCK_UNCONNECTED;
  wire NLW_U0_M_AXI_AWREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_AWVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_BREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_BVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_RLAST_UNCONNECTED;
  wire NLW_U0_M_AXI_RREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_RVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_WLAST_UNCONNECTED;
  wire NLW_U0_M_AXI_WREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_WVALID_UNCONNECTED;
  wire NLW_U0_S_AXI_ACLK_UNCONNECTED;
  wire NLW_U0_S_AXI_ARESETN_UNCONNECTED;
  wire NLW_U0_S_AXI_ARREADY_UNCONNECTED;
  wire NLW_U0_S_AXI_ARVALID_UNCONNECTED;
  wire NLW_U0_S_AXI_AWREADY_UNCONNECTED;
  wire NLW_U0_S_AXI_AWVALID_UNCONNECTED;
  wire NLW_U0_S_AXI_BREADY_UNCONNECTED;
  wire NLW_U0_S_AXI_BVALID_UNCONNECTED;
  wire NLW_U0_S_AXI_RREADY_UNCONNECTED;
  wire NLW_U0_S_AXI_RVALID_UNCONNECTED;
  wire NLW_U0_S_AXI_WREADY_UNCONNECTED;
  wire NLW_U0_S_AXI_WVALID_UNCONNECTED;
  wire NLW_U0_Scan_Reset_UNCONNECTED;
  wire NLW_U0_Scan_Reset_Sel_UNCONNECTED;
  wire NLW_U0_TRACE_CLK_UNCONNECTED;
  wire NLW_U0_TRACE_CLK_OUT_UNCONNECTED;
  wire NLW_U0_TRACE_CTL_UNCONNECTED;
  wire NLW_U0_Trig_Ack_In_0_UNCONNECTED;
  wire NLW_U0_Trig_Ack_In_1_UNCONNECTED;
  wire NLW_U0_Trig_Ack_In_2_UNCONNECTED;
  wire NLW_U0_Trig_Ack_In_3_UNCONNECTED;
  wire NLW_U0_Trig_Ack_Out_0_UNCONNECTED;
  wire NLW_U0_Trig_Ack_Out_1_UNCONNECTED;
  wire NLW_U0_Trig_Ack_Out_2_UNCONNECTED;
  wire NLW_U0_Trig_Ack_Out_3_UNCONNECTED;
  wire NLW_U0_Trig_In_0_UNCONNECTED;
  wire NLW_U0_Trig_In_1_UNCONNECTED;
  wire NLW_U0_Trig_In_2_UNCONNECTED;
  wire NLW_U0_Trig_In_3_UNCONNECTED;
  wire NLW_U0_Trig_Out_0_UNCONNECTED;
  wire NLW_U0_Trig_Out_1_UNCONNECTED;
  wire NLW_U0_Trig_Out_2_UNCONNECTED;
  wire NLW_U0_Trig_Out_3_UNCONNECTED;
  wire NLW_U0_bscan_ext_capture_UNCONNECTED;
  wire NLW_U0_bscan_ext_drck_UNCONNECTED;
  wire NLW_U0_bscan_ext_reset_UNCONNECTED;
  wire NLW_U0_bscan_ext_sel_UNCONNECTED;
  wire NLW_U0_bscan_ext_shift_UNCONNECTED;
  wire NLW_U0_bscan_ext_tdi_UNCONNECTED;
  wire NLW_U0_bscan_ext_tdo_UNCONNECTED;
  wire NLW_U0_bscan_ext_update_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_0_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_1_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_10_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_11_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_12_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_13_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_14_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_15_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_16_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_17_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_18_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_19_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_2_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_20_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_21_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_22_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_23_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_24_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_25_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_26_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_27_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_28_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_29_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_3_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_30_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_31_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_4_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_5_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_6_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_7_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_8_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_9_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_0_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_1_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_10_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_11_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_12_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_13_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_14_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_15_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_16_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_17_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_18_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_19_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_2_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_20_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_21_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_22_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_23_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_24_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_25_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_26_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_27_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_28_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_29_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_3_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_30_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_31_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_4_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_5_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_6_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_7_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_8_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_9_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_0_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_1_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_10_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_11_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_12_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_13_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_14_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_15_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_16_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_17_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_18_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_19_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_2_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_20_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_21_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_22_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_23_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_24_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_25_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_26_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_27_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_28_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_29_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_3_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_30_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_31_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_4_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_5_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_6_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_7_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_8_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_9_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_0_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_1_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_10_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_11_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_12_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_13_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_14_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_15_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_16_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_17_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_18_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_19_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_2_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_20_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_21_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_22_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_23_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_24_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_25_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_26_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_27_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_28_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_29_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_3_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_30_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_31_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_4_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_5_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_6_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_7_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_8_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_9_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_0_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_1_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_10_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_11_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_12_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_13_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_14_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_15_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_16_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_17_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_18_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_19_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_2_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_20_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_21_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_22_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_23_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_24_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_25_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_26_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_27_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_28_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_29_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_3_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_30_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_31_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_4_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_5_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_6_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_7_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_8_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_9_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_1_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_10_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_11_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_12_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_13_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_14_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_15_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_16_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_17_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_18_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_19_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_2_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_20_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_21_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_22_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_23_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_24_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_25_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_26_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_27_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_28_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_29_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_3_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_30_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_31_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_4_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_5_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_6_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_7_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_8_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_9_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_0_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_1_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_10_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_11_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_12_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_13_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_14_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_15_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_16_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_17_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_18_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_19_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_2_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_20_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_21_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_22_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_23_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_24_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_25_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_26_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_27_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_28_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_29_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_3_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_30_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_31_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_4_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_5_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_6_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_7_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_8_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_9_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_0_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_1_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_10_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_11_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_12_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_13_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_14_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_15_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_16_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_17_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_18_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_19_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_2_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_20_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_21_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_22_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_23_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_24_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_25_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_26_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_27_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_28_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_29_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_3_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_30_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_31_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_4_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_5_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_6_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_7_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_8_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_9_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_0_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_1_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_10_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_11_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_12_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_13_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_14_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_15_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_16_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_17_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_18_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_19_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_2_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_20_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_21_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_22_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_23_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_24_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_25_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_26_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_27_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_28_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_29_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_3_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_30_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_31_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_4_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_5_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_6_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_7_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_8_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_9_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_0_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_1_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_10_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_11_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_12_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_13_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_14_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_15_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_16_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_17_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_18_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_19_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_2_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_20_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_21_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_22_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_23_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_24_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_25_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_26_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_27_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_28_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_29_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_3_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_30_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_31_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_4_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_5_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_6_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_7_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_8_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_9_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_0_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_1_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_10_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_11_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_12_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_13_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_14_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_15_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_16_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_17_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_18_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_19_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_2_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_20_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_21_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_22_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_23_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_24_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_25_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_26_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_27_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_28_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_29_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_3_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_30_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_31_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_4_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_5_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_6_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_7_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_8_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_9_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_0_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_1_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_10_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_11_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_12_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_13_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_14_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_15_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_16_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_17_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_18_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_19_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_2_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_20_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_21_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_22_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_23_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_24_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_25_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_26_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_27_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_28_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_29_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_3_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_30_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_31_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_4_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_5_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_6_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_7_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_8_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_9_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_0_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_1_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_10_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_11_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_12_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_13_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_14_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_15_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_16_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_17_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_18_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_19_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_2_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_20_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_21_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_22_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_23_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_24_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_25_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_26_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_27_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_28_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_29_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_3_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_30_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_31_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_4_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_5_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_6_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_7_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_8_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_9_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_0_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_1_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_10_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_11_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_12_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_13_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_14_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_15_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_16_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_17_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_18_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_19_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_2_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_20_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_21_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_22_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_23_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_24_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_25_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_26_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_27_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_28_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_29_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_3_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_30_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_31_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_4_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_5_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_6_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_7_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_8_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_9_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_0_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_1_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_10_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_11_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_12_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_13_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_14_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_15_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_16_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_17_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_18_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_19_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_2_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_20_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_21_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_22_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_23_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_24_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_25_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_26_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_27_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_28_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_29_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_3_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_30_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_31_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_4_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_5_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_6_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_7_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_8_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_9_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_0_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_1_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_10_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_11_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_12_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_13_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_14_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_15_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_16_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_17_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_18_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_19_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_2_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_20_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_21_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_22_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_23_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_24_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_25_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_26_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_27_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_28_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_29_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_3_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_30_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_31_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_4_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_5_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_6_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_7_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_8_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_9_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXIS_TDATA_UNCONNECTED;
  wire [6:0]NLW_U0_M_AXIS_TID_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_ARADDR_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_ARBURST_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_ARCACHE_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_ARID_UNCONNECTED;
  wire [7:0]NLW_U0_M_AXI_ARLEN_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_ARPROT_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_ARQOS_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_ARSIZE_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_AWADDR_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_AWBURST_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_AWCACHE_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_AWID_UNCONNECTED;
  wire [7:0]NLW_U0_M_AXI_AWLEN_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_AWPROT_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_AWQOS_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_AWSIZE_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_BID_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_BRESP_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_RDATA_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_RID_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_RRESP_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_WDATA_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_WSTRB_UNCONNECTED;
  wire [3:0]NLW_U0_S_AXI_ARADDR_UNCONNECTED;
  wire [3:0]NLW_U0_S_AXI_AWADDR_UNCONNECTED;
  wire [1:0]NLW_U0_S_AXI_BRESP_UNCONNECTED;
  wire [31:0]NLW_U0_S_AXI_RDATA_UNCONNECTED;
  wire [1:0]NLW_U0_S_AXI_RRESP_UNCONNECTED;
  wire [31:0]NLW_U0_S_AXI_WDATA_UNCONNECTED;
  wire [3:0]NLW_U0_S_AXI_WSTRB_UNCONNECTED;
  wire [31:0]NLW_U0_TRACE_DATA_UNCONNECTED;

  (* C_AVOID_PRIMITIVES = "0" *) 
  (* C_DATA_SIZE = "32" *) 
  (* C_DBG_MEM_ACCESS = "0" *) 
  (* C_DBG_REG_ACCESS = "0" *) 
  (* C_DEBUG_INTERFACE = "0" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_INTERCONNECT = "2" *) 
  (* C_JTAG_CHAIN = "2" *) 
  (* C_MB_DBG_PORTS = "1" *) 
  (* C_M_AXIS_DATA_WIDTH = "32" *) 
  (* C_M_AXIS_ID_WIDTH = "7" *) 
  (* C_M_AXI_ADDR_WIDTH = "32" *) 
  (* C_M_AXI_DATA_WIDTH = "32" *) 
  (* C_M_AXI_THREAD_ID_WIDTH = "1" *) 
  (* C_S_AXI_ACLK_FREQ_HZ = "100000000" *) 
  (* C_S_AXI_ADDR_WIDTH = "4" *) 
  (* C_S_AXI_DATA_WIDTH = "32" *) 
  (* C_TRACE_ASYNC_RESET = "0" *) 
  (* C_TRACE_CLK_FREQ_HZ = "200000000" *) 
  (* C_TRACE_CLK_OUT_PHASE = "90" *) 
  (* C_TRACE_DATA_WIDTH = "32" *) 
  (* C_TRACE_OUTPUT = "0" *) 
  (* C_USE_BSCAN = "0" *) 
  (* C_USE_CONFIG_RESET = "0" *) 
  (* C_USE_CROSS_TRIGGER = "0" *) 
  (* C_USE_UART = "0" *) 
  MDM U0
       (.Config_Reset(NLW_U0_Config_Reset_UNCONNECTED),
        .Dbg_ARADDR_0(NLW_U0_Dbg_ARADDR_0_UNCONNECTED[14:2]),
        .Dbg_ARADDR_1(NLW_U0_Dbg_ARADDR_1_UNCONNECTED[14:2]),
        .Dbg_ARADDR_10(NLW_U0_Dbg_ARADDR_10_UNCONNECTED[14:2]),
        .Dbg_ARADDR_11(NLW_U0_Dbg_ARADDR_11_UNCONNECTED[14:2]),
        .Dbg_ARADDR_12(NLW_U0_Dbg_ARADDR_12_UNCONNECTED[14:2]),
        .Dbg_ARADDR_13(NLW_U0_Dbg_ARADDR_13_UNCONNECTED[14:2]),
        .Dbg_ARADDR_14(NLW_U0_Dbg_ARADDR_14_UNCONNECTED[14:2]),
        .Dbg_ARADDR_15(NLW_U0_Dbg_ARADDR_15_UNCONNECTED[14:2]),
        .Dbg_ARADDR_16(NLW_U0_Dbg_ARADDR_16_UNCONNECTED[14:2]),
        .Dbg_ARADDR_17(NLW_U0_Dbg_ARADDR_17_UNCONNECTED[14:2]),
        .Dbg_ARADDR_18(NLW_U0_Dbg_ARADDR_18_UNCONNECTED[14:2]),
        .Dbg_ARADDR_19(NLW_U0_Dbg_ARADDR_19_UNCONNECTED[14:2]),
        .Dbg_ARADDR_2(NLW_U0_Dbg_ARADDR_2_UNCONNECTED[14:2]),
        .Dbg_ARADDR_20(NLW_U0_Dbg_ARADDR_20_UNCONNECTED[14:2]),
        .Dbg_ARADDR_21(NLW_U0_Dbg_ARADDR_21_UNCONNECTED[14:2]),
        .Dbg_ARADDR_22(NLW_U0_Dbg_ARADDR_22_UNCONNECTED[14:2]),
        .Dbg_ARADDR_23(NLW_U0_Dbg_ARADDR_23_UNCONNECTED[14:2]),
        .Dbg_ARADDR_24(NLW_U0_Dbg_ARADDR_24_UNCONNECTED[14:2]),
        .Dbg_ARADDR_25(NLW_U0_Dbg_ARADDR_25_UNCONNECTED[14:2]),
        .Dbg_ARADDR_26(NLW_U0_Dbg_ARADDR_26_UNCONNECTED[14:2]),
        .Dbg_ARADDR_27(NLW_U0_Dbg_ARADDR_27_UNCONNECTED[14:2]),
        .Dbg_ARADDR_28(NLW_U0_Dbg_ARADDR_28_UNCONNECTED[14:2]),
        .Dbg_ARADDR_29(NLW_U0_Dbg_ARADDR_29_UNCONNECTED[14:2]),
        .Dbg_ARADDR_3(NLW_U0_Dbg_ARADDR_3_UNCONNECTED[14:2]),
        .Dbg_ARADDR_30(NLW_U0_Dbg_ARADDR_30_UNCONNECTED[14:2]),
        .Dbg_ARADDR_31(NLW_U0_Dbg_ARADDR_31_UNCONNECTED[14:2]),
        .Dbg_ARADDR_4(NLW_U0_Dbg_ARADDR_4_UNCONNECTED[14:2]),
        .Dbg_ARADDR_5(NLW_U0_Dbg_ARADDR_5_UNCONNECTED[14:2]),
        .Dbg_ARADDR_6(NLW_U0_Dbg_ARADDR_6_UNCONNECTED[14:2]),
        .Dbg_ARADDR_7(NLW_U0_Dbg_ARADDR_7_UNCONNECTED[14:2]),
        .Dbg_ARADDR_8(NLW_U0_Dbg_ARADDR_8_UNCONNECTED[14:2]),
        .Dbg_ARADDR_9(NLW_U0_Dbg_ARADDR_9_UNCONNECTED[14:2]),
        .Dbg_ARREADY_0(NLW_U0_Dbg_ARREADY_0_UNCONNECTED),
        .Dbg_ARREADY_1(NLW_U0_Dbg_ARREADY_1_UNCONNECTED),
        .Dbg_ARREADY_10(NLW_U0_Dbg_ARREADY_10_UNCONNECTED),
        .Dbg_ARREADY_11(NLW_U0_Dbg_ARREADY_11_UNCONNECTED),
        .Dbg_ARREADY_12(NLW_U0_Dbg_ARREADY_12_UNCONNECTED),
        .Dbg_ARREADY_13(NLW_U0_Dbg_ARREADY_13_UNCONNECTED),
        .Dbg_ARREADY_14(NLW_U0_Dbg_ARREADY_14_UNCONNECTED),
        .Dbg_ARREADY_15(NLW_U0_Dbg_ARREADY_15_UNCONNECTED),
        .Dbg_ARREADY_16(NLW_U0_Dbg_ARREADY_16_UNCONNECTED),
        .Dbg_ARREADY_17(NLW_U0_Dbg_ARREADY_17_UNCONNECTED),
        .Dbg_ARREADY_18(NLW_U0_Dbg_ARREADY_18_UNCONNECTED),
        .Dbg_ARREADY_19(NLW_U0_Dbg_ARREADY_19_UNCONNECTED),
        .Dbg_ARREADY_2(NLW_U0_Dbg_ARREADY_2_UNCONNECTED),
        .Dbg_ARREADY_20(NLW_U0_Dbg_ARREADY_20_UNCONNECTED),
        .Dbg_ARREADY_21(NLW_U0_Dbg_ARREADY_21_UNCONNECTED),
        .Dbg_ARREADY_22(NLW_U0_Dbg_ARREADY_22_UNCONNECTED),
        .Dbg_ARREADY_23(NLW_U0_Dbg_ARREADY_23_UNCONNECTED),
        .Dbg_ARREADY_24(NLW_U0_Dbg_ARREADY_24_UNCONNECTED),
        .Dbg_ARREADY_25(NLW_U0_Dbg_ARREADY_25_UNCONNECTED),
        .Dbg_ARREADY_26(NLW_U0_Dbg_ARREADY_26_UNCONNECTED),
        .Dbg_ARREADY_27(NLW_U0_Dbg_ARREADY_27_UNCONNECTED),
        .Dbg_ARREADY_28(NLW_U0_Dbg_ARREADY_28_UNCONNECTED),
        .Dbg_ARREADY_29(NLW_U0_Dbg_ARREADY_29_UNCONNECTED),
        .Dbg_ARREADY_3(NLW_U0_Dbg_ARREADY_3_UNCONNECTED),
        .Dbg_ARREADY_30(NLW_U0_Dbg_ARREADY_30_UNCONNECTED),
        .Dbg_ARREADY_31(NLW_U0_Dbg_ARREADY_31_UNCONNECTED),
        .Dbg_ARREADY_4(NLW_U0_Dbg_ARREADY_4_UNCONNECTED),
        .Dbg_ARREADY_5(NLW_U0_Dbg_ARREADY_5_UNCONNECTED),
        .Dbg_ARREADY_6(NLW_U0_Dbg_ARREADY_6_UNCONNECTED),
        .Dbg_ARREADY_7(NLW_U0_Dbg_ARREADY_7_UNCONNECTED),
        .Dbg_ARREADY_8(NLW_U0_Dbg_ARREADY_8_UNCONNECTED),
        .Dbg_ARREADY_9(NLW_U0_Dbg_ARREADY_9_UNCONNECTED),
        .Dbg_ARVALID_0(NLW_U0_Dbg_ARVALID_0_UNCONNECTED),
        .Dbg_ARVALID_1(NLW_U0_Dbg_ARVALID_1_UNCONNECTED),
        .Dbg_ARVALID_10(NLW_U0_Dbg_ARVALID_10_UNCONNECTED),
        .Dbg_ARVALID_11(NLW_U0_Dbg_ARVALID_11_UNCONNECTED),
        .Dbg_ARVALID_12(NLW_U0_Dbg_ARVALID_12_UNCONNECTED),
        .Dbg_ARVALID_13(NLW_U0_Dbg_ARVALID_13_UNCONNECTED),
        .Dbg_ARVALID_14(NLW_U0_Dbg_ARVALID_14_UNCONNECTED),
        .Dbg_ARVALID_15(NLW_U0_Dbg_ARVALID_15_UNCONNECTED),
        .Dbg_ARVALID_16(NLW_U0_Dbg_ARVALID_16_UNCONNECTED),
        .Dbg_ARVALID_17(NLW_U0_Dbg_ARVALID_17_UNCONNECTED),
        .Dbg_ARVALID_18(NLW_U0_Dbg_ARVALID_18_UNCONNECTED),
        .Dbg_ARVALID_19(NLW_U0_Dbg_ARVALID_19_UNCONNECTED),
        .Dbg_ARVALID_2(NLW_U0_Dbg_ARVALID_2_UNCONNECTED),
        .Dbg_ARVALID_20(NLW_U0_Dbg_ARVALID_20_UNCONNECTED),
        .Dbg_ARVALID_21(NLW_U0_Dbg_ARVALID_21_UNCONNECTED),
        .Dbg_ARVALID_22(NLW_U0_Dbg_ARVALID_22_UNCONNECTED),
        .Dbg_ARVALID_23(NLW_U0_Dbg_ARVALID_23_UNCONNECTED),
        .Dbg_ARVALID_24(NLW_U0_Dbg_ARVALID_24_UNCONNECTED),
        .Dbg_ARVALID_25(NLW_U0_Dbg_ARVALID_25_UNCONNECTED),
        .Dbg_ARVALID_26(NLW_U0_Dbg_ARVALID_26_UNCONNECTED),
        .Dbg_ARVALID_27(NLW_U0_Dbg_ARVALID_27_UNCONNECTED),
        .Dbg_ARVALID_28(NLW_U0_Dbg_ARVALID_28_UNCONNECTED),
        .Dbg_ARVALID_29(NLW_U0_Dbg_ARVALID_29_UNCONNECTED),
        .Dbg_ARVALID_3(NLW_U0_Dbg_ARVALID_3_UNCONNECTED),
        .Dbg_ARVALID_30(NLW_U0_Dbg_ARVALID_30_UNCONNECTED),
        .Dbg_ARVALID_31(NLW_U0_Dbg_ARVALID_31_UNCONNECTED),
        .Dbg_ARVALID_4(NLW_U0_Dbg_ARVALID_4_UNCONNECTED),
        .Dbg_ARVALID_5(NLW_U0_Dbg_ARVALID_5_UNCONNECTED),
        .Dbg_ARVALID_6(NLW_U0_Dbg_ARVALID_6_UNCONNECTED),
        .Dbg_ARVALID_7(NLW_U0_Dbg_ARVALID_7_UNCONNECTED),
        .Dbg_ARVALID_8(NLW_U0_Dbg_ARVALID_8_UNCONNECTED),
        .Dbg_ARVALID_9(NLW_U0_Dbg_ARVALID_9_UNCONNECTED),
        .Dbg_AWADDR_0(NLW_U0_Dbg_AWADDR_0_UNCONNECTED[14:2]),
        .Dbg_AWADDR_1(NLW_U0_Dbg_AWADDR_1_UNCONNECTED[14:2]),
        .Dbg_AWADDR_10(NLW_U0_Dbg_AWADDR_10_UNCONNECTED[14:2]),
        .Dbg_AWADDR_11(NLW_U0_Dbg_AWADDR_11_UNCONNECTED[14:2]),
        .Dbg_AWADDR_12(NLW_U0_Dbg_AWADDR_12_UNCONNECTED[14:2]),
        .Dbg_AWADDR_13(NLW_U0_Dbg_AWADDR_13_UNCONNECTED[14:2]),
        .Dbg_AWADDR_14(NLW_U0_Dbg_AWADDR_14_UNCONNECTED[14:2]),
        .Dbg_AWADDR_15(NLW_U0_Dbg_AWADDR_15_UNCONNECTED[14:2]),
        .Dbg_AWADDR_16(NLW_U0_Dbg_AWADDR_16_UNCONNECTED[14:2]),
        .Dbg_AWADDR_17(NLW_U0_Dbg_AWADDR_17_UNCONNECTED[14:2]),
        .Dbg_AWADDR_18(NLW_U0_Dbg_AWADDR_18_UNCONNECTED[14:2]),
        .Dbg_AWADDR_19(NLW_U0_Dbg_AWADDR_19_UNCONNECTED[14:2]),
        .Dbg_AWADDR_2(NLW_U0_Dbg_AWADDR_2_UNCONNECTED[14:2]),
        .Dbg_AWADDR_20(NLW_U0_Dbg_AWADDR_20_UNCONNECTED[14:2]),
        .Dbg_AWADDR_21(NLW_U0_Dbg_AWADDR_21_UNCONNECTED[14:2]),
        .Dbg_AWADDR_22(NLW_U0_Dbg_AWADDR_22_UNCONNECTED[14:2]),
        .Dbg_AWADDR_23(NLW_U0_Dbg_AWADDR_23_UNCONNECTED[14:2]),
        .Dbg_AWADDR_24(NLW_U0_Dbg_AWADDR_24_UNCONNECTED[14:2]),
        .Dbg_AWADDR_25(NLW_U0_Dbg_AWADDR_25_UNCONNECTED[14:2]),
        .Dbg_AWADDR_26(NLW_U0_Dbg_AWADDR_26_UNCONNECTED[14:2]),
        .Dbg_AWADDR_27(NLW_U0_Dbg_AWADDR_27_UNCONNECTED[14:2]),
        .Dbg_AWADDR_28(NLW_U0_Dbg_AWADDR_28_UNCONNECTED[14:2]),
        .Dbg_AWADDR_29(NLW_U0_Dbg_AWADDR_29_UNCONNECTED[14:2]),
        .Dbg_AWADDR_3(NLW_U0_Dbg_AWADDR_3_UNCONNECTED[14:2]),
        .Dbg_AWADDR_30(NLW_U0_Dbg_AWADDR_30_UNCONNECTED[14:2]),
        .Dbg_AWADDR_31(NLW_U0_Dbg_AWADDR_31_UNCONNECTED[14:2]),
        .Dbg_AWADDR_4(NLW_U0_Dbg_AWADDR_4_UNCONNECTED[14:2]),
        .Dbg_AWADDR_5(NLW_U0_Dbg_AWADDR_5_UNCONNECTED[14:2]),
        .Dbg_AWADDR_6(NLW_U0_Dbg_AWADDR_6_UNCONNECTED[14:2]),
        .Dbg_AWADDR_7(NLW_U0_Dbg_AWADDR_7_UNCONNECTED[14:2]),
        .Dbg_AWADDR_8(NLW_U0_Dbg_AWADDR_8_UNCONNECTED[14:2]),
        .Dbg_AWADDR_9(NLW_U0_Dbg_AWADDR_9_UNCONNECTED[14:2]),
        .Dbg_AWREADY_0(NLW_U0_Dbg_AWREADY_0_UNCONNECTED),
        .Dbg_AWREADY_1(NLW_U0_Dbg_AWREADY_1_UNCONNECTED),
        .Dbg_AWREADY_10(NLW_U0_Dbg_AWREADY_10_UNCONNECTED),
        .Dbg_AWREADY_11(NLW_U0_Dbg_AWREADY_11_UNCONNECTED),
        .Dbg_AWREADY_12(NLW_U0_Dbg_AWREADY_12_UNCONNECTED),
        .Dbg_AWREADY_13(NLW_U0_Dbg_AWREADY_13_UNCONNECTED),
        .Dbg_AWREADY_14(NLW_U0_Dbg_AWREADY_14_UNCONNECTED),
        .Dbg_AWREADY_15(NLW_U0_Dbg_AWREADY_15_UNCONNECTED),
        .Dbg_AWREADY_16(NLW_U0_Dbg_AWREADY_16_UNCONNECTED),
        .Dbg_AWREADY_17(NLW_U0_Dbg_AWREADY_17_UNCONNECTED),
        .Dbg_AWREADY_18(NLW_U0_Dbg_AWREADY_18_UNCONNECTED),
        .Dbg_AWREADY_19(NLW_U0_Dbg_AWREADY_19_UNCONNECTED),
        .Dbg_AWREADY_2(NLW_U0_Dbg_AWREADY_2_UNCONNECTED),
        .Dbg_AWREADY_20(NLW_U0_Dbg_AWREADY_20_UNCONNECTED),
        .Dbg_AWREADY_21(NLW_U0_Dbg_AWREADY_21_UNCONNECTED),
        .Dbg_AWREADY_22(NLW_U0_Dbg_AWREADY_22_UNCONNECTED),
        .Dbg_AWREADY_23(NLW_U0_Dbg_AWREADY_23_UNCONNECTED),
        .Dbg_AWREADY_24(NLW_U0_Dbg_AWREADY_24_UNCONNECTED),
        .Dbg_AWREADY_25(NLW_U0_Dbg_AWREADY_25_UNCONNECTED),
        .Dbg_AWREADY_26(NLW_U0_Dbg_AWREADY_26_UNCONNECTED),
        .Dbg_AWREADY_27(NLW_U0_Dbg_AWREADY_27_UNCONNECTED),
        .Dbg_AWREADY_28(NLW_U0_Dbg_AWREADY_28_UNCONNECTED),
        .Dbg_AWREADY_29(NLW_U0_Dbg_AWREADY_29_UNCONNECTED),
        .Dbg_AWREADY_3(NLW_U0_Dbg_AWREADY_3_UNCONNECTED),
        .Dbg_AWREADY_30(NLW_U0_Dbg_AWREADY_30_UNCONNECTED),
        .Dbg_AWREADY_31(NLW_U0_Dbg_AWREADY_31_UNCONNECTED),
        .Dbg_AWREADY_4(NLW_U0_Dbg_AWREADY_4_UNCONNECTED),
        .Dbg_AWREADY_5(NLW_U0_Dbg_AWREADY_5_UNCONNECTED),
        .Dbg_AWREADY_6(NLW_U0_Dbg_AWREADY_6_UNCONNECTED),
        .Dbg_AWREADY_7(NLW_U0_Dbg_AWREADY_7_UNCONNECTED),
        .Dbg_AWREADY_8(NLW_U0_Dbg_AWREADY_8_UNCONNECTED),
        .Dbg_AWREADY_9(NLW_U0_Dbg_AWREADY_9_UNCONNECTED),
        .Dbg_AWVALID_0(NLW_U0_Dbg_AWVALID_0_UNCONNECTED),
        .Dbg_AWVALID_1(NLW_U0_Dbg_AWVALID_1_UNCONNECTED),
        .Dbg_AWVALID_10(NLW_U0_Dbg_AWVALID_10_UNCONNECTED),
        .Dbg_AWVALID_11(NLW_U0_Dbg_AWVALID_11_UNCONNECTED),
        .Dbg_AWVALID_12(NLW_U0_Dbg_AWVALID_12_UNCONNECTED),
        .Dbg_AWVALID_13(NLW_U0_Dbg_AWVALID_13_UNCONNECTED),
        .Dbg_AWVALID_14(NLW_U0_Dbg_AWVALID_14_UNCONNECTED),
        .Dbg_AWVALID_15(NLW_U0_Dbg_AWVALID_15_UNCONNECTED),
        .Dbg_AWVALID_16(NLW_U0_Dbg_AWVALID_16_UNCONNECTED),
        .Dbg_AWVALID_17(NLW_U0_Dbg_AWVALID_17_UNCONNECTED),
        .Dbg_AWVALID_18(NLW_U0_Dbg_AWVALID_18_UNCONNECTED),
        .Dbg_AWVALID_19(NLW_U0_Dbg_AWVALID_19_UNCONNECTED),
        .Dbg_AWVALID_2(NLW_U0_Dbg_AWVALID_2_UNCONNECTED),
        .Dbg_AWVALID_20(NLW_U0_Dbg_AWVALID_20_UNCONNECTED),
        .Dbg_AWVALID_21(NLW_U0_Dbg_AWVALID_21_UNCONNECTED),
        .Dbg_AWVALID_22(NLW_U0_Dbg_AWVALID_22_UNCONNECTED),
        .Dbg_AWVALID_23(NLW_U0_Dbg_AWVALID_23_UNCONNECTED),
        .Dbg_AWVALID_24(NLW_U0_Dbg_AWVALID_24_UNCONNECTED),
        .Dbg_AWVALID_25(NLW_U0_Dbg_AWVALID_25_UNCONNECTED),
        .Dbg_AWVALID_26(NLW_U0_Dbg_AWVALID_26_UNCONNECTED),
        .Dbg_AWVALID_27(NLW_U0_Dbg_AWVALID_27_UNCONNECTED),
        .Dbg_AWVALID_28(NLW_U0_Dbg_AWVALID_28_UNCONNECTED),
        .Dbg_AWVALID_29(NLW_U0_Dbg_AWVALID_29_UNCONNECTED),
        .Dbg_AWVALID_3(NLW_U0_Dbg_AWVALID_3_UNCONNECTED),
        .Dbg_AWVALID_30(NLW_U0_Dbg_AWVALID_30_UNCONNECTED),
        .Dbg_AWVALID_31(NLW_U0_Dbg_AWVALID_31_UNCONNECTED),
        .Dbg_AWVALID_4(NLW_U0_Dbg_AWVALID_4_UNCONNECTED),
        .Dbg_AWVALID_5(NLW_U0_Dbg_AWVALID_5_UNCONNECTED),
        .Dbg_AWVALID_6(NLW_U0_Dbg_AWVALID_6_UNCONNECTED),
        .Dbg_AWVALID_7(NLW_U0_Dbg_AWVALID_7_UNCONNECTED),
        .Dbg_AWVALID_8(NLW_U0_Dbg_AWVALID_8_UNCONNECTED),
        .Dbg_AWVALID_9(NLW_U0_Dbg_AWVALID_9_UNCONNECTED),
        .Dbg_BREADY_0(NLW_U0_Dbg_BREADY_0_UNCONNECTED),
        .Dbg_BREADY_1(NLW_U0_Dbg_BREADY_1_UNCONNECTED),
        .Dbg_BREADY_10(NLW_U0_Dbg_BREADY_10_UNCONNECTED),
        .Dbg_BREADY_11(NLW_U0_Dbg_BREADY_11_UNCONNECTED),
        .Dbg_BREADY_12(NLW_U0_Dbg_BREADY_12_UNCONNECTED),
        .Dbg_BREADY_13(NLW_U0_Dbg_BREADY_13_UNCONNECTED),
        .Dbg_BREADY_14(NLW_U0_Dbg_BREADY_14_UNCONNECTED),
        .Dbg_BREADY_15(NLW_U0_Dbg_BREADY_15_UNCONNECTED),
        .Dbg_BREADY_16(NLW_U0_Dbg_BREADY_16_UNCONNECTED),
        .Dbg_BREADY_17(NLW_U0_Dbg_BREADY_17_UNCONNECTED),
        .Dbg_BREADY_18(NLW_U0_Dbg_BREADY_18_UNCONNECTED),
        .Dbg_BREADY_19(NLW_U0_Dbg_BREADY_19_UNCONNECTED),
        .Dbg_BREADY_2(NLW_U0_Dbg_BREADY_2_UNCONNECTED),
        .Dbg_BREADY_20(NLW_U0_Dbg_BREADY_20_UNCONNECTED),
        .Dbg_BREADY_21(NLW_U0_Dbg_BREADY_21_UNCONNECTED),
        .Dbg_BREADY_22(NLW_U0_Dbg_BREADY_22_UNCONNECTED),
        .Dbg_BREADY_23(NLW_U0_Dbg_BREADY_23_UNCONNECTED),
        .Dbg_BREADY_24(NLW_U0_Dbg_BREADY_24_UNCONNECTED),
        .Dbg_BREADY_25(NLW_U0_Dbg_BREADY_25_UNCONNECTED),
        .Dbg_BREADY_26(NLW_U0_Dbg_BREADY_26_UNCONNECTED),
        .Dbg_BREADY_27(NLW_U0_Dbg_BREADY_27_UNCONNECTED),
        .Dbg_BREADY_28(NLW_U0_Dbg_BREADY_28_UNCONNECTED),
        .Dbg_BREADY_29(NLW_U0_Dbg_BREADY_29_UNCONNECTED),
        .Dbg_BREADY_3(NLW_U0_Dbg_BREADY_3_UNCONNECTED),
        .Dbg_BREADY_30(NLW_U0_Dbg_BREADY_30_UNCONNECTED),
        .Dbg_BREADY_31(NLW_U0_Dbg_BREADY_31_UNCONNECTED),
        .Dbg_BREADY_4(NLW_U0_Dbg_BREADY_4_UNCONNECTED),
        .Dbg_BREADY_5(NLW_U0_Dbg_BREADY_5_UNCONNECTED),
        .Dbg_BREADY_6(NLW_U0_Dbg_BREADY_6_UNCONNECTED),
        .Dbg_BREADY_7(NLW_U0_Dbg_BREADY_7_UNCONNECTED),
        .Dbg_BREADY_8(NLW_U0_Dbg_BREADY_8_UNCONNECTED),
        .Dbg_BREADY_9(NLW_U0_Dbg_BREADY_9_UNCONNECTED),
        .Dbg_BRESP_0(NLW_U0_Dbg_BRESP_0_UNCONNECTED[1:0]),
        .Dbg_BRESP_1(NLW_U0_Dbg_BRESP_1_UNCONNECTED[1:0]),
        .Dbg_BRESP_10(NLW_U0_Dbg_BRESP_10_UNCONNECTED[1:0]),
        .Dbg_BRESP_11(NLW_U0_Dbg_BRESP_11_UNCONNECTED[1:0]),
        .Dbg_BRESP_12(NLW_U0_Dbg_BRESP_12_UNCONNECTED[1:0]),
        .Dbg_BRESP_13(NLW_U0_Dbg_BRESP_13_UNCONNECTED[1:0]),
        .Dbg_BRESP_14(NLW_U0_Dbg_BRESP_14_UNCONNECTED[1:0]),
        .Dbg_BRESP_15(NLW_U0_Dbg_BRESP_15_UNCONNECTED[1:0]),
        .Dbg_BRESP_16(NLW_U0_Dbg_BRESP_16_UNCONNECTED[1:0]),
        .Dbg_BRESP_17(NLW_U0_Dbg_BRESP_17_UNCONNECTED[1:0]),
        .Dbg_BRESP_18(NLW_U0_Dbg_BRESP_18_UNCONNECTED[1:0]),
        .Dbg_BRESP_19(NLW_U0_Dbg_BRESP_19_UNCONNECTED[1:0]),
        .Dbg_BRESP_2(NLW_U0_Dbg_BRESP_2_UNCONNECTED[1:0]),
        .Dbg_BRESP_20(NLW_U0_Dbg_BRESP_20_UNCONNECTED[1:0]),
        .Dbg_BRESP_21(NLW_U0_Dbg_BRESP_21_UNCONNECTED[1:0]),
        .Dbg_BRESP_22(NLW_U0_Dbg_BRESP_22_UNCONNECTED[1:0]),
        .Dbg_BRESP_23(NLW_U0_Dbg_BRESP_23_UNCONNECTED[1:0]),
        .Dbg_BRESP_24(NLW_U0_Dbg_BRESP_24_UNCONNECTED[1:0]),
        .Dbg_BRESP_25(NLW_U0_Dbg_BRESP_25_UNCONNECTED[1:0]),
        .Dbg_BRESP_26(NLW_U0_Dbg_BRESP_26_UNCONNECTED[1:0]),
        .Dbg_BRESP_27(NLW_U0_Dbg_BRESP_27_UNCONNECTED[1:0]),
        .Dbg_BRESP_28(NLW_U0_Dbg_BRESP_28_UNCONNECTED[1:0]),
        .Dbg_BRESP_29(NLW_U0_Dbg_BRESP_29_UNCONNECTED[1:0]),
        .Dbg_BRESP_3(NLW_U0_Dbg_BRESP_3_UNCONNECTED[1:0]),
        .Dbg_BRESP_30(NLW_U0_Dbg_BRESP_30_UNCONNECTED[1:0]),
        .Dbg_BRESP_31(NLW_U0_Dbg_BRESP_31_UNCONNECTED[1:0]),
        .Dbg_BRESP_4(NLW_U0_Dbg_BRESP_4_UNCONNECTED[1:0]),
        .Dbg_BRESP_5(NLW_U0_Dbg_BRESP_5_UNCONNECTED[1:0]),
        .Dbg_BRESP_6(NLW_U0_Dbg_BRESP_6_UNCONNECTED[1:0]),
        .Dbg_BRESP_7(NLW_U0_Dbg_BRESP_7_UNCONNECTED[1:0]),
        .Dbg_BRESP_8(NLW_U0_Dbg_BRESP_8_UNCONNECTED[1:0]),
        .Dbg_BRESP_9(NLW_U0_Dbg_BRESP_9_UNCONNECTED[1:0]),
        .Dbg_BVALID_0(NLW_U0_Dbg_BVALID_0_UNCONNECTED),
        .Dbg_BVALID_1(NLW_U0_Dbg_BVALID_1_UNCONNECTED),
        .Dbg_BVALID_10(NLW_U0_Dbg_BVALID_10_UNCONNECTED),
        .Dbg_BVALID_11(NLW_U0_Dbg_BVALID_11_UNCONNECTED),
        .Dbg_BVALID_12(NLW_U0_Dbg_BVALID_12_UNCONNECTED),
        .Dbg_BVALID_13(NLW_U0_Dbg_BVALID_13_UNCONNECTED),
        .Dbg_BVALID_14(NLW_U0_Dbg_BVALID_14_UNCONNECTED),
        .Dbg_BVALID_15(NLW_U0_Dbg_BVALID_15_UNCONNECTED),
        .Dbg_BVALID_16(NLW_U0_Dbg_BVALID_16_UNCONNECTED),
        .Dbg_BVALID_17(NLW_U0_Dbg_BVALID_17_UNCONNECTED),
        .Dbg_BVALID_18(NLW_U0_Dbg_BVALID_18_UNCONNECTED),
        .Dbg_BVALID_19(NLW_U0_Dbg_BVALID_19_UNCONNECTED),
        .Dbg_BVALID_2(NLW_U0_Dbg_BVALID_2_UNCONNECTED),
        .Dbg_BVALID_20(NLW_U0_Dbg_BVALID_20_UNCONNECTED),
        .Dbg_BVALID_21(NLW_U0_Dbg_BVALID_21_UNCONNECTED),
        .Dbg_BVALID_22(NLW_U0_Dbg_BVALID_22_UNCONNECTED),
        .Dbg_BVALID_23(NLW_U0_Dbg_BVALID_23_UNCONNECTED),
        .Dbg_BVALID_24(NLW_U0_Dbg_BVALID_24_UNCONNECTED),
        .Dbg_BVALID_25(NLW_U0_Dbg_BVALID_25_UNCONNECTED),
        .Dbg_BVALID_26(NLW_U0_Dbg_BVALID_26_UNCONNECTED),
        .Dbg_BVALID_27(NLW_U0_Dbg_BVALID_27_UNCONNECTED),
        .Dbg_BVALID_28(NLW_U0_Dbg_BVALID_28_UNCONNECTED),
        .Dbg_BVALID_29(NLW_U0_Dbg_BVALID_29_UNCONNECTED),
        .Dbg_BVALID_3(NLW_U0_Dbg_BVALID_3_UNCONNECTED),
        .Dbg_BVALID_30(NLW_U0_Dbg_BVALID_30_UNCONNECTED),
        .Dbg_BVALID_31(NLW_U0_Dbg_BVALID_31_UNCONNECTED),
        .Dbg_BVALID_4(NLW_U0_Dbg_BVALID_4_UNCONNECTED),
        .Dbg_BVALID_5(NLW_U0_Dbg_BVALID_5_UNCONNECTED),
        .Dbg_BVALID_6(NLW_U0_Dbg_BVALID_6_UNCONNECTED),
        .Dbg_BVALID_7(NLW_U0_Dbg_BVALID_7_UNCONNECTED),
        .Dbg_BVALID_8(NLW_U0_Dbg_BVALID_8_UNCONNECTED),
        .Dbg_BVALID_9(NLW_U0_Dbg_BVALID_9_UNCONNECTED),
        .Dbg_Capture_0(Dbg_Capture_0),
        .Dbg_Capture_1(NLW_U0_Dbg_Capture_1_UNCONNECTED),
        .Dbg_Capture_10(NLW_U0_Dbg_Capture_10_UNCONNECTED),
        .Dbg_Capture_11(NLW_U0_Dbg_Capture_11_UNCONNECTED),
        .Dbg_Capture_12(NLW_U0_Dbg_Capture_12_UNCONNECTED),
        .Dbg_Capture_13(NLW_U0_Dbg_Capture_13_UNCONNECTED),
        .Dbg_Capture_14(NLW_U0_Dbg_Capture_14_UNCONNECTED),
        .Dbg_Capture_15(NLW_U0_Dbg_Capture_15_UNCONNECTED),
        .Dbg_Capture_16(NLW_U0_Dbg_Capture_16_UNCONNECTED),
        .Dbg_Capture_17(NLW_U0_Dbg_Capture_17_UNCONNECTED),
        .Dbg_Capture_18(NLW_U0_Dbg_Capture_18_UNCONNECTED),
        .Dbg_Capture_19(NLW_U0_Dbg_Capture_19_UNCONNECTED),
        .Dbg_Capture_2(NLW_U0_Dbg_Capture_2_UNCONNECTED),
        .Dbg_Capture_20(NLW_U0_Dbg_Capture_20_UNCONNECTED),
        .Dbg_Capture_21(NLW_U0_Dbg_Capture_21_UNCONNECTED),
        .Dbg_Capture_22(NLW_U0_Dbg_Capture_22_UNCONNECTED),
        .Dbg_Capture_23(NLW_U0_Dbg_Capture_23_UNCONNECTED),
        .Dbg_Capture_24(NLW_U0_Dbg_Capture_24_UNCONNECTED),
        .Dbg_Capture_25(NLW_U0_Dbg_Capture_25_UNCONNECTED),
        .Dbg_Capture_26(NLW_U0_Dbg_Capture_26_UNCONNECTED),
        .Dbg_Capture_27(NLW_U0_Dbg_Capture_27_UNCONNECTED),
        .Dbg_Capture_28(NLW_U0_Dbg_Capture_28_UNCONNECTED),
        .Dbg_Capture_29(NLW_U0_Dbg_Capture_29_UNCONNECTED),
        .Dbg_Capture_3(NLW_U0_Dbg_Capture_3_UNCONNECTED),
        .Dbg_Capture_30(NLW_U0_Dbg_Capture_30_UNCONNECTED),
        .Dbg_Capture_31(NLW_U0_Dbg_Capture_31_UNCONNECTED),
        .Dbg_Capture_4(NLW_U0_Dbg_Capture_4_UNCONNECTED),
        .Dbg_Capture_5(NLW_U0_Dbg_Capture_5_UNCONNECTED),
        .Dbg_Capture_6(NLW_U0_Dbg_Capture_6_UNCONNECTED),
        .Dbg_Capture_7(NLW_U0_Dbg_Capture_7_UNCONNECTED),
        .Dbg_Capture_8(NLW_U0_Dbg_Capture_8_UNCONNECTED),
        .Dbg_Capture_9(NLW_U0_Dbg_Capture_9_UNCONNECTED),
        .Dbg_Clk_0(Dbg_Clk_0),
        .Dbg_Clk_1(NLW_U0_Dbg_Clk_1_UNCONNECTED),
        .Dbg_Clk_10(NLW_U0_Dbg_Clk_10_UNCONNECTED),
        .Dbg_Clk_11(NLW_U0_Dbg_Clk_11_UNCONNECTED),
        .Dbg_Clk_12(NLW_U0_Dbg_Clk_12_UNCONNECTED),
        .Dbg_Clk_13(NLW_U0_Dbg_Clk_13_UNCONNECTED),
        .Dbg_Clk_14(NLW_U0_Dbg_Clk_14_UNCONNECTED),
        .Dbg_Clk_15(NLW_U0_Dbg_Clk_15_UNCONNECTED),
        .Dbg_Clk_16(NLW_U0_Dbg_Clk_16_UNCONNECTED),
        .Dbg_Clk_17(NLW_U0_Dbg_Clk_17_UNCONNECTED),
        .Dbg_Clk_18(NLW_U0_Dbg_Clk_18_UNCONNECTED),
        .Dbg_Clk_19(NLW_U0_Dbg_Clk_19_UNCONNECTED),
        .Dbg_Clk_2(NLW_U0_Dbg_Clk_2_UNCONNECTED),
        .Dbg_Clk_20(NLW_U0_Dbg_Clk_20_UNCONNECTED),
        .Dbg_Clk_21(NLW_U0_Dbg_Clk_21_UNCONNECTED),
        .Dbg_Clk_22(NLW_U0_Dbg_Clk_22_UNCONNECTED),
        .Dbg_Clk_23(NLW_U0_Dbg_Clk_23_UNCONNECTED),
        .Dbg_Clk_24(NLW_U0_Dbg_Clk_24_UNCONNECTED),
        .Dbg_Clk_25(NLW_U0_Dbg_Clk_25_UNCONNECTED),
        .Dbg_Clk_26(NLW_U0_Dbg_Clk_26_UNCONNECTED),
        .Dbg_Clk_27(NLW_U0_Dbg_Clk_27_UNCONNECTED),
        .Dbg_Clk_28(NLW_U0_Dbg_Clk_28_UNCONNECTED),
        .Dbg_Clk_29(NLW_U0_Dbg_Clk_29_UNCONNECTED),
        .Dbg_Clk_3(NLW_U0_Dbg_Clk_3_UNCONNECTED),
        .Dbg_Clk_30(NLW_U0_Dbg_Clk_30_UNCONNECTED),
        .Dbg_Clk_31(NLW_U0_Dbg_Clk_31_UNCONNECTED),
        .Dbg_Clk_4(NLW_U0_Dbg_Clk_4_UNCONNECTED),
        .Dbg_Clk_5(NLW_U0_Dbg_Clk_5_UNCONNECTED),
        .Dbg_Clk_6(NLW_U0_Dbg_Clk_6_UNCONNECTED),
        .Dbg_Clk_7(NLW_U0_Dbg_Clk_7_UNCONNECTED),
        .Dbg_Clk_8(NLW_U0_Dbg_Clk_8_UNCONNECTED),
        .Dbg_Clk_9(NLW_U0_Dbg_Clk_9_UNCONNECTED),
        .Dbg_Disable_0(NLW_U0_Dbg_Disable_0_UNCONNECTED),
        .Dbg_Disable_1(NLW_U0_Dbg_Disable_1_UNCONNECTED),
        .Dbg_Disable_10(NLW_U0_Dbg_Disable_10_UNCONNECTED),
        .Dbg_Disable_11(NLW_U0_Dbg_Disable_11_UNCONNECTED),
        .Dbg_Disable_12(NLW_U0_Dbg_Disable_12_UNCONNECTED),
        .Dbg_Disable_13(NLW_U0_Dbg_Disable_13_UNCONNECTED),
        .Dbg_Disable_14(NLW_U0_Dbg_Disable_14_UNCONNECTED),
        .Dbg_Disable_15(NLW_U0_Dbg_Disable_15_UNCONNECTED),
        .Dbg_Disable_16(NLW_U0_Dbg_Disable_16_UNCONNECTED),
        .Dbg_Disable_17(NLW_U0_Dbg_Disable_17_UNCONNECTED),
        .Dbg_Disable_18(NLW_U0_Dbg_Disable_18_UNCONNECTED),
        .Dbg_Disable_19(NLW_U0_Dbg_Disable_19_UNCONNECTED),
        .Dbg_Disable_2(NLW_U0_Dbg_Disable_2_UNCONNECTED),
        .Dbg_Disable_20(NLW_U0_Dbg_Disable_20_UNCONNECTED),
        .Dbg_Disable_21(NLW_U0_Dbg_Disable_21_UNCONNECTED),
        .Dbg_Disable_22(NLW_U0_Dbg_Disable_22_UNCONNECTED),
        .Dbg_Disable_23(NLW_U0_Dbg_Disable_23_UNCONNECTED),
        .Dbg_Disable_24(NLW_U0_Dbg_Disable_24_UNCONNECTED),
        .Dbg_Disable_25(NLW_U0_Dbg_Disable_25_UNCONNECTED),
        .Dbg_Disable_26(NLW_U0_Dbg_Disable_26_UNCONNECTED),
        .Dbg_Disable_27(NLW_U0_Dbg_Disable_27_UNCONNECTED),
        .Dbg_Disable_28(NLW_U0_Dbg_Disable_28_UNCONNECTED),
        .Dbg_Disable_29(NLW_U0_Dbg_Disable_29_UNCONNECTED),
        .Dbg_Disable_3(NLW_U0_Dbg_Disable_3_UNCONNECTED),
        .Dbg_Disable_30(NLW_U0_Dbg_Disable_30_UNCONNECTED),
        .Dbg_Disable_31(NLW_U0_Dbg_Disable_31_UNCONNECTED),
        .Dbg_Disable_4(NLW_U0_Dbg_Disable_4_UNCONNECTED),
        .Dbg_Disable_5(NLW_U0_Dbg_Disable_5_UNCONNECTED),
        .Dbg_Disable_6(NLW_U0_Dbg_Disable_6_UNCONNECTED),
        .Dbg_Disable_7(NLW_U0_Dbg_Disable_7_UNCONNECTED),
        .Dbg_Disable_8(NLW_U0_Dbg_Disable_8_UNCONNECTED),
        .Dbg_Disable_9(NLW_U0_Dbg_Disable_9_UNCONNECTED),
        .Dbg_RDATA_0(NLW_U0_Dbg_RDATA_0_UNCONNECTED[31:0]),
        .Dbg_RDATA_1(NLW_U0_Dbg_RDATA_1_UNCONNECTED[31:0]),
        .Dbg_RDATA_10(NLW_U0_Dbg_RDATA_10_UNCONNECTED[31:0]),
        .Dbg_RDATA_11(NLW_U0_Dbg_RDATA_11_UNCONNECTED[31:0]),
        .Dbg_RDATA_12(NLW_U0_Dbg_RDATA_12_UNCONNECTED[31:0]),
        .Dbg_RDATA_13(NLW_U0_Dbg_RDATA_13_UNCONNECTED[31:0]),
        .Dbg_RDATA_14(NLW_U0_Dbg_RDATA_14_UNCONNECTED[31:0]),
        .Dbg_RDATA_15(NLW_U0_Dbg_RDATA_15_UNCONNECTED[31:0]),
        .Dbg_RDATA_16(NLW_U0_Dbg_RDATA_16_UNCONNECTED[31:0]),
        .Dbg_RDATA_17(NLW_U0_Dbg_RDATA_17_UNCONNECTED[31:0]),
        .Dbg_RDATA_18(NLW_U0_Dbg_RDATA_18_UNCONNECTED[31:0]),
        .Dbg_RDATA_19(NLW_U0_Dbg_RDATA_19_UNCONNECTED[31:0]),
        .Dbg_RDATA_2(NLW_U0_Dbg_RDATA_2_UNCONNECTED[31:0]),
        .Dbg_RDATA_20(NLW_U0_Dbg_RDATA_20_UNCONNECTED[31:0]),
        .Dbg_RDATA_21(NLW_U0_Dbg_RDATA_21_UNCONNECTED[31:0]),
        .Dbg_RDATA_22(NLW_U0_Dbg_RDATA_22_UNCONNECTED[31:0]),
        .Dbg_RDATA_23(NLW_U0_Dbg_RDATA_23_UNCONNECTED[31:0]),
        .Dbg_RDATA_24(NLW_U0_Dbg_RDATA_24_UNCONNECTED[31:0]),
        .Dbg_RDATA_25(NLW_U0_Dbg_RDATA_25_UNCONNECTED[31:0]),
        .Dbg_RDATA_26(NLW_U0_Dbg_RDATA_26_UNCONNECTED[31:0]),
        .Dbg_RDATA_27(NLW_U0_Dbg_RDATA_27_UNCONNECTED[31:0]),
        .Dbg_RDATA_28(NLW_U0_Dbg_RDATA_28_UNCONNECTED[31:0]),
        .Dbg_RDATA_29(NLW_U0_Dbg_RDATA_29_UNCONNECTED[31:0]),
        .Dbg_RDATA_3(NLW_U0_Dbg_RDATA_3_UNCONNECTED[31:0]),
        .Dbg_RDATA_30(NLW_U0_Dbg_RDATA_30_UNCONNECTED[31:0]),
        .Dbg_RDATA_31(NLW_U0_Dbg_RDATA_31_UNCONNECTED[31:0]),
        .Dbg_RDATA_4(NLW_U0_Dbg_RDATA_4_UNCONNECTED[31:0]),
        .Dbg_RDATA_5(NLW_U0_Dbg_RDATA_5_UNCONNECTED[31:0]),
        .Dbg_RDATA_6(NLW_U0_Dbg_RDATA_6_UNCONNECTED[31:0]),
        .Dbg_RDATA_7(NLW_U0_Dbg_RDATA_7_UNCONNECTED[31:0]),
        .Dbg_RDATA_8(NLW_U0_Dbg_RDATA_8_UNCONNECTED[31:0]),
        .Dbg_RDATA_9(NLW_U0_Dbg_RDATA_9_UNCONNECTED[31:0]),
        .Dbg_RREADY_0(NLW_U0_Dbg_RREADY_0_UNCONNECTED),
        .Dbg_RREADY_1(NLW_U0_Dbg_RREADY_1_UNCONNECTED),
        .Dbg_RREADY_10(NLW_U0_Dbg_RREADY_10_UNCONNECTED),
        .Dbg_RREADY_11(NLW_U0_Dbg_RREADY_11_UNCONNECTED),
        .Dbg_RREADY_12(NLW_U0_Dbg_RREADY_12_UNCONNECTED),
        .Dbg_RREADY_13(NLW_U0_Dbg_RREADY_13_UNCONNECTED),
        .Dbg_RREADY_14(NLW_U0_Dbg_RREADY_14_UNCONNECTED),
        .Dbg_RREADY_15(NLW_U0_Dbg_RREADY_15_UNCONNECTED),
        .Dbg_RREADY_16(NLW_U0_Dbg_RREADY_16_UNCONNECTED),
        .Dbg_RREADY_17(NLW_U0_Dbg_RREADY_17_UNCONNECTED),
        .Dbg_RREADY_18(NLW_U0_Dbg_RREADY_18_UNCONNECTED),
        .Dbg_RREADY_19(NLW_U0_Dbg_RREADY_19_UNCONNECTED),
        .Dbg_RREADY_2(NLW_U0_Dbg_RREADY_2_UNCONNECTED),
        .Dbg_RREADY_20(NLW_U0_Dbg_RREADY_20_UNCONNECTED),
        .Dbg_RREADY_21(NLW_U0_Dbg_RREADY_21_UNCONNECTED),
        .Dbg_RREADY_22(NLW_U0_Dbg_RREADY_22_UNCONNECTED),
        .Dbg_RREADY_23(NLW_U0_Dbg_RREADY_23_UNCONNECTED),
        .Dbg_RREADY_24(NLW_U0_Dbg_RREADY_24_UNCONNECTED),
        .Dbg_RREADY_25(NLW_U0_Dbg_RREADY_25_UNCONNECTED),
        .Dbg_RREADY_26(NLW_U0_Dbg_RREADY_26_UNCONNECTED),
        .Dbg_RREADY_27(NLW_U0_Dbg_RREADY_27_UNCONNECTED),
        .Dbg_RREADY_28(NLW_U0_Dbg_RREADY_28_UNCONNECTED),
        .Dbg_RREADY_29(NLW_U0_Dbg_RREADY_29_UNCONNECTED),
        .Dbg_RREADY_3(NLW_U0_Dbg_RREADY_3_UNCONNECTED),
        .Dbg_RREADY_30(NLW_U0_Dbg_RREADY_30_UNCONNECTED),
        .Dbg_RREADY_31(NLW_U0_Dbg_RREADY_31_UNCONNECTED),
        .Dbg_RREADY_4(NLW_U0_Dbg_RREADY_4_UNCONNECTED),
        .Dbg_RREADY_5(NLW_U0_Dbg_RREADY_5_UNCONNECTED),
        .Dbg_RREADY_6(NLW_U0_Dbg_RREADY_6_UNCONNECTED),
        .Dbg_RREADY_7(NLW_U0_Dbg_RREADY_7_UNCONNECTED),
        .Dbg_RREADY_8(NLW_U0_Dbg_RREADY_8_UNCONNECTED),
        .Dbg_RREADY_9(NLW_U0_Dbg_RREADY_9_UNCONNECTED),
        .Dbg_RRESP_0(NLW_U0_Dbg_RRESP_0_UNCONNECTED[1:0]),
        .Dbg_RRESP_1(NLW_U0_Dbg_RRESP_1_UNCONNECTED[1:0]),
        .Dbg_RRESP_10(NLW_U0_Dbg_RRESP_10_UNCONNECTED[1:0]),
        .Dbg_RRESP_11(NLW_U0_Dbg_RRESP_11_UNCONNECTED[1:0]),
        .Dbg_RRESP_12(NLW_U0_Dbg_RRESP_12_UNCONNECTED[1:0]),
        .Dbg_RRESP_13(NLW_U0_Dbg_RRESP_13_UNCONNECTED[1:0]),
        .Dbg_RRESP_14(NLW_U0_Dbg_RRESP_14_UNCONNECTED[1:0]),
        .Dbg_RRESP_15(NLW_U0_Dbg_RRESP_15_UNCONNECTED[1:0]),
        .Dbg_RRESP_16(NLW_U0_Dbg_RRESP_16_UNCONNECTED[1:0]),
        .Dbg_RRESP_17(NLW_U0_Dbg_RRESP_17_UNCONNECTED[1:0]),
        .Dbg_RRESP_18(NLW_U0_Dbg_RRESP_18_UNCONNECTED[1:0]),
        .Dbg_RRESP_19(NLW_U0_Dbg_RRESP_19_UNCONNECTED[1:0]),
        .Dbg_RRESP_2(NLW_U0_Dbg_RRESP_2_UNCONNECTED[1:0]),
        .Dbg_RRESP_20(NLW_U0_Dbg_RRESP_20_UNCONNECTED[1:0]),
        .Dbg_RRESP_21(NLW_U0_Dbg_RRESP_21_UNCONNECTED[1:0]),
        .Dbg_RRESP_22(NLW_U0_Dbg_RRESP_22_UNCONNECTED[1:0]),
        .Dbg_RRESP_23(NLW_U0_Dbg_RRESP_23_UNCONNECTED[1:0]),
        .Dbg_RRESP_24(NLW_U0_Dbg_RRESP_24_UNCONNECTED[1:0]),
        .Dbg_RRESP_25(NLW_U0_Dbg_RRESP_25_UNCONNECTED[1:0]),
        .Dbg_RRESP_26(NLW_U0_Dbg_RRESP_26_UNCONNECTED[1:0]),
        .Dbg_RRESP_27(NLW_U0_Dbg_RRESP_27_UNCONNECTED[1:0]),
        .Dbg_RRESP_28(NLW_U0_Dbg_RRESP_28_UNCONNECTED[1:0]),
        .Dbg_RRESP_29(NLW_U0_Dbg_RRESP_29_UNCONNECTED[1:0]),
        .Dbg_RRESP_3(NLW_U0_Dbg_RRESP_3_UNCONNECTED[1:0]),
        .Dbg_RRESP_30(NLW_U0_Dbg_RRESP_30_UNCONNECTED[1:0]),
        .Dbg_RRESP_31(NLW_U0_Dbg_RRESP_31_UNCONNECTED[1:0]),
        .Dbg_RRESP_4(NLW_U0_Dbg_RRESP_4_UNCONNECTED[1:0]),
        .Dbg_RRESP_5(NLW_U0_Dbg_RRESP_5_UNCONNECTED[1:0]),
        .Dbg_RRESP_6(NLW_U0_Dbg_RRESP_6_UNCONNECTED[1:0]),
        .Dbg_RRESP_7(NLW_U0_Dbg_RRESP_7_UNCONNECTED[1:0]),
        .Dbg_RRESP_8(NLW_U0_Dbg_RRESP_8_UNCONNECTED[1:0]),
        .Dbg_RRESP_9(NLW_U0_Dbg_RRESP_9_UNCONNECTED[1:0]),
        .Dbg_RVALID_0(NLW_U0_Dbg_RVALID_0_UNCONNECTED),
        .Dbg_RVALID_1(NLW_U0_Dbg_RVALID_1_UNCONNECTED),
        .Dbg_RVALID_10(NLW_U0_Dbg_RVALID_10_UNCONNECTED),
        .Dbg_RVALID_11(NLW_U0_Dbg_RVALID_11_UNCONNECTED),
        .Dbg_RVALID_12(NLW_U0_Dbg_RVALID_12_UNCONNECTED),
        .Dbg_RVALID_13(NLW_U0_Dbg_RVALID_13_UNCONNECTED),
        .Dbg_RVALID_14(NLW_U0_Dbg_RVALID_14_UNCONNECTED),
        .Dbg_RVALID_15(NLW_U0_Dbg_RVALID_15_UNCONNECTED),
        .Dbg_RVALID_16(NLW_U0_Dbg_RVALID_16_UNCONNECTED),
        .Dbg_RVALID_17(NLW_U0_Dbg_RVALID_17_UNCONNECTED),
        .Dbg_RVALID_18(NLW_U0_Dbg_RVALID_18_UNCONNECTED),
        .Dbg_RVALID_19(NLW_U0_Dbg_RVALID_19_UNCONNECTED),
        .Dbg_RVALID_2(NLW_U0_Dbg_RVALID_2_UNCONNECTED),
        .Dbg_RVALID_20(NLW_U0_Dbg_RVALID_20_UNCONNECTED),
        .Dbg_RVALID_21(NLW_U0_Dbg_RVALID_21_UNCONNECTED),
        .Dbg_RVALID_22(NLW_U0_Dbg_RVALID_22_UNCONNECTED),
        .Dbg_RVALID_23(NLW_U0_Dbg_RVALID_23_UNCONNECTED),
        .Dbg_RVALID_24(NLW_U0_Dbg_RVALID_24_UNCONNECTED),
        .Dbg_RVALID_25(NLW_U0_Dbg_RVALID_25_UNCONNECTED),
        .Dbg_RVALID_26(NLW_U0_Dbg_RVALID_26_UNCONNECTED),
        .Dbg_RVALID_27(NLW_U0_Dbg_RVALID_27_UNCONNECTED),
        .Dbg_RVALID_28(NLW_U0_Dbg_RVALID_28_UNCONNECTED),
        .Dbg_RVALID_29(NLW_U0_Dbg_RVALID_29_UNCONNECTED),
        .Dbg_RVALID_3(NLW_U0_Dbg_RVALID_3_UNCONNECTED),
        .Dbg_RVALID_30(NLW_U0_Dbg_RVALID_30_UNCONNECTED),
        .Dbg_RVALID_31(NLW_U0_Dbg_RVALID_31_UNCONNECTED),
        .Dbg_RVALID_4(NLW_U0_Dbg_RVALID_4_UNCONNECTED),
        .Dbg_RVALID_5(NLW_U0_Dbg_RVALID_5_UNCONNECTED),
        .Dbg_RVALID_6(NLW_U0_Dbg_RVALID_6_UNCONNECTED),
        .Dbg_RVALID_7(NLW_U0_Dbg_RVALID_7_UNCONNECTED),
        .Dbg_RVALID_8(NLW_U0_Dbg_RVALID_8_UNCONNECTED),
        .Dbg_RVALID_9(NLW_U0_Dbg_RVALID_9_UNCONNECTED),
        .Dbg_Reg_En_0(Dbg_Reg_En_0),
        .Dbg_Reg_En_1(NLW_U0_Dbg_Reg_En_1_UNCONNECTED[0:7]),
        .Dbg_Reg_En_10(NLW_U0_Dbg_Reg_En_10_UNCONNECTED[0:7]),
        .Dbg_Reg_En_11(NLW_U0_Dbg_Reg_En_11_UNCONNECTED[0:7]),
        .Dbg_Reg_En_12(NLW_U0_Dbg_Reg_En_12_UNCONNECTED[0:7]),
        .Dbg_Reg_En_13(NLW_U0_Dbg_Reg_En_13_UNCONNECTED[0:7]),
        .Dbg_Reg_En_14(NLW_U0_Dbg_Reg_En_14_UNCONNECTED[0:7]),
        .Dbg_Reg_En_15(NLW_U0_Dbg_Reg_En_15_UNCONNECTED[0:7]),
        .Dbg_Reg_En_16(NLW_U0_Dbg_Reg_En_16_UNCONNECTED[0:7]),
        .Dbg_Reg_En_17(NLW_U0_Dbg_Reg_En_17_UNCONNECTED[0:7]),
        .Dbg_Reg_En_18(NLW_U0_Dbg_Reg_En_18_UNCONNECTED[0:7]),
        .Dbg_Reg_En_19(NLW_U0_Dbg_Reg_En_19_UNCONNECTED[0:7]),
        .Dbg_Reg_En_2(NLW_U0_Dbg_Reg_En_2_UNCONNECTED[0:7]),
        .Dbg_Reg_En_20(NLW_U0_Dbg_Reg_En_20_UNCONNECTED[0:7]),
        .Dbg_Reg_En_21(NLW_U0_Dbg_Reg_En_21_UNCONNECTED[0:7]),
        .Dbg_Reg_En_22(NLW_U0_Dbg_Reg_En_22_UNCONNECTED[0:7]),
        .Dbg_Reg_En_23(NLW_U0_Dbg_Reg_En_23_UNCONNECTED[0:7]),
        .Dbg_Reg_En_24(NLW_U0_Dbg_Reg_En_24_UNCONNECTED[0:7]),
        .Dbg_Reg_En_25(NLW_U0_Dbg_Reg_En_25_UNCONNECTED[0:7]),
        .Dbg_Reg_En_26(NLW_U0_Dbg_Reg_En_26_UNCONNECTED[0:7]),
        .Dbg_Reg_En_27(NLW_U0_Dbg_Reg_En_27_UNCONNECTED[0:7]),
        .Dbg_Reg_En_28(NLW_U0_Dbg_Reg_En_28_UNCONNECTED[0:7]),
        .Dbg_Reg_En_29(NLW_U0_Dbg_Reg_En_29_UNCONNECTED[0:7]),
        .Dbg_Reg_En_3(NLW_U0_Dbg_Reg_En_3_UNCONNECTED[0:7]),
        .Dbg_Reg_En_30(NLW_U0_Dbg_Reg_En_30_UNCONNECTED[0:7]),
        .Dbg_Reg_En_31(NLW_U0_Dbg_Reg_En_31_UNCONNECTED[0:7]),
        .Dbg_Reg_En_4(NLW_U0_Dbg_Reg_En_4_UNCONNECTED[0:7]),
        .Dbg_Reg_En_5(NLW_U0_Dbg_Reg_En_5_UNCONNECTED[0:7]),
        .Dbg_Reg_En_6(NLW_U0_Dbg_Reg_En_6_UNCONNECTED[0:7]),
        .Dbg_Reg_En_7(NLW_U0_Dbg_Reg_En_7_UNCONNECTED[0:7]),
        .Dbg_Reg_En_8(NLW_U0_Dbg_Reg_En_8_UNCONNECTED[0:7]),
        .Dbg_Reg_En_9(NLW_U0_Dbg_Reg_En_9_UNCONNECTED[0:7]),
        .Dbg_Rst_0(Dbg_Rst_0),
        .Dbg_Rst_1(NLW_U0_Dbg_Rst_1_UNCONNECTED),
        .Dbg_Rst_10(NLW_U0_Dbg_Rst_10_UNCONNECTED),
        .Dbg_Rst_11(NLW_U0_Dbg_Rst_11_UNCONNECTED),
        .Dbg_Rst_12(NLW_U0_Dbg_Rst_12_UNCONNECTED),
        .Dbg_Rst_13(NLW_U0_Dbg_Rst_13_UNCONNECTED),
        .Dbg_Rst_14(NLW_U0_Dbg_Rst_14_UNCONNECTED),
        .Dbg_Rst_15(NLW_U0_Dbg_Rst_15_UNCONNECTED),
        .Dbg_Rst_16(NLW_U0_Dbg_Rst_16_UNCONNECTED),
        .Dbg_Rst_17(NLW_U0_Dbg_Rst_17_UNCONNECTED),
        .Dbg_Rst_18(NLW_U0_Dbg_Rst_18_UNCONNECTED),
        .Dbg_Rst_19(NLW_U0_Dbg_Rst_19_UNCONNECTED),
        .Dbg_Rst_2(NLW_U0_Dbg_Rst_2_UNCONNECTED),
        .Dbg_Rst_20(NLW_U0_Dbg_Rst_20_UNCONNECTED),
        .Dbg_Rst_21(NLW_U0_Dbg_Rst_21_UNCONNECTED),
        .Dbg_Rst_22(NLW_U0_Dbg_Rst_22_UNCONNECTED),
        .Dbg_Rst_23(NLW_U0_Dbg_Rst_23_UNCONNECTED),
        .Dbg_Rst_24(NLW_U0_Dbg_Rst_24_UNCONNECTED),
        .Dbg_Rst_25(NLW_U0_Dbg_Rst_25_UNCONNECTED),
        .Dbg_Rst_26(NLW_U0_Dbg_Rst_26_UNCONNECTED),
        .Dbg_Rst_27(NLW_U0_Dbg_Rst_27_UNCONNECTED),
        .Dbg_Rst_28(NLW_U0_Dbg_Rst_28_UNCONNECTED),
        .Dbg_Rst_29(NLW_U0_Dbg_Rst_29_UNCONNECTED),
        .Dbg_Rst_3(NLW_U0_Dbg_Rst_3_UNCONNECTED),
        .Dbg_Rst_30(NLW_U0_Dbg_Rst_30_UNCONNECTED),
        .Dbg_Rst_31(NLW_U0_Dbg_Rst_31_UNCONNECTED),
        .Dbg_Rst_4(NLW_U0_Dbg_Rst_4_UNCONNECTED),
        .Dbg_Rst_5(NLW_U0_Dbg_Rst_5_UNCONNECTED),
        .Dbg_Rst_6(NLW_U0_Dbg_Rst_6_UNCONNECTED),
        .Dbg_Rst_7(NLW_U0_Dbg_Rst_7_UNCONNECTED),
        .Dbg_Rst_8(NLW_U0_Dbg_Rst_8_UNCONNECTED),
        .Dbg_Rst_9(NLW_U0_Dbg_Rst_9_UNCONNECTED),
        .Dbg_Shift_0(Dbg_Shift_0),
        .Dbg_Shift_1(NLW_U0_Dbg_Shift_1_UNCONNECTED),
        .Dbg_Shift_10(NLW_U0_Dbg_Shift_10_UNCONNECTED),
        .Dbg_Shift_11(NLW_U0_Dbg_Shift_11_UNCONNECTED),
        .Dbg_Shift_12(NLW_U0_Dbg_Shift_12_UNCONNECTED),
        .Dbg_Shift_13(NLW_U0_Dbg_Shift_13_UNCONNECTED),
        .Dbg_Shift_14(NLW_U0_Dbg_Shift_14_UNCONNECTED),
        .Dbg_Shift_15(NLW_U0_Dbg_Shift_15_UNCONNECTED),
        .Dbg_Shift_16(NLW_U0_Dbg_Shift_16_UNCONNECTED),
        .Dbg_Shift_17(NLW_U0_Dbg_Shift_17_UNCONNECTED),
        .Dbg_Shift_18(NLW_U0_Dbg_Shift_18_UNCONNECTED),
        .Dbg_Shift_19(NLW_U0_Dbg_Shift_19_UNCONNECTED),
        .Dbg_Shift_2(NLW_U0_Dbg_Shift_2_UNCONNECTED),
        .Dbg_Shift_20(NLW_U0_Dbg_Shift_20_UNCONNECTED),
        .Dbg_Shift_21(NLW_U0_Dbg_Shift_21_UNCONNECTED),
        .Dbg_Shift_22(NLW_U0_Dbg_Shift_22_UNCONNECTED),
        .Dbg_Shift_23(NLW_U0_Dbg_Shift_23_UNCONNECTED),
        .Dbg_Shift_24(NLW_U0_Dbg_Shift_24_UNCONNECTED),
        .Dbg_Shift_25(NLW_U0_Dbg_Shift_25_UNCONNECTED),
        .Dbg_Shift_26(NLW_U0_Dbg_Shift_26_UNCONNECTED),
        .Dbg_Shift_27(NLW_U0_Dbg_Shift_27_UNCONNECTED),
        .Dbg_Shift_28(NLW_U0_Dbg_Shift_28_UNCONNECTED),
        .Dbg_Shift_29(NLW_U0_Dbg_Shift_29_UNCONNECTED),
        .Dbg_Shift_3(NLW_U0_Dbg_Shift_3_UNCONNECTED),
        .Dbg_Shift_30(NLW_U0_Dbg_Shift_30_UNCONNECTED),
        .Dbg_Shift_31(NLW_U0_Dbg_Shift_31_UNCONNECTED),
        .Dbg_Shift_4(NLW_U0_Dbg_Shift_4_UNCONNECTED),
        .Dbg_Shift_5(NLW_U0_Dbg_Shift_5_UNCONNECTED),
        .Dbg_Shift_6(NLW_U0_Dbg_Shift_6_UNCONNECTED),
        .Dbg_Shift_7(NLW_U0_Dbg_Shift_7_UNCONNECTED),
        .Dbg_Shift_8(NLW_U0_Dbg_Shift_8_UNCONNECTED),
        .Dbg_Shift_9(NLW_U0_Dbg_Shift_9_UNCONNECTED),
        .Dbg_TDI_0(Dbg_TDI_0),
        .Dbg_TDI_1(NLW_U0_Dbg_TDI_1_UNCONNECTED),
        .Dbg_TDI_10(NLW_U0_Dbg_TDI_10_UNCONNECTED),
        .Dbg_TDI_11(NLW_U0_Dbg_TDI_11_UNCONNECTED),
        .Dbg_TDI_12(NLW_U0_Dbg_TDI_12_UNCONNECTED),
        .Dbg_TDI_13(NLW_U0_Dbg_TDI_13_UNCONNECTED),
        .Dbg_TDI_14(NLW_U0_Dbg_TDI_14_UNCONNECTED),
        .Dbg_TDI_15(NLW_U0_Dbg_TDI_15_UNCONNECTED),
        .Dbg_TDI_16(NLW_U0_Dbg_TDI_16_UNCONNECTED),
        .Dbg_TDI_17(NLW_U0_Dbg_TDI_17_UNCONNECTED),
        .Dbg_TDI_18(NLW_U0_Dbg_TDI_18_UNCONNECTED),
        .Dbg_TDI_19(NLW_U0_Dbg_TDI_19_UNCONNECTED),
        .Dbg_TDI_2(NLW_U0_Dbg_TDI_2_UNCONNECTED),
        .Dbg_TDI_20(NLW_U0_Dbg_TDI_20_UNCONNECTED),
        .Dbg_TDI_21(NLW_U0_Dbg_TDI_21_UNCONNECTED),
        .Dbg_TDI_22(NLW_U0_Dbg_TDI_22_UNCONNECTED),
        .Dbg_TDI_23(NLW_U0_Dbg_TDI_23_UNCONNECTED),
        .Dbg_TDI_24(NLW_U0_Dbg_TDI_24_UNCONNECTED),
        .Dbg_TDI_25(NLW_U0_Dbg_TDI_25_UNCONNECTED),
        .Dbg_TDI_26(NLW_U0_Dbg_TDI_26_UNCONNECTED),
        .Dbg_TDI_27(NLW_U0_Dbg_TDI_27_UNCONNECTED),
        .Dbg_TDI_28(NLW_U0_Dbg_TDI_28_UNCONNECTED),
        .Dbg_TDI_29(NLW_U0_Dbg_TDI_29_UNCONNECTED),
        .Dbg_TDI_3(NLW_U0_Dbg_TDI_3_UNCONNECTED),
        .Dbg_TDI_30(NLW_U0_Dbg_TDI_30_UNCONNECTED),
        .Dbg_TDI_31(NLW_U0_Dbg_TDI_31_UNCONNECTED),
        .Dbg_TDI_4(NLW_U0_Dbg_TDI_4_UNCONNECTED),
        .Dbg_TDI_5(NLW_U0_Dbg_TDI_5_UNCONNECTED),
        .Dbg_TDI_6(NLW_U0_Dbg_TDI_6_UNCONNECTED),
        .Dbg_TDI_7(NLW_U0_Dbg_TDI_7_UNCONNECTED),
        .Dbg_TDI_8(NLW_U0_Dbg_TDI_8_UNCONNECTED),
        .Dbg_TDI_9(NLW_U0_Dbg_TDI_9_UNCONNECTED),
        .Dbg_TDO_0(Dbg_TDO_0),
        .Dbg_TDO_1(NLW_U0_Dbg_TDO_1_UNCONNECTED),
        .Dbg_TDO_10(NLW_U0_Dbg_TDO_10_UNCONNECTED),
        .Dbg_TDO_11(NLW_U0_Dbg_TDO_11_UNCONNECTED),
        .Dbg_TDO_12(NLW_U0_Dbg_TDO_12_UNCONNECTED),
        .Dbg_TDO_13(NLW_U0_Dbg_TDO_13_UNCONNECTED),
        .Dbg_TDO_14(NLW_U0_Dbg_TDO_14_UNCONNECTED),
        .Dbg_TDO_15(NLW_U0_Dbg_TDO_15_UNCONNECTED),
        .Dbg_TDO_16(NLW_U0_Dbg_TDO_16_UNCONNECTED),
        .Dbg_TDO_17(NLW_U0_Dbg_TDO_17_UNCONNECTED),
        .Dbg_TDO_18(NLW_U0_Dbg_TDO_18_UNCONNECTED),
        .Dbg_TDO_19(NLW_U0_Dbg_TDO_19_UNCONNECTED),
        .Dbg_TDO_2(NLW_U0_Dbg_TDO_2_UNCONNECTED),
        .Dbg_TDO_20(NLW_U0_Dbg_TDO_20_UNCONNECTED),
        .Dbg_TDO_21(NLW_U0_Dbg_TDO_21_UNCONNECTED),
        .Dbg_TDO_22(NLW_U0_Dbg_TDO_22_UNCONNECTED),
        .Dbg_TDO_23(NLW_U0_Dbg_TDO_23_UNCONNECTED),
        .Dbg_TDO_24(NLW_U0_Dbg_TDO_24_UNCONNECTED),
        .Dbg_TDO_25(NLW_U0_Dbg_TDO_25_UNCONNECTED),
        .Dbg_TDO_26(NLW_U0_Dbg_TDO_26_UNCONNECTED),
        .Dbg_TDO_27(NLW_U0_Dbg_TDO_27_UNCONNECTED),
        .Dbg_TDO_28(NLW_U0_Dbg_TDO_28_UNCONNECTED),
        .Dbg_TDO_29(NLW_U0_Dbg_TDO_29_UNCONNECTED),
        .Dbg_TDO_3(NLW_U0_Dbg_TDO_3_UNCONNECTED),
        .Dbg_TDO_30(NLW_U0_Dbg_TDO_30_UNCONNECTED),
        .Dbg_TDO_31(NLW_U0_Dbg_TDO_31_UNCONNECTED),
        .Dbg_TDO_4(NLW_U0_Dbg_TDO_4_UNCONNECTED),
        .Dbg_TDO_5(NLW_U0_Dbg_TDO_5_UNCONNECTED),
        .Dbg_TDO_6(NLW_U0_Dbg_TDO_6_UNCONNECTED),
        .Dbg_TDO_7(NLW_U0_Dbg_TDO_7_UNCONNECTED),
        .Dbg_TDO_8(NLW_U0_Dbg_TDO_8_UNCONNECTED),
        .Dbg_TDO_9(NLW_U0_Dbg_TDO_9_UNCONNECTED),
        .Dbg_TrClk_0(NLW_U0_Dbg_TrClk_0_UNCONNECTED),
        .Dbg_TrClk_1(NLW_U0_Dbg_TrClk_1_UNCONNECTED),
        .Dbg_TrClk_10(NLW_U0_Dbg_TrClk_10_UNCONNECTED),
        .Dbg_TrClk_11(NLW_U0_Dbg_TrClk_11_UNCONNECTED),
        .Dbg_TrClk_12(NLW_U0_Dbg_TrClk_12_UNCONNECTED),
        .Dbg_TrClk_13(NLW_U0_Dbg_TrClk_13_UNCONNECTED),
        .Dbg_TrClk_14(NLW_U0_Dbg_TrClk_14_UNCONNECTED),
        .Dbg_TrClk_15(NLW_U0_Dbg_TrClk_15_UNCONNECTED),
        .Dbg_TrClk_16(NLW_U0_Dbg_TrClk_16_UNCONNECTED),
        .Dbg_TrClk_17(NLW_U0_Dbg_TrClk_17_UNCONNECTED),
        .Dbg_TrClk_18(NLW_U0_Dbg_TrClk_18_UNCONNECTED),
        .Dbg_TrClk_19(NLW_U0_Dbg_TrClk_19_UNCONNECTED),
        .Dbg_TrClk_2(NLW_U0_Dbg_TrClk_2_UNCONNECTED),
        .Dbg_TrClk_20(NLW_U0_Dbg_TrClk_20_UNCONNECTED),
        .Dbg_TrClk_21(NLW_U0_Dbg_TrClk_21_UNCONNECTED),
        .Dbg_TrClk_22(NLW_U0_Dbg_TrClk_22_UNCONNECTED),
        .Dbg_TrClk_23(NLW_U0_Dbg_TrClk_23_UNCONNECTED),
        .Dbg_TrClk_24(NLW_U0_Dbg_TrClk_24_UNCONNECTED),
        .Dbg_TrClk_25(NLW_U0_Dbg_TrClk_25_UNCONNECTED),
        .Dbg_TrClk_26(NLW_U0_Dbg_TrClk_26_UNCONNECTED),
        .Dbg_TrClk_27(NLW_U0_Dbg_TrClk_27_UNCONNECTED),
        .Dbg_TrClk_28(NLW_U0_Dbg_TrClk_28_UNCONNECTED),
        .Dbg_TrClk_29(NLW_U0_Dbg_TrClk_29_UNCONNECTED),
        .Dbg_TrClk_3(NLW_U0_Dbg_TrClk_3_UNCONNECTED),
        .Dbg_TrClk_30(NLW_U0_Dbg_TrClk_30_UNCONNECTED),
        .Dbg_TrClk_31(NLW_U0_Dbg_TrClk_31_UNCONNECTED),
        .Dbg_TrClk_4(NLW_U0_Dbg_TrClk_4_UNCONNECTED),
        .Dbg_TrClk_5(NLW_U0_Dbg_TrClk_5_UNCONNECTED),
        .Dbg_TrClk_6(NLW_U0_Dbg_TrClk_6_UNCONNECTED),
        .Dbg_TrClk_7(NLW_U0_Dbg_TrClk_7_UNCONNECTED),
        .Dbg_TrClk_8(NLW_U0_Dbg_TrClk_8_UNCONNECTED),
        .Dbg_TrClk_9(NLW_U0_Dbg_TrClk_9_UNCONNECTED),
        .Dbg_TrData_0(NLW_U0_Dbg_TrData_0_UNCONNECTED[0:35]),
        .Dbg_TrData_1(NLW_U0_Dbg_TrData_1_UNCONNECTED[0:35]),
        .Dbg_TrData_10(NLW_U0_Dbg_TrData_10_UNCONNECTED[0:35]),
        .Dbg_TrData_11(NLW_U0_Dbg_TrData_11_UNCONNECTED[0:35]),
        .Dbg_TrData_12(NLW_U0_Dbg_TrData_12_UNCONNECTED[0:35]),
        .Dbg_TrData_13(NLW_U0_Dbg_TrData_13_UNCONNECTED[0:35]),
        .Dbg_TrData_14(NLW_U0_Dbg_TrData_14_UNCONNECTED[0:35]),
        .Dbg_TrData_15(NLW_U0_Dbg_TrData_15_UNCONNECTED[0:35]),
        .Dbg_TrData_16(NLW_U0_Dbg_TrData_16_UNCONNECTED[0:35]),
        .Dbg_TrData_17(NLW_U0_Dbg_TrData_17_UNCONNECTED[0:35]),
        .Dbg_TrData_18(NLW_U0_Dbg_TrData_18_UNCONNECTED[0:35]),
        .Dbg_TrData_19(NLW_U0_Dbg_TrData_19_UNCONNECTED[0:35]),
        .Dbg_TrData_2(NLW_U0_Dbg_TrData_2_UNCONNECTED[0:35]),
        .Dbg_TrData_20(NLW_U0_Dbg_TrData_20_UNCONNECTED[0:35]),
        .Dbg_TrData_21(NLW_U0_Dbg_TrData_21_UNCONNECTED[0:35]),
        .Dbg_TrData_22(NLW_U0_Dbg_TrData_22_UNCONNECTED[0:35]),
        .Dbg_TrData_23(NLW_U0_Dbg_TrData_23_UNCONNECTED[0:35]),
        .Dbg_TrData_24(NLW_U0_Dbg_TrData_24_UNCONNECTED[0:35]),
        .Dbg_TrData_25(NLW_U0_Dbg_TrData_25_UNCONNECTED[0:35]),
        .Dbg_TrData_26(NLW_U0_Dbg_TrData_26_UNCONNECTED[0:35]),
        .Dbg_TrData_27(NLW_U0_Dbg_TrData_27_UNCONNECTED[0:35]),
        .Dbg_TrData_28(NLW_U0_Dbg_TrData_28_UNCONNECTED[0:35]),
        .Dbg_TrData_29(NLW_U0_Dbg_TrData_29_UNCONNECTED[0:35]),
        .Dbg_TrData_3(NLW_U0_Dbg_TrData_3_UNCONNECTED[0:35]),
        .Dbg_TrData_30(NLW_U0_Dbg_TrData_30_UNCONNECTED[0:35]),
        .Dbg_TrData_31(NLW_U0_Dbg_TrData_31_UNCONNECTED[0:35]),
        .Dbg_TrData_4(NLW_U0_Dbg_TrData_4_UNCONNECTED[0:35]),
        .Dbg_TrData_5(NLW_U0_Dbg_TrData_5_UNCONNECTED[0:35]),
        .Dbg_TrData_6(NLW_U0_Dbg_TrData_6_UNCONNECTED[0:35]),
        .Dbg_TrData_7(NLW_U0_Dbg_TrData_7_UNCONNECTED[0:35]),
        .Dbg_TrData_8(NLW_U0_Dbg_TrData_8_UNCONNECTED[0:35]),
        .Dbg_TrData_9(NLW_U0_Dbg_TrData_9_UNCONNECTED[0:35]),
        .Dbg_TrReady_0(NLW_U0_Dbg_TrReady_0_UNCONNECTED),
        .Dbg_TrReady_1(NLW_U0_Dbg_TrReady_1_UNCONNECTED),
        .Dbg_TrReady_10(NLW_U0_Dbg_TrReady_10_UNCONNECTED),
        .Dbg_TrReady_11(NLW_U0_Dbg_TrReady_11_UNCONNECTED),
        .Dbg_TrReady_12(NLW_U0_Dbg_TrReady_12_UNCONNECTED),
        .Dbg_TrReady_13(NLW_U0_Dbg_TrReady_13_UNCONNECTED),
        .Dbg_TrReady_14(NLW_U0_Dbg_TrReady_14_UNCONNECTED),
        .Dbg_TrReady_15(NLW_U0_Dbg_TrReady_15_UNCONNECTED),
        .Dbg_TrReady_16(NLW_U0_Dbg_TrReady_16_UNCONNECTED),
        .Dbg_TrReady_17(NLW_U0_Dbg_TrReady_17_UNCONNECTED),
        .Dbg_TrReady_18(NLW_U0_Dbg_TrReady_18_UNCONNECTED),
        .Dbg_TrReady_19(NLW_U0_Dbg_TrReady_19_UNCONNECTED),
        .Dbg_TrReady_2(NLW_U0_Dbg_TrReady_2_UNCONNECTED),
        .Dbg_TrReady_20(NLW_U0_Dbg_TrReady_20_UNCONNECTED),
        .Dbg_TrReady_21(NLW_U0_Dbg_TrReady_21_UNCONNECTED),
        .Dbg_TrReady_22(NLW_U0_Dbg_TrReady_22_UNCONNECTED),
        .Dbg_TrReady_23(NLW_U0_Dbg_TrReady_23_UNCONNECTED),
        .Dbg_TrReady_24(NLW_U0_Dbg_TrReady_24_UNCONNECTED),
        .Dbg_TrReady_25(NLW_U0_Dbg_TrReady_25_UNCONNECTED),
        .Dbg_TrReady_26(NLW_U0_Dbg_TrReady_26_UNCONNECTED),
        .Dbg_TrReady_27(NLW_U0_Dbg_TrReady_27_UNCONNECTED),
        .Dbg_TrReady_28(NLW_U0_Dbg_TrReady_28_UNCONNECTED),
        .Dbg_TrReady_29(NLW_U0_Dbg_TrReady_29_UNCONNECTED),
        .Dbg_TrReady_3(NLW_U0_Dbg_TrReady_3_UNCONNECTED),
        .Dbg_TrReady_30(NLW_U0_Dbg_TrReady_30_UNCONNECTED),
        .Dbg_TrReady_31(NLW_U0_Dbg_TrReady_31_UNCONNECTED),
        .Dbg_TrReady_4(NLW_U0_Dbg_TrReady_4_UNCONNECTED),
        .Dbg_TrReady_5(NLW_U0_Dbg_TrReady_5_UNCONNECTED),
        .Dbg_TrReady_6(NLW_U0_Dbg_TrReady_6_UNCONNECTED),
        .Dbg_TrReady_7(NLW_U0_Dbg_TrReady_7_UNCONNECTED),
        .Dbg_TrReady_8(NLW_U0_Dbg_TrReady_8_UNCONNECTED),
        .Dbg_TrReady_9(NLW_U0_Dbg_TrReady_9_UNCONNECTED),
        .Dbg_TrValid_0(NLW_U0_Dbg_TrValid_0_UNCONNECTED),
        .Dbg_TrValid_1(NLW_U0_Dbg_TrValid_1_UNCONNECTED),
        .Dbg_TrValid_10(NLW_U0_Dbg_TrValid_10_UNCONNECTED),
        .Dbg_TrValid_11(NLW_U0_Dbg_TrValid_11_UNCONNECTED),
        .Dbg_TrValid_12(NLW_U0_Dbg_TrValid_12_UNCONNECTED),
        .Dbg_TrValid_13(NLW_U0_Dbg_TrValid_13_UNCONNECTED),
        .Dbg_TrValid_14(NLW_U0_Dbg_TrValid_14_UNCONNECTED),
        .Dbg_TrValid_15(NLW_U0_Dbg_TrValid_15_UNCONNECTED),
        .Dbg_TrValid_16(NLW_U0_Dbg_TrValid_16_UNCONNECTED),
        .Dbg_TrValid_17(NLW_U0_Dbg_TrValid_17_UNCONNECTED),
        .Dbg_TrValid_18(NLW_U0_Dbg_TrValid_18_UNCONNECTED),
        .Dbg_TrValid_19(NLW_U0_Dbg_TrValid_19_UNCONNECTED),
        .Dbg_TrValid_2(NLW_U0_Dbg_TrValid_2_UNCONNECTED),
        .Dbg_TrValid_20(NLW_U0_Dbg_TrValid_20_UNCONNECTED),
        .Dbg_TrValid_21(NLW_U0_Dbg_TrValid_21_UNCONNECTED),
        .Dbg_TrValid_22(NLW_U0_Dbg_TrValid_22_UNCONNECTED),
        .Dbg_TrValid_23(NLW_U0_Dbg_TrValid_23_UNCONNECTED),
        .Dbg_TrValid_24(NLW_U0_Dbg_TrValid_24_UNCONNECTED),
        .Dbg_TrValid_25(NLW_U0_Dbg_TrValid_25_UNCONNECTED),
        .Dbg_TrValid_26(NLW_U0_Dbg_TrValid_26_UNCONNECTED),
        .Dbg_TrValid_27(NLW_U0_Dbg_TrValid_27_UNCONNECTED),
        .Dbg_TrValid_28(NLW_U0_Dbg_TrValid_28_UNCONNECTED),
        .Dbg_TrValid_29(NLW_U0_Dbg_TrValid_29_UNCONNECTED),
        .Dbg_TrValid_3(NLW_U0_Dbg_TrValid_3_UNCONNECTED),
        .Dbg_TrValid_30(NLW_U0_Dbg_TrValid_30_UNCONNECTED),
        .Dbg_TrValid_31(NLW_U0_Dbg_TrValid_31_UNCONNECTED),
        .Dbg_TrValid_4(NLW_U0_Dbg_TrValid_4_UNCONNECTED),
        .Dbg_TrValid_5(NLW_U0_Dbg_TrValid_5_UNCONNECTED),
        .Dbg_TrValid_6(NLW_U0_Dbg_TrValid_6_UNCONNECTED),
        .Dbg_TrValid_7(NLW_U0_Dbg_TrValid_7_UNCONNECTED),
        .Dbg_TrValid_8(NLW_U0_Dbg_TrValid_8_UNCONNECTED),
        .Dbg_TrValid_9(NLW_U0_Dbg_TrValid_9_UNCONNECTED),
        .Dbg_Trig_Ack_In_0(NLW_U0_Dbg_Trig_Ack_In_0_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_1(NLW_U0_Dbg_Trig_Ack_In_1_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_10(NLW_U0_Dbg_Trig_Ack_In_10_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_11(NLW_U0_Dbg_Trig_Ack_In_11_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_12(NLW_U0_Dbg_Trig_Ack_In_12_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_13(NLW_U0_Dbg_Trig_Ack_In_13_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_14(NLW_U0_Dbg_Trig_Ack_In_14_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_15(NLW_U0_Dbg_Trig_Ack_In_15_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_16(NLW_U0_Dbg_Trig_Ack_In_16_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_17(NLW_U0_Dbg_Trig_Ack_In_17_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_18(NLW_U0_Dbg_Trig_Ack_In_18_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_19(NLW_U0_Dbg_Trig_Ack_In_19_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_2(NLW_U0_Dbg_Trig_Ack_In_2_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_20(NLW_U0_Dbg_Trig_Ack_In_20_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_21(NLW_U0_Dbg_Trig_Ack_In_21_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_22(NLW_U0_Dbg_Trig_Ack_In_22_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_23(NLW_U0_Dbg_Trig_Ack_In_23_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_24(NLW_U0_Dbg_Trig_Ack_In_24_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_25(NLW_U0_Dbg_Trig_Ack_In_25_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_26(NLW_U0_Dbg_Trig_Ack_In_26_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_27(NLW_U0_Dbg_Trig_Ack_In_27_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_28(NLW_U0_Dbg_Trig_Ack_In_28_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_29(NLW_U0_Dbg_Trig_Ack_In_29_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_3(NLW_U0_Dbg_Trig_Ack_In_3_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_30(NLW_U0_Dbg_Trig_Ack_In_30_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_31(NLW_U0_Dbg_Trig_Ack_In_31_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_4(NLW_U0_Dbg_Trig_Ack_In_4_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_5(NLW_U0_Dbg_Trig_Ack_In_5_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_6(NLW_U0_Dbg_Trig_Ack_In_6_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_7(NLW_U0_Dbg_Trig_Ack_In_7_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_8(NLW_U0_Dbg_Trig_Ack_In_8_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_9(NLW_U0_Dbg_Trig_Ack_In_9_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_0(NLW_U0_Dbg_Trig_Ack_Out_0_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_1(NLW_U0_Dbg_Trig_Ack_Out_1_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_10(NLW_U0_Dbg_Trig_Ack_Out_10_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_11(NLW_U0_Dbg_Trig_Ack_Out_11_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_12(NLW_U0_Dbg_Trig_Ack_Out_12_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_13(NLW_U0_Dbg_Trig_Ack_Out_13_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_14(NLW_U0_Dbg_Trig_Ack_Out_14_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_15(NLW_U0_Dbg_Trig_Ack_Out_15_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_16(NLW_U0_Dbg_Trig_Ack_Out_16_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_17(NLW_U0_Dbg_Trig_Ack_Out_17_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_18(NLW_U0_Dbg_Trig_Ack_Out_18_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_19(NLW_U0_Dbg_Trig_Ack_Out_19_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_2(NLW_U0_Dbg_Trig_Ack_Out_2_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_20(NLW_U0_Dbg_Trig_Ack_Out_20_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_21(NLW_U0_Dbg_Trig_Ack_Out_21_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_22(NLW_U0_Dbg_Trig_Ack_Out_22_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_23(NLW_U0_Dbg_Trig_Ack_Out_23_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_24(NLW_U0_Dbg_Trig_Ack_Out_24_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_25(NLW_U0_Dbg_Trig_Ack_Out_25_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_26(NLW_U0_Dbg_Trig_Ack_Out_26_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_27(NLW_U0_Dbg_Trig_Ack_Out_27_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_28(NLW_U0_Dbg_Trig_Ack_Out_28_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_29(NLW_U0_Dbg_Trig_Ack_Out_29_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_3(NLW_U0_Dbg_Trig_Ack_Out_3_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_30(NLW_U0_Dbg_Trig_Ack_Out_30_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_31(NLW_U0_Dbg_Trig_Ack_Out_31_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_4(NLW_U0_Dbg_Trig_Ack_Out_4_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_5(NLW_U0_Dbg_Trig_Ack_Out_5_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_6(NLW_U0_Dbg_Trig_Ack_Out_6_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_7(NLW_U0_Dbg_Trig_Ack_Out_7_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_8(NLW_U0_Dbg_Trig_Ack_Out_8_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_9(NLW_U0_Dbg_Trig_Ack_Out_9_UNCONNECTED[0:7]),
        .Dbg_Trig_In_0(NLW_U0_Dbg_Trig_In_0_UNCONNECTED[0:7]),
        .Dbg_Trig_In_1(NLW_U0_Dbg_Trig_In_1_UNCONNECTED[0:7]),
        .Dbg_Trig_In_10(NLW_U0_Dbg_Trig_In_10_UNCONNECTED[0:7]),
        .Dbg_Trig_In_11(NLW_U0_Dbg_Trig_In_11_UNCONNECTED[0:7]),
        .Dbg_Trig_In_12(NLW_U0_Dbg_Trig_In_12_UNCONNECTED[0:7]),
        .Dbg_Trig_In_13(NLW_U0_Dbg_Trig_In_13_UNCONNECTED[0:7]),
        .Dbg_Trig_In_14(NLW_U0_Dbg_Trig_In_14_UNCONNECTED[0:7]),
        .Dbg_Trig_In_15(NLW_U0_Dbg_Trig_In_15_UNCONNECTED[0:7]),
        .Dbg_Trig_In_16(NLW_U0_Dbg_Trig_In_16_UNCONNECTED[0:7]),
        .Dbg_Trig_In_17(NLW_U0_Dbg_Trig_In_17_UNCONNECTED[0:7]),
        .Dbg_Trig_In_18(NLW_U0_Dbg_Trig_In_18_UNCONNECTED[0:7]),
        .Dbg_Trig_In_19(NLW_U0_Dbg_Trig_In_19_UNCONNECTED[0:7]),
        .Dbg_Trig_In_2(NLW_U0_Dbg_Trig_In_2_UNCONNECTED[0:7]),
        .Dbg_Trig_In_20(NLW_U0_Dbg_Trig_In_20_UNCONNECTED[0:7]),
        .Dbg_Trig_In_21(NLW_U0_Dbg_Trig_In_21_UNCONNECTED[0:7]),
        .Dbg_Trig_In_22(NLW_U0_Dbg_Trig_In_22_UNCONNECTED[0:7]),
        .Dbg_Trig_In_23(NLW_U0_Dbg_Trig_In_23_UNCONNECTED[0:7]),
        .Dbg_Trig_In_24(NLW_U0_Dbg_Trig_In_24_UNCONNECTED[0:7]),
        .Dbg_Trig_In_25(NLW_U0_Dbg_Trig_In_25_UNCONNECTED[0:7]),
        .Dbg_Trig_In_26(NLW_U0_Dbg_Trig_In_26_UNCONNECTED[0:7]),
        .Dbg_Trig_In_27(NLW_U0_Dbg_Trig_In_27_UNCONNECTED[0:7]),
        .Dbg_Trig_In_28(NLW_U0_Dbg_Trig_In_28_UNCONNECTED[0:7]),
        .Dbg_Trig_In_29(NLW_U0_Dbg_Trig_In_29_UNCONNECTED[0:7]),
        .Dbg_Trig_In_3(NLW_U0_Dbg_Trig_In_3_UNCONNECTED[0:7]),
        .Dbg_Trig_In_30(NLW_U0_Dbg_Trig_In_30_UNCONNECTED[0:7]),
        .Dbg_Trig_In_31(NLW_U0_Dbg_Trig_In_31_UNCONNECTED[0:7]),
        .Dbg_Trig_In_4(NLW_U0_Dbg_Trig_In_4_UNCONNECTED[0:7]),
        .Dbg_Trig_In_5(NLW_U0_Dbg_Trig_In_5_UNCONNECTED[0:7]),
        .Dbg_Trig_In_6(NLW_U0_Dbg_Trig_In_6_UNCONNECTED[0:7]),
        .Dbg_Trig_In_7(NLW_U0_Dbg_Trig_In_7_UNCONNECTED[0:7]),
        .Dbg_Trig_In_8(NLW_U0_Dbg_Trig_In_8_UNCONNECTED[0:7]),
        .Dbg_Trig_In_9(NLW_U0_Dbg_Trig_In_9_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_0(NLW_U0_Dbg_Trig_Out_0_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_1(NLW_U0_Dbg_Trig_Out_1_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_10(NLW_U0_Dbg_Trig_Out_10_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_11(NLW_U0_Dbg_Trig_Out_11_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_12(NLW_U0_Dbg_Trig_Out_12_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_13(NLW_U0_Dbg_Trig_Out_13_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_14(NLW_U0_Dbg_Trig_Out_14_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_15(NLW_U0_Dbg_Trig_Out_15_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_16(NLW_U0_Dbg_Trig_Out_16_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_17(NLW_U0_Dbg_Trig_Out_17_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_18(NLW_U0_Dbg_Trig_Out_18_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_19(NLW_U0_Dbg_Trig_Out_19_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_2(NLW_U0_Dbg_Trig_Out_2_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_20(NLW_U0_Dbg_Trig_Out_20_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_21(NLW_U0_Dbg_Trig_Out_21_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_22(NLW_U0_Dbg_Trig_Out_22_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_23(NLW_U0_Dbg_Trig_Out_23_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_24(NLW_U0_Dbg_Trig_Out_24_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_25(NLW_U0_Dbg_Trig_Out_25_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_26(NLW_U0_Dbg_Trig_Out_26_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_27(NLW_U0_Dbg_Trig_Out_27_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_28(NLW_U0_Dbg_Trig_Out_28_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_29(NLW_U0_Dbg_Trig_Out_29_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_3(NLW_U0_Dbg_Trig_Out_3_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_30(NLW_U0_Dbg_Trig_Out_30_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_31(NLW_U0_Dbg_Trig_Out_31_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_4(NLW_U0_Dbg_Trig_Out_4_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_5(NLW_U0_Dbg_Trig_Out_5_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_6(NLW_U0_Dbg_Trig_Out_6_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_7(NLW_U0_Dbg_Trig_Out_7_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_8(NLW_U0_Dbg_Trig_Out_8_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_9(NLW_U0_Dbg_Trig_Out_9_UNCONNECTED[0:7]),
        .Dbg_Update_0(Dbg_Update_0),
        .Dbg_Update_1(NLW_U0_Dbg_Update_1_UNCONNECTED),
        .Dbg_Update_10(NLW_U0_Dbg_Update_10_UNCONNECTED),
        .Dbg_Update_11(NLW_U0_Dbg_Update_11_UNCONNECTED),
        .Dbg_Update_12(NLW_U0_Dbg_Update_12_UNCONNECTED),
        .Dbg_Update_13(NLW_U0_Dbg_Update_13_UNCONNECTED),
        .Dbg_Update_14(NLW_U0_Dbg_Update_14_UNCONNECTED),
        .Dbg_Update_15(NLW_U0_Dbg_Update_15_UNCONNECTED),
        .Dbg_Update_16(NLW_U0_Dbg_Update_16_UNCONNECTED),
        .Dbg_Update_17(NLW_U0_Dbg_Update_17_UNCONNECTED),
        .Dbg_Update_18(NLW_U0_Dbg_Update_18_UNCONNECTED),
        .Dbg_Update_19(NLW_U0_Dbg_Update_19_UNCONNECTED),
        .Dbg_Update_2(NLW_U0_Dbg_Update_2_UNCONNECTED),
        .Dbg_Update_20(NLW_U0_Dbg_Update_20_UNCONNECTED),
        .Dbg_Update_21(NLW_U0_Dbg_Update_21_UNCONNECTED),
        .Dbg_Update_22(NLW_U0_Dbg_Update_22_UNCONNECTED),
        .Dbg_Update_23(NLW_U0_Dbg_Update_23_UNCONNECTED),
        .Dbg_Update_24(NLW_U0_Dbg_Update_24_UNCONNECTED),
        .Dbg_Update_25(NLW_U0_Dbg_Update_25_UNCONNECTED),
        .Dbg_Update_26(NLW_U0_Dbg_Update_26_UNCONNECTED),
        .Dbg_Update_27(NLW_U0_Dbg_Update_27_UNCONNECTED),
        .Dbg_Update_28(NLW_U0_Dbg_Update_28_UNCONNECTED),
        .Dbg_Update_29(NLW_U0_Dbg_Update_29_UNCONNECTED),
        .Dbg_Update_3(NLW_U0_Dbg_Update_3_UNCONNECTED),
        .Dbg_Update_30(NLW_U0_Dbg_Update_30_UNCONNECTED),
        .Dbg_Update_31(NLW_U0_Dbg_Update_31_UNCONNECTED),
        .Dbg_Update_4(NLW_U0_Dbg_Update_4_UNCONNECTED),
        .Dbg_Update_5(NLW_U0_Dbg_Update_5_UNCONNECTED),
        .Dbg_Update_6(NLW_U0_Dbg_Update_6_UNCONNECTED),
        .Dbg_Update_7(NLW_U0_Dbg_Update_7_UNCONNECTED),
        .Dbg_Update_8(NLW_U0_Dbg_Update_8_UNCONNECTED),
        .Dbg_Update_9(NLW_U0_Dbg_Update_9_UNCONNECTED),
        .Dbg_WDATA_0(NLW_U0_Dbg_WDATA_0_UNCONNECTED[31:0]),
        .Dbg_WDATA_1(NLW_U0_Dbg_WDATA_1_UNCONNECTED[31:0]),
        .Dbg_WDATA_10(NLW_U0_Dbg_WDATA_10_UNCONNECTED[31:0]),
        .Dbg_WDATA_11(NLW_U0_Dbg_WDATA_11_UNCONNECTED[31:0]),
        .Dbg_WDATA_12(NLW_U0_Dbg_WDATA_12_UNCONNECTED[31:0]),
        .Dbg_WDATA_13(NLW_U0_Dbg_WDATA_13_UNCONNECTED[31:0]),
        .Dbg_WDATA_14(NLW_U0_Dbg_WDATA_14_UNCONNECTED[31:0]),
        .Dbg_WDATA_15(NLW_U0_Dbg_WDATA_15_UNCONNECTED[31:0]),
        .Dbg_WDATA_16(NLW_U0_Dbg_WDATA_16_UNCONNECTED[31:0]),
        .Dbg_WDATA_17(NLW_U0_Dbg_WDATA_17_UNCONNECTED[31:0]),
        .Dbg_WDATA_18(NLW_U0_Dbg_WDATA_18_UNCONNECTED[31:0]),
        .Dbg_WDATA_19(NLW_U0_Dbg_WDATA_19_UNCONNECTED[31:0]),
        .Dbg_WDATA_2(NLW_U0_Dbg_WDATA_2_UNCONNECTED[31:0]),
        .Dbg_WDATA_20(NLW_U0_Dbg_WDATA_20_UNCONNECTED[31:0]),
        .Dbg_WDATA_21(NLW_U0_Dbg_WDATA_21_UNCONNECTED[31:0]),
        .Dbg_WDATA_22(NLW_U0_Dbg_WDATA_22_UNCONNECTED[31:0]),
        .Dbg_WDATA_23(NLW_U0_Dbg_WDATA_23_UNCONNECTED[31:0]),
        .Dbg_WDATA_24(NLW_U0_Dbg_WDATA_24_UNCONNECTED[31:0]),
        .Dbg_WDATA_25(NLW_U0_Dbg_WDATA_25_UNCONNECTED[31:0]),
        .Dbg_WDATA_26(NLW_U0_Dbg_WDATA_26_UNCONNECTED[31:0]),
        .Dbg_WDATA_27(NLW_U0_Dbg_WDATA_27_UNCONNECTED[31:0]),
        .Dbg_WDATA_28(NLW_U0_Dbg_WDATA_28_UNCONNECTED[31:0]),
        .Dbg_WDATA_29(NLW_U0_Dbg_WDATA_29_UNCONNECTED[31:0]),
        .Dbg_WDATA_3(NLW_U0_Dbg_WDATA_3_UNCONNECTED[31:0]),
        .Dbg_WDATA_30(NLW_U0_Dbg_WDATA_30_UNCONNECTED[31:0]),
        .Dbg_WDATA_31(NLW_U0_Dbg_WDATA_31_UNCONNECTED[31:0]),
        .Dbg_WDATA_4(NLW_U0_Dbg_WDATA_4_UNCONNECTED[31:0]),
        .Dbg_WDATA_5(NLW_U0_Dbg_WDATA_5_UNCONNECTED[31:0]),
        .Dbg_WDATA_6(NLW_U0_Dbg_WDATA_6_UNCONNECTED[31:0]),
        .Dbg_WDATA_7(NLW_U0_Dbg_WDATA_7_UNCONNECTED[31:0]),
        .Dbg_WDATA_8(NLW_U0_Dbg_WDATA_8_UNCONNECTED[31:0]),
        .Dbg_WDATA_9(NLW_U0_Dbg_WDATA_9_UNCONNECTED[31:0]),
        .Dbg_WREADY_0(NLW_U0_Dbg_WREADY_0_UNCONNECTED),
        .Dbg_WREADY_1(NLW_U0_Dbg_WREADY_1_UNCONNECTED),
        .Dbg_WREADY_10(NLW_U0_Dbg_WREADY_10_UNCONNECTED),
        .Dbg_WREADY_11(NLW_U0_Dbg_WREADY_11_UNCONNECTED),
        .Dbg_WREADY_12(NLW_U0_Dbg_WREADY_12_UNCONNECTED),
        .Dbg_WREADY_13(NLW_U0_Dbg_WREADY_13_UNCONNECTED),
        .Dbg_WREADY_14(NLW_U0_Dbg_WREADY_14_UNCONNECTED),
        .Dbg_WREADY_15(NLW_U0_Dbg_WREADY_15_UNCONNECTED),
        .Dbg_WREADY_16(NLW_U0_Dbg_WREADY_16_UNCONNECTED),
        .Dbg_WREADY_17(NLW_U0_Dbg_WREADY_17_UNCONNECTED),
        .Dbg_WREADY_18(NLW_U0_Dbg_WREADY_18_UNCONNECTED),
        .Dbg_WREADY_19(NLW_U0_Dbg_WREADY_19_UNCONNECTED),
        .Dbg_WREADY_2(NLW_U0_Dbg_WREADY_2_UNCONNECTED),
        .Dbg_WREADY_20(NLW_U0_Dbg_WREADY_20_UNCONNECTED),
        .Dbg_WREADY_21(NLW_U0_Dbg_WREADY_21_UNCONNECTED),
        .Dbg_WREADY_22(NLW_U0_Dbg_WREADY_22_UNCONNECTED),
        .Dbg_WREADY_23(NLW_U0_Dbg_WREADY_23_UNCONNECTED),
        .Dbg_WREADY_24(NLW_U0_Dbg_WREADY_24_UNCONNECTED),
        .Dbg_WREADY_25(NLW_U0_Dbg_WREADY_25_UNCONNECTED),
        .Dbg_WREADY_26(NLW_U0_Dbg_WREADY_26_UNCONNECTED),
        .Dbg_WREADY_27(NLW_U0_Dbg_WREADY_27_UNCONNECTED),
        .Dbg_WREADY_28(NLW_U0_Dbg_WREADY_28_UNCONNECTED),
        .Dbg_WREADY_29(NLW_U0_Dbg_WREADY_29_UNCONNECTED),
        .Dbg_WREADY_3(NLW_U0_Dbg_WREADY_3_UNCONNECTED),
        .Dbg_WREADY_30(NLW_U0_Dbg_WREADY_30_UNCONNECTED),
        .Dbg_WREADY_31(NLW_U0_Dbg_WREADY_31_UNCONNECTED),
        .Dbg_WREADY_4(NLW_U0_Dbg_WREADY_4_UNCONNECTED),
        .Dbg_WREADY_5(NLW_U0_Dbg_WREADY_5_UNCONNECTED),
        .Dbg_WREADY_6(NLW_U0_Dbg_WREADY_6_UNCONNECTED),
        .Dbg_WREADY_7(NLW_U0_Dbg_WREADY_7_UNCONNECTED),
        .Dbg_WREADY_8(NLW_U0_Dbg_WREADY_8_UNCONNECTED),
        .Dbg_WREADY_9(NLW_U0_Dbg_WREADY_9_UNCONNECTED),
        .Dbg_WVALID_0(NLW_U0_Dbg_WVALID_0_UNCONNECTED),
        .Dbg_WVALID_1(NLW_U0_Dbg_WVALID_1_UNCONNECTED),
        .Dbg_WVALID_10(NLW_U0_Dbg_WVALID_10_UNCONNECTED),
        .Dbg_WVALID_11(NLW_U0_Dbg_WVALID_11_UNCONNECTED),
        .Dbg_WVALID_12(NLW_U0_Dbg_WVALID_12_UNCONNECTED),
        .Dbg_WVALID_13(NLW_U0_Dbg_WVALID_13_UNCONNECTED),
        .Dbg_WVALID_14(NLW_U0_Dbg_WVALID_14_UNCONNECTED),
        .Dbg_WVALID_15(NLW_U0_Dbg_WVALID_15_UNCONNECTED),
        .Dbg_WVALID_16(NLW_U0_Dbg_WVALID_16_UNCONNECTED),
        .Dbg_WVALID_17(NLW_U0_Dbg_WVALID_17_UNCONNECTED),
        .Dbg_WVALID_18(NLW_U0_Dbg_WVALID_18_UNCONNECTED),
        .Dbg_WVALID_19(NLW_U0_Dbg_WVALID_19_UNCONNECTED),
        .Dbg_WVALID_2(NLW_U0_Dbg_WVALID_2_UNCONNECTED),
        .Dbg_WVALID_20(NLW_U0_Dbg_WVALID_20_UNCONNECTED),
        .Dbg_WVALID_21(NLW_U0_Dbg_WVALID_21_UNCONNECTED),
        .Dbg_WVALID_22(NLW_U0_Dbg_WVALID_22_UNCONNECTED),
        .Dbg_WVALID_23(NLW_U0_Dbg_WVALID_23_UNCONNECTED),
        .Dbg_WVALID_24(NLW_U0_Dbg_WVALID_24_UNCONNECTED),
        .Dbg_WVALID_25(NLW_U0_Dbg_WVALID_25_UNCONNECTED),
        .Dbg_WVALID_26(NLW_U0_Dbg_WVALID_26_UNCONNECTED),
        .Dbg_WVALID_27(NLW_U0_Dbg_WVALID_27_UNCONNECTED),
        .Dbg_WVALID_28(NLW_U0_Dbg_WVALID_28_UNCONNECTED),
        .Dbg_WVALID_29(NLW_U0_Dbg_WVALID_29_UNCONNECTED),
        .Dbg_WVALID_3(NLW_U0_Dbg_WVALID_3_UNCONNECTED),
        .Dbg_WVALID_30(NLW_U0_Dbg_WVALID_30_UNCONNECTED),
        .Dbg_WVALID_31(NLW_U0_Dbg_WVALID_31_UNCONNECTED),
        .Dbg_WVALID_4(NLW_U0_Dbg_WVALID_4_UNCONNECTED),
        .Dbg_WVALID_5(NLW_U0_Dbg_WVALID_5_UNCONNECTED),
        .Dbg_WVALID_6(NLW_U0_Dbg_WVALID_6_UNCONNECTED),
        .Dbg_WVALID_7(NLW_U0_Dbg_WVALID_7_UNCONNECTED),
        .Dbg_WVALID_8(NLW_U0_Dbg_WVALID_8_UNCONNECTED),
        .Dbg_WVALID_9(NLW_U0_Dbg_WVALID_9_UNCONNECTED),
        .Debug_SYS_Rst(Debug_SYS_Rst),
        .Ext_BRK(NLW_U0_Ext_BRK_UNCONNECTED),
        .Ext_JTAG_CAPTURE(NLW_U0_Ext_JTAG_CAPTURE_UNCONNECTED),
        .Ext_JTAG_DRCK(NLW_U0_Ext_JTAG_DRCK_UNCONNECTED),
        .Ext_JTAG_RESET(NLW_U0_Ext_JTAG_RESET_UNCONNECTED),
        .Ext_JTAG_SEL(NLW_U0_Ext_JTAG_SEL_UNCONNECTED),
        .Ext_JTAG_SHIFT(NLW_U0_Ext_JTAG_SHIFT_UNCONNECTED),
        .Ext_JTAG_TDI(NLW_U0_Ext_JTAG_TDI_UNCONNECTED),
        .Ext_JTAG_TDO(NLW_U0_Ext_JTAG_TDO_UNCONNECTED),
        .Ext_JTAG_UPDATE(NLW_U0_Ext_JTAG_UPDATE_UNCONNECTED),
        .Ext_NM_BRK(NLW_U0_Ext_NM_BRK_UNCONNECTED),
        .Interrupt(NLW_U0_Interrupt_UNCONNECTED),
        .LMB_Addr_Strobe_0(NLW_U0_LMB_Addr_Strobe_0_UNCONNECTED),
        .LMB_Addr_Strobe_1(NLW_U0_LMB_Addr_Strobe_1_UNCONNECTED),
        .LMB_Addr_Strobe_10(NLW_U0_LMB_Addr_Strobe_10_UNCONNECTED),
        .LMB_Addr_Strobe_11(NLW_U0_LMB_Addr_Strobe_11_UNCONNECTED),
        .LMB_Addr_Strobe_12(NLW_U0_LMB_Addr_Strobe_12_UNCONNECTED),
        .LMB_Addr_Strobe_13(NLW_U0_LMB_Addr_Strobe_13_UNCONNECTED),
        .LMB_Addr_Strobe_14(NLW_U0_LMB_Addr_Strobe_14_UNCONNECTED),
        .LMB_Addr_Strobe_15(NLW_U0_LMB_Addr_Strobe_15_UNCONNECTED),
        .LMB_Addr_Strobe_16(NLW_U0_LMB_Addr_Strobe_16_UNCONNECTED),
        .LMB_Addr_Strobe_17(NLW_U0_LMB_Addr_Strobe_17_UNCONNECTED),
        .LMB_Addr_Strobe_18(NLW_U0_LMB_Addr_Strobe_18_UNCONNECTED),
        .LMB_Addr_Strobe_19(NLW_U0_LMB_Addr_Strobe_19_UNCONNECTED),
        .LMB_Addr_Strobe_2(NLW_U0_LMB_Addr_Strobe_2_UNCONNECTED),
        .LMB_Addr_Strobe_20(NLW_U0_LMB_Addr_Strobe_20_UNCONNECTED),
        .LMB_Addr_Strobe_21(NLW_U0_LMB_Addr_Strobe_21_UNCONNECTED),
        .LMB_Addr_Strobe_22(NLW_U0_LMB_Addr_Strobe_22_UNCONNECTED),
        .LMB_Addr_Strobe_23(NLW_U0_LMB_Addr_Strobe_23_UNCONNECTED),
        .LMB_Addr_Strobe_24(NLW_U0_LMB_Addr_Strobe_24_UNCONNECTED),
        .LMB_Addr_Strobe_25(NLW_U0_LMB_Addr_Strobe_25_UNCONNECTED),
        .LMB_Addr_Strobe_26(NLW_U0_LMB_Addr_Strobe_26_UNCONNECTED),
        .LMB_Addr_Strobe_27(NLW_U0_LMB_Addr_Strobe_27_UNCONNECTED),
        .LMB_Addr_Strobe_28(NLW_U0_LMB_Addr_Strobe_28_UNCONNECTED),
        .LMB_Addr_Strobe_29(NLW_U0_LMB_Addr_Strobe_29_UNCONNECTED),
        .LMB_Addr_Strobe_3(NLW_U0_LMB_Addr_Strobe_3_UNCONNECTED),
        .LMB_Addr_Strobe_30(NLW_U0_LMB_Addr_Strobe_30_UNCONNECTED),
        .LMB_Addr_Strobe_31(NLW_U0_LMB_Addr_Strobe_31_UNCONNECTED),
        .LMB_Addr_Strobe_4(NLW_U0_LMB_Addr_Strobe_4_UNCONNECTED),
        .LMB_Addr_Strobe_5(NLW_U0_LMB_Addr_Strobe_5_UNCONNECTED),
        .LMB_Addr_Strobe_6(NLW_U0_LMB_Addr_Strobe_6_UNCONNECTED),
        .LMB_Addr_Strobe_7(NLW_U0_LMB_Addr_Strobe_7_UNCONNECTED),
        .LMB_Addr_Strobe_8(NLW_U0_LMB_Addr_Strobe_8_UNCONNECTED),
        .LMB_Addr_Strobe_9(NLW_U0_LMB_Addr_Strobe_9_UNCONNECTED),
        .LMB_Byte_Enable_0(NLW_U0_LMB_Byte_Enable_0_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_1(NLW_U0_LMB_Byte_Enable_1_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_10(NLW_U0_LMB_Byte_Enable_10_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_11(NLW_U0_LMB_Byte_Enable_11_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_12(NLW_U0_LMB_Byte_Enable_12_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_13(NLW_U0_LMB_Byte_Enable_13_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_14(NLW_U0_LMB_Byte_Enable_14_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_15(NLW_U0_LMB_Byte_Enable_15_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_16(NLW_U0_LMB_Byte_Enable_16_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_17(NLW_U0_LMB_Byte_Enable_17_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_18(NLW_U0_LMB_Byte_Enable_18_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_19(NLW_U0_LMB_Byte_Enable_19_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_2(NLW_U0_LMB_Byte_Enable_2_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_20(NLW_U0_LMB_Byte_Enable_20_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_21(NLW_U0_LMB_Byte_Enable_21_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_22(NLW_U0_LMB_Byte_Enable_22_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_23(NLW_U0_LMB_Byte_Enable_23_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_24(NLW_U0_LMB_Byte_Enable_24_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_25(NLW_U0_LMB_Byte_Enable_25_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_26(NLW_U0_LMB_Byte_Enable_26_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_27(NLW_U0_LMB_Byte_Enable_27_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_28(NLW_U0_LMB_Byte_Enable_28_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_29(NLW_U0_LMB_Byte_Enable_29_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_3(NLW_U0_LMB_Byte_Enable_3_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_30(NLW_U0_LMB_Byte_Enable_30_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_31(NLW_U0_LMB_Byte_Enable_31_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_4(NLW_U0_LMB_Byte_Enable_4_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_5(NLW_U0_LMB_Byte_Enable_5_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_6(NLW_U0_LMB_Byte_Enable_6_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_7(NLW_U0_LMB_Byte_Enable_7_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_8(NLW_U0_LMB_Byte_Enable_8_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_9(NLW_U0_LMB_Byte_Enable_9_UNCONNECTED[0:3]),
        .LMB_CE_0(NLW_U0_LMB_CE_0_UNCONNECTED),
        .LMB_CE_1(NLW_U0_LMB_CE_1_UNCONNECTED),
        .LMB_CE_10(NLW_U0_LMB_CE_10_UNCONNECTED),
        .LMB_CE_11(NLW_U0_LMB_CE_11_UNCONNECTED),
        .LMB_CE_12(NLW_U0_LMB_CE_12_UNCONNECTED),
        .LMB_CE_13(NLW_U0_LMB_CE_13_UNCONNECTED),
        .LMB_CE_14(NLW_U0_LMB_CE_14_UNCONNECTED),
        .LMB_CE_15(NLW_U0_LMB_CE_15_UNCONNECTED),
        .LMB_CE_16(NLW_U0_LMB_CE_16_UNCONNECTED),
        .LMB_CE_17(NLW_U0_LMB_CE_17_UNCONNECTED),
        .LMB_CE_18(NLW_U0_LMB_CE_18_UNCONNECTED),
        .LMB_CE_19(NLW_U0_LMB_CE_19_UNCONNECTED),
        .LMB_CE_2(NLW_U0_LMB_CE_2_UNCONNECTED),
        .LMB_CE_20(NLW_U0_LMB_CE_20_UNCONNECTED),
        .LMB_CE_21(NLW_U0_LMB_CE_21_UNCONNECTED),
        .LMB_CE_22(NLW_U0_LMB_CE_22_UNCONNECTED),
        .LMB_CE_23(NLW_U0_LMB_CE_23_UNCONNECTED),
        .LMB_CE_24(NLW_U0_LMB_CE_24_UNCONNECTED),
        .LMB_CE_25(NLW_U0_LMB_CE_25_UNCONNECTED),
        .LMB_CE_26(NLW_U0_LMB_CE_26_UNCONNECTED),
        .LMB_CE_27(NLW_U0_LMB_CE_27_UNCONNECTED),
        .LMB_CE_28(NLW_U0_LMB_CE_28_UNCONNECTED),
        .LMB_CE_29(NLW_U0_LMB_CE_29_UNCONNECTED),
        .LMB_CE_3(NLW_U0_LMB_CE_3_UNCONNECTED),
        .LMB_CE_30(NLW_U0_LMB_CE_30_UNCONNECTED),
        .LMB_CE_31(NLW_U0_LMB_CE_31_UNCONNECTED),
        .LMB_CE_4(NLW_U0_LMB_CE_4_UNCONNECTED),
        .LMB_CE_5(NLW_U0_LMB_CE_5_UNCONNECTED),
        .LMB_CE_6(NLW_U0_LMB_CE_6_UNCONNECTED),
        .LMB_CE_7(NLW_U0_LMB_CE_7_UNCONNECTED),
        .LMB_CE_8(NLW_U0_LMB_CE_8_UNCONNECTED),
        .LMB_CE_9(NLW_U0_LMB_CE_9_UNCONNECTED),
        .LMB_Data_Addr_0(NLW_U0_LMB_Data_Addr_0_UNCONNECTED[0:31]),
        .LMB_Data_Addr_1(NLW_U0_LMB_Data_Addr_1_UNCONNECTED[0:31]),
        .LMB_Data_Addr_10(NLW_U0_LMB_Data_Addr_10_UNCONNECTED[0:31]),
        .LMB_Data_Addr_11(NLW_U0_LMB_Data_Addr_11_UNCONNECTED[0:31]),
        .LMB_Data_Addr_12(NLW_U0_LMB_Data_Addr_12_UNCONNECTED[0:31]),
        .LMB_Data_Addr_13(NLW_U0_LMB_Data_Addr_13_UNCONNECTED[0:31]),
        .LMB_Data_Addr_14(NLW_U0_LMB_Data_Addr_14_UNCONNECTED[0:31]),
        .LMB_Data_Addr_15(NLW_U0_LMB_Data_Addr_15_UNCONNECTED[0:31]),
        .LMB_Data_Addr_16(NLW_U0_LMB_Data_Addr_16_UNCONNECTED[0:31]),
        .LMB_Data_Addr_17(NLW_U0_LMB_Data_Addr_17_UNCONNECTED[0:31]),
        .LMB_Data_Addr_18(NLW_U0_LMB_Data_Addr_18_UNCONNECTED[0:31]),
        .LMB_Data_Addr_19(NLW_U0_LMB_Data_Addr_19_UNCONNECTED[0:31]),
        .LMB_Data_Addr_2(NLW_U0_LMB_Data_Addr_2_UNCONNECTED[0:31]),
        .LMB_Data_Addr_20(NLW_U0_LMB_Data_Addr_20_UNCONNECTED[0:31]),
        .LMB_Data_Addr_21(NLW_U0_LMB_Data_Addr_21_UNCONNECTED[0:31]),
        .LMB_Data_Addr_22(NLW_U0_LMB_Data_Addr_22_UNCONNECTED[0:31]),
        .LMB_Data_Addr_23(NLW_U0_LMB_Data_Addr_23_UNCONNECTED[0:31]),
        .LMB_Data_Addr_24(NLW_U0_LMB_Data_Addr_24_UNCONNECTED[0:31]),
        .LMB_Data_Addr_25(NLW_U0_LMB_Data_Addr_25_UNCONNECTED[0:31]),
        .LMB_Data_Addr_26(NLW_U0_LMB_Data_Addr_26_UNCONNECTED[0:31]),
        .LMB_Data_Addr_27(NLW_U0_LMB_Data_Addr_27_UNCONNECTED[0:31]),
        .LMB_Data_Addr_28(NLW_U0_LMB_Data_Addr_28_UNCONNECTED[0:31]),
        .LMB_Data_Addr_29(NLW_U0_LMB_Data_Addr_29_UNCONNECTED[0:31]),
        .LMB_Data_Addr_3(NLW_U0_LMB_Data_Addr_3_UNCONNECTED[0:31]),
        .LMB_Data_Addr_30(NLW_U0_LMB_Data_Addr_30_UNCONNECTED[0:31]),
        .LMB_Data_Addr_31(NLW_U0_LMB_Data_Addr_31_UNCONNECTED[0:31]),
        .LMB_Data_Addr_4(NLW_U0_LMB_Data_Addr_4_UNCONNECTED[0:31]),
        .LMB_Data_Addr_5(NLW_U0_LMB_Data_Addr_5_UNCONNECTED[0:31]),
        .LMB_Data_Addr_6(NLW_U0_LMB_Data_Addr_6_UNCONNECTED[0:31]),
        .LMB_Data_Addr_7(NLW_U0_LMB_Data_Addr_7_UNCONNECTED[0:31]),
        .LMB_Data_Addr_8(NLW_U0_LMB_Data_Addr_8_UNCONNECTED[0:31]),
        .LMB_Data_Addr_9(NLW_U0_LMB_Data_Addr_9_UNCONNECTED[0:31]),
        .LMB_Data_Read_0(NLW_U0_LMB_Data_Read_0_UNCONNECTED[0:31]),
        .LMB_Data_Read_1(NLW_U0_LMB_Data_Read_1_UNCONNECTED[0:31]),
        .LMB_Data_Read_10(NLW_U0_LMB_Data_Read_10_UNCONNECTED[0:31]),
        .LMB_Data_Read_11(NLW_U0_LMB_Data_Read_11_UNCONNECTED[0:31]),
        .LMB_Data_Read_12(NLW_U0_LMB_Data_Read_12_UNCONNECTED[0:31]),
        .LMB_Data_Read_13(NLW_U0_LMB_Data_Read_13_UNCONNECTED[0:31]),
        .LMB_Data_Read_14(NLW_U0_LMB_Data_Read_14_UNCONNECTED[0:31]),
        .LMB_Data_Read_15(NLW_U0_LMB_Data_Read_15_UNCONNECTED[0:31]),
        .LMB_Data_Read_16(NLW_U0_LMB_Data_Read_16_UNCONNECTED[0:31]),
        .LMB_Data_Read_17(NLW_U0_LMB_Data_Read_17_UNCONNECTED[0:31]),
        .LMB_Data_Read_18(NLW_U0_LMB_Data_Read_18_UNCONNECTED[0:31]),
        .LMB_Data_Read_19(NLW_U0_LMB_Data_Read_19_UNCONNECTED[0:31]),
        .LMB_Data_Read_2(NLW_U0_LMB_Data_Read_2_UNCONNECTED[0:31]),
        .LMB_Data_Read_20(NLW_U0_LMB_Data_Read_20_UNCONNECTED[0:31]),
        .LMB_Data_Read_21(NLW_U0_LMB_Data_Read_21_UNCONNECTED[0:31]),
        .LMB_Data_Read_22(NLW_U0_LMB_Data_Read_22_UNCONNECTED[0:31]),
        .LMB_Data_Read_23(NLW_U0_LMB_Data_Read_23_UNCONNECTED[0:31]),
        .LMB_Data_Read_24(NLW_U0_LMB_Data_Read_24_UNCONNECTED[0:31]),
        .LMB_Data_Read_25(NLW_U0_LMB_Data_Read_25_UNCONNECTED[0:31]),
        .LMB_Data_Read_26(NLW_U0_LMB_Data_Read_26_UNCONNECTED[0:31]),
        .LMB_Data_Read_27(NLW_U0_LMB_Data_Read_27_UNCONNECTED[0:31]),
        .LMB_Data_Read_28(NLW_U0_LMB_Data_Read_28_UNCONNECTED[0:31]),
        .LMB_Data_Read_29(NLW_U0_LMB_Data_Read_29_UNCONNECTED[0:31]),
        .LMB_Data_Read_3(NLW_U0_LMB_Data_Read_3_UNCONNECTED[0:31]),
        .LMB_Data_Read_30(NLW_U0_LMB_Data_Read_30_UNCONNECTED[0:31]),
        .LMB_Data_Read_31(NLW_U0_LMB_Data_Read_31_UNCONNECTED[0:31]),
        .LMB_Data_Read_4(NLW_U0_LMB_Data_Read_4_UNCONNECTED[0:31]),
        .LMB_Data_Read_5(NLW_U0_LMB_Data_Read_5_UNCONNECTED[0:31]),
        .LMB_Data_Read_6(NLW_U0_LMB_Data_Read_6_UNCONNECTED[0:31]),
        .LMB_Data_Read_7(NLW_U0_LMB_Data_Read_7_UNCONNECTED[0:31]),
        .LMB_Data_Read_8(NLW_U0_LMB_Data_Read_8_UNCONNECTED[0:31]),
        .LMB_Data_Read_9(NLW_U0_LMB_Data_Read_9_UNCONNECTED[0:31]),
        .LMB_Data_Write_0(NLW_U0_LMB_Data_Write_0_UNCONNECTED[0:31]),
        .LMB_Data_Write_1(NLW_U0_LMB_Data_Write_1_UNCONNECTED[0:31]),
        .LMB_Data_Write_10(NLW_U0_LMB_Data_Write_10_UNCONNECTED[0:31]),
        .LMB_Data_Write_11(NLW_U0_LMB_Data_Write_11_UNCONNECTED[0:31]),
        .LMB_Data_Write_12(NLW_U0_LMB_Data_Write_12_UNCONNECTED[0:31]),
        .LMB_Data_Write_13(NLW_U0_LMB_Data_Write_13_UNCONNECTED[0:31]),
        .LMB_Data_Write_14(NLW_U0_LMB_Data_Write_14_UNCONNECTED[0:31]),
        .LMB_Data_Write_15(NLW_U0_LMB_Data_Write_15_UNCONNECTED[0:31]),
        .LMB_Data_Write_16(NLW_U0_LMB_Data_Write_16_UNCONNECTED[0:31]),
        .LMB_Data_Write_17(NLW_U0_LMB_Data_Write_17_UNCONNECTED[0:31]),
        .LMB_Data_Write_18(NLW_U0_LMB_Data_Write_18_UNCONNECTED[0:31]),
        .LMB_Data_Write_19(NLW_U0_LMB_Data_Write_19_UNCONNECTED[0:31]),
        .LMB_Data_Write_2(NLW_U0_LMB_Data_Write_2_UNCONNECTED[0:31]),
        .LMB_Data_Write_20(NLW_U0_LMB_Data_Write_20_UNCONNECTED[0:31]),
        .LMB_Data_Write_21(NLW_U0_LMB_Data_Write_21_UNCONNECTED[0:31]),
        .LMB_Data_Write_22(NLW_U0_LMB_Data_Write_22_UNCONNECTED[0:31]),
        .LMB_Data_Write_23(NLW_U0_LMB_Data_Write_23_UNCONNECTED[0:31]),
        .LMB_Data_Write_24(NLW_U0_LMB_Data_Write_24_UNCONNECTED[0:31]),
        .LMB_Data_Write_25(NLW_U0_LMB_Data_Write_25_UNCONNECTED[0:31]),
        .LMB_Data_Write_26(NLW_U0_LMB_Data_Write_26_UNCONNECTED[0:31]),
        .LMB_Data_Write_27(NLW_U0_LMB_Data_Write_27_UNCONNECTED[0:31]),
        .LMB_Data_Write_28(NLW_U0_LMB_Data_Write_28_UNCONNECTED[0:31]),
        .LMB_Data_Write_29(NLW_U0_LMB_Data_Write_29_UNCONNECTED[0:31]),
        .LMB_Data_Write_3(NLW_U0_LMB_Data_Write_3_UNCONNECTED[0:31]),
        .LMB_Data_Write_30(NLW_U0_LMB_Data_Write_30_UNCONNECTED[0:31]),
        .LMB_Data_Write_31(NLW_U0_LMB_Data_Write_31_UNCONNECTED[0:31]),
        .LMB_Data_Write_4(NLW_U0_LMB_Data_Write_4_UNCONNECTED[0:31]),
        .LMB_Data_Write_5(NLW_U0_LMB_Data_Write_5_UNCONNECTED[0:31]),
        .LMB_Data_Write_6(NLW_U0_LMB_Data_Write_6_UNCONNECTED[0:31]),
        .LMB_Data_Write_7(NLW_U0_LMB_Data_Write_7_UNCONNECTED[0:31]),
        .LMB_Data_Write_8(NLW_U0_LMB_Data_Write_8_UNCONNECTED[0:31]),
        .LMB_Data_Write_9(NLW_U0_LMB_Data_Write_9_UNCONNECTED[0:31]),
        .LMB_Read_Strobe_0(NLW_U0_LMB_Read_Strobe_0_UNCONNECTED),
        .LMB_Read_Strobe_1(NLW_U0_LMB_Read_Strobe_1_UNCONNECTED),
        .LMB_Read_Strobe_10(NLW_U0_LMB_Read_Strobe_10_UNCONNECTED),
        .LMB_Read_Strobe_11(NLW_U0_LMB_Read_Strobe_11_UNCONNECTED),
        .LMB_Read_Strobe_12(NLW_U0_LMB_Read_Strobe_12_UNCONNECTED),
        .LMB_Read_Strobe_13(NLW_U0_LMB_Read_Strobe_13_UNCONNECTED),
        .LMB_Read_Strobe_14(NLW_U0_LMB_Read_Strobe_14_UNCONNECTED),
        .LMB_Read_Strobe_15(NLW_U0_LMB_Read_Strobe_15_UNCONNECTED),
        .LMB_Read_Strobe_16(NLW_U0_LMB_Read_Strobe_16_UNCONNECTED),
        .LMB_Read_Strobe_17(NLW_U0_LMB_Read_Strobe_17_UNCONNECTED),
        .LMB_Read_Strobe_18(NLW_U0_LMB_Read_Strobe_18_UNCONNECTED),
        .LMB_Read_Strobe_19(NLW_U0_LMB_Read_Strobe_19_UNCONNECTED),
        .LMB_Read_Strobe_2(NLW_U0_LMB_Read_Strobe_2_UNCONNECTED),
        .LMB_Read_Strobe_20(NLW_U0_LMB_Read_Strobe_20_UNCONNECTED),
        .LMB_Read_Strobe_21(NLW_U0_LMB_Read_Strobe_21_UNCONNECTED),
        .LMB_Read_Strobe_22(NLW_U0_LMB_Read_Strobe_22_UNCONNECTED),
        .LMB_Read_Strobe_23(NLW_U0_LMB_Read_Strobe_23_UNCONNECTED),
        .LMB_Read_Strobe_24(NLW_U0_LMB_Read_Strobe_24_UNCONNECTED),
        .LMB_Read_Strobe_25(NLW_U0_LMB_Read_Strobe_25_UNCONNECTED),
        .LMB_Read_Strobe_26(NLW_U0_LMB_Read_Strobe_26_UNCONNECTED),
        .LMB_Read_Strobe_27(NLW_U0_LMB_Read_Strobe_27_UNCONNECTED),
        .LMB_Read_Strobe_28(NLW_U0_LMB_Read_Strobe_28_UNCONNECTED),
        .LMB_Read_Strobe_29(NLW_U0_LMB_Read_Strobe_29_UNCONNECTED),
        .LMB_Read_Strobe_3(NLW_U0_LMB_Read_Strobe_3_UNCONNECTED),
        .LMB_Read_Strobe_30(NLW_U0_LMB_Read_Strobe_30_UNCONNECTED),
        .LMB_Read_Strobe_31(NLW_U0_LMB_Read_Strobe_31_UNCONNECTED),
        .LMB_Read_Strobe_4(NLW_U0_LMB_Read_Strobe_4_UNCONNECTED),
        .LMB_Read_Strobe_5(NLW_U0_LMB_Read_Strobe_5_UNCONNECTED),
        .LMB_Read_Strobe_6(NLW_U0_LMB_Read_Strobe_6_UNCONNECTED),
        .LMB_Read_Strobe_7(NLW_U0_LMB_Read_Strobe_7_UNCONNECTED),
        .LMB_Read_Strobe_8(NLW_U0_LMB_Read_Strobe_8_UNCONNECTED),
        .LMB_Read_Strobe_9(NLW_U0_LMB_Read_Strobe_9_UNCONNECTED),
        .LMB_Ready_0(NLW_U0_LMB_Ready_0_UNCONNECTED),
        .LMB_Ready_1(NLW_U0_LMB_Ready_1_UNCONNECTED),
        .LMB_Ready_10(NLW_U0_LMB_Ready_10_UNCONNECTED),
        .LMB_Ready_11(NLW_U0_LMB_Ready_11_UNCONNECTED),
        .LMB_Ready_12(NLW_U0_LMB_Ready_12_UNCONNECTED),
        .LMB_Ready_13(NLW_U0_LMB_Ready_13_UNCONNECTED),
        .LMB_Ready_14(NLW_U0_LMB_Ready_14_UNCONNECTED),
        .LMB_Ready_15(NLW_U0_LMB_Ready_15_UNCONNECTED),
        .LMB_Ready_16(NLW_U0_LMB_Ready_16_UNCONNECTED),
        .LMB_Ready_17(NLW_U0_LMB_Ready_17_UNCONNECTED),
        .LMB_Ready_18(NLW_U0_LMB_Ready_18_UNCONNECTED),
        .LMB_Ready_19(NLW_U0_LMB_Ready_19_UNCONNECTED),
        .LMB_Ready_2(NLW_U0_LMB_Ready_2_UNCONNECTED),
        .LMB_Ready_20(NLW_U0_LMB_Ready_20_UNCONNECTED),
        .LMB_Ready_21(NLW_U0_LMB_Ready_21_UNCONNECTED),
        .LMB_Ready_22(NLW_U0_LMB_Ready_22_UNCONNECTED),
        .LMB_Ready_23(NLW_U0_LMB_Ready_23_UNCONNECTED),
        .LMB_Ready_24(NLW_U0_LMB_Ready_24_UNCONNECTED),
        .LMB_Ready_25(NLW_U0_LMB_Ready_25_UNCONNECTED),
        .LMB_Ready_26(NLW_U0_LMB_Ready_26_UNCONNECTED),
        .LMB_Ready_27(NLW_U0_LMB_Ready_27_UNCONNECTED),
        .LMB_Ready_28(NLW_U0_LMB_Ready_28_UNCONNECTED),
        .LMB_Ready_29(NLW_U0_LMB_Ready_29_UNCONNECTED),
        .LMB_Ready_3(NLW_U0_LMB_Ready_3_UNCONNECTED),
        .LMB_Ready_30(NLW_U0_LMB_Ready_30_UNCONNECTED),
        .LMB_Ready_31(NLW_U0_LMB_Ready_31_UNCONNECTED),
        .LMB_Ready_4(NLW_U0_LMB_Ready_4_UNCONNECTED),
        .LMB_Ready_5(NLW_U0_LMB_Ready_5_UNCONNECTED),
        .LMB_Ready_6(NLW_U0_LMB_Ready_6_UNCONNECTED),
        .LMB_Ready_7(NLW_U0_LMB_Ready_7_UNCONNECTED),
        .LMB_Ready_8(NLW_U0_LMB_Ready_8_UNCONNECTED),
        .LMB_Ready_9(NLW_U0_LMB_Ready_9_UNCONNECTED),
        .LMB_UE_0(NLW_U0_LMB_UE_0_UNCONNECTED),
        .LMB_UE_1(NLW_U0_LMB_UE_1_UNCONNECTED),
        .LMB_UE_10(NLW_U0_LMB_UE_10_UNCONNECTED),
        .LMB_UE_11(NLW_U0_LMB_UE_11_UNCONNECTED),
        .LMB_UE_12(NLW_U0_LMB_UE_12_UNCONNECTED),
        .LMB_UE_13(NLW_U0_LMB_UE_13_UNCONNECTED),
        .LMB_UE_14(NLW_U0_LMB_UE_14_UNCONNECTED),
        .LMB_UE_15(NLW_U0_LMB_UE_15_UNCONNECTED),
        .LMB_UE_16(NLW_U0_LMB_UE_16_UNCONNECTED),
        .LMB_UE_17(NLW_U0_LMB_UE_17_UNCONNECTED),
        .LMB_UE_18(NLW_U0_LMB_UE_18_UNCONNECTED),
        .LMB_UE_19(NLW_U0_LMB_UE_19_UNCONNECTED),
        .LMB_UE_2(NLW_U0_LMB_UE_2_UNCONNECTED),
        .LMB_UE_20(NLW_U0_LMB_UE_20_UNCONNECTED),
        .LMB_UE_21(NLW_U0_LMB_UE_21_UNCONNECTED),
        .LMB_UE_22(NLW_U0_LMB_UE_22_UNCONNECTED),
        .LMB_UE_23(NLW_U0_LMB_UE_23_UNCONNECTED),
        .LMB_UE_24(NLW_U0_LMB_UE_24_UNCONNECTED),
        .LMB_UE_25(NLW_U0_LMB_UE_25_UNCONNECTED),
        .LMB_UE_26(NLW_U0_LMB_UE_26_UNCONNECTED),
        .LMB_UE_27(NLW_U0_LMB_UE_27_UNCONNECTED),
        .LMB_UE_28(NLW_U0_LMB_UE_28_UNCONNECTED),
        .LMB_UE_29(NLW_U0_LMB_UE_29_UNCONNECTED),
        .LMB_UE_3(NLW_U0_LMB_UE_3_UNCONNECTED),
        .LMB_UE_30(NLW_U0_LMB_UE_30_UNCONNECTED),
        .LMB_UE_31(NLW_U0_LMB_UE_31_UNCONNECTED),
        .LMB_UE_4(NLW_U0_LMB_UE_4_UNCONNECTED),
        .LMB_UE_5(NLW_U0_LMB_UE_5_UNCONNECTED),
        .LMB_UE_6(NLW_U0_LMB_UE_6_UNCONNECTED),
        .LMB_UE_7(NLW_U0_LMB_UE_7_UNCONNECTED),
        .LMB_UE_8(NLW_U0_LMB_UE_8_UNCONNECTED),
        .LMB_UE_9(NLW_U0_LMB_UE_9_UNCONNECTED),
        .LMB_Wait_0(NLW_U0_LMB_Wait_0_UNCONNECTED),
        .LMB_Wait_1(NLW_U0_LMB_Wait_1_UNCONNECTED),
        .LMB_Wait_10(NLW_U0_LMB_Wait_10_UNCONNECTED),
        .LMB_Wait_11(NLW_U0_LMB_Wait_11_UNCONNECTED),
        .LMB_Wait_12(NLW_U0_LMB_Wait_12_UNCONNECTED),
        .LMB_Wait_13(NLW_U0_LMB_Wait_13_UNCONNECTED),
        .LMB_Wait_14(NLW_U0_LMB_Wait_14_UNCONNECTED),
        .LMB_Wait_15(NLW_U0_LMB_Wait_15_UNCONNECTED),
        .LMB_Wait_16(NLW_U0_LMB_Wait_16_UNCONNECTED),
        .LMB_Wait_17(NLW_U0_LMB_Wait_17_UNCONNECTED),
        .LMB_Wait_18(NLW_U0_LMB_Wait_18_UNCONNECTED),
        .LMB_Wait_19(NLW_U0_LMB_Wait_19_UNCONNECTED),
        .LMB_Wait_2(NLW_U0_LMB_Wait_2_UNCONNECTED),
        .LMB_Wait_20(NLW_U0_LMB_Wait_20_UNCONNECTED),
        .LMB_Wait_21(NLW_U0_LMB_Wait_21_UNCONNECTED),
        .LMB_Wait_22(NLW_U0_LMB_Wait_22_UNCONNECTED),
        .LMB_Wait_23(NLW_U0_LMB_Wait_23_UNCONNECTED),
        .LMB_Wait_24(NLW_U0_LMB_Wait_24_UNCONNECTED),
        .LMB_Wait_25(NLW_U0_LMB_Wait_25_UNCONNECTED),
        .LMB_Wait_26(NLW_U0_LMB_Wait_26_UNCONNECTED),
        .LMB_Wait_27(NLW_U0_LMB_Wait_27_UNCONNECTED),
        .LMB_Wait_28(NLW_U0_LMB_Wait_28_UNCONNECTED),
        .LMB_Wait_29(NLW_U0_LMB_Wait_29_UNCONNECTED),
        .LMB_Wait_3(NLW_U0_LMB_Wait_3_UNCONNECTED),
        .LMB_Wait_30(NLW_U0_LMB_Wait_30_UNCONNECTED),
        .LMB_Wait_31(NLW_U0_LMB_Wait_31_UNCONNECTED),
        .LMB_Wait_4(NLW_U0_LMB_Wait_4_UNCONNECTED),
        .LMB_Wait_5(NLW_U0_LMB_Wait_5_UNCONNECTED),
        .LMB_Wait_6(NLW_U0_LMB_Wait_6_UNCONNECTED),
        .LMB_Wait_7(NLW_U0_LMB_Wait_7_UNCONNECTED),
        .LMB_Wait_8(NLW_U0_LMB_Wait_8_UNCONNECTED),
        .LMB_Wait_9(NLW_U0_LMB_Wait_9_UNCONNECTED),
        .LMB_Write_Strobe_0(NLW_U0_LMB_Write_Strobe_0_UNCONNECTED),
        .LMB_Write_Strobe_1(NLW_U0_LMB_Write_Strobe_1_UNCONNECTED),
        .LMB_Write_Strobe_10(NLW_U0_LMB_Write_Strobe_10_UNCONNECTED),
        .LMB_Write_Strobe_11(NLW_U0_LMB_Write_Strobe_11_UNCONNECTED),
        .LMB_Write_Strobe_12(NLW_U0_LMB_Write_Strobe_12_UNCONNECTED),
        .LMB_Write_Strobe_13(NLW_U0_LMB_Write_Strobe_13_UNCONNECTED),
        .LMB_Write_Strobe_14(NLW_U0_LMB_Write_Strobe_14_UNCONNECTED),
        .LMB_Write_Strobe_15(NLW_U0_LMB_Write_Strobe_15_UNCONNECTED),
        .LMB_Write_Strobe_16(NLW_U0_LMB_Write_Strobe_16_UNCONNECTED),
        .LMB_Write_Strobe_17(NLW_U0_LMB_Write_Strobe_17_UNCONNECTED),
        .LMB_Write_Strobe_18(NLW_U0_LMB_Write_Strobe_18_UNCONNECTED),
        .LMB_Write_Strobe_19(NLW_U0_LMB_Write_Strobe_19_UNCONNECTED),
        .LMB_Write_Strobe_2(NLW_U0_LMB_Write_Strobe_2_UNCONNECTED),
        .LMB_Write_Strobe_20(NLW_U0_LMB_Write_Strobe_20_UNCONNECTED),
        .LMB_Write_Strobe_21(NLW_U0_LMB_Write_Strobe_21_UNCONNECTED),
        .LMB_Write_Strobe_22(NLW_U0_LMB_Write_Strobe_22_UNCONNECTED),
        .LMB_Write_Strobe_23(NLW_U0_LMB_Write_Strobe_23_UNCONNECTED),
        .LMB_Write_Strobe_24(NLW_U0_LMB_Write_Strobe_24_UNCONNECTED),
        .LMB_Write_Strobe_25(NLW_U0_LMB_Write_Strobe_25_UNCONNECTED),
        .LMB_Write_Strobe_26(NLW_U0_LMB_Write_Strobe_26_UNCONNECTED),
        .LMB_Write_Strobe_27(NLW_U0_LMB_Write_Strobe_27_UNCONNECTED),
        .LMB_Write_Strobe_28(NLW_U0_LMB_Write_Strobe_28_UNCONNECTED),
        .LMB_Write_Strobe_29(NLW_U0_LMB_Write_Strobe_29_UNCONNECTED),
        .LMB_Write_Strobe_3(NLW_U0_LMB_Write_Strobe_3_UNCONNECTED),
        .LMB_Write_Strobe_30(NLW_U0_LMB_Write_Strobe_30_UNCONNECTED),
        .LMB_Write_Strobe_31(NLW_U0_LMB_Write_Strobe_31_UNCONNECTED),
        .LMB_Write_Strobe_4(NLW_U0_LMB_Write_Strobe_4_UNCONNECTED),
        .LMB_Write_Strobe_5(NLW_U0_LMB_Write_Strobe_5_UNCONNECTED),
        .LMB_Write_Strobe_6(NLW_U0_LMB_Write_Strobe_6_UNCONNECTED),
        .LMB_Write_Strobe_7(NLW_U0_LMB_Write_Strobe_7_UNCONNECTED),
        .LMB_Write_Strobe_8(NLW_U0_LMB_Write_Strobe_8_UNCONNECTED),
        .LMB_Write_Strobe_9(NLW_U0_LMB_Write_Strobe_9_UNCONNECTED),
        .M_AXIS_ACLK(NLW_U0_M_AXIS_ACLK_UNCONNECTED),
        .M_AXIS_ARESETN(NLW_U0_M_AXIS_ARESETN_UNCONNECTED),
        .M_AXIS_TDATA(NLW_U0_M_AXIS_TDATA_UNCONNECTED[31:0]),
        .M_AXIS_TID(NLW_U0_M_AXIS_TID_UNCONNECTED[6:0]),
        .M_AXIS_TREADY(NLW_U0_M_AXIS_TREADY_UNCONNECTED),
        .M_AXIS_TVALID(NLW_U0_M_AXIS_TVALID_UNCONNECTED),
        .M_AXI_ACLK(NLW_U0_M_AXI_ACLK_UNCONNECTED),
        .M_AXI_ARADDR(NLW_U0_M_AXI_ARADDR_UNCONNECTED[31:0]),
        .M_AXI_ARBURST(NLW_U0_M_AXI_ARBURST_UNCONNECTED[1:0]),
        .M_AXI_ARCACHE(NLW_U0_M_AXI_ARCACHE_UNCONNECTED[3:0]),
        .M_AXI_ARESETN(NLW_U0_M_AXI_ARESETN_UNCONNECTED),
        .M_AXI_ARID(NLW_U0_M_AXI_ARID_UNCONNECTED[0]),
        .M_AXI_ARLEN(NLW_U0_M_AXI_ARLEN_UNCONNECTED[7:0]),
        .M_AXI_ARLOCK(NLW_U0_M_AXI_ARLOCK_UNCONNECTED),
        .M_AXI_ARPROT(NLW_U0_M_AXI_ARPROT_UNCONNECTED[2:0]),
        .M_AXI_ARQOS(NLW_U0_M_AXI_ARQOS_UNCONNECTED[3:0]),
        .M_AXI_ARREADY(NLW_U0_M_AXI_ARREADY_UNCONNECTED),
        .M_AXI_ARSIZE(NLW_U0_M_AXI_ARSIZE_UNCONNECTED[2:0]),
        .M_AXI_ARVALID(NLW_U0_M_AXI_ARVALID_UNCONNECTED),
        .M_AXI_AWADDR(NLW_U0_M_AXI_AWADDR_UNCONNECTED[31:0]),
        .M_AXI_AWBURST(NLW_U0_M_AXI_AWBURST_UNCONNECTED[1:0]),
        .M_AXI_AWCACHE(NLW_U0_M_AXI_AWCACHE_UNCONNECTED[3:0]),
        .M_AXI_AWID(NLW_U0_M_AXI_AWID_UNCONNECTED[0]),
        .M_AXI_AWLEN(NLW_U0_M_AXI_AWLEN_UNCONNECTED[7:0]),
        .M_AXI_AWLOCK(NLW_U0_M_AXI_AWLOCK_UNCONNECTED),
        .M_AXI_AWPROT(NLW_U0_M_AXI_AWPROT_UNCONNECTED[2:0]),
        .M_AXI_AWQOS(NLW_U0_M_AXI_AWQOS_UNCONNECTED[3:0]),
        .M_AXI_AWREADY(NLW_U0_M_AXI_AWREADY_UNCONNECTED),
        .M_AXI_AWSIZE(NLW_U0_M_AXI_AWSIZE_UNCONNECTED[2:0]),
        .M_AXI_AWVALID(NLW_U0_M_AXI_AWVALID_UNCONNECTED),
        .M_AXI_BID(NLW_U0_M_AXI_BID_UNCONNECTED[0]),
        .M_AXI_BREADY(NLW_U0_M_AXI_BREADY_UNCONNECTED),
        .M_AXI_BRESP(NLW_U0_M_AXI_BRESP_UNCONNECTED[1:0]),
        .M_AXI_BVALID(NLW_U0_M_AXI_BVALID_UNCONNECTED),
        .M_AXI_RDATA(NLW_U0_M_AXI_RDATA_UNCONNECTED[31:0]),
        .M_AXI_RID(NLW_U0_M_AXI_RID_UNCONNECTED[0]),
        .M_AXI_RLAST(NLW_U0_M_AXI_RLAST_UNCONNECTED),
        .M_AXI_RREADY(NLW_U0_M_AXI_RREADY_UNCONNECTED),
        .M_AXI_RRESP(NLW_U0_M_AXI_RRESP_UNCONNECTED[1:0]),
        .M_AXI_RVALID(NLW_U0_M_AXI_RVALID_UNCONNECTED),
        .M_AXI_WDATA(NLW_U0_M_AXI_WDATA_UNCONNECTED[31:0]),
        .M_AXI_WLAST(NLW_U0_M_AXI_WLAST_UNCONNECTED),
        .M_AXI_WREADY(NLW_U0_M_AXI_WREADY_UNCONNECTED),
        .M_AXI_WSTRB(NLW_U0_M_AXI_WSTRB_UNCONNECTED[3:0]),
        .M_AXI_WVALID(NLW_U0_M_AXI_WVALID_UNCONNECTED),
        .S_AXI_ACLK(NLW_U0_S_AXI_ACLK_UNCONNECTED),
        .S_AXI_ARADDR(NLW_U0_S_AXI_ARADDR_UNCONNECTED[3:0]),
        .S_AXI_ARESETN(NLW_U0_S_AXI_ARESETN_UNCONNECTED),
        .S_AXI_ARREADY(NLW_U0_S_AXI_ARREADY_UNCONNECTED),
        .S_AXI_ARVALID(NLW_U0_S_AXI_ARVALID_UNCONNECTED),
        .S_AXI_AWADDR(NLW_U0_S_AXI_AWADDR_UNCONNECTED[3:0]),
        .S_AXI_AWREADY(NLW_U0_S_AXI_AWREADY_UNCONNECTED),
        .S_AXI_AWVALID(NLW_U0_S_AXI_AWVALID_UNCONNECTED),
        .S_AXI_BREADY(NLW_U0_S_AXI_BREADY_UNCONNECTED),
        .S_AXI_BRESP(NLW_U0_S_AXI_BRESP_UNCONNECTED[1:0]),
        .S_AXI_BVALID(NLW_U0_S_AXI_BVALID_UNCONNECTED),
        .S_AXI_RDATA(NLW_U0_S_AXI_RDATA_UNCONNECTED[31:0]),
        .S_AXI_RREADY(NLW_U0_S_AXI_RREADY_UNCONNECTED),
        .S_AXI_RRESP(NLW_U0_S_AXI_RRESP_UNCONNECTED[1:0]),
        .S_AXI_RVALID(NLW_U0_S_AXI_RVALID_UNCONNECTED),
        .S_AXI_WDATA(NLW_U0_S_AXI_WDATA_UNCONNECTED[31:0]),
        .S_AXI_WREADY(NLW_U0_S_AXI_WREADY_UNCONNECTED),
        .S_AXI_WSTRB(NLW_U0_S_AXI_WSTRB_UNCONNECTED[3:0]),
        .S_AXI_WVALID(NLW_U0_S_AXI_WVALID_UNCONNECTED),
        .Scan_Reset(NLW_U0_Scan_Reset_UNCONNECTED),
        .Scan_Reset_Sel(NLW_U0_Scan_Reset_Sel_UNCONNECTED),
        .TRACE_CLK(NLW_U0_TRACE_CLK_UNCONNECTED),
        .TRACE_CLK_OUT(NLW_U0_TRACE_CLK_OUT_UNCONNECTED),
        .TRACE_CTL(NLW_U0_TRACE_CTL_UNCONNECTED),
        .TRACE_DATA(NLW_U0_TRACE_DATA_UNCONNECTED[31:0]),
        .Trig_Ack_In_0(NLW_U0_Trig_Ack_In_0_UNCONNECTED),
        .Trig_Ack_In_1(NLW_U0_Trig_Ack_In_1_UNCONNECTED),
        .Trig_Ack_In_2(NLW_U0_Trig_Ack_In_2_UNCONNECTED),
        .Trig_Ack_In_3(NLW_U0_Trig_Ack_In_3_UNCONNECTED),
        .Trig_Ack_Out_0(NLW_U0_Trig_Ack_Out_0_UNCONNECTED),
        .Trig_Ack_Out_1(NLW_U0_Trig_Ack_Out_1_UNCONNECTED),
        .Trig_Ack_Out_2(NLW_U0_Trig_Ack_Out_2_UNCONNECTED),
        .Trig_Ack_Out_3(NLW_U0_Trig_Ack_Out_3_UNCONNECTED),
        .Trig_In_0(NLW_U0_Trig_In_0_UNCONNECTED),
        .Trig_In_1(NLW_U0_Trig_In_1_UNCONNECTED),
        .Trig_In_2(NLW_U0_Trig_In_2_UNCONNECTED),
        .Trig_In_3(NLW_U0_Trig_In_3_UNCONNECTED),
        .Trig_Out_0(NLW_U0_Trig_Out_0_UNCONNECTED),
        .Trig_Out_1(NLW_U0_Trig_Out_1_UNCONNECTED),
        .Trig_Out_2(NLW_U0_Trig_Out_2_UNCONNECTED),
        .Trig_Out_3(NLW_U0_Trig_Out_3_UNCONNECTED),
        .bscan_ext_capture(NLW_U0_bscan_ext_capture_UNCONNECTED),
        .bscan_ext_drck(NLW_U0_bscan_ext_drck_UNCONNECTED),
        .bscan_ext_reset(NLW_U0_bscan_ext_reset_UNCONNECTED),
        .bscan_ext_sel(NLW_U0_bscan_ext_sel_UNCONNECTED),
        .bscan_ext_shift(NLW_U0_bscan_ext_shift_UNCONNECTED),
        .bscan_ext_tdi(NLW_U0_bscan_ext_tdi_UNCONNECTED),
        .bscan_ext_tdo(NLW_U0_bscan_ext_tdo_UNCONNECTED),
        .bscan_ext_update(NLW_U0_bscan_ext_update_UNCONNECTED));
endmodule

(* CHECK_LICENSE_TYPE = "design_gol_microblaze_0_0,MicroBlaze,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "MicroBlaze,Vivado 2017.2" *) 
module design_gol_microblaze_0_0
   (Clk,
    Reset,
    Interrupt,
    Interrupt_Address,
    Interrupt_Ack,
    Instr_Addr,
    Instr,
    IFetch,
    I_AS,
    IReady,
    IWAIT,
    ICE,
    IUE,
    Data_Addr,
    Data_Read,
    Data_Write,
    D_AS,
    Read_Strobe,
    Write_Strobe,
    DReady,
    DWait,
    DCE,
    DUE,
    Byte_Enable,
    M_AXI_DP_AWADDR,
    M_AXI_DP_AWPROT,
    M_AXI_DP_AWVALID,
    M_AXI_DP_AWREADY,
    M_AXI_DP_WDATA,
    M_AXI_DP_WSTRB,
    M_AXI_DP_WVALID,
    M_AXI_DP_WREADY,
    M_AXI_DP_BRESP,
    M_AXI_DP_BVALID,
    M_AXI_DP_BREADY,
    M_AXI_DP_ARADDR,
    M_AXI_DP_ARPROT,
    M_AXI_DP_ARVALID,
    M_AXI_DP_ARREADY,
    M_AXI_DP_RDATA,
    M_AXI_DP_RRESP,
    M_AXI_DP_RVALID,
    M_AXI_DP_RREADY,
    Dbg_Clk,
    Dbg_TDI,
    Dbg_TDO,
    Dbg_Reg_En,
    Dbg_Shift,
    Dbg_Capture,
    Dbg_Update,
    Debug_Rst,
    Dbg_Disable);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 CLK.CLK CLK" *) input Clk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 RST.RESET RST" *) input Reset;
  (* X_INTERFACE_INFO = "xilinx.com:interface:mbinterrupt:1.0 INTERRUPT INTERRUPT" *) input Interrupt;
  (* X_INTERFACE_INFO = "xilinx.com:interface:mbinterrupt:1.0 INTERRUPT ADDRESS" *) input [0:31]Interrupt_Address;
  (* X_INTERFACE_INFO = "xilinx.com:interface:mbinterrupt:1.0 INTERRUPT ACK" *) output [0:1]Interrupt_Ack;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 ILMB ABUS" *) output [0:31]Instr_Addr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 ILMB READDBUS" *) input [0:31]Instr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 ILMB READSTROBE" *) output IFetch;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 ILMB ADDRSTROBE" *) output I_AS;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 ILMB READY" *) input IReady;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 ILMB WAIT" *) input IWAIT;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 ILMB CE" *) input ICE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 ILMB UE" *) input IUE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 DLMB ABUS" *) output [0:31]Data_Addr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 DLMB READDBUS" *) input [0:31]Data_Read;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 DLMB WRITEDBUS" *) output [0:31]Data_Write;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 DLMB ADDRSTROBE" *) output D_AS;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 DLMB READSTROBE" *) output Read_Strobe;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 DLMB WRITESTROBE" *) output Write_Strobe;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 DLMB READY" *) input DReady;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 DLMB WAIT" *) input DWait;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 DLMB CE" *) input DCE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 DLMB UE" *) input DUE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 DLMB BE" *) output [0:3]Byte_Enable;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI_DP AWADDR" *) output [31:0]M_AXI_DP_AWADDR;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI_DP AWPROT" *) output [2:0]M_AXI_DP_AWPROT;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI_DP AWVALID" *) output M_AXI_DP_AWVALID;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI_DP AWREADY" *) input M_AXI_DP_AWREADY;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI_DP WDATA" *) output [31:0]M_AXI_DP_WDATA;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI_DP WSTRB" *) output [3:0]M_AXI_DP_WSTRB;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI_DP WVALID" *) output M_AXI_DP_WVALID;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI_DP WREADY" *) input M_AXI_DP_WREADY;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI_DP BRESP" *) input [1:0]M_AXI_DP_BRESP;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI_DP BVALID" *) input M_AXI_DP_BVALID;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI_DP BREADY" *) output M_AXI_DP_BREADY;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI_DP ARADDR" *) output [31:0]M_AXI_DP_ARADDR;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI_DP ARPROT" *) output [2:0]M_AXI_DP_ARPROT;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI_DP ARVALID" *) output M_AXI_DP_ARVALID;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI_DP ARREADY" *) input M_AXI_DP_ARREADY;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI_DP RDATA" *) input [31:0]M_AXI_DP_RDATA;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI_DP RRESP" *) input [1:0]M_AXI_DP_RRESP;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI_DP RVALID" *) input M_AXI_DP_RVALID;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI_DP RREADY" *) output M_AXI_DP_RREADY;
  (* X_INTERFACE_INFO = "xilinx.com:interface:mbdebug:3.0 DEBUG CLK" *) input Dbg_Clk;
  (* X_INTERFACE_INFO = "xilinx.com:interface:mbdebug:3.0 DEBUG TDI" *) input Dbg_TDI;
  (* X_INTERFACE_INFO = "xilinx.com:interface:mbdebug:3.0 DEBUG TDO" *) output Dbg_TDO;
  (* X_INTERFACE_INFO = "xilinx.com:interface:mbdebug:3.0 DEBUG REG_EN" *) input [0:7]Dbg_Reg_En;
  (* X_INTERFACE_INFO = "xilinx.com:interface:mbdebug:3.0 DEBUG SHIFT" *) input Dbg_Shift;
  (* X_INTERFACE_INFO = "xilinx.com:interface:mbdebug:3.0 DEBUG CAPTURE" *) input Dbg_Capture;
  (* X_INTERFACE_INFO = "xilinx.com:interface:mbdebug:3.0 DEBUG UPDATE" *) input Dbg_Update;
  (* X_INTERFACE_INFO = "xilinx.com:interface:mbdebug:3.0 DEBUG RST" *) input Debug_Rst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:mbdebug:3.0 DEBUG DISABLE" *) input Dbg_Disable;

  wire [0:3]Byte_Enable;
  wire Clk;
  wire DReady;
  wire D_AS;
  wire [0:31]Data_Addr;
  wire [0:31]Data_Read;
  wire [0:31]Data_Write;
  wire Dbg_Capture;
  wire Dbg_Clk;
  wire [0:7]Dbg_Reg_En;
  wire Dbg_Shift;
  wire Dbg_TDI;
  wire Dbg_TDO;
  wire Dbg_Update;
  wire Debug_Rst;
  wire IReady;
  wire I_AS;
  wire [0:31]Instr;
  wire [0:31]Instr_Addr;
  wire [31:0]M_AXI_DP_ARADDR;
  wire M_AXI_DP_ARREADY;
  wire M_AXI_DP_ARVALID;
  wire M_AXI_DP_AWREADY;
  wire M_AXI_DP_AWVALID;
  wire M_AXI_DP_BVALID;
  wire [31:0]M_AXI_DP_RDATA;
  wire M_AXI_DP_RVALID;
  wire [31:0]M_AXI_DP_WDATA;
  wire M_AXI_DP_WREADY;
  wire M_AXI_DP_WVALID;
  wire Reset;
  wire Write_Strobe;
  wire NLW_U0_Config_Reset_UNCONNECTED;
  wire NLW_U0_DCE_UNCONNECTED;
  wire NLW_U0_DEBUG_ACLK_UNCONNECTED;
  wire NLW_U0_DEBUG_ARESETN_UNCONNECTED;
  wire NLW_U0_DUE_UNCONNECTED;
  wire NLW_U0_DWait_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_UNCONNECTED;
  wire NLW_U0_Dbg_Continue_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_UNCONNECTED;
  wire NLW_U0_Dbg_Intr_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_UNCONNECTED;
  wire NLW_U0_Dbg_Stop_UNCONNECTED;
  wire NLW_U0_Dbg_Trace_Clk_UNCONNECTED;
  wire NLW_U0_Dbg_Trace_Ready_UNCONNECTED;
  wire NLW_U0_Dbg_Trace_Valid_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_UNCONNECTED;
  wire NLW_U0_Dbg_Wakeup_UNCONNECTED;
  wire NLW_U0_Ext_BRK_UNCONNECTED;
  wire NLW_U0_Ext_NM_BRK_UNCONNECTED;
  wire NLW_U0_Hibernate_UNCONNECTED;
  wire NLW_U0_ICE_UNCONNECTED;
  wire NLW_U0_IFetch_UNCONNECTED;
  wire NLW_U0_IUE_UNCONNECTED;
  wire NLW_U0_IWAIT_UNCONNECTED;
  wire NLW_U0_Interrupt_UNCONNECTED;
  wire NLW_U0_M0_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_M0_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M0_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_M10_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_M10_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M10_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_M11_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_M11_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M11_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_M12_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_M12_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M12_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_M13_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_M13_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M13_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_M14_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_M14_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M14_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_M15_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_M15_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M15_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_M1_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_M1_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M1_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_M2_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_M2_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M2_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_M3_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_M3_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M3_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_M4_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_M4_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M4_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_M5_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_M5_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M5_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_M6_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_M6_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M6_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_M7_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_M7_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M7_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_M8_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_M8_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M8_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_M9_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_M9_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M9_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_MB_Error_UNCONNECTED;
  wire NLW_U0_MB_Halted_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_ACREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_ACVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_ARLOCK_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_ARREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_ARVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_AWLOCK_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_AWREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_AWVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_BREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_BVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_CDLAST_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_CDREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_CDVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_CRREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_CRVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_RACK_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_RLAST_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_RREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_RVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_WACK_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_WLAST_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_WREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_WVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_DP_ARLOCK_UNCONNECTED;
  wire NLW_U0_M_AXI_DP_AWLOCK_UNCONNECTED;
  wire NLW_U0_M_AXI_DP_BREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_DP_RLAST_UNCONNECTED;
  wire NLW_U0_M_AXI_DP_RREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_DP_WLAST_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_ACREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_ACVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_ARLOCK_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_ARREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_ARVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_AWLOCK_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_AWREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_AWVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_BREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_BVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_CDLAST_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_CDREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_CDVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_CRREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_CRVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_RACK_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_RLAST_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_RREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_RVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_WACK_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_WLAST_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_WREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_WVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_IP_ARLOCK_UNCONNECTED;
  wire NLW_U0_M_AXI_IP_ARREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_IP_ARVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_IP_AWLOCK_UNCONNECTED;
  wire NLW_U0_M_AXI_IP_AWREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_IP_AWVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_IP_BREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_IP_BVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_IP_RLAST_UNCONNECTED;
  wire NLW_U0_M_AXI_IP_RREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_IP_RVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_IP_WLAST_UNCONNECTED;
  wire NLW_U0_M_AXI_IP_WREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_IP_WVALID_UNCONNECTED;
  wire NLW_U0_Mb_Reset_UNCONNECTED;
  wire NLW_U0_Pause_UNCONNECTED;
  wire NLW_U0_Pause_Ack_UNCONNECTED;
  wire NLW_U0_Read_Strobe_UNCONNECTED;
  wire NLW_U0_S0_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_S0_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_S0_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_S10_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_S10_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_S10_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_S11_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_S11_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_S11_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_S12_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_S12_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_S12_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_S13_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_S13_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_S13_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_S14_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_S14_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_S14_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_S15_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_S15_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_S15_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_S1_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_S1_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_S1_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_S2_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_S2_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_S2_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_S3_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_S3_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_S3_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_S4_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_S4_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_S4_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_S5_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_S5_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_S5_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_S6_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_S6_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_S6_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_S7_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_S7_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_S7_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_S8_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_S8_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_S8_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_S9_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_S9_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_S9_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_Scan_Reset_UNCONNECTED;
  wire NLW_U0_Scan_Reset_Sel_UNCONNECTED;
  wire NLW_U0_Sleep_UNCONNECTED;
  wire NLW_U0_Suspend_UNCONNECTED;
  wire NLW_U0_Trace_DCache_Hit_UNCONNECTED;
  wire NLW_U0_Trace_DCache_Rdy_UNCONNECTED;
  wire NLW_U0_Trace_DCache_Read_UNCONNECTED;
  wire NLW_U0_Trace_DCache_Req_UNCONNECTED;
  wire NLW_U0_Trace_Data_Access_UNCONNECTED;
  wire NLW_U0_Trace_Data_Read_UNCONNECTED;
  wire NLW_U0_Trace_Data_Write_UNCONNECTED;
  wire NLW_U0_Trace_Delay_Slot_UNCONNECTED;
  wire NLW_U0_Trace_EX_PipeRun_UNCONNECTED;
  wire NLW_U0_Trace_Exception_Taken_UNCONNECTED;
  wire NLW_U0_Trace_ICache_Hit_UNCONNECTED;
  wire NLW_U0_Trace_ICache_Rdy_UNCONNECTED;
  wire NLW_U0_Trace_ICache_Req_UNCONNECTED;
  wire NLW_U0_Trace_Jump_Hit_UNCONNECTED;
  wire NLW_U0_Trace_Jump_Taken_UNCONNECTED;
  wire NLW_U0_Trace_MB_Halted_UNCONNECTED;
  wire NLW_U0_Trace_MEM_PipeRun_UNCONNECTED;
  wire NLW_U0_Trace_OF_PipeRun_UNCONNECTED;
  wire NLW_U0_Trace_Reg_Write_UNCONNECTED;
  wire NLW_U0_Trace_Valid_Instr_UNCONNECTED;
  wire [0:31]NLW_U0_Data_Addr_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_Trace_Data_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_UNCONNECTED;
  wire [0:31]NLW_U0_Instr_Addr_UNCONNECTED;
  wire [0:1]NLW_U0_Interrupt_Ack_UNCONNECTED;
  wire [0:31]NLW_U0_Interrupt_Address_UNCONNECTED;
  wire [0:4095]NLW_U0_LOCKSTEP_Master_Out_UNCONNECTED;
  wire [0:4095]NLW_U0_LOCKSTEP_Out_UNCONNECTED;
  wire [0:4095]NLW_U0_LOCKSTEP_Slave_In_UNCONNECTED;
  wire [31:0]NLW_U0_M0_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_M10_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_M11_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_M12_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_M13_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_M14_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_M15_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_M1_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_M2_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_M3_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_M4_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_M5_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_M6_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_M7_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_M8_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_M9_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_DC_ACADDR_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_DC_ACPROT_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_DC_ACSNOOP_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_DC_ARADDR_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_DC_ARBAR_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_DC_ARBURST_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_DC_ARCACHE_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_DC_ARDOMAIN_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_DC_ARID_UNCONNECTED;
  wire [7:0]NLW_U0_M_AXI_DC_ARLEN_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_DC_ARPROT_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_DC_ARQOS_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_DC_ARSIZE_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_DC_ARSNOOP_UNCONNECTED;
  wire [4:0]NLW_U0_M_AXI_DC_ARUSER_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_DC_AWADDR_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_DC_AWBAR_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_DC_AWBURST_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_DC_AWCACHE_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_DC_AWDOMAIN_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_DC_AWID_UNCONNECTED;
  wire [7:0]NLW_U0_M_AXI_DC_AWLEN_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_DC_AWPROT_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_DC_AWQOS_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_DC_AWSIZE_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_DC_AWSNOOP_UNCONNECTED;
  wire [4:0]NLW_U0_M_AXI_DC_AWUSER_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_DC_BID_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_DC_BRESP_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_DC_BUSER_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_DC_CDDATA_UNCONNECTED;
  wire [4:0]NLW_U0_M_AXI_DC_CRRESP_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_DC_RDATA_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_DC_RID_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_DC_RRESP_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_DC_RUSER_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_DC_WDATA_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_DC_WSTRB_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_DC_WUSER_UNCONNECTED;
  wire [15:0]NLW_U0_M_AXI_DP_ARADDR_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_DP_ARBURST_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_DP_ARCACHE_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_DP_ARID_UNCONNECTED;
  wire [7:0]NLW_U0_M_AXI_DP_ARLEN_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_DP_ARPROT_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_DP_ARQOS_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_DP_ARSIZE_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_DP_AWADDR_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_DP_AWBURST_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_DP_AWCACHE_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_DP_AWID_UNCONNECTED;
  wire [7:0]NLW_U0_M_AXI_DP_AWLEN_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_DP_AWPROT_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_DP_AWQOS_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_DP_AWSIZE_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_DP_BID_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_DP_BRESP_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_DP_RID_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_DP_RRESP_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_DP_WSTRB_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_IC_ACADDR_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_IC_ACPROT_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_IC_ACSNOOP_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_IC_ARADDR_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_IC_ARBAR_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_IC_ARBURST_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_IC_ARCACHE_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_IC_ARDOMAIN_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_IC_ARID_UNCONNECTED;
  wire [7:0]NLW_U0_M_AXI_IC_ARLEN_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_IC_ARPROT_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_IC_ARQOS_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_IC_ARSIZE_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_IC_ARSNOOP_UNCONNECTED;
  wire [4:0]NLW_U0_M_AXI_IC_ARUSER_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_IC_AWADDR_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_IC_AWBAR_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_IC_AWBURST_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_IC_AWCACHE_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_IC_AWDOMAIN_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_IC_AWID_UNCONNECTED;
  wire [7:0]NLW_U0_M_AXI_IC_AWLEN_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_IC_AWPROT_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_IC_AWQOS_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_IC_AWSIZE_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_IC_AWSNOOP_UNCONNECTED;
  wire [4:0]NLW_U0_M_AXI_IC_AWUSER_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_IC_BID_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_IC_BRESP_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_IC_BUSER_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_IC_CDDATA_UNCONNECTED;
  wire [4:0]NLW_U0_M_AXI_IC_CRRESP_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_IC_RDATA_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_IC_RID_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_IC_RRESP_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_IC_RUSER_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_IC_WDATA_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_IC_WSTRB_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_IC_WUSER_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_IP_ARADDR_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_IP_ARBURST_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_IP_ARCACHE_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_IP_ARID_UNCONNECTED;
  wire [7:0]NLW_U0_M_AXI_IP_ARLEN_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_IP_ARPROT_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_IP_ARQOS_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_IP_ARSIZE_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_IP_AWADDR_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_IP_AWBURST_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_IP_AWCACHE_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_IP_AWID_UNCONNECTED;
  wire [7:0]NLW_U0_M_AXI_IP_AWLEN_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_IP_AWPROT_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_IP_AWQOS_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_IP_AWSIZE_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_IP_BID_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_IP_BRESP_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_IP_RDATA_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_IP_RID_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_IP_RRESP_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_IP_WDATA_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_IP_WSTRB_UNCONNECTED;
  wire [0:3]NLW_U0_Non_Secure_UNCONNECTED;
  wire [16383:0]NLW_U0_RAM_From_UNCONNECTED;
  wire [1023:0]NLW_U0_RAM_Static_UNCONNECTED;
  wire [16383:0]NLW_U0_RAM_To_UNCONNECTED;
  wire [0:1]NLW_U0_Reset_Mode_UNCONNECTED;
  wire [31:0]NLW_U0_S0_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_S10_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_S11_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_S12_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_S13_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_S14_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_S15_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_S1_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_S2_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_S3_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_S4_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_S5_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_S6_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_S7_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_S8_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_S9_AXIS_TDATA_UNCONNECTED;
  wire [0:31]NLW_U0_Trace_Data_Address_UNCONNECTED;
  wire [0:3]NLW_U0_Trace_Data_Byte_Enable_UNCONNECTED;
  wire [0:31]NLW_U0_Trace_Data_Write_Value_UNCONNECTED;
  wire [0:4]NLW_U0_Trace_Exception_Kind_UNCONNECTED;
  wire [0:31]NLW_U0_Trace_Instruction_UNCONNECTED;
  wire [0:14]NLW_U0_Trace_MSR_Reg_UNCONNECTED;
  wire [0:31]NLW_U0_Trace_New_Reg_Value_UNCONNECTED;
  wire [0:31]NLW_U0_Trace_PC_UNCONNECTED;
  wire [0:7]NLW_U0_Trace_PID_Reg_UNCONNECTED;
  wire [0:4]NLW_U0_Trace_Reg_Addr_UNCONNECTED;
  wire [0:1]NLW_U0_Wakeup_UNCONNECTED;

  (* C_ADDR_TAG_BITS = "17" *) 
  (* C_ALLOW_DCACHE_WR = "1" *) 
  (* C_ALLOW_ICACHE_WR = "1" *) 
  (* C_AREA_OPTIMIZED = "0" *) 
  (* C_ASYNC_INTERRUPT = "1" *) 
  (* C_ASYNC_WAKEUP = "3" *) 
  (* C_AVOID_PRIMITIVES = "0" *) 
  (* C_BASE_VECTORS = "64'b0000000000000000000000000000000000000000000000000000000000000000" *) 
  (* C_BRANCH_TARGET_CACHE_SIZE = "0" *) 
  (* C_CACHE_BYTE_SIZE = "8192" *) 
  (* C_DADDR_SIZE = "32" *) 
  (* C_DATA_SIZE = "32" *) 
  (* C_DCACHE_ADDR_TAG = "17" *) 
  (* C_DCACHE_ALWAYS_USED = "0" *) 
  (* C_DCACHE_BASEADDR = "64'b0000000000000000000000000000000000000000000000000000000000000000" *) 
  (* C_DCACHE_BYTE_SIZE = "8192" *) 
  (* C_DCACHE_DATA_WIDTH = "0" *) 
  (* C_DCACHE_FORCE_TAG_LUTRAM = "0" *) 
  (* C_DCACHE_HIGHADDR = "64'b0000000000000000000000000000000000111111111111111111111111111111" *) 
  (* C_DCACHE_LINE_LEN = "4" *) 
  (* C_DCACHE_USE_WRITEBACK = "0" *) 
  (* C_DCACHE_VICTIMS = "0" *) 
  (* C_DEBUG_COUNTER_WIDTH = "32" *) 
  (* C_DEBUG_ENABLED = "1" *) 
  (* C_DEBUG_EVENT_COUNTERS = "5" *) 
  (* C_DEBUG_EXTERNAL_TRACE = "0" *) 
  (* C_DEBUG_INTERFACE = "0" *) 
  (* C_DEBUG_LATENCY_COUNTERS = "1" *) 
  (* C_DEBUG_PROFILE_SIZE = "0" *) 
  (* C_DEBUG_TRACE_ASYNC_RESET = "0" *) 
  (* C_DEBUG_TRACE_SIZE = "8192" *) 
  (* C_DIV_ZERO_EXCEPTION = "0" *) 
  (* C_DYNAMIC_BUS_SIZING = "0" *) 
  (* C_D_AXI = "1" *) 
  (* C_D_LMB = "1" *) 
  (* C_ECC_USE_CE_EXCEPTION = "0" *) 
  (* C_EDGE_IS_POSITIVE = "1" *) 
  (* C_ENDIANNESS = "1" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_FAULT_TOLERANT = "0" *) 
  (* C_FPU_EXCEPTION = "0" *) 
  (* C_FREQ = "100000000" *) 
  (* C_FSL_EXCEPTION = "0" *) 
  (* C_FSL_LINKS = "0" *) 
  (* C_IADDR_SIZE = "32" *) 
  (* C_ICACHE_ALWAYS_USED = "0" *) 
  (* C_ICACHE_BASEADDR = "64'b0000000000000000000000000000000000000000000000000000000000000000" *) 
  (* C_ICACHE_DATA_WIDTH = "0" *) 
  (* C_ICACHE_FORCE_TAG_LUTRAM = "0" *) 
  (* C_ICACHE_HIGHADDR = "64'b0000000000000000000000000000000000111111111111111111111111111111" *) 
  (* C_ICACHE_LINE_LEN = "4" *) 
  (* C_ICACHE_STREAMS = "0" *) 
  (* C_ICACHE_VICTIMS = "0" *) 
  (* C_ILL_OPCODE_EXCEPTION = "0" *) 
  (* C_IMPRECISE_EXCEPTIONS = "0" *) 
  (* C_INSTANCE = "design_gol_microblaze_0_0" *) 
  (* C_INSTR_SIZE = "32" *) 
  (* C_INTERCONNECT = "2" *) 
  (* C_INTERRUPT_IS_EDGE = "0" *) 
  (* C_I_AXI = "0" *) 
  (* C_I_LMB = "1" *) 
  (* C_LOCKSTEP_MASTER = "0" *) 
  (* C_LOCKSTEP_SLAVE = "0" *) 
  (* C_M0_AXIS_DATA_WIDTH = "32" *) 
  (* C_M10_AXIS_DATA_WIDTH = "32" *) 
  (* C_M11_AXIS_DATA_WIDTH = "32" *) 
  (* C_M12_AXIS_DATA_WIDTH = "32" *) 
  (* C_M13_AXIS_DATA_WIDTH = "32" *) 
  (* C_M14_AXIS_DATA_WIDTH = "32" *) 
  (* C_M15_AXIS_DATA_WIDTH = "32" *) 
  (* C_M1_AXIS_DATA_WIDTH = "32" *) 
  (* C_M2_AXIS_DATA_WIDTH = "32" *) 
  (* C_M3_AXIS_DATA_WIDTH = "32" *) 
  (* C_M4_AXIS_DATA_WIDTH = "32" *) 
  (* C_M5_AXIS_DATA_WIDTH = "32" *) 
  (* C_M6_AXIS_DATA_WIDTH = "32" *) 
  (* C_M7_AXIS_DATA_WIDTH = "32" *) 
  (* C_M8_AXIS_DATA_WIDTH = "32" *) 
  (* C_M9_AXIS_DATA_WIDTH = "32" *) 
  (* C_MMU_DTLB_SIZE = "4" *) 
  (* C_MMU_ITLB_SIZE = "2" *) 
  (* C_MMU_PRIVILEGED_INSTR = "0" *) 
  (* C_MMU_TLB_ACCESS = "3" *) 
  (* C_MMU_ZONES = "16" *) 
  (* C_M_AXI_DC_ADDR_WIDTH = "32" *) 
  (* C_M_AXI_DC_ARUSER_WIDTH = "5" *) 
  (* C_M_AXI_DC_AWUSER_WIDTH = "5" *) 
  (* C_M_AXI_DC_BUSER_WIDTH = "1" *) 
  (* C_M_AXI_DC_DATA_WIDTH = "32" *) 
  (* C_M_AXI_DC_EXCLUSIVE_ACCESS = "0" *) 
  (* C_M_AXI_DC_RUSER_WIDTH = "1" *) 
  (* C_M_AXI_DC_THREAD_ID_WIDTH = "1" *) 
  (* C_M_AXI_DC_USER_VALUE = "31" *) 
  (* C_M_AXI_DC_WUSER_WIDTH = "1" *) 
  (* C_M_AXI_DP_ADDR_WIDTH = "32" *) 
  (* C_M_AXI_DP_DATA_WIDTH = "32" *) 
  (* C_M_AXI_DP_EXCLUSIVE_ACCESS = "0" *) 
  (* C_M_AXI_DP_THREAD_ID_WIDTH = "1" *) 
  (* C_M_AXI_D_BUS_EXCEPTION = "0" *) 
  (* C_M_AXI_IC_ADDR_WIDTH = "32" *) 
  (* C_M_AXI_IC_ARUSER_WIDTH = "5" *) 
  (* C_M_AXI_IC_AWUSER_WIDTH = "5" *) 
  (* C_M_AXI_IC_BUSER_WIDTH = "1" *) 
  (* C_M_AXI_IC_DATA_WIDTH = "32" *) 
  (* C_M_AXI_IC_RUSER_WIDTH = "1" *) 
  (* C_M_AXI_IC_THREAD_ID_WIDTH = "1" *) 
  (* C_M_AXI_IC_USER_VALUE = "31" *) 
  (* C_M_AXI_IC_WUSER_WIDTH = "1" *) 
  (* C_M_AXI_IP_ADDR_WIDTH = "32" *) 
  (* C_M_AXI_IP_DATA_WIDTH = "32" *) 
  (* C_M_AXI_IP_THREAD_ID_WIDTH = "1" *) 
  (* C_M_AXI_I_BUS_EXCEPTION = "0" *) 
  (* C_NUMBER_OF_PC_BRK = "1" *) 
  (* C_NUMBER_OF_RD_ADDR_BRK = "0" *) 
  (* C_NUMBER_OF_WR_ADDR_BRK = "0" *) 
  (* C_NUM_SYNC_FF_CLK = "2" *) 
  (* C_NUM_SYNC_FF_CLK_DEBUG = "2" *) 
  (* C_NUM_SYNC_FF_CLK_IRQ = "1" *) 
  (* C_NUM_SYNC_FF_DBG_CLK = "1" *) 
  (* C_NUM_SYNC_FF_DBG_TRACE_CLK = "2" *) 
  (* C_OPCODE_0x0_ILLEGAL = "0" *) 
  (* C_OPTIMIZATION = "0" *) 
  (* C_PC_WIDTH = "32" *) 
  (* C_PIADDR_SIZE = "32" *) 
  (* C_PVR = "0" *) 
  (* C_PVR_USER1 = "8'b00000000" *) 
  (* C_PVR_USER2 = "0" *) 
  (* C_RESET_MSR = "0" *) 
  (* C_S0_AXIS_DATA_WIDTH = "32" *) 
  (* C_S10_AXIS_DATA_WIDTH = "32" *) 
  (* C_S11_AXIS_DATA_WIDTH = "32" *) 
  (* C_S12_AXIS_DATA_WIDTH = "32" *) 
  (* C_S13_AXIS_DATA_WIDTH = "32" *) 
  (* C_S14_AXIS_DATA_WIDTH = "32" *) 
  (* C_S15_AXIS_DATA_WIDTH = "32" *) 
  (* C_S1_AXIS_DATA_WIDTH = "32" *) 
  (* C_S2_AXIS_DATA_WIDTH = "32" *) 
  (* C_S3_AXIS_DATA_WIDTH = "32" *) 
  (* C_S4_AXIS_DATA_WIDTH = "32" *) 
  (* C_S5_AXIS_DATA_WIDTH = "32" *) 
  (* C_S6_AXIS_DATA_WIDTH = "32" *) 
  (* C_S7_AXIS_DATA_WIDTH = "32" *) 
  (* C_S8_AXIS_DATA_WIDTH = "32" *) 
  (* C_S9_AXIS_DATA_WIDTH = "32" *) 
  (* C_SCO = "0" *) 
  (* C_UNALIGNED_EXCEPTIONS = "0" *) 
  (* C_USE_BARREL = "0" *) 
  (* C_USE_BRANCH_TARGET_CACHE = "0" *) 
  (* C_USE_CONFIG_RESET = "0" *) 
  (* C_USE_DCACHE = "0" *) 
  (* C_USE_DIV = "0" *) 
  (* C_USE_EXTENDED_FSL_INSTR = "0" *) 
  (* C_USE_EXT_BRK = "0" *) 
  (* C_USE_EXT_NM_BRK = "0" *) 
  (* C_USE_FPU = "0" *) 
  (* C_USE_HW_MUL = "0" *) 
  (* C_USE_ICACHE = "0" *) 
  (* C_USE_INTERRUPT = "0" *) 
  (* C_USE_MMU = "0" *) 
  (* C_USE_MSR_INSTR = "0" *) 
  (* C_USE_NON_SECURE = "0" *) 
  (* C_USE_PCMP_INSTR = "0" *) 
  (* C_USE_REORDER_INSTR = "1" *) 
  (* C_USE_STACK_PROTECTION = "0" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  MicroBlaze U0
       (.Byte_Enable(Byte_Enable),
        .Clk(Clk),
        .Config_Reset(NLW_U0_Config_Reset_UNCONNECTED),
        .DCE(NLW_U0_DCE_UNCONNECTED),
        .DEBUG_ACLK(NLW_U0_DEBUG_ACLK_UNCONNECTED),
        .DEBUG_ARESETN(NLW_U0_DEBUG_ARESETN_UNCONNECTED),
        .DReady(DReady),
        .DUE(NLW_U0_DUE_UNCONNECTED),
        .DWait(NLW_U0_DWait_UNCONNECTED),
        .D_AS(D_AS),
        .Data_Addr({NLW_U0_Data_Addr_UNCONNECTED[0:9],Data_Addr[10],NLW_U0_Data_Addr_UNCONNECTED[11:17],Data_Addr[18:29],NLW_U0_Data_Addr_UNCONNECTED[30:31]}),
        .Data_Read(Data_Read),
        .Data_Write(Data_Write),
        .Dbg_ARADDR(NLW_U0_Dbg_ARADDR_UNCONNECTED[14:2]),
        .Dbg_ARREADY(NLW_U0_Dbg_ARREADY_UNCONNECTED),
        .Dbg_ARVALID(NLW_U0_Dbg_ARVALID_UNCONNECTED),
        .Dbg_AWADDR(NLW_U0_Dbg_AWADDR_UNCONNECTED[14:2]),
        .Dbg_AWREADY(NLW_U0_Dbg_AWREADY_UNCONNECTED),
        .Dbg_AWVALID(NLW_U0_Dbg_AWVALID_UNCONNECTED),
        .Dbg_BREADY(NLW_U0_Dbg_BREADY_UNCONNECTED),
        .Dbg_BRESP(NLW_U0_Dbg_BRESP_UNCONNECTED[1:0]),
        .Dbg_BVALID(NLW_U0_Dbg_BVALID_UNCONNECTED),
        .Dbg_Capture(Dbg_Capture),
        .Dbg_Clk(Dbg_Clk),
        .Dbg_Continue(NLW_U0_Dbg_Continue_UNCONNECTED),
        .Dbg_Disable(NLW_U0_Dbg_Disable_UNCONNECTED),
        .Dbg_Intr(NLW_U0_Dbg_Intr_UNCONNECTED),
        .Dbg_RDATA(NLW_U0_Dbg_RDATA_UNCONNECTED[31:0]),
        .Dbg_RREADY(NLW_U0_Dbg_RREADY_UNCONNECTED),
        .Dbg_RRESP(NLW_U0_Dbg_RRESP_UNCONNECTED[1:0]),
        .Dbg_RVALID(NLW_U0_Dbg_RVALID_UNCONNECTED),
        .Dbg_Reg_En(Dbg_Reg_En),
        .Dbg_Shift(Dbg_Shift),
        .Dbg_Stop(NLW_U0_Dbg_Stop_UNCONNECTED),
        .Dbg_TDI(Dbg_TDI),
        .Dbg_TDO(Dbg_TDO),
        .Dbg_Trace_Clk(NLW_U0_Dbg_Trace_Clk_UNCONNECTED),
        .Dbg_Trace_Data(NLW_U0_Dbg_Trace_Data_UNCONNECTED[0:35]),
        .Dbg_Trace_Ready(NLW_U0_Dbg_Trace_Ready_UNCONNECTED),
        .Dbg_Trace_Valid(NLW_U0_Dbg_Trace_Valid_UNCONNECTED),
        .Dbg_Trig_Ack_In(NLW_U0_Dbg_Trig_Ack_In_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out(NLW_U0_Dbg_Trig_Ack_Out_UNCONNECTED[0:7]),
        .Dbg_Trig_In(NLW_U0_Dbg_Trig_In_UNCONNECTED[0:7]),
        .Dbg_Trig_Out(NLW_U0_Dbg_Trig_Out_UNCONNECTED[0:7]),
        .Dbg_Update(Dbg_Update),
        .Dbg_WDATA(NLW_U0_Dbg_WDATA_UNCONNECTED[31:0]),
        .Dbg_WREADY(NLW_U0_Dbg_WREADY_UNCONNECTED),
        .Dbg_WVALID(NLW_U0_Dbg_WVALID_UNCONNECTED),
        .Dbg_Wakeup(NLW_U0_Dbg_Wakeup_UNCONNECTED),
        .Debug_Rst(Debug_Rst),
        .Ext_BRK(NLW_U0_Ext_BRK_UNCONNECTED),
        .Ext_NM_BRK(NLW_U0_Ext_NM_BRK_UNCONNECTED),
        .Hibernate(NLW_U0_Hibernate_UNCONNECTED),
        .ICE(NLW_U0_ICE_UNCONNECTED),
        .IFetch(NLW_U0_IFetch_UNCONNECTED),
        .IReady(IReady),
        .IUE(NLW_U0_IUE_UNCONNECTED),
        .IWAIT(NLW_U0_IWAIT_UNCONNECTED),
        .I_AS(I_AS),
        .Instr(Instr),
        .Instr_Addr({NLW_U0_Instr_Addr_UNCONNECTED[0:17],Instr_Addr[18:29],NLW_U0_Instr_Addr_UNCONNECTED[30:31]}),
        .Interrupt(NLW_U0_Interrupt_UNCONNECTED),
        .Interrupt_Ack(NLW_U0_Interrupt_Ack_UNCONNECTED[0:1]),
        .Interrupt_Address(NLW_U0_Interrupt_Address_UNCONNECTED[0:31]),
        .LOCKSTEP_Master_Out(NLW_U0_LOCKSTEP_Master_Out_UNCONNECTED[0:4095]),
        .LOCKSTEP_Out(NLW_U0_LOCKSTEP_Out_UNCONNECTED[0:4095]),
        .LOCKSTEP_Slave_In(NLW_U0_LOCKSTEP_Slave_In_UNCONNECTED[0:4095]),
        .M0_AXIS_TDATA(NLW_U0_M0_AXIS_TDATA_UNCONNECTED[31:0]),
        .M0_AXIS_TLAST(NLW_U0_M0_AXIS_TLAST_UNCONNECTED),
        .M0_AXIS_TREADY(NLW_U0_M0_AXIS_TREADY_UNCONNECTED),
        .M0_AXIS_TVALID(NLW_U0_M0_AXIS_TVALID_UNCONNECTED),
        .M10_AXIS_TDATA(NLW_U0_M10_AXIS_TDATA_UNCONNECTED[31:0]),
        .M10_AXIS_TLAST(NLW_U0_M10_AXIS_TLAST_UNCONNECTED),
        .M10_AXIS_TREADY(NLW_U0_M10_AXIS_TREADY_UNCONNECTED),
        .M10_AXIS_TVALID(NLW_U0_M10_AXIS_TVALID_UNCONNECTED),
        .M11_AXIS_TDATA(NLW_U0_M11_AXIS_TDATA_UNCONNECTED[31:0]),
        .M11_AXIS_TLAST(NLW_U0_M11_AXIS_TLAST_UNCONNECTED),
        .M11_AXIS_TREADY(NLW_U0_M11_AXIS_TREADY_UNCONNECTED),
        .M11_AXIS_TVALID(NLW_U0_M11_AXIS_TVALID_UNCONNECTED),
        .M12_AXIS_TDATA(NLW_U0_M12_AXIS_TDATA_UNCONNECTED[31:0]),
        .M12_AXIS_TLAST(NLW_U0_M12_AXIS_TLAST_UNCONNECTED),
        .M12_AXIS_TREADY(NLW_U0_M12_AXIS_TREADY_UNCONNECTED),
        .M12_AXIS_TVALID(NLW_U0_M12_AXIS_TVALID_UNCONNECTED),
        .M13_AXIS_TDATA(NLW_U0_M13_AXIS_TDATA_UNCONNECTED[31:0]),
        .M13_AXIS_TLAST(NLW_U0_M13_AXIS_TLAST_UNCONNECTED),
        .M13_AXIS_TREADY(NLW_U0_M13_AXIS_TREADY_UNCONNECTED),
        .M13_AXIS_TVALID(NLW_U0_M13_AXIS_TVALID_UNCONNECTED),
        .M14_AXIS_TDATA(NLW_U0_M14_AXIS_TDATA_UNCONNECTED[31:0]),
        .M14_AXIS_TLAST(NLW_U0_M14_AXIS_TLAST_UNCONNECTED),
        .M14_AXIS_TREADY(NLW_U0_M14_AXIS_TREADY_UNCONNECTED),
        .M14_AXIS_TVALID(NLW_U0_M14_AXIS_TVALID_UNCONNECTED),
        .M15_AXIS_TDATA(NLW_U0_M15_AXIS_TDATA_UNCONNECTED[31:0]),
        .M15_AXIS_TLAST(NLW_U0_M15_AXIS_TLAST_UNCONNECTED),
        .M15_AXIS_TREADY(NLW_U0_M15_AXIS_TREADY_UNCONNECTED),
        .M15_AXIS_TVALID(NLW_U0_M15_AXIS_TVALID_UNCONNECTED),
        .M1_AXIS_TDATA(NLW_U0_M1_AXIS_TDATA_UNCONNECTED[31:0]),
        .M1_AXIS_TLAST(NLW_U0_M1_AXIS_TLAST_UNCONNECTED),
        .M1_AXIS_TREADY(NLW_U0_M1_AXIS_TREADY_UNCONNECTED),
        .M1_AXIS_TVALID(NLW_U0_M1_AXIS_TVALID_UNCONNECTED),
        .M2_AXIS_TDATA(NLW_U0_M2_AXIS_TDATA_UNCONNECTED[31:0]),
        .M2_AXIS_TLAST(NLW_U0_M2_AXIS_TLAST_UNCONNECTED),
        .M2_AXIS_TREADY(NLW_U0_M2_AXIS_TREADY_UNCONNECTED),
        .M2_AXIS_TVALID(NLW_U0_M2_AXIS_TVALID_UNCONNECTED),
        .M3_AXIS_TDATA(NLW_U0_M3_AXIS_TDATA_UNCONNECTED[31:0]),
        .M3_AXIS_TLAST(NLW_U0_M3_AXIS_TLAST_UNCONNECTED),
        .M3_AXIS_TREADY(NLW_U0_M3_AXIS_TREADY_UNCONNECTED),
        .M3_AXIS_TVALID(NLW_U0_M3_AXIS_TVALID_UNCONNECTED),
        .M4_AXIS_TDATA(NLW_U0_M4_AXIS_TDATA_UNCONNECTED[31:0]),
        .M4_AXIS_TLAST(NLW_U0_M4_AXIS_TLAST_UNCONNECTED),
        .M4_AXIS_TREADY(NLW_U0_M4_AXIS_TREADY_UNCONNECTED),
        .M4_AXIS_TVALID(NLW_U0_M4_AXIS_TVALID_UNCONNECTED),
        .M5_AXIS_TDATA(NLW_U0_M5_AXIS_TDATA_UNCONNECTED[31:0]),
        .M5_AXIS_TLAST(NLW_U0_M5_AXIS_TLAST_UNCONNECTED),
        .M5_AXIS_TREADY(NLW_U0_M5_AXIS_TREADY_UNCONNECTED),
        .M5_AXIS_TVALID(NLW_U0_M5_AXIS_TVALID_UNCONNECTED),
        .M6_AXIS_TDATA(NLW_U0_M6_AXIS_TDATA_UNCONNECTED[31:0]),
        .M6_AXIS_TLAST(NLW_U0_M6_AXIS_TLAST_UNCONNECTED),
        .M6_AXIS_TREADY(NLW_U0_M6_AXIS_TREADY_UNCONNECTED),
        .M6_AXIS_TVALID(NLW_U0_M6_AXIS_TVALID_UNCONNECTED),
        .M7_AXIS_TDATA(NLW_U0_M7_AXIS_TDATA_UNCONNECTED[31:0]),
        .M7_AXIS_TLAST(NLW_U0_M7_AXIS_TLAST_UNCONNECTED),
        .M7_AXIS_TREADY(NLW_U0_M7_AXIS_TREADY_UNCONNECTED),
        .M7_AXIS_TVALID(NLW_U0_M7_AXIS_TVALID_UNCONNECTED),
        .M8_AXIS_TDATA(NLW_U0_M8_AXIS_TDATA_UNCONNECTED[31:0]),
        .M8_AXIS_TLAST(NLW_U0_M8_AXIS_TLAST_UNCONNECTED),
        .M8_AXIS_TREADY(NLW_U0_M8_AXIS_TREADY_UNCONNECTED),
        .M8_AXIS_TVALID(NLW_U0_M8_AXIS_TVALID_UNCONNECTED),
        .M9_AXIS_TDATA(NLW_U0_M9_AXIS_TDATA_UNCONNECTED[31:0]),
        .M9_AXIS_TLAST(NLW_U0_M9_AXIS_TLAST_UNCONNECTED),
        .M9_AXIS_TREADY(NLW_U0_M9_AXIS_TREADY_UNCONNECTED),
        .M9_AXIS_TVALID(NLW_U0_M9_AXIS_TVALID_UNCONNECTED),
        .MB_Error(NLW_U0_MB_Error_UNCONNECTED),
        .MB_Halted(NLW_U0_MB_Halted_UNCONNECTED),
        .M_AXI_DC_ACADDR(NLW_U0_M_AXI_DC_ACADDR_UNCONNECTED[31:0]),
        .M_AXI_DC_ACPROT(NLW_U0_M_AXI_DC_ACPROT_UNCONNECTED[2:0]),
        .M_AXI_DC_ACREADY(NLW_U0_M_AXI_DC_ACREADY_UNCONNECTED),
        .M_AXI_DC_ACSNOOP(NLW_U0_M_AXI_DC_ACSNOOP_UNCONNECTED[3:0]),
        .M_AXI_DC_ACVALID(NLW_U0_M_AXI_DC_ACVALID_UNCONNECTED),
        .M_AXI_DC_ARADDR(NLW_U0_M_AXI_DC_ARADDR_UNCONNECTED[31:0]),
        .M_AXI_DC_ARBAR(NLW_U0_M_AXI_DC_ARBAR_UNCONNECTED[1:0]),
        .M_AXI_DC_ARBURST(NLW_U0_M_AXI_DC_ARBURST_UNCONNECTED[1:0]),
        .M_AXI_DC_ARCACHE(NLW_U0_M_AXI_DC_ARCACHE_UNCONNECTED[3:0]),
        .M_AXI_DC_ARDOMAIN(NLW_U0_M_AXI_DC_ARDOMAIN_UNCONNECTED[1:0]),
        .M_AXI_DC_ARID(NLW_U0_M_AXI_DC_ARID_UNCONNECTED[0]),
        .M_AXI_DC_ARLEN(NLW_U0_M_AXI_DC_ARLEN_UNCONNECTED[7:0]),
        .M_AXI_DC_ARLOCK(NLW_U0_M_AXI_DC_ARLOCK_UNCONNECTED),
        .M_AXI_DC_ARPROT(NLW_U0_M_AXI_DC_ARPROT_UNCONNECTED[2:0]),
        .M_AXI_DC_ARQOS(NLW_U0_M_AXI_DC_ARQOS_UNCONNECTED[3:0]),
        .M_AXI_DC_ARREADY(NLW_U0_M_AXI_DC_ARREADY_UNCONNECTED),
        .M_AXI_DC_ARSIZE(NLW_U0_M_AXI_DC_ARSIZE_UNCONNECTED[2:0]),
        .M_AXI_DC_ARSNOOP(NLW_U0_M_AXI_DC_ARSNOOP_UNCONNECTED[3:0]),
        .M_AXI_DC_ARUSER(NLW_U0_M_AXI_DC_ARUSER_UNCONNECTED[4:0]),
        .M_AXI_DC_ARVALID(NLW_U0_M_AXI_DC_ARVALID_UNCONNECTED),
        .M_AXI_DC_AWADDR(NLW_U0_M_AXI_DC_AWADDR_UNCONNECTED[31:0]),
        .M_AXI_DC_AWBAR(NLW_U0_M_AXI_DC_AWBAR_UNCONNECTED[1:0]),
        .M_AXI_DC_AWBURST(NLW_U0_M_AXI_DC_AWBURST_UNCONNECTED[1:0]),
        .M_AXI_DC_AWCACHE(NLW_U0_M_AXI_DC_AWCACHE_UNCONNECTED[3:0]),
        .M_AXI_DC_AWDOMAIN(NLW_U0_M_AXI_DC_AWDOMAIN_UNCONNECTED[1:0]),
        .M_AXI_DC_AWID(NLW_U0_M_AXI_DC_AWID_UNCONNECTED[0]),
        .M_AXI_DC_AWLEN(NLW_U0_M_AXI_DC_AWLEN_UNCONNECTED[7:0]),
        .M_AXI_DC_AWLOCK(NLW_U0_M_AXI_DC_AWLOCK_UNCONNECTED),
        .M_AXI_DC_AWPROT(NLW_U0_M_AXI_DC_AWPROT_UNCONNECTED[2:0]),
        .M_AXI_DC_AWQOS(NLW_U0_M_AXI_DC_AWQOS_UNCONNECTED[3:0]),
        .M_AXI_DC_AWREADY(NLW_U0_M_AXI_DC_AWREADY_UNCONNECTED),
        .M_AXI_DC_AWSIZE(NLW_U0_M_AXI_DC_AWSIZE_UNCONNECTED[2:0]),
        .M_AXI_DC_AWSNOOP(NLW_U0_M_AXI_DC_AWSNOOP_UNCONNECTED[2:0]),
        .M_AXI_DC_AWUSER(NLW_U0_M_AXI_DC_AWUSER_UNCONNECTED[4:0]),
        .M_AXI_DC_AWVALID(NLW_U0_M_AXI_DC_AWVALID_UNCONNECTED),
        .M_AXI_DC_BID(NLW_U0_M_AXI_DC_BID_UNCONNECTED[0]),
        .M_AXI_DC_BREADY(NLW_U0_M_AXI_DC_BREADY_UNCONNECTED),
        .M_AXI_DC_BRESP(NLW_U0_M_AXI_DC_BRESP_UNCONNECTED[1:0]),
        .M_AXI_DC_BUSER(NLW_U0_M_AXI_DC_BUSER_UNCONNECTED[0]),
        .M_AXI_DC_BVALID(NLW_U0_M_AXI_DC_BVALID_UNCONNECTED),
        .M_AXI_DC_CDDATA(NLW_U0_M_AXI_DC_CDDATA_UNCONNECTED[31:0]),
        .M_AXI_DC_CDLAST(NLW_U0_M_AXI_DC_CDLAST_UNCONNECTED),
        .M_AXI_DC_CDREADY(NLW_U0_M_AXI_DC_CDREADY_UNCONNECTED),
        .M_AXI_DC_CDVALID(NLW_U0_M_AXI_DC_CDVALID_UNCONNECTED),
        .M_AXI_DC_CRREADY(NLW_U0_M_AXI_DC_CRREADY_UNCONNECTED),
        .M_AXI_DC_CRRESP(NLW_U0_M_AXI_DC_CRRESP_UNCONNECTED[4:0]),
        .M_AXI_DC_CRVALID(NLW_U0_M_AXI_DC_CRVALID_UNCONNECTED),
        .M_AXI_DC_RACK(NLW_U0_M_AXI_DC_RACK_UNCONNECTED),
        .M_AXI_DC_RDATA(NLW_U0_M_AXI_DC_RDATA_UNCONNECTED[31:0]),
        .M_AXI_DC_RID(NLW_U0_M_AXI_DC_RID_UNCONNECTED[0]),
        .M_AXI_DC_RLAST(NLW_U0_M_AXI_DC_RLAST_UNCONNECTED),
        .M_AXI_DC_RREADY(NLW_U0_M_AXI_DC_RREADY_UNCONNECTED),
        .M_AXI_DC_RRESP(NLW_U0_M_AXI_DC_RRESP_UNCONNECTED[1:0]),
        .M_AXI_DC_RUSER(NLW_U0_M_AXI_DC_RUSER_UNCONNECTED[0]),
        .M_AXI_DC_RVALID(NLW_U0_M_AXI_DC_RVALID_UNCONNECTED),
        .M_AXI_DC_WACK(NLW_U0_M_AXI_DC_WACK_UNCONNECTED),
        .M_AXI_DC_WDATA(NLW_U0_M_AXI_DC_WDATA_UNCONNECTED[31:0]),
        .M_AXI_DC_WLAST(NLW_U0_M_AXI_DC_WLAST_UNCONNECTED),
        .M_AXI_DC_WREADY(NLW_U0_M_AXI_DC_WREADY_UNCONNECTED),
        .M_AXI_DC_WSTRB(NLW_U0_M_AXI_DC_WSTRB_UNCONNECTED[3:0]),
        .M_AXI_DC_WUSER(NLW_U0_M_AXI_DC_WUSER_UNCONNECTED[0]),
        .M_AXI_DC_WVALID(NLW_U0_M_AXI_DC_WVALID_UNCONNECTED),
        .M_AXI_DP_ARADDR({M_AXI_DP_ARADDR[31:16],NLW_U0_M_AXI_DP_ARADDR_UNCONNECTED[15:4],M_AXI_DP_ARADDR[3:2],NLW_U0_M_AXI_DP_ARADDR_UNCONNECTED[1:0]}),
        .M_AXI_DP_ARBURST(NLW_U0_M_AXI_DP_ARBURST_UNCONNECTED[1:0]),
        .M_AXI_DP_ARCACHE(NLW_U0_M_AXI_DP_ARCACHE_UNCONNECTED[3:0]),
        .M_AXI_DP_ARID(NLW_U0_M_AXI_DP_ARID_UNCONNECTED[0]),
        .M_AXI_DP_ARLEN(NLW_U0_M_AXI_DP_ARLEN_UNCONNECTED[7:0]),
        .M_AXI_DP_ARLOCK(NLW_U0_M_AXI_DP_ARLOCK_UNCONNECTED),
        .M_AXI_DP_ARPROT(NLW_U0_M_AXI_DP_ARPROT_UNCONNECTED[2:0]),
        .M_AXI_DP_ARQOS(NLW_U0_M_AXI_DP_ARQOS_UNCONNECTED[3:0]),
        .M_AXI_DP_ARREADY(M_AXI_DP_ARREADY),
        .M_AXI_DP_ARSIZE(NLW_U0_M_AXI_DP_ARSIZE_UNCONNECTED[2:0]),
        .M_AXI_DP_ARVALID(M_AXI_DP_ARVALID),
        .M_AXI_DP_AWADDR(NLW_U0_M_AXI_DP_AWADDR_UNCONNECTED[31:0]),
        .M_AXI_DP_AWBURST(NLW_U0_M_AXI_DP_AWBURST_UNCONNECTED[1:0]),
        .M_AXI_DP_AWCACHE(NLW_U0_M_AXI_DP_AWCACHE_UNCONNECTED[3:0]),
        .M_AXI_DP_AWID(NLW_U0_M_AXI_DP_AWID_UNCONNECTED[0]),
        .M_AXI_DP_AWLEN(NLW_U0_M_AXI_DP_AWLEN_UNCONNECTED[7:0]),
        .M_AXI_DP_AWLOCK(NLW_U0_M_AXI_DP_AWLOCK_UNCONNECTED),
        .M_AXI_DP_AWPROT(NLW_U0_M_AXI_DP_AWPROT_UNCONNECTED[2:0]),
        .M_AXI_DP_AWQOS(NLW_U0_M_AXI_DP_AWQOS_UNCONNECTED[3:0]),
        .M_AXI_DP_AWREADY(M_AXI_DP_AWREADY),
        .M_AXI_DP_AWSIZE(NLW_U0_M_AXI_DP_AWSIZE_UNCONNECTED[2:0]),
        .M_AXI_DP_AWVALID(M_AXI_DP_AWVALID),
        .M_AXI_DP_BID(NLW_U0_M_AXI_DP_BID_UNCONNECTED[0]),
        .M_AXI_DP_BREADY(NLW_U0_M_AXI_DP_BREADY_UNCONNECTED),
        .M_AXI_DP_BRESP(NLW_U0_M_AXI_DP_BRESP_UNCONNECTED[1:0]),
        .M_AXI_DP_BVALID(M_AXI_DP_BVALID),
        .M_AXI_DP_RDATA(M_AXI_DP_RDATA),
        .M_AXI_DP_RID(NLW_U0_M_AXI_DP_RID_UNCONNECTED[0]),
        .M_AXI_DP_RLAST(NLW_U0_M_AXI_DP_RLAST_UNCONNECTED),
        .M_AXI_DP_RREADY(NLW_U0_M_AXI_DP_RREADY_UNCONNECTED),
        .M_AXI_DP_RRESP(NLW_U0_M_AXI_DP_RRESP_UNCONNECTED[1:0]),
        .M_AXI_DP_RVALID(M_AXI_DP_RVALID),
        .M_AXI_DP_WDATA(M_AXI_DP_WDATA),
        .M_AXI_DP_WLAST(NLW_U0_M_AXI_DP_WLAST_UNCONNECTED),
        .M_AXI_DP_WREADY(M_AXI_DP_WREADY),
        .M_AXI_DP_WSTRB(NLW_U0_M_AXI_DP_WSTRB_UNCONNECTED[3:0]),
        .M_AXI_DP_WVALID(M_AXI_DP_WVALID),
        .M_AXI_IC_ACADDR(NLW_U0_M_AXI_IC_ACADDR_UNCONNECTED[31:0]),
        .M_AXI_IC_ACPROT(NLW_U0_M_AXI_IC_ACPROT_UNCONNECTED[2:0]),
        .M_AXI_IC_ACREADY(NLW_U0_M_AXI_IC_ACREADY_UNCONNECTED),
        .M_AXI_IC_ACSNOOP(NLW_U0_M_AXI_IC_ACSNOOP_UNCONNECTED[3:0]),
        .M_AXI_IC_ACVALID(NLW_U0_M_AXI_IC_ACVALID_UNCONNECTED),
        .M_AXI_IC_ARADDR(NLW_U0_M_AXI_IC_ARADDR_UNCONNECTED[31:0]),
        .M_AXI_IC_ARBAR(NLW_U0_M_AXI_IC_ARBAR_UNCONNECTED[1:0]),
        .M_AXI_IC_ARBURST(NLW_U0_M_AXI_IC_ARBURST_UNCONNECTED[1:0]),
        .M_AXI_IC_ARCACHE(NLW_U0_M_AXI_IC_ARCACHE_UNCONNECTED[3:0]),
        .M_AXI_IC_ARDOMAIN(NLW_U0_M_AXI_IC_ARDOMAIN_UNCONNECTED[1:0]),
        .M_AXI_IC_ARID(NLW_U0_M_AXI_IC_ARID_UNCONNECTED[0]),
        .M_AXI_IC_ARLEN(NLW_U0_M_AXI_IC_ARLEN_UNCONNECTED[7:0]),
        .M_AXI_IC_ARLOCK(NLW_U0_M_AXI_IC_ARLOCK_UNCONNECTED),
        .M_AXI_IC_ARPROT(NLW_U0_M_AXI_IC_ARPROT_UNCONNECTED[2:0]),
        .M_AXI_IC_ARQOS(NLW_U0_M_AXI_IC_ARQOS_UNCONNECTED[3:0]),
        .M_AXI_IC_ARREADY(NLW_U0_M_AXI_IC_ARREADY_UNCONNECTED),
        .M_AXI_IC_ARSIZE(NLW_U0_M_AXI_IC_ARSIZE_UNCONNECTED[2:0]),
        .M_AXI_IC_ARSNOOP(NLW_U0_M_AXI_IC_ARSNOOP_UNCONNECTED[3:0]),
        .M_AXI_IC_ARUSER(NLW_U0_M_AXI_IC_ARUSER_UNCONNECTED[4:0]),
        .M_AXI_IC_ARVALID(NLW_U0_M_AXI_IC_ARVALID_UNCONNECTED),
        .M_AXI_IC_AWADDR(NLW_U0_M_AXI_IC_AWADDR_UNCONNECTED[31:0]),
        .M_AXI_IC_AWBAR(NLW_U0_M_AXI_IC_AWBAR_UNCONNECTED[1:0]),
        .M_AXI_IC_AWBURST(NLW_U0_M_AXI_IC_AWBURST_UNCONNECTED[1:0]),
        .M_AXI_IC_AWCACHE(NLW_U0_M_AXI_IC_AWCACHE_UNCONNECTED[3:0]),
        .M_AXI_IC_AWDOMAIN(NLW_U0_M_AXI_IC_AWDOMAIN_UNCONNECTED[1:0]),
        .M_AXI_IC_AWID(NLW_U0_M_AXI_IC_AWID_UNCONNECTED[0]),
        .M_AXI_IC_AWLEN(NLW_U0_M_AXI_IC_AWLEN_UNCONNECTED[7:0]),
        .M_AXI_IC_AWLOCK(NLW_U0_M_AXI_IC_AWLOCK_UNCONNECTED),
        .M_AXI_IC_AWPROT(NLW_U0_M_AXI_IC_AWPROT_UNCONNECTED[2:0]),
        .M_AXI_IC_AWQOS(NLW_U0_M_AXI_IC_AWQOS_UNCONNECTED[3:0]),
        .M_AXI_IC_AWREADY(NLW_U0_M_AXI_IC_AWREADY_UNCONNECTED),
        .M_AXI_IC_AWSIZE(NLW_U0_M_AXI_IC_AWSIZE_UNCONNECTED[2:0]),
        .M_AXI_IC_AWSNOOP(NLW_U0_M_AXI_IC_AWSNOOP_UNCONNECTED[2:0]),
        .M_AXI_IC_AWUSER(NLW_U0_M_AXI_IC_AWUSER_UNCONNECTED[4:0]),
        .M_AXI_IC_AWVALID(NLW_U0_M_AXI_IC_AWVALID_UNCONNECTED),
        .M_AXI_IC_BID(NLW_U0_M_AXI_IC_BID_UNCONNECTED[0]),
        .M_AXI_IC_BREADY(NLW_U0_M_AXI_IC_BREADY_UNCONNECTED),
        .M_AXI_IC_BRESP(NLW_U0_M_AXI_IC_BRESP_UNCONNECTED[1:0]),
        .M_AXI_IC_BUSER(NLW_U0_M_AXI_IC_BUSER_UNCONNECTED[0]),
        .M_AXI_IC_BVALID(NLW_U0_M_AXI_IC_BVALID_UNCONNECTED),
        .M_AXI_IC_CDDATA(NLW_U0_M_AXI_IC_CDDATA_UNCONNECTED[31:0]),
        .M_AXI_IC_CDLAST(NLW_U0_M_AXI_IC_CDLAST_UNCONNECTED),
        .M_AXI_IC_CDREADY(NLW_U0_M_AXI_IC_CDREADY_UNCONNECTED),
        .M_AXI_IC_CDVALID(NLW_U0_M_AXI_IC_CDVALID_UNCONNECTED),
        .M_AXI_IC_CRREADY(NLW_U0_M_AXI_IC_CRREADY_UNCONNECTED),
        .M_AXI_IC_CRRESP(NLW_U0_M_AXI_IC_CRRESP_UNCONNECTED[4:0]),
        .M_AXI_IC_CRVALID(NLW_U0_M_AXI_IC_CRVALID_UNCONNECTED),
        .M_AXI_IC_RACK(NLW_U0_M_AXI_IC_RACK_UNCONNECTED),
        .M_AXI_IC_RDATA(NLW_U0_M_AXI_IC_RDATA_UNCONNECTED[31:0]),
        .M_AXI_IC_RID(NLW_U0_M_AXI_IC_RID_UNCONNECTED[0]),
        .M_AXI_IC_RLAST(NLW_U0_M_AXI_IC_RLAST_UNCONNECTED),
        .M_AXI_IC_RREADY(NLW_U0_M_AXI_IC_RREADY_UNCONNECTED),
        .M_AXI_IC_RRESP(NLW_U0_M_AXI_IC_RRESP_UNCONNECTED[1:0]),
        .M_AXI_IC_RUSER(NLW_U0_M_AXI_IC_RUSER_UNCONNECTED[0]),
        .M_AXI_IC_RVALID(NLW_U0_M_AXI_IC_RVALID_UNCONNECTED),
        .M_AXI_IC_WACK(NLW_U0_M_AXI_IC_WACK_UNCONNECTED),
        .M_AXI_IC_WDATA(NLW_U0_M_AXI_IC_WDATA_UNCONNECTED[31:0]),
        .M_AXI_IC_WLAST(NLW_U0_M_AXI_IC_WLAST_UNCONNECTED),
        .M_AXI_IC_WREADY(NLW_U0_M_AXI_IC_WREADY_UNCONNECTED),
        .M_AXI_IC_WSTRB(NLW_U0_M_AXI_IC_WSTRB_UNCONNECTED[3:0]),
        .M_AXI_IC_WUSER(NLW_U0_M_AXI_IC_WUSER_UNCONNECTED[0]),
        .M_AXI_IC_WVALID(NLW_U0_M_AXI_IC_WVALID_UNCONNECTED),
        .M_AXI_IP_ARADDR(NLW_U0_M_AXI_IP_ARADDR_UNCONNECTED[31:0]),
        .M_AXI_IP_ARBURST(NLW_U0_M_AXI_IP_ARBURST_UNCONNECTED[1:0]),
        .M_AXI_IP_ARCACHE(NLW_U0_M_AXI_IP_ARCACHE_UNCONNECTED[3:0]),
        .M_AXI_IP_ARID(NLW_U0_M_AXI_IP_ARID_UNCONNECTED[0]),
        .M_AXI_IP_ARLEN(NLW_U0_M_AXI_IP_ARLEN_UNCONNECTED[7:0]),
        .M_AXI_IP_ARLOCK(NLW_U0_M_AXI_IP_ARLOCK_UNCONNECTED),
        .M_AXI_IP_ARPROT(NLW_U0_M_AXI_IP_ARPROT_UNCONNECTED[2:0]),
        .M_AXI_IP_ARQOS(NLW_U0_M_AXI_IP_ARQOS_UNCONNECTED[3:0]),
        .M_AXI_IP_ARREADY(NLW_U0_M_AXI_IP_ARREADY_UNCONNECTED),
        .M_AXI_IP_ARSIZE(NLW_U0_M_AXI_IP_ARSIZE_UNCONNECTED[2:0]),
        .M_AXI_IP_ARVALID(NLW_U0_M_AXI_IP_ARVALID_UNCONNECTED),
        .M_AXI_IP_AWADDR(NLW_U0_M_AXI_IP_AWADDR_UNCONNECTED[31:0]),
        .M_AXI_IP_AWBURST(NLW_U0_M_AXI_IP_AWBURST_UNCONNECTED[1:0]),
        .M_AXI_IP_AWCACHE(NLW_U0_M_AXI_IP_AWCACHE_UNCONNECTED[3:0]),
        .M_AXI_IP_AWID(NLW_U0_M_AXI_IP_AWID_UNCONNECTED[0]),
        .M_AXI_IP_AWLEN(NLW_U0_M_AXI_IP_AWLEN_UNCONNECTED[7:0]),
        .M_AXI_IP_AWLOCK(NLW_U0_M_AXI_IP_AWLOCK_UNCONNECTED),
        .M_AXI_IP_AWPROT(NLW_U0_M_AXI_IP_AWPROT_UNCONNECTED[2:0]),
        .M_AXI_IP_AWQOS(NLW_U0_M_AXI_IP_AWQOS_UNCONNECTED[3:0]),
        .M_AXI_IP_AWREADY(NLW_U0_M_AXI_IP_AWREADY_UNCONNECTED),
        .M_AXI_IP_AWSIZE(NLW_U0_M_AXI_IP_AWSIZE_UNCONNECTED[2:0]),
        .M_AXI_IP_AWVALID(NLW_U0_M_AXI_IP_AWVALID_UNCONNECTED),
        .M_AXI_IP_BID(NLW_U0_M_AXI_IP_BID_UNCONNECTED[0]),
        .M_AXI_IP_BREADY(NLW_U0_M_AXI_IP_BREADY_UNCONNECTED),
        .M_AXI_IP_BRESP(NLW_U0_M_AXI_IP_BRESP_UNCONNECTED[1:0]),
        .M_AXI_IP_BVALID(NLW_U0_M_AXI_IP_BVALID_UNCONNECTED),
        .M_AXI_IP_RDATA(NLW_U0_M_AXI_IP_RDATA_UNCONNECTED[31:0]),
        .M_AXI_IP_RID(NLW_U0_M_AXI_IP_RID_UNCONNECTED[0]),
        .M_AXI_IP_RLAST(NLW_U0_M_AXI_IP_RLAST_UNCONNECTED),
        .M_AXI_IP_RREADY(NLW_U0_M_AXI_IP_RREADY_UNCONNECTED),
        .M_AXI_IP_RRESP(NLW_U0_M_AXI_IP_RRESP_UNCONNECTED[1:0]),
        .M_AXI_IP_RVALID(NLW_U0_M_AXI_IP_RVALID_UNCONNECTED),
        .M_AXI_IP_WDATA(NLW_U0_M_AXI_IP_WDATA_UNCONNECTED[31:0]),
        .M_AXI_IP_WLAST(NLW_U0_M_AXI_IP_WLAST_UNCONNECTED),
        .M_AXI_IP_WREADY(NLW_U0_M_AXI_IP_WREADY_UNCONNECTED),
        .M_AXI_IP_WSTRB(NLW_U0_M_AXI_IP_WSTRB_UNCONNECTED[3:0]),
        .M_AXI_IP_WVALID(NLW_U0_M_AXI_IP_WVALID_UNCONNECTED),
        .Mb_Reset(NLW_U0_Mb_Reset_UNCONNECTED),
        .Non_Secure(NLW_U0_Non_Secure_UNCONNECTED[0:3]),
        .Pause(NLW_U0_Pause_UNCONNECTED),
        .Pause_Ack(NLW_U0_Pause_Ack_UNCONNECTED),
        .RAM_From(NLW_U0_RAM_From_UNCONNECTED[16383:0]),
        .RAM_Static(NLW_U0_RAM_Static_UNCONNECTED[1023:0]),
        .RAM_To(NLW_U0_RAM_To_UNCONNECTED[16383:0]),
        .Read_Strobe(NLW_U0_Read_Strobe_UNCONNECTED),
        .Reset(Reset),
        .Reset_Mode(NLW_U0_Reset_Mode_UNCONNECTED[0:1]),
        .S0_AXIS_TDATA(NLW_U0_S0_AXIS_TDATA_UNCONNECTED[31:0]),
        .S0_AXIS_TLAST(NLW_U0_S0_AXIS_TLAST_UNCONNECTED),
        .S0_AXIS_TREADY(NLW_U0_S0_AXIS_TREADY_UNCONNECTED),
        .S0_AXIS_TVALID(NLW_U0_S0_AXIS_TVALID_UNCONNECTED),
        .S10_AXIS_TDATA(NLW_U0_S10_AXIS_TDATA_UNCONNECTED[31:0]),
        .S10_AXIS_TLAST(NLW_U0_S10_AXIS_TLAST_UNCONNECTED),
        .S10_AXIS_TREADY(NLW_U0_S10_AXIS_TREADY_UNCONNECTED),
        .S10_AXIS_TVALID(NLW_U0_S10_AXIS_TVALID_UNCONNECTED),
        .S11_AXIS_TDATA(NLW_U0_S11_AXIS_TDATA_UNCONNECTED[31:0]),
        .S11_AXIS_TLAST(NLW_U0_S11_AXIS_TLAST_UNCONNECTED),
        .S11_AXIS_TREADY(NLW_U0_S11_AXIS_TREADY_UNCONNECTED),
        .S11_AXIS_TVALID(NLW_U0_S11_AXIS_TVALID_UNCONNECTED),
        .S12_AXIS_TDATA(NLW_U0_S12_AXIS_TDATA_UNCONNECTED[31:0]),
        .S12_AXIS_TLAST(NLW_U0_S12_AXIS_TLAST_UNCONNECTED),
        .S12_AXIS_TREADY(NLW_U0_S12_AXIS_TREADY_UNCONNECTED),
        .S12_AXIS_TVALID(NLW_U0_S12_AXIS_TVALID_UNCONNECTED),
        .S13_AXIS_TDATA(NLW_U0_S13_AXIS_TDATA_UNCONNECTED[31:0]),
        .S13_AXIS_TLAST(NLW_U0_S13_AXIS_TLAST_UNCONNECTED),
        .S13_AXIS_TREADY(NLW_U0_S13_AXIS_TREADY_UNCONNECTED),
        .S13_AXIS_TVALID(NLW_U0_S13_AXIS_TVALID_UNCONNECTED),
        .S14_AXIS_TDATA(NLW_U0_S14_AXIS_TDATA_UNCONNECTED[31:0]),
        .S14_AXIS_TLAST(NLW_U0_S14_AXIS_TLAST_UNCONNECTED),
        .S14_AXIS_TREADY(NLW_U0_S14_AXIS_TREADY_UNCONNECTED),
        .S14_AXIS_TVALID(NLW_U0_S14_AXIS_TVALID_UNCONNECTED),
        .S15_AXIS_TDATA(NLW_U0_S15_AXIS_TDATA_UNCONNECTED[31:0]),
        .S15_AXIS_TLAST(NLW_U0_S15_AXIS_TLAST_UNCONNECTED),
        .S15_AXIS_TREADY(NLW_U0_S15_AXIS_TREADY_UNCONNECTED),
        .S15_AXIS_TVALID(NLW_U0_S15_AXIS_TVALID_UNCONNECTED),
        .S1_AXIS_TDATA(NLW_U0_S1_AXIS_TDATA_UNCONNECTED[31:0]),
        .S1_AXIS_TLAST(NLW_U0_S1_AXIS_TLAST_UNCONNECTED),
        .S1_AXIS_TREADY(NLW_U0_S1_AXIS_TREADY_UNCONNECTED),
        .S1_AXIS_TVALID(NLW_U0_S1_AXIS_TVALID_UNCONNECTED),
        .S2_AXIS_TDATA(NLW_U0_S2_AXIS_TDATA_UNCONNECTED[31:0]),
        .S2_AXIS_TLAST(NLW_U0_S2_AXIS_TLAST_UNCONNECTED),
        .S2_AXIS_TREADY(NLW_U0_S2_AXIS_TREADY_UNCONNECTED),
        .S2_AXIS_TVALID(NLW_U0_S2_AXIS_TVALID_UNCONNECTED),
        .S3_AXIS_TDATA(NLW_U0_S3_AXIS_TDATA_UNCONNECTED[31:0]),
        .S3_AXIS_TLAST(NLW_U0_S3_AXIS_TLAST_UNCONNECTED),
        .S3_AXIS_TREADY(NLW_U0_S3_AXIS_TREADY_UNCONNECTED),
        .S3_AXIS_TVALID(NLW_U0_S3_AXIS_TVALID_UNCONNECTED),
        .S4_AXIS_TDATA(NLW_U0_S4_AXIS_TDATA_UNCONNECTED[31:0]),
        .S4_AXIS_TLAST(NLW_U0_S4_AXIS_TLAST_UNCONNECTED),
        .S4_AXIS_TREADY(NLW_U0_S4_AXIS_TREADY_UNCONNECTED),
        .S4_AXIS_TVALID(NLW_U0_S4_AXIS_TVALID_UNCONNECTED),
        .S5_AXIS_TDATA(NLW_U0_S5_AXIS_TDATA_UNCONNECTED[31:0]),
        .S5_AXIS_TLAST(NLW_U0_S5_AXIS_TLAST_UNCONNECTED),
        .S5_AXIS_TREADY(NLW_U0_S5_AXIS_TREADY_UNCONNECTED),
        .S5_AXIS_TVALID(NLW_U0_S5_AXIS_TVALID_UNCONNECTED),
        .S6_AXIS_TDATA(NLW_U0_S6_AXIS_TDATA_UNCONNECTED[31:0]),
        .S6_AXIS_TLAST(NLW_U0_S6_AXIS_TLAST_UNCONNECTED),
        .S6_AXIS_TREADY(NLW_U0_S6_AXIS_TREADY_UNCONNECTED),
        .S6_AXIS_TVALID(NLW_U0_S6_AXIS_TVALID_UNCONNECTED),
        .S7_AXIS_TDATA(NLW_U0_S7_AXIS_TDATA_UNCONNECTED[31:0]),
        .S7_AXIS_TLAST(NLW_U0_S7_AXIS_TLAST_UNCONNECTED),
        .S7_AXIS_TREADY(NLW_U0_S7_AXIS_TREADY_UNCONNECTED),
        .S7_AXIS_TVALID(NLW_U0_S7_AXIS_TVALID_UNCONNECTED),
        .S8_AXIS_TDATA(NLW_U0_S8_AXIS_TDATA_UNCONNECTED[31:0]),
        .S8_AXIS_TLAST(NLW_U0_S8_AXIS_TLAST_UNCONNECTED),
        .S8_AXIS_TREADY(NLW_U0_S8_AXIS_TREADY_UNCONNECTED),
        .S8_AXIS_TVALID(NLW_U0_S8_AXIS_TVALID_UNCONNECTED),
        .S9_AXIS_TDATA(NLW_U0_S9_AXIS_TDATA_UNCONNECTED[31:0]),
        .S9_AXIS_TLAST(NLW_U0_S9_AXIS_TLAST_UNCONNECTED),
        .S9_AXIS_TREADY(NLW_U0_S9_AXIS_TREADY_UNCONNECTED),
        .S9_AXIS_TVALID(NLW_U0_S9_AXIS_TVALID_UNCONNECTED),
        .Scan_Reset(NLW_U0_Scan_Reset_UNCONNECTED),
        .Scan_Reset_Sel(NLW_U0_Scan_Reset_Sel_UNCONNECTED),
        .Sleep(NLW_U0_Sleep_UNCONNECTED),
        .Suspend(NLW_U0_Suspend_UNCONNECTED),
        .Trace_DCache_Hit(NLW_U0_Trace_DCache_Hit_UNCONNECTED),
        .Trace_DCache_Rdy(NLW_U0_Trace_DCache_Rdy_UNCONNECTED),
        .Trace_DCache_Read(NLW_U0_Trace_DCache_Read_UNCONNECTED),
        .Trace_DCache_Req(NLW_U0_Trace_DCache_Req_UNCONNECTED),
        .Trace_Data_Access(NLW_U0_Trace_Data_Access_UNCONNECTED),
        .Trace_Data_Address(NLW_U0_Trace_Data_Address_UNCONNECTED[0:31]),
        .Trace_Data_Byte_Enable(NLW_U0_Trace_Data_Byte_Enable_UNCONNECTED[0:3]),
        .Trace_Data_Read(NLW_U0_Trace_Data_Read_UNCONNECTED),
        .Trace_Data_Write(NLW_U0_Trace_Data_Write_UNCONNECTED),
        .Trace_Data_Write_Value(NLW_U0_Trace_Data_Write_Value_UNCONNECTED[0:31]),
        .Trace_Delay_Slot(NLW_U0_Trace_Delay_Slot_UNCONNECTED),
        .Trace_EX_PipeRun(NLW_U0_Trace_EX_PipeRun_UNCONNECTED),
        .Trace_Exception_Kind(NLW_U0_Trace_Exception_Kind_UNCONNECTED[0:4]),
        .Trace_Exception_Taken(NLW_U0_Trace_Exception_Taken_UNCONNECTED),
        .Trace_ICache_Hit(NLW_U0_Trace_ICache_Hit_UNCONNECTED),
        .Trace_ICache_Rdy(NLW_U0_Trace_ICache_Rdy_UNCONNECTED),
        .Trace_ICache_Req(NLW_U0_Trace_ICache_Req_UNCONNECTED),
        .Trace_Instruction(NLW_U0_Trace_Instruction_UNCONNECTED[0:31]),
        .Trace_Jump_Hit(NLW_U0_Trace_Jump_Hit_UNCONNECTED),
        .Trace_Jump_Taken(NLW_U0_Trace_Jump_Taken_UNCONNECTED),
        .Trace_MB_Halted(NLW_U0_Trace_MB_Halted_UNCONNECTED),
        .Trace_MEM_PipeRun(NLW_U0_Trace_MEM_PipeRun_UNCONNECTED),
        .Trace_MSR_Reg(NLW_U0_Trace_MSR_Reg_UNCONNECTED[0:14]),
        .Trace_New_Reg_Value(NLW_U0_Trace_New_Reg_Value_UNCONNECTED[0:31]),
        .Trace_OF_PipeRun(NLW_U0_Trace_OF_PipeRun_UNCONNECTED),
        .Trace_PC(NLW_U0_Trace_PC_UNCONNECTED[0:31]),
        .Trace_PID_Reg(NLW_U0_Trace_PID_Reg_UNCONNECTED[0:7]),
        .Trace_Reg_Addr(NLW_U0_Trace_Reg_Addr_UNCONNECTED[0:4]),
        .Trace_Reg_Write(NLW_U0_Trace_Reg_Write_UNCONNECTED),
        .Trace_Valid_Instr(NLW_U0_Trace_Valid_Instr_UNCONNECTED),
        .Wakeup(NLW_U0_Wakeup_UNCONNECTED[0:1]),
        .Write_Strobe(Write_Strobe));
endmodule

(* CHECK_LICENSE_TYPE = "design_gol_rst_clk_wiz_1_100M_0,proc_sys_reset,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "proc_sys_reset,Vivado 2017.2" *) 
module design_gol_rst_clk_wiz_1_100M_0
   (slowest_sync_clk,
    ext_reset_in,
    aux_reset_in,
    mb_debug_sys_rst,
    dcm_locked,
    mb_reset,
    bus_struct_reset,
    peripheral_reset,
    interconnect_aresetn,
    peripheral_aresetn);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 clock CLK" *) input slowest_sync_clk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 ext_reset RST" *) input ext_reset_in;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 aux_reset RST" *) input aux_reset_in;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 dbg_reset RST" *) input mb_debug_sys_rst;
  input dcm_locked;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 mb_rst RST" *) output mb_reset;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 bus_struct_reset RST" *) output [0:0]bus_struct_reset;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 peripheral_high_rst RST" *) output [0:0]peripheral_reset;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 interconnect_low_rst RST" *) output [0:0]interconnect_aresetn;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 peripheral_low_rst RST" *) output [0:0]peripheral_aresetn;

  wire [0:0]bus_struct_reset;
  wire dcm_locked;
  wire ext_reset_in;
  wire [0:0]interconnect_aresetn;
  wire mb_debug_sys_rst;
  wire mb_reset;
  wire [0:0]peripheral_aresetn;
  wire slowest_sync_clk;
  wire NLW_U0_aux_reset_in_UNCONNECTED;
  wire [0:0]NLW_U0_peripheral_reset_UNCONNECTED;

  (* C_AUX_RESET_HIGH = "1'b0" *) 
  (* C_AUX_RST_WIDTH = "4" *) 
  (* C_EXT_RESET_HIGH = "1'b1" *) 
  (* C_EXT_RST_WIDTH = "4" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_NUM_BUS_RST = "1" *) 
  (* C_NUM_INTERCONNECT_ARESETN = "1" *) 
  (* C_NUM_PERP_ARESETN = "1" *) 
  (* C_NUM_PERP_RST = "1" *) 
  proc_sys_reset U0
       (.aux_reset_in(NLW_U0_aux_reset_in_UNCONNECTED),
        .bus_struct_reset(bus_struct_reset),
        .dcm_locked(dcm_locked),
        .ext_reset_in(ext_reset_in),
        .interconnect_aresetn(interconnect_aresetn),
        .mb_debug_sys_rst(mb_debug_sys_rst),
        .mb_reset(mb_reset),
        .peripheral_aresetn(peripheral_aresetn),
        .peripheral_reset(NLW_U0_peripheral_reset_UNCONNECTED[0]),
        .slowest_sync_clk(slowest_sync_clk));
endmodule

(* ECO_CHECKSUM = "561073a9" *) (* POWER_OPT_BRAM_CDC = "0" *) (* POWER_OPT_BRAM_SR_ADDR = "0" *) 
(* POWER_OPT_LOOPED_NET_PERCENTAGE = "11" *) 
(* NotValidForBitStream *)
module design_gol_wrapper
   (reset_rtl,
    rx,
    sys_clock,
    tx);
  input reset_rtl;
  input rx;
  input sys_clock;
  output tx;

  wire reset_rtl;
  wire reset_rtl_IBUF;
  wire rx;
  wire rx_IBUF;
  (* IBUF_LOW_PWR *) wire sys_clock;
  wire tx;
  wire tx_OBUF;

initial begin
 $sdf_annotate("design_gol_wrapper_time_impl.sdf",,,,"tool_control");
end
  (* hw_handoff = "design_gol.hwdef" *) 
  design_gol design_gol_i
       (.reset_rtl(reset_rtl_IBUF),
        .rx(rx_IBUF),
        .sys_clock(sys_clock),
        .tx(tx_OBUF));
  IBUF reset_rtl_IBUF_inst
       (.I(reset_rtl),
        .O(reset_rtl_IBUF));
  IBUF rx_IBUF_inst
       (.I(rx),
        .O(rx_IBUF));
  OBUF tx_OBUF_inst
       (.I(tx_OBUF),
        .O(tx));
endmodule

(* CHECK_LICENSE_TYPE = "design_gol_xbar_0,axi_crossbar_v2_1_14_axi_crossbar,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "axi_crossbar_v2_1_14_axi_crossbar,Vivado 2017.2" *) 
module design_gol_xbar_0
   (aclk,
    aresetn,
    s_axi_awaddr,
    s_axi_awprot,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_araddr,
    s_axi_arprot,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rvalid,
    s_axi_rready,
    m_axi_awaddr,
    m_axi_awprot,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_bready,
    m_axi_araddr,
    m_axi_arprot,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_rready);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 CLKIF CLK" *) input aclk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 RSTIF RST" *) input aresetn;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI AWADDR" *) input [31:0]s_axi_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI AWPROT" *) input [2:0]s_axi_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI AWVALID" *) input [0:0]s_axi_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI AWREADY" *) output [0:0]s_axi_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI WDATA" *) input [31:0]s_axi_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI WSTRB" *) input [3:0]s_axi_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI WVALID" *) input [0:0]s_axi_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI WREADY" *) output [0:0]s_axi_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI BRESP" *) output [1:0]s_axi_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI BVALID" *) output [0:0]s_axi_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI BREADY" *) input [0:0]s_axi_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI ARADDR" *) input [31:0]s_axi_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI ARPROT" *) input [2:0]s_axi_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI ARVALID" *) input [0:0]s_axi_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI ARREADY" *) output [0:0]s_axi_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI RDATA" *) output [31:0]s_axi_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI RRESP" *) output [1:0]s_axi_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI RVALID" *) output [0:0]s_axi_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI RREADY" *) input [0:0]s_axi_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI AWADDR [31:0] [31:0], xilinx.com:interface:aximm:1.0 M01_AXI AWADDR [31:0] [63:32]" *) output [63:0]m_axi_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI AWPROT [2:0] [2:0], xilinx.com:interface:aximm:1.0 M01_AXI AWPROT [2:0] [5:3]" *) output [5:0]m_axi_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI AWVALID [0:0] [0:0], xilinx.com:interface:aximm:1.0 M01_AXI AWVALID [0:0] [1:1]" *) output [1:0]m_axi_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI AWREADY [0:0] [0:0], xilinx.com:interface:aximm:1.0 M01_AXI AWREADY [0:0] [1:1]" *) input [1:0]m_axi_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI WDATA [31:0] [31:0], xilinx.com:interface:aximm:1.0 M01_AXI WDATA [31:0] [63:32]" *) output [63:0]m_axi_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI WSTRB [3:0] [3:0], xilinx.com:interface:aximm:1.0 M01_AXI WSTRB [3:0] [7:4]" *) output [7:0]m_axi_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI WVALID [0:0] [0:0], xilinx.com:interface:aximm:1.0 M01_AXI WVALID [0:0] [1:1]" *) output [1:0]m_axi_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI WREADY [0:0] [0:0], xilinx.com:interface:aximm:1.0 M01_AXI WREADY [0:0] [1:1]" *) input [1:0]m_axi_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI BRESP [1:0] [1:0], xilinx.com:interface:aximm:1.0 M01_AXI BRESP [1:0] [3:2]" *) input [3:0]m_axi_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI BVALID [0:0] [0:0], xilinx.com:interface:aximm:1.0 M01_AXI BVALID [0:0] [1:1]" *) input [1:0]m_axi_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI BREADY [0:0] [0:0], xilinx.com:interface:aximm:1.0 M01_AXI BREADY [0:0] [1:1]" *) output [1:0]m_axi_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI ARADDR [31:0] [31:0], xilinx.com:interface:aximm:1.0 M01_AXI ARADDR [31:0] [63:32]" *) output [63:0]m_axi_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI ARPROT [2:0] [2:0], xilinx.com:interface:aximm:1.0 M01_AXI ARPROT [2:0] [5:3]" *) output [5:0]m_axi_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI ARVALID [0:0] [0:0], xilinx.com:interface:aximm:1.0 M01_AXI ARVALID [0:0] [1:1]" *) output [1:0]m_axi_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI ARREADY [0:0] [0:0], xilinx.com:interface:aximm:1.0 M01_AXI ARREADY [0:0] [1:1]" *) input [1:0]m_axi_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI RDATA [31:0] [31:0], xilinx.com:interface:aximm:1.0 M01_AXI RDATA [31:0] [63:32]" *) input [63:0]m_axi_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI RRESP [1:0] [1:0], xilinx.com:interface:aximm:1.0 M01_AXI RRESP [1:0] [3:2]" *) input [3:0]m_axi_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI RVALID [0:0] [0:0], xilinx.com:interface:aximm:1.0 M01_AXI RVALID [0:0] [1:1]" *) input [1:0]m_axi_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI RREADY [0:0] [0:0], xilinx.com:interface:aximm:1.0 M01_AXI RREADY [0:0] [1:1]" *) output [1:0]m_axi_rready;

  wire aclk;
  wire aresetn;
  wire [15:0]\^m_axi_araddr ;
  wire [1:0]m_axi_arready;
  wire [1:0]m_axi_arvalid;
  wire [1:0]m_axi_awready;
  wire [1:0]m_axi_awvalid;
  wire [1:0]m_axi_bready;
  wire [1:0]m_axi_bvalid;
  wire [63:0]m_axi_rdata;
  wire [1:0]m_axi_rready;
  wire [1:0]m_axi_rvalid;
  wire [1:0]m_axi_wready;
  wire [1:0]m_axi_wvalid;
  wire [31:0]s_axi_araddr;
  wire [0:0]s_axi_arready;
  wire [0:0]s_axi_arvalid;
  wire [0:0]s_axi_awready;
  wire [0:0]s_axi_awvalid;
  wire [0:0]s_axi_bvalid;
  wire [31:0]s_axi_rdata;
  wire [0:0]s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire [0:0]s_axi_wready;
  wire [0:0]s_axi_wvalid;
  wire [34:0]NLW_inst_Q_UNCONNECTED;
  wire [1:0]\NLW_inst_WB_DAXI_Read_Data_reg[0]_UNCONNECTED ;
  wire [1:1]NLW_inst_m_axi_arready_UNCONNECTED;
  wire [1:1]NLW_inst_m_axi_awready_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_bresp_UNCONNECTED;
  wire [31:8]NLW_inst_m_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_rresp_UNCONNECTED;
  wire [15:0]NLW_inst_s_axi_araddr_UNCONNECTED;
  wire [2:0]NLW_inst_s_axi_arprot_UNCONNECTED;
  wire [31:0]NLW_inst_s_axi_awaddr_UNCONNECTED;
  wire [2:0]NLW_inst_s_axi_awprot_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_bready_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_rready_UNCONNECTED;

  assign m_axi_araddr[35:34] = \^m_axi_araddr [3:2];
  assign m_axi_awaddr[35:34] = \^m_axi_araddr [3:2];
  assign m_axi_awaddr[3:2] = \^m_axi_araddr [3:2];
  assign m_axi_wdata[63:32] = s_axi_wdata;
  assign m_axi_wdata[7:0] = s_axi_wdata[7:0];
  axi_crossbar_v2_1_14_axi_crossbar inst
       (.Q({NLW_inst_Q_UNCONNECTED[34:4],\^m_axi_araddr [3:2],NLW_inst_Q_UNCONNECTED[1:0]}),
        .\WB_DAXI_Read_Data_reg[0] ({s_axi_rdata,\NLW_inst_WB_DAXI_Read_Data_reg[0]_UNCONNECTED [1:0]}),
        .aclk(aclk),
        .aresetn(aresetn),
        .m_axi_arready({NLW_inst_m_axi_arready_UNCONNECTED[1],m_axi_arready[0]}),
        .m_axi_arvalid(m_axi_arvalid),
        .m_axi_awready({NLW_inst_m_axi_awready_UNCONNECTED[1],m_axi_awready[0]}),
        .m_axi_awvalid(m_axi_awvalid),
        .m_axi_bready(m_axi_bready),
        .m_axi_bresp(NLW_inst_m_axi_bresp_UNCONNECTED[3:0]),
        .m_axi_bvalid(m_axi_bvalid),
        .m_axi_rdata({m_axi_rdata[63:32],NLW_inst_m_axi_rdata_UNCONNECTED[31:8],m_axi_rdata[7:0]}),
        .m_axi_rready(m_axi_rready),
        .m_axi_rresp(NLW_inst_m_axi_rresp_UNCONNECTED[3:0]),
        .m_axi_rvalid(m_axi_rvalid),
        .m_axi_wready(m_axi_wready),
        .m_axi_wvalid(m_axi_wvalid),
        .s_axi_araddr({s_axi_araddr[31:16],NLW_inst_s_axi_araddr_UNCONNECTED[15:4],s_axi_araddr[3:2],NLW_inst_s_axi_araddr_UNCONNECTED[1:0]}),
        .s_axi_arprot(NLW_inst_s_axi_arprot_UNCONNECTED[2:0]),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(NLW_inst_s_axi_awaddr_UNCONNECTED[31:0]),
        .s_axi_awprot(NLW_inst_s_axi_awprot_UNCONNECTED[2:0]),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(NLW_inst_s_axi_bready_UNCONNECTED[0]),
        .s_axi_bresp(NLW_inst_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_rready(NLW_inst_s_axi_rready_UNCONNECTED[0]),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wready(s_axi_wready),
        .s_axi_wvalid(s_axi_wvalid));
endmodule

module dynshreg_f
   (mux_Out,
    \mux_sel_reg[1] ,
    \mux_sel_reg[0] ,
    p_4_in,
    \mux_sel_reg[2] ,
    fifo_wr,
    s_axi_wdata,
    Q,
    s_axi_aclk);
  output mux_Out;
  input \mux_sel_reg[1] ;
  input \mux_sel_reg[0] ;
  input p_4_in;
  input \mux_sel_reg[2] ;
  input fifo_wr;
  input [7:0]s_axi_wdata;
  input [3:0]Q;
  input s_axi_aclk;

  wire [3:0]Q;
  wire [0:7]fifo_DOut;
  wire fifo_wr;
  wire mux_Out;
  wire \mux_sel_reg[0] ;
  wire \mux_sel_reg[1] ;
  wire \mux_sel_reg[2] ;
  wire p_4_in;
  wire s_axi_aclk;
  wire [7:0]s_axi_wdata;
  wire serial_Data_i_2_n_0;
  wire serial_Data_i_3_n_0;
  wire serial_Data_i_4_n_0;
  wire serial_Data_i_5_n_0;

  (* srl_bus_name = "design_gol_i/axi_uartlite_0/U0/\UARTLITE_CORE_I/UARTLITE_TX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15] " *) 
  (* srl_name = "design_gol_i/axi_uartlite_0/U0/\UARTLITE_CORE_I/UARTLITE_TX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15][0]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[15][0]_srl16 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(fifo_wr),
        .CLK(s_axi_aclk),
        .D(s_axi_wdata[0]),
        .Q(fifo_DOut[7]));
  (* srl_bus_name = "design_gol_i/axi_uartlite_0/U0/\UARTLITE_CORE_I/UARTLITE_TX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15] " *) 
  (* srl_name = "design_gol_i/axi_uartlite_0/U0/\UARTLITE_CORE_I/UARTLITE_TX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15][1]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[15][1]_srl16 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(fifo_wr),
        .CLK(s_axi_aclk),
        .D(s_axi_wdata[1]),
        .Q(fifo_DOut[6]));
  (* srl_bus_name = "design_gol_i/axi_uartlite_0/U0/\UARTLITE_CORE_I/UARTLITE_TX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15] " *) 
  (* srl_name = "design_gol_i/axi_uartlite_0/U0/\UARTLITE_CORE_I/UARTLITE_TX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15][2]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[15][2]_srl16 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(fifo_wr),
        .CLK(s_axi_aclk),
        .D(s_axi_wdata[2]),
        .Q(fifo_DOut[5]));
  (* srl_bus_name = "design_gol_i/axi_uartlite_0/U0/\UARTLITE_CORE_I/UARTLITE_TX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15] " *) 
  (* srl_name = "design_gol_i/axi_uartlite_0/U0/\UARTLITE_CORE_I/UARTLITE_TX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15][3]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[15][3]_srl16 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(fifo_wr),
        .CLK(s_axi_aclk),
        .D(s_axi_wdata[3]),
        .Q(fifo_DOut[4]));
  (* srl_bus_name = "design_gol_i/axi_uartlite_0/U0/\UARTLITE_CORE_I/UARTLITE_TX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15] " *) 
  (* srl_name = "design_gol_i/axi_uartlite_0/U0/\UARTLITE_CORE_I/UARTLITE_TX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15][4]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[15][4]_srl16 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(fifo_wr),
        .CLK(s_axi_aclk),
        .D(s_axi_wdata[4]),
        .Q(fifo_DOut[3]));
  (* srl_bus_name = "design_gol_i/axi_uartlite_0/U0/\UARTLITE_CORE_I/UARTLITE_TX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15] " *) 
  (* srl_name = "design_gol_i/axi_uartlite_0/U0/\UARTLITE_CORE_I/UARTLITE_TX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15][5]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[15][5]_srl16 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(fifo_wr),
        .CLK(s_axi_aclk),
        .D(s_axi_wdata[5]),
        .Q(fifo_DOut[2]));
  (* srl_bus_name = "design_gol_i/axi_uartlite_0/U0/\UARTLITE_CORE_I/UARTLITE_TX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15] " *) 
  (* srl_name = "design_gol_i/axi_uartlite_0/U0/\UARTLITE_CORE_I/UARTLITE_TX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15][6]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[15][6]_srl16 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(fifo_wr),
        .CLK(s_axi_aclk),
        .D(s_axi_wdata[6]),
        .Q(fifo_DOut[1]));
  (* srl_bus_name = "design_gol_i/axi_uartlite_0/U0/\UARTLITE_CORE_I/UARTLITE_TX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15] " *) 
  (* srl_name = "design_gol_i/axi_uartlite_0/U0/\UARTLITE_CORE_I/UARTLITE_TX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15][7]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[15][7]_srl16 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(fifo_wr),
        .CLK(s_axi_aclk),
        .D(s_axi_wdata[7]),
        .Q(fifo_DOut[0]));
  LUT6 #(
    .INIT(64'hFFFFFFFEFFFEFFFE)) 
    serial_Data_i_1
       (.I0(serial_Data_i_2_n_0),
        .I1(serial_Data_i_3_n_0),
        .I2(serial_Data_i_4_n_0),
        .I3(serial_Data_i_5_n_0),
        .I4(fifo_DOut[0]),
        .I5(\mux_sel_reg[1] ),
        .O(mux_Out));
  LUT5 #(
    .INIT(32'h44400040)) 
    serial_Data_i_2
       (.I0(p_4_in),
        .I1(\mux_sel_reg[2] ),
        .I2(fifo_DOut[1]),
        .I3(\mux_sel_reg[0] ),
        .I4(fifo_DOut[5]),
        .O(serial_Data_i_2_n_0));
  LUT5 #(
    .INIT(32'h44400040)) 
    serial_Data_i_3
       (.I0(\mux_sel_reg[2] ),
        .I1(p_4_in),
        .I2(fifo_DOut[2]),
        .I3(\mux_sel_reg[0] ),
        .I4(fifo_DOut[6]),
        .O(serial_Data_i_3_n_0));
  LUT5 #(
    .INIT(32'h88800080)) 
    serial_Data_i_4
       (.I0(p_4_in),
        .I1(\mux_sel_reg[2] ),
        .I2(fifo_DOut[3]),
        .I3(\mux_sel_reg[0] ),
        .I4(fifo_DOut[7]),
        .O(serial_Data_i_4_n_0));
  LUT4 #(
    .INIT(16'h0008)) 
    serial_Data_i_5
       (.I0(\mux_sel_reg[0] ),
        .I1(fifo_DOut[4]),
        .I2(p_4_in),
        .I3(\mux_sel_reg[2] ),
        .O(serial_Data_i_5_n_0));
endmodule

(* ORIG_REF_NAME = "dynshreg_f" *) 
module dynshreg_f_803
   (out,
    valid_rx,
    FIFO_Full_reg,
    fifo_Write,
    in,
    Q,
    s_axi_aclk);
  output [7:0]out;
  input valid_rx;
  input FIFO_Full_reg;
  input fifo_Write;
  input [0:7]in;
  input [3:0]Q;
  input s_axi_aclk;

  wire FIFO_Full_reg;
  wire [3:0]Q;
  wire fifo_Write;
  wire fifo_wr;
  wire [0:7]in;
  wire [7:0]out;
  wire s_axi_aclk;
  wire valid_rx;

  (* srl_bus_name = "design_gol_i/axi_uartlite_0/U0/\UARTLITE_CORE_I/UARTLITE_RX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15] " *) 
  (* srl_name = "design_gol_i/axi_uartlite_0/U0/\UARTLITE_CORE_I/UARTLITE_RX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15][0]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[15][0]_srl16 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(fifo_wr),
        .CLK(s_axi_aclk),
        .D(in[7]),
        .Q(out[0]));
  LUT3 #(
    .INIT(8'h20)) 
    \INFERRED_GEN.data_reg[15][0]_srl16_i_1__0 
       (.I0(valid_rx),
        .I1(FIFO_Full_reg),
        .I2(fifo_Write),
        .O(fifo_wr));
  (* srl_bus_name = "design_gol_i/axi_uartlite_0/U0/\UARTLITE_CORE_I/UARTLITE_RX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15] " *) 
  (* srl_name = "design_gol_i/axi_uartlite_0/U0/\UARTLITE_CORE_I/UARTLITE_RX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15][1]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[15][1]_srl16 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(fifo_wr),
        .CLK(s_axi_aclk),
        .D(in[6]),
        .Q(out[1]));
  (* srl_bus_name = "design_gol_i/axi_uartlite_0/U0/\UARTLITE_CORE_I/UARTLITE_RX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15] " *) 
  (* srl_name = "design_gol_i/axi_uartlite_0/U0/\UARTLITE_CORE_I/UARTLITE_RX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15][2]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[15][2]_srl16 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(fifo_wr),
        .CLK(s_axi_aclk),
        .D(in[5]),
        .Q(out[2]));
  (* srl_bus_name = "design_gol_i/axi_uartlite_0/U0/\UARTLITE_CORE_I/UARTLITE_RX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15] " *) 
  (* srl_name = "design_gol_i/axi_uartlite_0/U0/\UARTLITE_CORE_I/UARTLITE_RX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15][3]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[15][3]_srl16 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(fifo_wr),
        .CLK(s_axi_aclk),
        .D(in[4]),
        .Q(out[3]));
  (* srl_bus_name = "design_gol_i/axi_uartlite_0/U0/\UARTLITE_CORE_I/UARTLITE_RX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15] " *) 
  (* srl_name = "design_gol_i/axi_uartlite_0/U0/\UARTLITE_CORE_I/UARTLITE_RX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15][4]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[15][4]_srl16 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(fifo_wr),
        .CLK(s_axi_aclk),
        .D(in[3]),
        .Q(out[4]));
  (* srl_bus_name = "design_gol_i/axi_uartlite_0/U0/\UARTLITE_CORE_I/UARTLITE_RX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15] " *) 
  (* srl_name = "design_gol_i/axi_uartlite_0/U0/\UARTLITE_CORE_I/UARTLITE_RX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15][5]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[15][5]_srl16 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(fifo_wr),
        .CLK(s_axi_aclk),
        .D(in[2]),
        .Q(out[5]));
  (* srl_bus_name = "design_gol_i/axi_uartlite_0/U0/\UARTLITE_CORE_I/UARTLITE_RX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15] " *) 
  (* srl_name = "design_gol_i/axi_uartlite_0/U0/\UARTLITE_CORE_I/UARTLITE_RX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15][6]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[15][6]_srl16 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(fifo_wr),
        .CLK(s_axi_aclk),
        .D(in[1]),
        .Q(out[6]));
  (* srl_bus_name = "design_gol_i/axi_uartlite_0/U0/\UARTLITE_CORE_I/UARTLITE_RX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15] " *) 
  (* srl_name = "design_gol_i/axi_uartlite_0/U0/\UARTLITE_CORE_I/UARTLITE_RX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15][7]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[15][7]_srl16 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(fifo_wr),
        .CLK(s_axi_aclk),
        .D(in[0]),
        .Q(out[7]));
endmodule

module dynshreg_i_f
   (p_20_out,
    \SERIAL_TO_PARALLEL[2].fifo_din_reg[2] ,
    p_17_out,
    p_14_out,
    p_11_out,
    p_8_out,
    p_5_out,
    p_2_out,
    status_reg_reg0,
    fifo_Write0,
    stop_Bit_Position_reg,
    frame_err_ocrd_reg,
    running_reg,
    en_16x_Baud,
    s_axi_aclk,
    in,
    start_Edge_Detected,
    s_axi_aresetn,
    stop_Bit_Position_reg_0,
    status_reg,
    clr_Status,
    scndry_out,
    valid_rx,
    frame_err_ocrd,
    running_reg_0);
  output p_20_out;
  output \SERIAL_TO_PARALLEL[2].fifo_din_reg[2] ;
  output p_17_out;
  output p_14_out;
  output p_11_out;
  output p_8_out;
  output p_5_out;
  output p_2_out;
  output status_reg_reg0;
  output fifo_Write0;
  output stop_Bit_Position_reg;
  output frame_err_ocrd_reg;
  output running_reg;
  input en_16x_Baud;
  input s_axi_aclk;
  input [0:7]in;
  input start_Edge_Detected;
  input s_axi_aresetn;
  input stop_Bit_Position_reg_0;
  input [0:0]status_reg;
  input clr_Status;
  input scndry_out;
  input valid_rx;
  input frame_err_ocrd;
  input running_reg_0;

  wire \INFERRED_GEN.data_reg[14][0]_srl15_n_0 ;
  wire \INFERRED_GEN.data_reg[15] ;
  wire \SERIAL_TO_PARALLEL[2].fifo_din_reg[2] ;
  wire clr_Status;
  wire en_16x_Baud;
  wire fifo_Write0;
  wire frame_err_ocrd;
  wire frame_err_ocrd_reg;
  wire [0:7]in;
  wire p_11_out;
  wire p_14_out;
  wire p_17_out;
  wire p_20_out;
  wire p_2_out;
  wire p_5_out;
  wire p_8_out;
  wire recycle;
  wire running_reg;
  wire running_reg_0;
  wire s_axi_aclk;
  wire s_axi_aresetn;
  wire scndry_out;
  wire start_Edge_Detected;
  wire [0:0]status_reg;
  wire \status_reg[1]_i_2_n_0 ;
  wire status_reg_reg0;
  wire stop_Bit_Position_reg;
  wire stop_Bit_Position_reg_0;
  wire valid_rx;

  (* srl_bus_name = "design_gol_i/axi_uartlite_0/U0/\UARTLITE_CORE_I/UARTLITE_RX_I/DELAY_16_I/INFERRED_GEN.data_reg[14] " *) 
  (* srl_name = "design_gol_i/axi_uartlite_0/U0/\UARTLITE_CORE_I/UARTLITE_RX_I/DELAY_16_I/INFERRED_GEN.data_reg[14][0]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[14][0]_srl15 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b1),
        .A3(1'b1),
        .CE(en_16x_Baud),
        .CLK(s_axi_aclk),
        .D(recycle),
        .Q(\INFERRED_GEN.data_reg[14][0]_srl15_n_0 ));
  LUT4 #(
    .INIT(16'h4440)) 
    \INFERRED_GEN.data_reg[14][0]_srl15_i_1 
       (.I0(stop_Bit_Position_reg_0),
        .I1(valid_rx),
        .I2(\INFERRED_GEN.data_reg[15] ),
        .I3(start_Edge_Detected),
        .O(recycle));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.data_reg[15][0] 
       (.C(s_axi_aclk),
        .CE(en_16x_Baud),
        .D(\INFERRED_GEN.data_reg[14][0]_srl15_n_0 ),
        .Q(\INFERRED_GEN.data_reg[15] ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0A000C00)) 
    \SERIAL_TO_PARALLEL[2].fifo_din[2]_i_1 
       (.I0(in[1]),
        .I1(in[0]),
        .I2(start_Edge_Detected),
        .I3(s_axi_aresetn),
        .I4(\SERIAL_TO_PARALLEL[2].fifo_din_reg[2] ),
        .O(p_20_out));
  LUT5 #(
    .INIT(32'h0A000C00)) 
    \SERIAL_TO_PARALLEL[3].fifo_din[3]_i_1 
       (.I0(in[2]),
        .I1(in[1]),
        .I2(start_Edge_Detected),
        .I3(s_axi_aresetn),
        .I4(\SERIAL_TO_PARALLEL[2].fifo_din_reg[2] ),
        .O(p_17_out));
  LUT5 #(
    .INIT(32'h0A000C00)) 
    \SERIAL_TO_PARALLEL[4].fifo_din[4]_i_1 
       (.I0(in[3]),
        .I1(in[2]),
        .I2(start_Edge_Detected),
        .I3(s_axi_aresetn),
        .I4(\SERIAL_TO_PARALLEL[2].fifo_din_reg[2] ),
        .O(p_14_out));
  LUT5 #(
    .INIT(32'h0A000C00)) 
    \SERIAL_TO_PARALLEL[5].fifo_din[5]_i_1 
       (.I0(in[4]),
        .I1(in[3]),
        .I2(start_Edge_Detected),
        .I3(s_axi_aresetn),
        .I4(\SERIAL_TO_PARALLEL[2].fifo_din_reg[2] ),
        .O(p_11_out));
  LUT5 #(
    .INIT(32'h0A000C00)) 
    \SERIAL_TO_PARALLEL[6].fifo_din[6]_i_1 
       (.I0(in[5]),
        .I1(in[4]),
        .I2(start_Edge_Detected),
        .I3(s_axi_aresetn),
        .I4(\SERIAL_TO_PARALLEL[2].fifo_din_reg[2] ),
        .O(p_8_out));
  LUT5 #(
    .INIT(32'h0A000C00)) 
    \SERIAL_TO_PARALLEL[7].fifo_din[7]_i_1 
       (.I0(in[6]),
        .I1(in[5]),
        .I2(start_Edge_Detected),
        .I3(s_axi_aresetn),
        .I4(\SERIAL_TO_PARALLEL[2].fifo_din_reg[2] ),
        .O(p_5_out));
  LUT5 #(
    .INIT(32'h0A000C00)) 
    \SERIAL_TO_PARALLEL[8].fifo_din[8]_i_1 
       (.I0(in[7]),
        .I1(in[6]),
        .I2(start_Edge_Detected),
        .I3(s_axi_aresetn),
        .I4(\SERIAL_TO_PARALLEL[2].fifo_din_reg[2] ),
        .O(p_2_out));
  LUT3 #(
    .INIT(8'hF7)) 
    \SERIAL_TO_PARALLEL[8].fifo_din[8]_i_2 
       (.I0(en_16x_Baud),
        .I1(\INFERRED_GEN.data_reg[15] ),
        .I2(stop_Bit_Position_reg_0),
        .O(\SERIAL_TO_PARALLEL[2].fifo_din_reg[2] ));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    fifo_Write_i_1
       (.I0(\INFERRED_GEN.data_reg[15] ),
        .I1(en_16x_Baud),
        .I2(stop_Bit_Position_reg_0),
        .I3(scndry_out),
        .O(fifo_Write0));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT5 #(
    .INIT(32'h00FF0080)) 
    frame_err_ocrd_i_1
       (.I0(\INFERRED_GEN.data_reg[15] ),
        .I1(en_16x_Baud),
        .I2(stop_Bit_Position_reg_0),
        .I3(scndry_out),
        .I4(frame_err_ocrd),
        .O(frame_err_ocrd_reg));
  LUT5 #(
    .INIT(32'hBFFFA0A0)) 
    running_i_1
       (.I0(start_Edge_Detected),
        .I1(\INFERRED_GEN.data_reg[15] ),
        .I2(en_16x_Baud),
        .I3(stop_Bit_Position_reg_0),
        .I4(running_reg_0),
        .O(running_reg));
  LUT5 #(
    .INIT(32'h00A000E0)) 
    \status_reg[1]_i_1 
       (.I0(status_reg),
        .I1(\status_reg[1]_i_2_n_0 ),
        .I2(s_axi_aresetn),
        .I3(clr_Status),
        .I4(scndry_out),
        .O(status_reg_reg0));
  LUT3 #(
    .INIT(8'h80)) 
    \status_reg[1]_i_2 
       (.I0(stop_Bit_Position_reg_0),
        .I1(en_16x_Baud),
        .I2(\INFERRED_GEN.data_reg[15] ),
        .O(\status_reg[1]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h2CCC)) 
    stop_Bit_Position_i_1
       (.I0(in[7]),
        .I1(stop_Bit_Position_reg_0),
        .I2(en_16x_Baud),
        .I3(\INFERRED_GEN.data_reg[15] ),
        .O(stop_Bit_Position_reg));
endmodule

(* ORIG_REF_NAME = "dynshreg_i_f" *) 
module dynshreg_i_f__parameterized0
   (tx_Data_Enable_reg,
    en_16x_Baud,
    s_axi_aclk,
    tx_Data_Enable_reg_0);
  output tx_Data_Enable_reg;
  input en_16x_Baud;
  input s_axi_aclk;
  input tx_Data_Enable_reg_0;

  wire \INFERRED_GEN.data_reg[14][0]_srl15_n_0 ;
  wire \INFERRED_GEN.data_reg_n_0_[15][0] ;
  wire en_16x_Baud;
  wire s_axi_aclk;
  wire tx_Data_Enable_reg;
  wire tx_Data_Enable_reg_0;

  (* srl_bus_name = "design_gol_i/axi_uartlite_0/U0/\UARTLITE_CORE_I/UARTLITE_TX_I/MID_START_BIT_SRL16_I/INFERRED_GEN.data_reg[14] " *) 
  (* srl_name = "design_gol_i/axi_uartlite_0/U0/\UARTLITE_CORE_I/UARTLITE_TX_I/MID_START_BIT_SRL16_I/INFERRED_GEN.data_reg[14][0]_srl15 " *) 
  SRL16E #(
    .INIT(16'h0001)) 
    \INFERRED_GEN.data_reg[14][0]_srl15 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b1),
        .A3(1'b1),
        .CE(en_16x_Baud),
        .CLK(s_axi_aclk),
        .D(\INFERRED_GEN.data_reg_n_0_[15][0] ),
        .Q(\INFERRED_GEN.data_reg[14][0]_srl15_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \INFERRED_GEN.data_reg[15][0] 
       (.C(s_axi_aclk),
        .CE(en_16x_Baud),
        .D(\INFERRED_GEN.data_reg[14][0]_srl15_n_0 ),
        .Q(\INFERRED_GEN.data_reg_n_0_[15][0] ),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h20)) 
    tx_Data_Enable_i_1
       (.I0(\INFERRED_GEN.data_reg_n_0_[15][0] ),
        .I1(tx_Data_Enable_reg_0),
        .I2(en_16x_Baud),
        .O(tx_Data_Enable_reg));
endmodule

module game_of_life_v1_0
   (s00_axi_rdata,
    w_ready_reg_0,
    s00_axi_bvalid,
    s00_axi_rvalid,
    s00_axi_aclk,
    s00_axi_wdata,
    s00_axi_awaddr,
    s00_axi_awvalid,
    s00_axi_aresetn,
    s00_axi_araddr,
    s00_axi_arvalid,
    s00_axi_wvalid,
    s00_axi_bready,
    s00_axi_rready);
  output [31:0]s00_axi_rdata;
  output w_ready_reg_0;
  output s00_axi_bvalid;
  output s00_axi_rvalid;
  input s00_axi_aclk;
  input [31:0]s00_axi_wdata;
  input [1:0]s00_axi_awaddr;
  input s00_axi_awvalid;
  input s00_axi_aresetn;
  input [1:0]s00_axi_araddr;
  input s00_axi_arvalid;
  input s00_axi_wvalid;
  input s00_axi_bready;
  input s00_axi_rready;

  wire CACORE_n_2;
  wire GSI;
  wire GSI_old;
  wire GSP;
  wire GSP_old;
  wire GST;
  wire GST_old;
  wire [1:0]Read_RegAddress;
  wire \Read_RegAddress[0]_i_1_n_0 ;
  wire \Read_RegAddress[1]_i_1_n_0 ;
  wire \Register_GOLCR_reg_n_0_[0] ;
  wire \Register_GOLCR_reg_n_0_[10] ;
  wire \Register_GOLCR_reg_n_0_[11] ;
  wire \Register_GOLCR_reg_n_0_[12] ;
  wire \Register_GOLCR_reg_n_0_[13] ;
  wire \Register_GOLCR_reg_n_0_[14] ;
  wire \Register_GOLCR_reg_n_0_[15] ;
  wire \Register_GOLCR_reg_n_0_[16] ;
  wire \Register_GOLCR_reg_n_0_[17] ;
  wire \Register_GOLCR_reg_n_0_[18] ;
  wire \Register_GOLCR_reg_n_0_[19] ;
  wire \Register_GOLCR_reg_n_0_[1] ;
  wire \Register_GOLCR_reg_n_0_[20] ;
  wire \Register_GOLCR_reg_n_0_[21] ;
  wire \Register_GOLCR_reg_n_0_[22] ;
  wire \Register_GOLCR_reg_n_0_[23] ;
  wire \Register_GOLCR_reg_n_0_[24] ;
  wire \Register_GOLCR_reg_n_0_[25] ;
  wire \Register_GOLCR_reg_n_0_[26] ;
  wire \Register_GOLCR_reg_n_0_[27] ;
  wire \Register_GOLCR_reg_n_0_[28] ;
  wire \Register_GOLCR_reg_n_0_[29] ;
  wire \Register_GOLCR_reg_n_0_[30] ;
  wire \Register_GOLCR_reg_n_0_[31] ;
  wire \Register_GOLCR_reg_n_0_[4] ;
  wire \Register_GOLCR_reg_n_0_[5] ;
  wire \Register_GOLCR_reg_n_0_[6] ;
  wire \Register_GOLCR_reg_n_0_[7] ;
  wire \Register_GOLCR_reg_n_0_[8] ;
  wire \Register_GOLCR_reg_n_0_[9] ;
  wire [31:1]Register_GOLDIR;
  wire [0:0]Register_GOLDIR_0;
  wire [31:0]Register_GOLICR;
  wire WriteEnable_GOLCR;
  wire WriteEnable_GOLDIR;
  wire WriteEnable_GOLICR;
  wire [1:0]Write_RegAddress;
  wire \Write_RegAddress[0]_i_1_n_0 ;
  wire \Write_RegAddress[1]_i_1_n_0 ;
  wire b_valid_i_1_n_0;
  wire internal_max_iter;
  wire [31:0]n_iter;
  wire p_0_in;
  wire r_FF;
  wire r_valid_i_1_n_0;
  wire reset;
  wire s00_axi_aclk;
  wire [1:0]s00_axi_araddr;
  wire s00_axi_aresetn;
  wire s00_axi_arvalid;
  wire [1:0]s00_axi_awaddr;
  wire s00_axi_awvalid;
  wire s00_axi_bready;
  wire s00_axi_bvalid;
  wire [31:0]s00_axi_rdata;
  wire s00_axi_rready;
  wire s00_axi_rvalid;
  wire [31:0]s00_axi_wdata;
  wire s00_axi_wvalid;
  wire set_iteration_pulse;
  wire set_iteration_pulse_i_1_n_0;
  wire shift_ca;
  wire start_iter;
  wire start_iter_i_1_n_0;
  wire stop_iter;
  wire stop_iter_i_1_n_0;
  wire w_ready_i_2_n_0;
  wire w_ready_reg_0;

  ca_core CACORE
       (.Q(n_iter),
        .\Register_GOLDIR_reg[0] (Register_GOLDIR_0),
        .internal_max_iter(internal_max_iter),
        .r_FF(r_FF),
        .r_FF_reg(CACORE_n_2),
        .reset(reset),
        .s00_axi_aclk(s00_axi_aclk),
        .s00_axi_aresetn(s00_axi_aresetn),
        .shift_ca(shift_ca),
        .start_iter(start_iter),
        .stop_iter(stop_iter));
  FDRE #(
    .INIT(1'b0)) 
    GSI_old_reg
       (.C(s00_axi_aclk),
        .CE(s00_axi_aresetn),
        .D(GSI),
        .Q(GSI_old),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    GSI_reg
       (.C(s00_axi_aclk),
        .CE(s00_axi_aresetn),
        .D(p_0_in),
        .Q(GSI),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    GSP_old_reg
       (.C(s00_axi_aclk),
        .CE(s00_axi_aresetn),
        .D(GSP),
        .Q(GSP_old),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    GSP_reg
       (.C(s00_axi_aclk),
        .CE(s00_axi_aresetn),
        .D(\Register_GOLCR_reg_n_0_[1] ),
        .Q(GSP),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    GST_old_reg
       (.C(s00_axi_aclk),
        .CE(s00_axi_aresetn),
        .D(GST),
        .Q(GST_old),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    GST_reg
       (.C(s00_axi_aclk),
        .CE(s00_axi_aresetn),
        .D(\Register_GOLCR_reg_n_0_[0] ),
        .Q(GST),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Read_RegAddress[0]_i_1 
       (.I0(s00_axi_araddr[0]),
        .I1(s00_axi_arvalid),
        .I2(Read_RegAddress[0]),
        .O(\Read_RegAddress[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Read_RegAddress[1]_i_1 
       (.I0(s00_axi_araddr[1]),
        .I1(s00_axi_arvalid),
        .I2(Read_RegAddress[1]),
        .O(\Read_RegAddress[1]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \Read_RegAddress_reg[0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\Read_RegAddress[0]_i_1_n_0 ),
        .Q(Read_RegAddress[0]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Read_RegAddress_reg[1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\Read_RegAddress[1]_i_1_n_0 ),
        .Q(Read_RegAddress[1]),
        .R(reset));
  LUT4 #(
    .INIT(16'h0008)) 
    Register_GOLCR0
       (.I0(w_ready_reg_0),
        .I1(s00_axi_wvalid),
        .I2(Write_RegAddress[1]),
        .I3(Write_RegAddress[0]),
        .O(WriteEnable_GOLCR));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLCR_reg[0] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLCR),
        .D(s00_axi_wdata[0]),
        .Q(\Register_GOLCR_reg_n_0_[0] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLCR_reg[10] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLCR),
        .D(s00_axi_wdata[10]),
        .Q(\Register_GOLCR_reg_n_0_[10] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLCR_reg[11] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLCR),
        .D(s00_axi_wdata[11]),
        .Q(\Register_GOLCR_reg_n_0_[11] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLCR_reg[12] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLCR),
        .D(s00_axi_wdata[12]),
        .Q(\Register_GOLCR_reg_n_0_[12] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLCR_reg[13] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLCR),
        .D(s00_axi_wdata[13]),
        .Q(\Register_GOLCR_reg_n_0_[13] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLCR_reg[14] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLCR),
        .D(s00_axi_wdata[14]),
        .Q(\Register_GOLCR_reg_n_0_[14] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLCR_reg[15] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLCR),
        .D(s00_axi_wdata[15]),
        .Q(\Register_GOLCR_reg_n_0_[15] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLCR_reg[16] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLCR),
        .D(s00_axi_wdata[16]),
        .Q(\Register_GOLCR_reg_n_0_[16] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLCR_reg[17] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLCR),
        .D(s00_axi_wdata[17]),
        .Q(\Register_GOLCR_reg_n_0_[17] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLCR_reg[18] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLCR),
        .D(s00_axi_wdata[18]),
        .Q(\Register_GOLCR_reg_n_0_[18] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLCR_reg[19] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLCR),
        .D(s00_axi_wdata[19]),
        .Q(\Register_GOLCR_reg_n_0_[19] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLCR_reg[1] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLCR),
        .D(s00_axi_wdata[1]),
        .Q(\Register_GOLCR_reg_n_0_[1] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLCR_reg[20] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLCR),
        .D(s00_axi_wdata[20]),
        .Q(\Register_GOLCR_reg_n_0_[20] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLCR_reg[21] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLCR),
        .D(s00_axi_wdata[21]),
        .Q(\Register_GOLCR_reg_n_0_[21] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLCR_reg[22] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLCR),
        .D(s00_axi_wdata[22]),
        .Q(\Register_GOLCR_reg_n_0_[22] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLCR_reg[23] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLCR),
        .D(s00_axi_wdata[23]),
        .Q(\Register_GOLCR_reg_n_0_[23] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLCR_reg[24] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLCR),
        .D(s00_axi_wdata[24]),
        .Q(\Register_GOLCR_reg_n_0_[24] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLCR_reg[25] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLCR),
        .D(s00_axi_wdata[25]),
        .Q(\Register_GOLCR_reg_n_0_[25] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLCR_reg[26] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLCR),
        .D(s00_axi_wdata[26]),
        .Q(\Register_GOLCR_reg_n_0_[26] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLCR_reg[27] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLCR),
        .D(s00_axi_wdata[27]),
        .Q(\Register_GOLCR_reg_n_0_[27] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLCR_reg[28] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLCR),
        .D(s00_axi_wdata[28]),
        .Q(\Register_GOLCR_reg_n_0_[28] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLCR_reg[29] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLCR),
        .D(s00_axi_wdata[29]),
        .Q(\Register_GOLCR_reg_n_0_[29] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLCR_reg[2] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLCR),
        .D(s00_axi_wdata[2]),
        .Q(p_0_in),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLCR_reg[30] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLCR),
        .D(s00_axi_wdata[30]),
        .Q(\Register_GOLCR_reg_n_0_[30] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLCR_reg[31] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLCR),
        .D(s00_axi_wdata[31]),
        .Q(\Register_GOLCR_reg_n_0_[31] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLCR_reg[4] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLCR),
        .D(s00_axi_wdata[4]),
        .Q(\Register_GOLCR_reg_n_0_[4] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLCR_reg[5] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLCR),
        .D(s00_axi_wdata[5]),
        .Q(\Register_GOLCR_reg_n_0_[5] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLCR_reg[6] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLCR),
        .D(s00_axi_wdata[6]),
        .Q(\Register_GOLCR_reg_n_0_[6] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLCR_reg[7] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLCR),
        .D(s00_axi_wdata[7]),
        .Q(\Register_GOLCR_reg_n_0_[7] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLCR_reg[8] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLCR),
        .D(s00_axi_wdata[8]),
        .Q(\Register_GOLCR_reg_n_0_[8] ),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLCR_reg[9] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLCR),
        .D(s00_axi_wdata[9]),
        .Q(\Register_GOLCR_reg_n_0_[9] ),
        .R(reset));
  LUT4 #(
    .INIT(16'h4000)) 
    Register_GOLDIR0
       (.I0(Write_RegAddress[0]),
        .I1(s00_axi_wvalid),
        .I2(w_ready_reg_0),
        .I3(Write_RegAddress[1]),
        .O(WriteEnable_GOLDIR));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLDIR_reg[0] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLDIR),
        .D(s00_axi_wdata[0]),
        .Q(Register_GOLDIR_0),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLDIR_reg[10] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLDIR),
        .D(s00_axi_wdata[10]),
        .Q(Register_GOLDIR[10]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLDIR_reg[11] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLDIR),
        .D(s00_axi_wdata[11]),
        .Q(Register_GOLDIR[11]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLDIR_reg[12] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLDIR),
        .D(s00_axi_wdata[12]),
        .Q(Register_GOLDIR[12]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLDIR_reg[13] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLDIR),
        .D(s00_axi_wdata[13]),
        .Q(Register_GOLDIR[13]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLDIR_reg[14] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLDIR),
        .D(s00_axi_wdata[14]),
        .Q(Register_GOLDIR[14]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLDIR_reg[15] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLDIR),
        .D(s00_axi_wdata[15]),
        .Q(Register_GOLDIR[15]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLDIR_reg[16] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLDIR),
        .D(s00_axi_wdata[16]),
        .Q(Register_GOLDIR[16]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLDIR_reg[17] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLDIR),
        .D(s00_axi_wdata[17]),
        .Q(Register_GOLDIR[17]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLDIR_reg[18] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLDIR),
        .D(s00_axi_wdata[18]),
        .Q(Register_GOLDIR[18]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLDIR_reg[19] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLDIR),
        .D(s00_axi_wdata[19]),
        .Q(Register_GOLDIR[19]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLDIR_reg[1] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLDIR),
        .D(s00_axi_wdata[1]),
        .Q(Register_GOLDIR[1]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLDIR_reg[20] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLDIR),
        .D(s00_axi_wdata[20]),
        .Q(Register_GOLDIR[20]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLDIR_reg[21] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLDIR),
        .D(s00_axi_wdata[21]),
        .Q(Register_GOLDIR[21]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLDIR_reg[22] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLDIR),
        .D(s00_axi_wdata[22]),
        .Q(Register_GOLDIR[22]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLDIR_reg[23] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLDIR),
        .D(s00_axi_wdata[23]),
        .Q(Register_GOLDIR[23]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLDIR_reg[24] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLDIR),
        .D(s00_axi_wdata[24]),
        .Q(Register_GOLDIR[24]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLDIR_reg[25] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLDIR),
        .D(s00_axi_wdata[25]),
        .Q(Register_GOLDIR[25]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLDIR_reg[26] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLDIR),
        .D(s00_axi_wdata[26]),
        .Q(Register_GOLDIR[26]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLDIR_reg[27] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLDIR),
        .D(s00_axi_wdata[27]),
        .Q(Register_GOLDIR[27]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLDIR_reg[28] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLDIR),
        .D(s00_axi_wdata[28]),
        .Q(Register_GOLDIR[28]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLDIR_reg[29] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLDIR),
        .D(s00_axi_wdata[29]),
        .Q(Register_GOLDIR[29]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLDIR_reg[2] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLDIR),
        .D(s00_axi_wdata[2]),
        .Q(Register_GOLDIR[2]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLDIR_reg[30] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLDIR),
        .D(s00_axi_wdata[30]),
        .Q(Register_GOLDIR[30]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLDIR_reg[31] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLDIR),
        .D(s00_axi_wdata[31]),
        .Q(Register_GOLDIR[31]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLDIR_reg[3] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLDIR),
        .D(s00_axi_wdata[3]),
        .Q(Register_GOLDIR[3]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLDIR_reg[4] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLDIR),
        .D(s00_axi_wdata[4]),
        .Q(Register_GOLDIR[4]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLDIR_reg[5] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLDIR),
        .D(s00_axi_wdata[5]),
        .Q(Register_GOLDIR[5]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLDIR_reg[6] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLDIR),
        .D(s00_axi_wdata[6]),
        .Q(Register_GOLDIR[6]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLDIR_reg[7] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLDIR),
        .D(s00_axi_wdata[7]),
        .Q(Register_GOLDIR[7]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLDIR_reg[8] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLDIR),
        .D(s00_axi_wdata[8]),
        .Q(Register_GOLDIR[8]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLDIR_reg[9] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLDIR),
        .D(s00_axi_wdata[9]),
        .Q(Register_GOLDIR[9]),
        .R(reset));
  LUT4 #(
    .INIT(16'h4000)) 
    Register_GOLICR0
       (.I0(Write_RegAddress[1]),
        .I1(s00_axi_wvalid),
        .I2(w_ready_reg_0),
        .I3(Write_RegAddress[0]),
        .O(WriteEnable_GOLICR));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLICR_reg[0] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLICR),
        .D(s00_axi_wdata[0]),
        .Q(Register_GOLICR[0]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLICR_reg[10] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLICR),
        .D(s00_axi_wdata[10]),
        .Q(Register_GOLICR[10]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLICR_reg[11] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLICR),
        .D(s00_axi_wdata[11]),
        .Q(Register_GOLICR[11]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLICR_reg[12] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLICR),
        .D(s00_axi_wdata[12]),
        .Q(Register_GOLICR[12]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLICR_reg[13] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLICR),
        .D(s00_axi_wdata[13]),
        .Q(Register_GOLICR[13]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLICR_reg[14] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLICR),
        .D(s00_axi_wdata[14]),
        .Q(Register_GOLICR[14]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLICR_reg[15] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLICR),
        .D(s00_axi_wdata[15]),
        .Q(Register_GOLICR[15]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLICR_reg[16] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLICR),
        .D(s00_axi_wdata[16]),
        .Q(Register_GOLICR[16]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLICR_reg[17] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLICR),
        .D(s00_axi_wdata[17]),
        .Q(Register_GOLICR[17]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLICR_reg[18] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLICR),
        .D(s00_axi_wdata[18]),
        .Q(Register_GOLICR[18]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLICR_reg[19] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLICR),
        .D(s00_axi_wdata[19]),
        .Q(Register_GOLICR[19]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLICR_reg[1] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLICR),
        .D(s00_axi_wdata[1]),
        .Q(Register_GOLICR[1]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLICR_reg[20] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLICR),
        .D(s00_axi_wdata[20]),
        .Q(Register_GOLICR[20]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLICR_reg[21] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLICR),
        .D(s00_axi_wdata[21]),
        .Q(Register_GOLICR[21]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLICR_reg[22] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLICR),
        .D(s00_axi_wdata[22]),
        .Q(Register_GOLICR[22]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLICR_reg[23] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLICR),
        .D(s00_axi_wdata[23]),
        .Q(Register_GOLICR[23]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLICR_reg[24] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLICR),
        .D(s00_axi_wdata[24]),
        .Q(Register_GOLICR[24]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLICR_reg[25] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLICR),
        .D(s00_axi_wdata[25]),
        .Q(Register_GOLICR[25]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLICR_reg[26] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLICR),
        .D(s00_axi_wdata[26]),
        .Q(Register_GOLICR[26]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLICR_reg[27] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLICR),
        .D(s00_axi_wdata[27]),
        .Q(Register_GOLICR[27]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLICR_reg[28] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLICR),
        .D(s00_axi_wdata[28]),
        .Q(Register_GOLICR[28]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLICR_reg[29] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLICR),
        .D(s00_axi_wdata[29]),
        .Q(Register_GOLICR[29]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLICR_reg[2] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLICR),
        .D(s00_axi_wdata[2]),
        .Q(Register_GOLICR[2]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLICR_reg[30] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLICR),
        .D(s00_axi_wdata[30]),
        .Q(Register_GOLICR[30]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLICR_reg[31] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLICR),
        .D(s00_axi_wdata[31]),
        .Q(Register_GOLICR[31]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLICR_reg[3] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLICR),
        .D(s00_axi_wdata[3]),
        .Q(Register_GOLICR[3]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLICR_reg[4] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLICR),
        .D(s00_axi_wdata[4]),
        .Q(Register_GOLICR[4]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLICR_reg[5] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLICR),
        .D(s00_axi_wdata[5]),
        .Q(Register_GOLICR[5]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLICR_reg[6] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLICR),
        .D(s00_axi_wdata[6]),
        .Q(Register_GOLICR[6]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLICR_reg[7] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLICR),
        .D(s00_axi_wdata[7]),
        .Q(Register_GOLICR[7]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLICR_reg[8] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLICR),
        .D(s00_axi_wdata[8]),
        .Q(Register_GOLICR[8]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Register_GOLICR_reg[9] 
       (.C(s00_axi_aclk),
        .CE(WriteEnable_GOLICR),
        .D(s00_axi_wdata[9]),
        .Q(Register_GOLICR[9]),
        .R(reset));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Write_RegAddress[0]_i_1 
       (.I0(s00_axi_awaddr[0]),
        .I1(s00_axi_awvalid),
        .I2(Write_RegAddress[0]),
        .O(\Write_RegAddress[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Write_RegAddress[1]_i_1 
       (.I0(s00_axi_awaddr[1]),
        .I1(s00_axi_awvalid),
        .I2(Write_RegAddress[1]),
        .O(\Write_RegAddress[1]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \Write_RegAddress_reg[0] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\Write_RegAddress[0]_i_1_n_0 ),
        .Q(Write_RegAddress[0]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \Write_RegAddress_reg[1] 
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(\Write_RegAddress[1]_i_1_n_0 ),
        .Q(Write_RegAddress[1]),
        .R(reset));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT4 #(
    .INIT(16'h88F8)) 
    b_valid_i_1
       (.I0(w_ready_reg_0),
        .I1(s00_axi_wvalid),
        .I2(s00_axi_bvalid),
        .I3(s00_axi_bready),
        .O(b_valid_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    b_valid_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(b_valid_i_1_n_0),
        .Q(s00_axi_bvalid),
        .R(reset));
  FDSE #(
    .INIT(1'b1)) 
    \n_iter_reg[0] 
       (.C(s00_axi_aclk),
        .CE(set_iteration_pulse),
        .D(Register_GOLICR[0]),
        .Q(n_iter[0]),
        .S(reset));
  FDRE #(
    .INIT(1'b0)) 
    \n_iter_reg[10] 
       (.C(s00_axi_aclk),
        .CE(set_iteration_pulse),
        .D(Register_GOLICR[10]),
        .Q(n_iter[10]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \n_iter_reg[11] 
       (.C(s00_axi_aclk),
        .CE(set_iteration_pulse),
        .D(Register_GOLICR[11]),
        .Q(n_iter[11]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \n_iter_reg[12] 
       (.C(s00_axi_aclk),
        .CE(set_iteration_pulse),
        .D(Register_GOLICR[12]),
        .Q(n_iter[12]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \n_iter_reg[13] 
       (.C(s00_axi_aclk),
        .CE(set_iteration_pulse),
        .D(Register_GOLICR[13]),
        .Q(n_iter[13]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \n_iter_reg[14] 
       (.C(s00_axi_aclk),
        .CE(set_iteration_pulse),
        .D(Register_GOLICR[14]),
        .Q(n_iter[14]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \n_iter_reg[15] 
       (.C(s00_axi_aclk),
        .CE(set_iteration_pulse),
        .D(Register_GOLICR[15]),
        .Q(n_iter[15]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \n_iter_reg[16] 
       (.C(s00_axi_aclk),
        .CE(set_iteration_pulse),
        .D(Register_GOLICR[16]),
        .Q(n_iter[16]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \n_iter_reg[17] 
       (.C(s00_axi_aclk),
        .CE(set_iteration_pulse),
        .D(Register_GOLICR[17]),
        .Q(n_iter[17]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \n_iter_reg[18] 
       (.C(s00_axi_aclk),
        .CE(set_iteration_pulse),
        .D(Register_GOLICR[18]),
        .Q(n_iter[18]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \n_iter_reg[19] 
       (.C(s00_axi_aclk),
        .CE(set_iteration_pulse),
        .D(Register_GOLICR[19]),
        .Q(n_iter[19]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \n_iter_reg[1] 
       (.C(s00_axi_aclk),
        .CE(set_iteration_pulse),
        .D(Register_GOLICR[1]),
        .Q(n_iter[1]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \n_iter_reg[20] 
       (.C(s00_axi_aclk),
        .CE(set_iteration_pulse),
        .D(Register_GOLICR[20]),
        .Q(n_iter[20]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \n_iter_reg[21] 
       (.C(s00_axi_aclk),
        .CE(set_iteration_pulse),
        .D(Register_GOLICR[21]),
        .Q(n_iter[21]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \n_iter_reg[22] 
       (.C(s00_axi_aclk),
        .CE(set_iteration_pulse),
        .D(Register_GOLICR[22]),
        .Q(n_iter[22]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \n_iter_reg[23] 
       (.C(s00_axi_aclk),
        .CE(set_iteration_pulse),
        .D(Register_GOLICR[23]),
        .Q(n_iter[23]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \n_iter_reg[24] 
       (.C(s00_axi_aclk),
        .CE(set_iteration_pulse),
        .D(Register_GOLICR[24]),
        .Q(n_iter[24]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \n_iter_reg[25] 
       (.C(s00_axi_aclk),
        .CE(set_iteration_pulse),
        .D(Register_GOLICR[25]),
        .Q(n_iter[25]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \n_iter_reg[26] 
       (.C(s00_axi_aclk),
        .CE(set_iteration_pulse),
        .D(Register_GOLICR[26]),
        .Q(n_iter[26]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \n_iter_reg[27] 
       (.C(s00_axi_aclk),
        .CE(set_iteration_pulse),
        .D(Register_GOLICR[27]),
        .Q(n_iter[27]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \n_iter_reg[28] 
       (.C(s00_axi_aclk),
        .CE(set_iteration_pulse),
        .D(Register_GOLICR[28]),
        .Q(n_iter[28]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \n_iter_reg[29] 
       (.C(s00_axi_aclk),
        .CE(set_iteration_pulse),
        .D(Register_GOLICR[29]),
        .Q(n_iter[29]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \n_iter_reg[2] 
       (.C(s00_axi_aclk),
        .CE(set_iteration_pulse),
        .D(Register_GOLICR[2]),
        .Q(n_iter[2]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \n_iter_reg[30] 
       (.C(s00_axi_aclk),
        .CE(set_iteration_pulse),
        .D(Register_GOLICR[30]),
        .Q(n_iter[30]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \n_iter_reg[31] 
       (.C(s00_axi_aclk),
        .CE(set_iteration_pulse),
        .D(Register_GOLICR[31]),
        .Q(n_iter[31]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \n_iter_reg[3] 
       (.C(s00_axi_aclk),
        .CE(set_iteration_pulse),
        .D(Register_GOLICR[3]),
        .Q(n_iter[3]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \n_iter_reg[4] 
       (.C(s00_axi_aclk),
        .CE(set_iteration_pulse),
        .D(Register_GOLICR[4]),
        .Q(n_iter[4]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \n_iter_reg[5] 
       (.C(s00_axi_aclk),
        .CE(set_iteration_pulse),
        .D(Register_GOLICR[5]),
        .Q(n_iter[5]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \n_iter_reg[6] 
       (.C(s00_axi_aclk),
        .CE(set_iteration_pulse),
        .D(Register_GOLICR[6]),
        .Q(n_iter[6]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \n_iter_reg[7] 
       (.C(s00_axi_aclk),
        .CE(set_iteration_pulse),
        .D(Register_GOLICR[7]),
        .Q(n_iter[7]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \n_iter_reg[8] 
       (.C(s00_axi_aclk),
        .CE(set_iteration_pulse),
        .D(Register_GOLICR[8]),
        .Q(n_iter[8]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \n_iter_reg[9] 
       (.C(s00_axi_aclk),
        .CE(set_iteration_pulse),
        .D(Register_GOLICR[9]),
        .Q(n_iter[9]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    r_FF_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(CACORE_n_2),
        .Q(r_FF),
        .R(reset));
  LUT3 #(
    .INIT(8'hAE)) 
    r_valid_i_1
       (.I0(s00_axi_arvalid),
        .I1(s00_axi_rvalid),
        .I2(s00_axi_rready),
        .O(r_valid_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    r_valid_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(r_valid_i_1_n_0),
        .Q(s00_axi_rvalid),
        .R(reset));
  LUT6 #(
    .INIT(64'hF0FFAACCF000AACC)) 
    \s00_axi_rdata[0]_INST_0 
       (.I0(n_iter[0]),
        .I1(GST),
        .I2(r_FF),
        .I3(Read_RegAddress[0]),
        .I4(Read_RegAddress[1]),
        .I5(Register_GOLDIR_0),
        .O(s00_axi_rdata[0]));
  LUT5 #(
    .INIT(32'h0AFC0A0C)) 
    \s00_axi_rdata[10]_INST_0 
       (.I0(n_iter[10]),
        .I1(\Register_GOLCR_reg_n_0_[10] ),
        .I2(Read_RegAddress[1]),
        .I3(Read_RegAddress[0]),
        .I4(Register_GOLDIR[10]),
        .O(s00_axi_rdata[10]));
  LUT5 #(
    .INIT(32'h0AFC0A0C)) 
    \s00_axi_rdata[11]_INST_0 
       (.I0(n_iter[11]),
        .I1(\Register_GOLCR_reg_n_0_[11] ),
        .I2(Read_RegAddress[1]),
        .I3(Read_RegAddress[0]),
        .I4(Register_GOLDIR[11]),
        .O(s00_axi_rdata[11]));
  LUT5 #(
    .INIT(32'h0AFC0A0C)) 
    \s00_axi_rdata[12]_INST_0 
       (.I0(n_iter[12]),
        .I1(\Register_GOLCR_reg_n_0_[12] ),
        .I2(Read_RegAddress[1]),
        .I3(Read_RegAddress[0]),
        .I4(Register_GOLDIR[12]),
        .O(s00_axi_rdata[12]));
  LUT5 #(
    .INIT(32'h0AFC0A0C)) 
    \s00_axi_rdata[13]_INST_0 
       (.I0(n_iter[13]),
        .I1(\Register_GOLCR_reg_n_0_[13] ),
        .I2(Read_RegAddress[1]),
        .I3(Read_RegAddress[0]),
        .I4(Register_GOLDIR[13]),
        .O(s00_axi_rdata[13]));
  LUT5 #(
    .INIT(32'h0AFC0A0C)) 
    \s00_axi_rdata[14]_INST_0 
       (.I0(n_iter[14]),
        .I1(\Register_GOLCR_reg_n_0_[14] ),
        .I2(Read_RegAddress[1]),
        .I3(Read_RegAddress[0]),
        .I4(Register_GOLDIR[14]),
        .O(s00_axi_rdata[14]));
  LUT5 #(
    .INIT(32'h0AFC0A0C)) 
    \s00_axi_rdata[15]_INST_0 
       (.I0(n_iter[15]),
        .I1(\Register_GOLCR_reg_n_0_[15] ),
        .I2(Read_RegAddress[1]),
        .I3(Read_RegAddress[0]),
        .I4(Register_GOLDIR[15]),
        .O(s00_axi_rdata[15]));
  LUT5 #(
    .INIT(32'h0AFC0A0C)) 
    \s00_axi_rdata[16]_INST_0 
       (.I0(n_iter[16]),
        .I1(\Register_GOLCR_reg_n_0_[16] ),
        .I2(Read_RegAddress[1]),
        .I3(Read_RegAddress[0]),
        .I4(Register_GOLDIR[16]),
        .O(s00_axi_rdata[16]));
  LUT5 #(
    .INIT(32'h0AFC0A0C)) 
    \s00_axi_rdata[17]_INST_0 
       (.I0(n_iter[17]),
        .I1(\Register_GOLCR_reg_n_0_[17] ),
        .I2(Read_RegAddress[1]),
        .I3(Read_RegAddress[0]),
        .I4(Register_GOLDIR[17]),
        .O(s00_axi_rdata[17]));
  LUT5 #(
    .INIT(32'h0AFC0A0C)) 
    \s00_axi_rdata[18]_INST_0 
       (.I0(n_iter[18]),
        .I1(\Register_GOLCR_reg_n_0_[18] ),
        .I2(Read_RegAddress[1]),
        .I3(Read_RegAddress[0]),
        .I4(Register_GOLDIR[18]),
        .O(s00_axi_rdata[18]));
  LUT5 #(
    .INIT(32'h0AFC0A0C)) 
    \s00_axi_rdata[19]_INST_0 
       (.I0(n_iter[19]),
        .I1(\Register_GOLCR_reg_n_0_[19] ),
        .I2(Read_RegAddress[1]),
        .I3(Read_RegAddress[0]),
        .I4(Register_GOLDIR[19]),
        .O(s00_axi_rdata[19]));
  LUT5 #(
    .INIT(32'h0AFC0A0C)) 
    \s00_axi_rdata[1]_INST_0 
       (.I0(n_iter[1]),
        .I1(GSP),
        .I2(Read_RegAddress[1]),
        .I3(Read_RegAddress[0]),
        .I4(Register_GOLDIR[1]),
        .O(s00_axi_rdata[1]));
  LUT5 #(
    .INIT(32'h0AFC0A0C)) 
    \s00_axi_rdata[20]_INST_0 
       (.I0(n_iter[20]),
        .I1(\Register_GOLCR_reg_n_0_[20] ),
        .I2(Read_RegAddress[1]),
        .I3(Read_RegAddress[0]),
        .I4(Register_GOLDIR[20]),
        .O(s00_axi_rdata[20]));
  LUT5 #(
    .INIT(32'h0AFC0A0C)) 
    \s00_axi_rdata[21]_INST_0 
       (.I0(n_iter[21]),
        .I1(\Register_GOLCR_reg_n_0_[21] ),
        .I2(Read_RegAddress[1]),
        .I3(Read_RegAddress[0]),
        .I4(Register_GOLDIR[21]),
        .O(s00_axi_rdata[21]));
  LUT5 #(
    .INIT(32'h0AFC0A0C)) 
    \s00_axi_rdata[22]_INST_0 
       (.I0(n_iter[22]),
        .I1(\Register_GOLCR_reg_n_0_[22] ),
        .I2(Read_RegAddress[1]),
        .I3(Read_RegAddress[0]),
        .I4(Register_GOLDIR[22]),
        .O(s00_axi_rdata[22]));
  LUT5 #(
    .INIT(32'h0AFC0A0C)) 
    \s00_axi_rdata[23]_INST_0 
       (.I0(n_iter[23]),
        .I1(\Register_GOLCR_reg_n_0_[23] ),
        .I2(Read_RegAddress[1]),
        .I3(Read_RegAddress[0]),
        .I4(Register_GOLDIR[23]),
        .O(s00_axi_rdata[23]));
  LUT5 #(
    .INIT(32'h0AFC0A0C)) 
    \s00_axi_rdata[24]_INST_0 
       (.I0(n_iter[24]),
        .I1(\Register_GOLCR_reg_n_0_[24] ),
        .I2(Read_RegAddress[1]),
        .I3(Read_RegAddress[0]),
        .I4(Register_GOLDIR[24]),
        .O(s00_axi_rdata[24]));
  LUT5 #(
    .INIT(32'h0AFC0A0C)) 
    \s00_axi_rdata[25]_INST_0 
       (.I0(n_iter[25]),
        .I1(\Register_GOLCR_reg_n_0_[25] ),
        .I2(Read_RegAddress[1]),
        .I3(Read_RegAddress[0]),
        .I4(Register_GOLDIR[25]),
        .O(s00_axi_rdata[25]));
  LUT5 #(
    .INIT(32'h0AFC0A0C)) 
    \s00_axi_rdata[26]_INST_0 
       (.I0(n_iter[26]),
        .I1(\Register_GOLCR_reg_n_0_[26] ),
        .I2(Read_RegAddress[1]),
        .I3(Read_RegAddress[0]),
        .I4(Register_GOLDIR[26]),
        .O(s00_axi_rdata[26]));
  LUT5 #(
    .INIT(32'h0AFC0A0C)) 
    \s00_axi_rdata[27]_INST_0 
       (.I0(n_iter[27]),
        .I1(\Register_GOLCR_reg_n_0_[27] ),
        .I2(Read_RegAddress[1]),
        .I3(Read_RegAddress[0]),
        .I4(Register_GOLDIR[27]),
        .O(s00_axi_rdata[27]));
  LUT5 #(
    .INIT(32'h0AFC0A0C)) 
    \s00_axi_rdata[28]_INST_0 
       (.I0(n_iter[28]),
        .I1(\Register_GOLCR_reg_n_0_[28] ),
        .I2(Read_RegAddress[1]),
        .I3(Read_RegAddress[0]),
        .I4(Register_GOLDIR[28]),
        .O(s00_axi_rdata[28]));
  LUT5 #(
    .INIT(32'h0AFC0A0C)) 
    \s00_axi_rdata[29]_INST_0 
       (.I0(n_iter[29]),
        .I1(\Register_GOLCR_reg_n_0_[29] ),
        .I2(Read_RegAddress[1]),
        .I3(Read_RegAddress[0]),
        .I4(Register_GOLDIR[29]),
        .O(s00_axi_rdata[29]));
  LUT5 #(
    .INIT(32'h0AFC0A0C)) 
    \s00_axi_rdata[2]_INST_0 
       (.I0(n_iter[2]),
        .I1(GSI),
        .I2(Read_RegAddress[1]),
        .I3(Read_RegAddress[0]),
        .I4(Register_GOLDIR[2]),
        .O(s00_axi_rdata[2]));
  LUT5 #(
    .INIT(32'h0AFC0A0C)) 
    \s00_axi_rdata[30]_INST_0 
       (.I0(n_iter[30]),
        .I1(\Register_GOLCR_reg_n_0_[30] ),
        .I2(Read_RegAddress[1]),
        .I3(Read_RegAddress[0]),
        .I4(Register_GOLDIR[30]),
        .O(s00_axi_rdata[30]));
  LUT5 #(
    .INIT(32'h0AFC0A0C)) 
    \s00_axi_rdata[31]_INST_0 
       (.I0(n_iter[31]),
        .I1(\Register_GOLCR_reg_n_0_[31] ),
        .I2(Read_RegAddress[1]),
        .I3(Read_RegAddress[0]),
        .I4(Register_GOLDIR[31]),
        .O(s00_axi_rdata[31]));
  LUT5 #(
    .INIT(32'h0AFC0A0C)) 
    \s00_axi_rdata[3]_INST_0 
       (.I0(n_iter[3]),
        .I1(internal_max_iter),
        .I2(Read_RegAddress[1]),
        .I3(Read_RegAddress[0]),
        .I4(Register_GOLDIR[3]),
        .O(s00_axi_rdata[3]));
  LUT5 #(
    .INIT(32'h0AFC0A0C)) 
    \s00_axi_rdata[4]_INST_0 
       (.I0(n_iter[4]),
        .I1(\Register_GOLCR_reg_n_0_[4] ),
        .I2(Read_RegAddress[1]),
        .I3(Read_RegAddress[0]),
        .I4(Register_GOLDIR[4]),
        .O(s00_axi_rdata[4]));
  LUT5 #(
    .INIT(32'h0AFC0A0C)) 
    \s00_axi_rdata[5]_INST_0 
       (.I0(n_iter[5]),
        .I1(\Register_GOLCR_reg_n_0_[5] ),
        .I2(Read_RegAddress[1]),
        .I3(Read_RegAddress[0]),
        .I4(Register_GOLDIR[5]),
        .O(s00_axi_rdata[5]));
  LUT5 #(
    .INIT(32'h0AFC0A0C)) 
    \s00_axi_rdata[6]_INST_0 
       (.I0(n_iter[6]),
        .I1(\Register_GOLCR_reg_n_0_[6] ),
        .I2(Read_RegAddress[1]),
        .I3(Read_RegAddress[0]),
        .I4(Register_GOLDIR[6]),
        .O(s00_axi_rdata[6]));
  LUT5 #(
    .INIT(32'h0AFC0A0C)) 
    \s00_axi_rdata[7]_INST_0 
       (.I0(n_iter[7]),
        .I1(\Register_GOLCR_reg_n_0_[7] ),
        .I2(Read_RegAddress[1]),
        .I3(Read_RegAddress[0]),
        .I4(Register_GOLDIR[7]),
        .O(s00_axi_rdata[7]));
  LUT5 #(
    .INIT(32'h0AFC0A0C)) 
    \s00_axi_rdata[8]_INST_0 
       (.I0(n_iter[8]),
        .I1(\Register_GOLCR_reg_n_0_[8] ),
        .I2(Read_RegAddress[1]),
        .I3(Read_RegAddress[0]),
        .I4(Register_GOLDIR[8]),
        .O(s00_axi_rdata[8]));
  LUT5 #(
    .INIT(32'h0AFC0A0C)) 
    \s00_axi_rdata[9]_INST_0 
       (.I0(n_iter[9]),
        .I1(\Register_GOLCR_reg_n_0_[9] ),
        .I2(Read_RegAddress[1]),
        .I3(Read_RegAddress[0]),
        .I4(Register_GOLDIR[9]),
        .O(s00_axi_rdata[9]));
  LUT2 #(
    .INIT(4'h2)) 
    set_iteration_pulse_i_1
       (.I0(GSI),
        .I1(GSI_old),
        .O(set_iteration_pulse_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    set_iteration_pulse_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(set_iteration_pulse_i_1_n_0),
        .Q(set_iteration_pulse),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    shift_ca_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(WriteEnable_GOLDIR),
        .Q(shift_ca),
        .R(reset));
  LUT2 #(
    .INIT(4'h2)) 
    start_iter_i_1
       (.I0(GST),
        .I1(GST_old),
        .O(start_iter_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    start_iter_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(start_iter_i_1_n_0),
        .Q(start_iter),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    stop_iter_i_1
       (.I0(GSP),
        .I1(GSP_old),
        .O(stop_iter_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    stop_iter_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(stop_iter_i_1_n_0),
        .Q(stop_iter),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT3 #(
    .INIT(8'hAE)) 
    w_ready_i_2
       (.I0(s00_axi_awvalid),
        .I1(w_ready_reg_0),
        .I2(s00_axi_wvalid),
        .O(w_ready_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    w_ready_reg
       (.C(s00_axi_aclk),
        .CE(1'b1),
        .D(w_ready_i_2_n_0),
        .Q(w_ready_reg_0),
        .R(reset));
endmodule

module grid
   (r_FF_reg,
    shift_ca,
    r_FF,
    \Register_GOLDIR_reg[0] ,
    shift,
    ce,
    s00_axi_aclk,
    internal_shift_reg_rep);
  output r_FF_reg;
  input shift_ca;
  input r_FF;
  input [0:0]\Register_GOLDIR_reg[0] ;
  input shift;
  input ce;
  input s00_axi_aclk;
  input internal_shift_reg_rep;

  wire [0:0]\Register_GOLDIR_reg[0] ;
  wire bitstream;
  wire ce;
  wire internal_shift_reg_rep;
  wire r_FF;
  wire r_FF_reg;
  wire s00_axi_aclk;
  wire shift;
  wire shift_ca;
  wire \state_grid[0,0] ;
  wire \state_grid[0,10] ;
  wire \state_grid[0,11] ;
  wire \state_grid[0,12] ;
  wire \state_grid[0,13] ;
  wire \state_grid[0,14] ;
  wire \state_grid[0,15] ;
  wire \state_grid[0,16] ;
  wire \state_grid[0,17] ;
  wire \state_grid[0,1] ;
  wire \state_grid[0,2] ;
  wire \state_grid[0,3] ;
  wire \state_grid[0,4] ;
  wire \state_grid[0,5] ;
  wire \state_grid[0,6] ;
  wire \state_grid[0,7] ;
  wire \state_grid[0,8] ;
  wire \state_grid[0,9] ;
  wire \state_grid[1,0] ;
  wire \state_grid[1,10] ;
  wire \state_grid[1,11] ;
  wire \state_grid[1,12] ;
  wire \state_grid[1,13] ;
  wire \state_grid[1,14] ;
  wire \state_grid[1,15] ;
  wire \state_grid[1,16] ;
  wire \state_grid[1,17] ;
  wire \state_grid[1,1] ;
  wire \state_grid[1,2] ;
  wire \state_grid[1,3] ;
  wire \state_grid[1,4] ;
  wire \state_grid[1,5] ;
  wire \state_grid[1,6] ;
  wire \state_grid[1,7] ;
  wire \state_grid[1,8] ;
  wire \state_grid[1,9] ;
  wire \state_grid[10,0] ;
  wire \state_grid[10,10] ;
  wire \state_grid[10,11] ;
  wire \state_grid[10,12] ;
  wire \state_grid[10,13] ;
  wire \state_grid[10,14] ;
  wire \state_grid[10,15] ;
  wire \state_grid[10,16] ;
  wire \state_grid[10,17] ;
  wire \state_grid[10,1] ;
  wire \state_grid[10,2] ;
  wire \state_grid[10,3] ;
  wire \state_grid[10,4] ;
  wire \state_grid[10,5] ;
  wire \state_grid[10,6] ;
  wire \state_grid[10,7] ;
  wire \state_grid[10,8] ;
  wire \state_grid[10,9] ;
  wire \state_grid[11,10] ;
  wire \state_grid[11,11] ;
  wire \state_grid[11,12] ;
  wire \state_grid[11,13] ;
  wire \state_grid[11,14] ;
  wire \state_grid[11,15] ;
  wire \state_grid[11,16] ;
  wire \state_grid[11,17] ;
  wire \state_grid[11,1] ;
  wire \state_grid[11,2] ;
  wire \state_grid[11,3] ;
  wire \state_grid[11,4] ;
  wire \state_grid[11,5] ;
  wire \state_grid[11,6] ;
  wire \state_grid[11,7] ;
  wire \state_grid[11,8] ;
  wire \state_grid[11,9] ;
  wire \state_grid[2,0] ;
  wire \state_grid[2,10] ;
  wire \state_grid[2,11] ;
  wire \state_grid[2,12] ;
  wire \state_grid[2,13] ;
  wire \state_grid[2,14] ;
  wire \state_grid[2,15] ;
  wire \state_grid[2,16] ;
  wire \state_grid[2,17] ;
  wire \state_grid[2,1] ;
  wire \state_grid[2,2] ;
  wire \state_grid[2,3] ;
  wire \state_grid[2,4] ;
  wire \state_grid[2,5] ;
  wire \state_grid[2,6] ;
  wire \state_grid[2,7] ;
  wire \state_grid[2,8] ;
  wire \state_grid[2,9] ;
  wire \state_grid[3,0] ;
  wire \state_grid[3,10] ;
  wire \state_grid[3,11] ;
  wire \state_grid[3,12] ;
  wire \state_grid[3,13] ;
  wire \state_grid[3,14] ;
  wire \state_grid[3,15] ;
  wire \state_grid[3,16] ;
  wire \state_grid[3,17] ;
  wire \state_grid[3,1] ;
  wire \state_grid[3,2] ;
  wire \state_grid[3,3] ;
  wire \state_grid[3,4] ;
  wire \state_grid[3,5] ;
  wire \state_grid[3,6] ;
  wire \state_grid[3,7] ;
  wire \state_grid[3,8] ;
  wire \state_grid[3,9] ;
  wire \state_grid[4,0] ;
  wire \state_grid[4,10] ;
  wire \state_grid[4,11] ;
  wire \state_grid[4,12] ;
  wire \state_grid[4,13] ;
  wire \state_grid[4,14] ;
  wire \state_grid[4,15] ;
  wire \state_grid[4,16] ;
  wire \state_grid[4,17] ;
  wire \state_grid[4,1] ;
  wire \state_grid[4,2] ;
  wire \state_grid[4,3] ;
  wire \state_grid[4,4] ;
  wire \state_grid[4,5] ;
  wire \state_grid[4,6] ;
  wire \state_grid[4,7] ;
  wire \state_grid[4,8] ;
  wire \state_grid[4,9] ;
  wire \state_grid[5,0] ;
  wire \state_grid[5,10] ;
  wire \state_grid[5,11] ;
  wire \state_grid[5,12] ;
  wire \state_grid[5,13] ;
  wire \state_grid[5,14] ;
  wire \state_grid[5,15] ;
  wire \state_grid[5,16] ;
  wire \state_grid[5,17] ;
  wire \state_grid[5,1] ;
  wire \state_grid[5,2] ;
  wire \state_grid[5,3] ;
  wire \state_grid[5,4] ;
  wire \state_grid[5,5] ;
  wire \state_grid[5,6] ;
  wire \state_grid[5,7] ;
  wire \state_grid[5,8] ;
  wire \state_grid[5,9] ;
  wire \state_grid[6,0] ;
  wire \state_grid[6,10] ;
  wire \state_grid[6,11] ;
  wire \state_grid[6,12] ;
  wire \state_grid[6,13] ;
  wire \state_grid[6,14] ;
  wire \state_grid[6,15] ;
  wire \state_grid[6,16] ;
  wire \state_grid[6,17] ;
  wire \state_grid[6,1] ;
  wire \state_grid[6,2] ;
  wire \state_grid[6,3] ;
  wire \state_grid[6,4] ;
  wire \state_grid[6,5] ;
  wire \state_grid[6,6] ;
  wire \state_grid[6,7] ;
  wire \state_grid[6,8] ;
  wire \state_grid[6,9] ;
  wire \state_grid[7,0] ;
  wire \state_grid[7,10] ;
  wire \state_grid[7,11] ;
  wire \state_grid[7,12] ;
  wire \state_grid[7,13] ;
  wire \state_grid[7,14] ;
  wire \state_grid[7,15] ;
  wire \state_grid[7,16] ;
  wire \state_grid[7,17] ;
  wire \state_grid[7,1] ;
  wire \state_grid[7,2] ;
  wire \state_grid[7,3] ;
  wire \state_grid[7,4] ;
  wire \state_grid[7,5] ;
  wire \state_grid[7,6] ;
  wire \state_grid[7,7] ;
  wire \state_grid[7,8] ;
  wire \state_grid[7,9] ;
  wire \state_grid[8,0] ;
  wire \state_grid[8,10] ;
  wire \state_grid[8,11] ;
  wire \state_grid[8,12] ;
  wire \state_grid[8,13] ;
  wire \state_grid[8,14] ;
  wire \state_grid[8,15] ;
  wire \state_grid[8,16] ;
  wire \state_grid[8,17] ;
  wire \state_grid[8,1] ;
  wire \state_grid[8,2] ;
  wire \state_grid[8,3] ;
  wire \state_grid[8,4] ;
  wire \state_grid[8,5] ;
  wire \state_grid[8,6] ;
  wire \state_grid[8,7] ;
  wire \state_grid[8,8] ;
  wire \state_grid[8,9] ;
  wire \state_grid[9,0] ;
  wire \state_grid[9,10] ;
  wire \state_grid[9,11] ;
  wire \state_grid[9,12] ;
  wire \state_grid[9,13] ;
  wire \state_grid[9,14] ;
  wire \state_grid[9,15] ;
  wire \state_grid[9,16] ;
  wire \state_grid[9,17] ;
  wire \state_grid[9,1] ;
  wire \state_grid[9,2] ;
  wire \state_grid[9,3] ;
  wire \state_grid[9,4] ;
  wire \state_grid[9,5] ;
  wire \state_grid[9,6] ;
  wire \state_grid[9,7] ;
  wire \state_grid[9,8] ;
  wire \state_grid[9,9] ;

  \cell  \ROW[0].COL[0].FL.LE.CELL_X0Y0 
       (.FDRE_I1_0(\state_grid[0,0] ),
        .Q(\state_grid[1,0] ),
        .\Register_GOLDIR_reg[0] (\Register_GOLDIR_reg[0] ),
        .ce(ce),
        .prox({\state_grid[1,1] ,\state_grid[0,1] }),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_585 \ROW[0].COL[10].FL.M.CELL_XIY0 
       (.FDRE_I1_0(\state_grid[0,10] ),
        .FDRE_I1_1(\state_grid[1,9] ),
        .FDRE_I1_2(\state_grid[0,9] ),
        .Q(\state_grid[1,10] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .prox({\state_grid[1,11] ,\state_grid[0,11] }),
        .s00_axi_aclk(s00_axi_aclk));
  cell_586 \ROW[0].COL[11].FL.M.CELL_XIY0 
       (.FDRE_I1_0(\state_grid[0,11] ),
        .FDRE_I1_1(\state_grid[1,10] ),
        .FDRE_I1_2(\state_grid[0,10] ),
        .Q(\state_grid[1,11] ),
        .ce(ce),
        .prox({\state_grid[1,12] ,\state_grid[0,12] }),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_587 \ROW[0].COL[12].FL.M.CELL_XIY0 
       (.FDRE_I1_0(\state_grid[0,12] ),
        .FDRE_I1_1({\state_grid[1,11] ,\state_grid[0,11] }),
        .Q(\state_grid[1,12] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .prox({\state_grid[1,13] ,\state_grid[0,13] }),
        .s00_axi_aclk(s00_axi_aclk));
  cell_588 \ROW[0].COL[13].FL.M.CELL_XIY0 
       (.FDRE_I1_0(\state_grid[0,13] ),
        .FDRE_I1_1({\state_grid[1,12] ,\state_grid[0,12] }),
        .Q(\state_grid[1,13] ),
        .ce(ce),
        .prox({\state_grid[1,14] ,\state_grid[0,14] }),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_589 \ROW[0].COL[14].FL.M.CELL_XIY0 
       (.FDRE_I1_0(\state_grid[0,14] ),
        .FDRE_I1_1({\state_grid[1,13] ,\state_grid[0,13] }),
        .Q(\state_grid[1,14] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .prox({\state_grid[1,15] ,\state_grid[0,15] }),
        .s00_axi_aclk(s00_axi_aclk));
  cell_590 \ROW[0].COL[15].FL.M.CELL_XIY0 
       (.FDRE_I1_0(\state_grid[0,15] ),
        .FDRE_I1_1({\state_grid[1,14] ,\state_grid[0,14] }),
        .Q(\state_grid[1,15] ),
        .ce(ce),
        .prox({\state_grid[1,16] ,\state_grid[0,16] }),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_591 \ROW[0].COL[16].FL.M.CELL_XIY0 
       (.FDRE_I1_0(\state_grid[0,16] ),
        .FDRE_I1_1({\state_grid[1,15] ,\state_grid[0,15] }),
        .Q(\state_grid[1,17] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .prox({\state_grid[1,16] ,\state_grid[0,17] }),
        .s00_axi_aclk(s00_axi_aclk));
  cell_592 \ROW[0].COL[17].FL.RE.CELL_XWY0 
       (.FDRE_I1_0(\state_grid[0,16] ),
        .Q(\state_grid[0,17] ),
        .ce(ce),
        .prox({\state_grid[1,16] ,\state_grid[1,17] }),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_593 \ROW[0].COL[1].FL.M.CELL_XIY0 
       (.FDRE_I1_0(\state_grid[0,1] ),
        .FDRE_I1_1(\state_grid[1,0] ),
        .FDRE_I1_2(\state_grid[0,0] ),
        .Q(\state_grid[1,1] ),
        .ce(ce),
        .prox({\state_grid[1,2] ,\state_grid[0,2] }),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_594 \ROW[0].COL[2].FL.M.CELL_XIY0 
       (.FDRE_I1_0(\state_grid[0,2] ),
        .FDRE_I1_1({\state_grid[1,1] ,\state_grid[0,1] }),
        .Q(\state_grid[1,2] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .prox({\state_grid[1,3] ,\state_grid[0,3] }),
        .s00_axi_aclk(s00_axi_aclk));
  cell_595 \ROW[0].COL[3].FL.M.CELL_XIY0 
       (.FDRE_I1_0(\state_grid[0,3] ),
        .FDRE_I1_1({\state_grid[1,2] ,\state_grid[0,2] }),
        .Q(\state_grid[1,3] ),
        .ce(ce),
        .prox({\state_grid[1,4] ,\state_grid[0,4] }),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_596 \ROW[0].COL[4].FL.M.CELL_XIY0 
       (.FDRE_I1_0(\state_grid[0,4] ),
        .FDRE_I1_1({\state_grid[1,3] ,\state_grid[0,3] }),
        .Q(\state_grid[1,4] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .prox({\state_grid[1,5] ,\state_grid[0,5] }),
        .s00_axi_aclk(s00_axi_aclk));
  cell_597 \ROW[0].COL[5].FL.M.CELL_XIY0 
       (.FDRE_I1_0(\state_grid[0,5] ),
        .FDRE_I1_1({\state_grid[1,4] ,\state_grid[0,4] }),
        .Q(\state_grid[1,5] ),
        .ce(ce),
        .prox({\state_grid[1,6] ,\state_grid[0,6] }),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_598 \ROW[0].COL[6].FL.M.CELL_XIY0 
       (.FDRE_I1_0(\state_grid[0,6] ),
        .FDRE_I1_1({\state_grid[1,5] ,\state_grid[0,5] }),
        .Q(\state_grid[1,6] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .prox({\state_grid[1,7] ,\state_grid[0,7] }),
        .s00_axi_aclk(s00_axi_aclk));
  cell_599 \ROW[0].COL[7].FL.M.CELL_XIY0 
       (.FDRE_I1_0(\state_grid[0,7] ),
        .FDRE_I1_1({\state_grid[1,6] ,\state_grid[0,6] }),
        .Q(\state_grid[1,7] ),
        .ce(ce),
        .prox({\state_grid[1,8] ,\state_grid[0,8] }),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_600 \ROW[0].COL[8].FL.M.CELL_XIY0 
       (.FDRE_I1_0(\state_grid[0,8] ),
        .FDRE_I1_1(\state_grid[1,9] ),
        .FDRE_I1_2(\state_grid[1,8] ),
        .Q(\state_grid[0,9] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .prox({\state_grid[1,7] ,\state_grid[0,7] }),
        .s00_axi_aclk(s00_axi_aclk));
  cell_601 \ROW[0].COL[9].FL.M.CELL_XIY0 
       (.FDRE_I1_0(\state_grid[0,9] ),
        .FDRE_I1_1(\state_grid[0,10] ),
        .FDRE_I1_2(\state_grid[1,9] ),
        .Q(\state_grid[1,10] ),
        .ce(ce),
        .prox({\state_grid[1,8] ,\state_grid[0,8] }),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_602 \ROW[10].COL[0].EH.E_LS.CELL_X0YE 
       (.FDRE_I1_0(\state_grid[10,0] ),
        .FDRE_I1_1(\state_grid[9,0] ),
        .Q(bitstream),
        .ce(ce),
        .prox({\state_grid[9,1] ,\state_grid[11,1] ,\state_grid[10,1] }),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_603 \ROW[10].COL[10].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[10,10] ),
        .FDRE_I1_1({\state_grid[11,9] ,\state_grid[10,9] }),
        .FDRE_I1_2({\state_grid[9,9] ,\state_grid[9,10] }),
        .Q(\state_grid[11,10] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .prox({\state_grid[9,11] ,\state_grid[11,11] ,\state_grid[10,11] }),
        .s00_axi_aclk(s00_axi_aclk));
  cell_604 \ROW[10].COL[11].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[10,11] ),
        .FDRE_I1_1({\state_grid[9,11] ,\state_grid[11,11] }),
        .FDRE_I1_2(\state_grid[9,10] ),
        .FDRE_I1_3(\state_grid[10,10] ),
        .Q(\state_grid[11,10] ),
        .ce(ce),
        .prox({\state_grid[9,12] ,\state_grid[11,12] ,\state_grid[10,12] }),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_605 \ROW[10].COL[12].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0({\state_grid[9,12] ,\state_grid[11,12] }),
        .FDRE_I1_1({\state_grid[9,11] ,\state_grid[11,11] ,\state_grid[10,11] }),
        .Q(\state_grid[10,12] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .prox({\state_grid[9,13] ,\state_grid[11,13] ,\state_grid[10,13] }),
        .s00_axi_aclk(s00_axi_aclk));
  cell_606 \ROW[10].COL[13].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0({\state_grid[9,13] ,\state_grid[11,13] }),
        .FDRE_I1_1({\state_grid[9,12] ,\state_grid[11,12] ,\state_grid[10,12] }),
        .Q(\state_grid[10,13] ),
        .ce(ce),
        .prox({\state_grid[9,14] ,\state_grid[11,14] ,\state_grid[10,14] }),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_607 \ROW[10].COL[14].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0({\state_grid[9,14] ,\state_grid[11,14] }),
        .FDRE_I1_1({\state_grid[9,13] ,\state_grid[11,13] ,\state_grid[10,13] }),
        .Q(\state_grid[10,14] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .prox({\state_grid[9,15] ,\state_grid[11,15] ,\state_grid[10,15] }),
        .s00_axi_aclk(s00_axi_aclk));
  cell_608 \ROW[10].COL[15].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0({\state_grid[9,15] ,\state_grid[11,15] }),
        .FDRE_I1_1({\state_grid[9,14] ,\state_grid[11,14] ,\state_grid[10,14] }),
        .Q(\state_grid[10,15] ),
        .ce(ce),
        .prox({\state_grid[9,16] ,\state_grid[11,16] ,\state_grid[10,16] }),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_609 \ROW[10].COL[16].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[10,16] ),
        .FDRE_I1_1({\state_grid[9,15] ,\state_grid[11,15] ,\state_grid[10,15] }),
        .Q(\state_grid[10,17] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .prox({\state_grid[9,16] ,\state_grid[11,16] ,\state_grid[11,17] ,\state_grid[9,17] }),
        .s00_axi_aclk(s00_axi_aclk));
  cell_610 \ROW[10].COL[17].EH.E_RS.CELL_XWYE 
       (.FDRE_I1_0(\state_grid[10,16] ),
        .Q(\state_grid[10,17] ),
        .ce(ce),
        .prox({\state_grid[9,16] ,\state_grid[11,16] ,\state_grid[11,17] ,\state_grid[9,17] }),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_611 \ROW[10].COL[1].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[10,1] ),
        .FDRE_I1_1({\state_grid[9,1] ,\state_grid[11,1] }),
        .FDRE_I1_2(\state_grid[9,0] ),
        .FDRE_I1_3(\state_grid[10,0] ),
        .Q(bitstream),
        .ce(ce),
        .prox({\state_grid[9,2] ,\state_grid[11,2] ,\state_grid[10,2] }),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_612 \ROW[10].COL[2].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0({\state_grid[9,2] ,\state_grid[11,2] }),
        .FDRE_I1_1({\state_grid[9,1] ,\state_grid[11,1] ,\state_grid[10,1] }),
        .Q(\state_grid[10,2] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .prox({\state_grid[9,3] ,\state_grid[11,3] ,\state_grid[10,3] }),
        .s00_axi_aclk(s00_axi_aclk));
  cell_613 \ROW[10].COL[3].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0({\state_grid[9,3] ,\state_grid[11,3] }),
        .FDRE_I1_1({\state_grid[9,2] ,\state_grid[11,2] ,\state_grid[10,2] }),
        .Q(\state_grid[10,3] ),
        .ce(ce),
        .prox({\state_grid[9,4] ,\state_grid[11,4] ,\state_grid[10,4] }),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_614 \ROW[10].COL[4].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0({\state_grid[9,4] ,\state_grid[11,4] }),
        .FDRE_I1_1({\state_grid[9,3] ,\state_grid[11,3] ,\state_grid[10,3] }),
        .Q(\state_grid[10,4] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .prox({\state_grid[9,5] ,\state_grid[11,5] ,\state_grid[10,5] }),
        .s00_axi_aclk(s00_axi_aclk));
  cell_615 \ROW[10].COL[5].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0({\state_grid[9,5] ,\state_grid[11,5] }),
        .FDRE_I1_1({\state_grid[9,4] ,\state_grid[11,4] ,\state_grid[10,4] }),
        .Q(\state_grid[10,5] ),
        .ce(ce),
        .prox({\state_grid[9,6] ,\state_grid[11,6] ,\state_grid[10,6] }),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_616 \ROW[10].COL[6].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0({\state_grid[9,6] ,\state_grid[11,6] }),
        .FDRE_I1_1({\state_grid[9,5] ,\state_grid[11,5] ,\state_grid[10,5] }),
        .Q(\state_grid[10,6] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .prox({\state_grid[9,7] ,\state_grid[11,7] ,\state_grid[10,7] }),
        .s00_axi_aclk(s00_axi_aclk));
  cell_617 \ROW[10].COL[7].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0({\state_grid[9,7] ,\state_grid[11,7] }),
        .FDRE_I1_1({\state_grid[9,6] ,\state_grid[11,6] ,\state_grid[10,6] }),
        .Q(\state_grid[10,7] ),
        .ce(ce),
        .prox({\state_grid[9,8] ,\state_grid[11,8] ,\state_grid[10,8] }),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_618 \ROW[10].COL[8].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[10,8] ),
        .FDRE_I1_1({\state_grid[9,7] ,\state_grid[11,7] ,\state_grid[10,7] }),
        .Q(\state_grid[10,9] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .prox({\state_grid[9,8] ,\state_grid[11,8] ,\state_grid[11,9] ,\state_grid[9,9] }),
        .s00_axi_aclk(s00_axi_aclk));
  cell_619 \ROW[10].COL[9].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[10,9] ),
        .FDRE_I1_1({\state_grid[9,9] ,\state_grid[9,10] }),
        .FDRE_I1_2(\state_grid[10,10] ),
        .FDRE_I1_3(\state_grid[10,8] ),
        .Q(\state_grid[11,10] ),
        .ce(ce),
        .prox({\state_grid[9,8] ,\state_grid[11,8] ,\state_grid[11,9] }),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_620 \ROW[11].COL[0].EH.LL_LE.CELL_X0YH 
       (.FDRE_I1_0({\state_grid[11,1] ,\state_grid[10,1] }),
        .FDRE_I1_1(\state_grid[10,0] ),
        .Q(bitstream),
        .ce(ce),
        .r_FF(r_FF),
        .r_FF_reg(r_FF_reg),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift),
        .shift_ca(shift_ca));
  cell_621 \ROW[11].COL[10].EH.LL_M.CELL_XIYH 
       (.FDRE_I1_0({\state_grid[11,11] ,\state_grid[10,11] }),
        .FDRE_I1_1({\state_grid[11,9] ,\state_grid[10,9] }),
        .FDRE_I1_2(\state_grid[10,10] ),
        .Q(\state_grid[11,10] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_622 \ROW[11].COL[11].EH.LL_M.CELL_XIYH 
       (.FDRE_I1_0(\state_grid[11,11] ),
        .FDRE_I1_1({\state_grid[11,12] ,\state_grid[10,12] }),
        .FDRE_I1_2(\state_grid[10,10] ),
        .FDRE_I1_3(\state_grid[10,11] ),
        .Q(\state_grid[11,10] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_623 \ROW[11].COL[12].EH.LL_M.CELL_XIYH 
       (.FDRE_I1_0(\state_grid[11,12] ),
        .FDRE_I1_1({\state_grid[11,13] ,\state_grid[10,13] }),
        .FDRE_I1_2({\state_grid[11,11] ,\state_grid[10,11] }),
        .Q(\state_grid[10,12] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_624 \ROW[11].COL[13].EH.LL_M.CELL_XIYH 
       (.FDRE_I1_0(\state_grid[11,13] ),
        .FDRE_I1_1({\state_grid[11,14] ,\state_grid[10,14] }),
        .FDRE_I1_2({\state_grid[11,12] ,\state_grid[10,12] }),
        .Q(\state_grid[10,13] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_625 \ROW[11].COL[14].EH.LL_M.CELL_XIYH 
       (.FDRE_I1_0(\state_grid[11,14] ),
        .FDRE_I1_1({\state_grid[11,15] ,\state_grid[10,15] }),
        .FDRE_I1_2({\state_grid[11,13] ,\state_grid[10,13] }),
        .Q(\state_grid[10,14] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_626 \ROW[11].COL[15].EH.LL_M.CELL_XIYH 
       (.FDRE_I1_0(\state_grid[11,15] ),
        .FDRE_I1_1({\state_grid[11,14] ,\state_grid[10,14] }),
        .Q(\state_grid[10,15] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .prox({\state_grid[11,16] ,\state_grid[10,16] }),
        .s00_axi_aclk(s00_axi_aclk));
  cell_627 \ROW[11].COL[16].EH.LL_M.CELL_XIYH 
       (.FDRE_I1_0({\state_grid[11,15] ,\state_grid[10,15] }),
        .FDRE_I1_1(\state_grid[11,17] ),
        .Q(\state_grid[11,16] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .prox({\state_grid[10,16] ,\state_grid[10,17] }),
        .s00_axi_aclk(s00_axi_aclk));
  cell_628 \ROW[11].COL[17].EH.LL_RE.CELL_XWYH 
       (.FDRE_I1_0(\state_grid[10,17] ),
        .Q(\state_grid[11,17] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .prox({\state_grid[11,16] ,\state_grid[10,16] }),
        .s00_axi_aclk(s00_axi_aclk));
  cell_629 \ROW[11].COL[1].EH.LL_M.CELL_XIYH 
       (.FDRE_I1_0(\state_grid[11,1] ),
        .FDRE_I1_1({\state_grid[11,2] ,\state_grid[10,2] }),
        .FDRE_I1_2(\state_grid[10,0] ),
        .FDRE_I1_3(\state_grid[10,1] ),
        .Q(bitstream),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_630 \ROW[11].COL[2].EH.LL_M.CELL_XIYH 
       (.FDRE_I1_0(\state_grid[11,2] ),
        .FDRE_I1_1({\state_grid[11,3] ,\state_grid[10,3] }),
        .FDRE_I1_2({\state_grid[11,1] ,\state_grid[10,1] }),
        .Q(\state_grid[10,2] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_631 \ROW[11].COL[3].EH.LL_M.CELL_XIYH 
       (.FDRE_I1_0(\state_grid[11,3] ),
        .FDRE_I1_1({\state_grid[11,4] ,\state_grid[10,4] }),
        .FDRE_I1_2({\state_grid[11,2] ,\state_grid[10,2] }),
        .Q(\state_grid[10,3] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_632 \ROW[11].COL[4].EH.LL_M.CELL_XIYH 
       (.FDRE_I1_0(\state_grid[11,4] ),
        .FDRE_I1_1({\state_grid[11,5] ,\state_grid[10,5] }),
        .FDRE_I1_2({\state_grid[11,3] ,\state_grid[10,3] }),
        .Q(\state_grid[10,4] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_633 \ROW[11].COL[5].EH.LL_M.CELL_XIYH 
       (.FDRE_I1_0(\state_grid[11,5] ),
        .FDRE_I1_1({\state_grid[11,6] ,\state_grid[10,6] }),
        .FDRE_I1_2({\state_grid[11,4] ,\state_grid[10,4] }),
        .Q(\state_grid[10,5] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_634 \ROW[11].COL[6].EH.LL_M.CELL_XIYH 
       (.FDRE_I1_0(\state_grid[11,6] ),
        .FDRE_I1_1({\state_grid[11,7] ,\state_grid[10,7] }),
        .FDRE_I1_2({\state_grid[11,5] ,\state_grid[10,5] }),
        .Q(\state_grid[10,6] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_635 \ROW[11].COL[7].EH.LL_M.CELL_XIYH 
       (.FDRE_I1_0(\state_grid[11,7] ),
        .FDRE_I1_1({\state_grid[11,6] ,\state_grid[10,6] }),
        .Q(\state_grid[10,7] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .prox({\state_grid[11,8] ,\state_grid[10,8] }),
        .s00_axi_aclk(s00_axi_aclk));
  cell_636 \ROW[11].COL[8].EH.LL_M.CELL_XIYH 
       (.FDRE_I1_0({\state_grid[11,9] ,\state_grid[10,9] }),
        .FDRE_I1_1({\state_grid[11,7] ,\state_grid[10,7] }),
        .FDRE_I1_2(\state_grid[10,8] ),
        .Q(\state_grid[11,8] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_637 \ROW[11].COL[9].EH.LL_M.CELL_XIYH 
       (.FDRE_I1_0(\state_grid[10,10] ),
        .FDRE_I1_1(\state_grid[10,9] ),
        .FDRE_I1_2(\state_grid[11,10] ),
        .Q(\state_grid[11,9] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .prox({\state_grid[11,8] ,\state_grid[10,8] }),
        .s00_axi_aclk(s00_axi_aclk));
  cell_638 \ROW[1].COL[0].EH.O_LS.CELL_X0YO 
       (.FDRE_I1_0(\state_grid[1,0] ),
        .FDRE_I1_1({\state_grid[1,1] ,\state_grid[0,1] }),
        .FDRE_I1_2(\state_grid[2,0] ),
        .FDRE_I1_3(\state_grid[0,0] ),
        .Q(\state_grid[2,1] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_639 \ROW[1].COL[10].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[1,10] ),
        .FDRE_I1_1({\state_grid[1,11] ,\state_grid[0,11] }),
        .FDRE_I1_2(\state_grid[0,9] ),
        .FDRE_I1_3(\state_grid[2,10] ),
        .FDRE_I1_4(\state_grid[2,9] ),
        .FDRE_I1_5(\state_grid[1,9] ),
        .FDRE_I1_6(\state_grid[0,10] ),
        .Q(\state_grid[2,11] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_640 \ROW[1].COL[11].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[1,11] ),
        .FDRE_I1_1({\state_grid[1,12] ,\state_grid[0,12] }),
        .FDRE_I1_2(\state_grid[0,10] ),
        .FDRE_I1_3(\state_grid[2,11] ),
        .FDRE_I1_4(\state_grid[2,10] ),
        .FDRE_I1_5(\state_grid[1,10] ),
        .FDRE_I1_6(\state_grid[0,11] ),
        .Q(\state_grid[2,12] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_641 \ROW[1].COL[12].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[1,12] ),
        .FDRE_I1_1({\state_grid[1,13] ,\state_grid[0,13] }),
        .FDRE_I1_2({\state_grid[1,11] ,\state_grid[0,11] }),
        .FDRE_I1_3(\state_grid[2,12] ),
        .FDRE_I1_4(\state_grid[2,11] ),
        .FDRE_I1_5(\state_grid[0,12] ),
        .Q(\state_grid[2,13] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_642 \ROW[1].COL[13].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[1,13] ),
        .FDRE_I1_1({\state_grid[1,14] ,\state_grid[0,14] }),
        .FDRE_I1_2({\state_grid[1,12] ,\state_grid[0,12] }),
        .FDRE_I1_3(\state_grid[2,13] ),
        .FDRE_I1_4(\state_grid[2,12] ),
        .FDRE_I1_5(\state_grid[0,13] ),
        .Q(\state_grid[2,14] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_643 \ROW[1].COL[14].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[1,14] ),
        .FDRE_I1_1({\state_grid[1,15] ,\state_grid[0,15] }),
        .FDRE_I1_2({\state_grid[1,13] ,\state_grid[0,13] }),
        .FDRE_I1_3(\state_grid[2,14] ),
        .FDRE_I1_4(\state_grid[2,13] ),
        .FDRE_I1_5(\state_grid[0,14] ),
        .Q(\state_grid[2,15] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_644 \ROW[1].COL[15].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[1,15] ),
        .FDRE_I1_1({\state_grid[1,14] ,\state_grid[0,14] }),
        .FDRE_I1_2(\state_grid[2,15] ),
        .FDRE_I1_3(\state_grid[2,14] ),
        .FDRE_I1_4(\state_grid[0,15] ),
        .Q(\state_grid[2,16] ),
        .ce(ce),
        .prox({\state_grid[1,16] ,\state_grid[0,16] }),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_645 \ROW[1].COL[16].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[1,16] ),
        .FDRE_I1_1({\state_grid[1,15] ,\state_grid[0,15] }),
        .FDRE_I1_2(\state_grid[1,17] ),
        .Q(\state_grid[2,15] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .prox({\state_grid[2,16] ,\state_grid[2,17] ,\state_grid[0,16] ,\state_grid[0,17] }),
        .s00_axi_aclk(s00_axi_aclk));
  cell_646 \ROW[1].COL[17].EH.O_RS.CELL_XWYO 
       (.FDRE_I1_0(\state_grid[1,16] ),
        .Q(\state_grid[1,17] ),
        .ce(ce),
        .prox({\state_grid[2,16] ,\state_grid[2,17] ,\state_grid[0,16] ,\state_grid[0,17] }),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_647 \ROW[1].COL[1].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[1,1] ),
        .FDRE_I1_1({\state_grid[1,2] ,\state_grid[0,2] }),
        .FDRE_I1_2(\state_grid[0,0] ),
        .FDRE_I1_3(\state_grid[2,1] ),
        .FDRE_I1_4(\state_grid[2,0] ),
        .FDRE_I1_5(\state_grid[1,0] ),
        .FDRE_I1_6(\state_grid[0,1] ),
        .Q(\state_grid[2,2] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_648 \ROW[1].COL[2].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[1,2] ),
        .FDRE_I1_1({\state_grid[1,3] ,\state_grid[0,3] }),
        .FDRE_I1_2({\state_grid[1,1] ,\state_grid[0,1] }),
        .FDRE_I1_3(\state_grid[2,2] ),
        .FDRE_I1_4(\state_grid[2,1] ),
        .FDRE_I1_5(\state_grid[0,2] ),
        .Q(\state_grid[2,3] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_649 \ROW[1].COL[3].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[1,3] ),
        .FDRE_I1_1({\state_grid[1,4] ,\state_grid[0,4] }),
        .FDRE_I1_2({\state_grid[1,2] ,\state_grid[0,2] }),
        .FDRE_I1_3(\state_grid[2,3] ),
        .FDRE_I1_4(\state_grid[2,2] ),
        .FDRE_I1_5(\state_grid[0,3] ),
        .Q(\state_grid[2,4] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_650 \ROW[1].COL[4].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[1,4] ),
        .FDRE_I1_1({\state_grid[1,5] ,\state_grid[0,5] }),
        .FDRE_I1_2({\state_grid[1,3] ,\state_grid[0,3] }),
        .FDRE_I1_3(\state_grid[2,4] ),
        .FDRE_I1_4(\state_grid[2,3] ),
        .FDRE_I1_5(\state_grid[0,4] ),
        .Q(\state_grid[2,5] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_651 \ROW[1].COL[5].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[1,5] ),
        .FDRE_I1_1({\state_grid[1,6] ,\state_grid[0,6] }),
        .FDRE_I1_2({\state_grid[1,4] ,\state_grid[0,4] }),
        .FDRE_I1_3(\state_grid[2,5] ),
        .FDRE_I1_4(\state_grid[2,4] ),
        .FDRE_I1_5(\state_grid[0,5] ),
        .Q(\state_grid[2,6] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_652 \ROW[1].COL[6].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[1,6] ),
        .FDRE_I1_1({\state_grid[1,5] ,\state_grid[0,5] }),
        .FDRE_I1_2(\state_grid[2,6] ),
        .FDRE_I1_3(\state_grid[2,5] ),
        .FDRE_I1_4(\state_grid[0,6] ),
        .Q(\state_grid[2,7] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .prox({\state_grid[1,7] ,\state_grid[0,7] }),
        .s00_axi_aclk(s00_axi_aclk));
  cell_653 \ROW[1].COL[7].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[1,7] ),
        .FDRE_I1_1({\state_grid[1,6] ,\state_grid[0,6] }),
        .FDRE_I1_2(\state_grid[2,7] ),
        .FDRE_I1_3(\state_grid[2,6] ),
        .FDRE_I1_4(\state_grid[0,7] ),
        .Q(\state_grid[2,8] ),
        .ce(ce),
        .prox({\state_grid[1,8] ,\state_grid[0,8] }),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_654 \ROW[1].COL[8].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[1,8] ),
        .FDRE_I1_1(\state_grid[0,9] ),
        .FDRE_I1_2(\state_grid[2,8] ),
        .FDRE_I1_3(\state_grid[2,7] ),
        .FDRE_I1_4(\state_grid[0,8] ),
        .FDRE_I1_5(\state_grid[1,9] ),
        .Q(\state_grid[2,9] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .prox({\state_grid[1,7] ,\state_grid[0,7] }),
        .s00_axi_aclk(s00_axi_aclk));
  cell_655 \ROW[1].COL[9].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[1,9] ),
        .FDRE_I1_1(\state_grid[0,10] ),
        .FDRE_I1_2(\state_grid[2,9] ),
        .FDRE_I1_3(\state_grid[2,8] ),
        .FDRE_I1_4(\state_grid[0,9] ),
        .FDRE_I1_5(\state_grid[1,10] ),
        .Q(\state_grid[2,10] ),
        .ce(ce),
        .prox({\state_grid[1,8] ,\state_grid[0,8] }),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_656 \ROW[2].COL[0].EH.E_LS.CELL_X0YE 
       (.FDRE_I1_0(\state_grid[2,0] ),
        .FDRE_I1_1(\state_grid[1,1] ),
        .FDRE_I1_2(\state_grid[3,1] ),
        .FDRE_I1_3(\state_grid[3,0] ),
        .FDRE_I1_4(\state_grid[1,0] ),
        .Q(\state_grid[2,1] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_657 \ROW[2].COL[10].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[2,10] ),
        .FDRE_I1_1(\state_grid[1,11] ),
        .FDRE_I1_2(\state_grid[3,11] ),
        .FDRE_I1_3(\state_grid[3,10] ),
        .FDRE_I1_4(\state_grid[3,9] ),
        .FDRE_I1_5(\state_grid[1,9] ),
        .FDRE_I1_6(\state_grid[1,10] ),
        .FDRE_I1_7(\state_grid[2,9] ),
        .Q(\state_grid[2,11] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_658 \ROW[2].COL[11].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[2,11] ),
        .FDRE_I1_1(\state_grid[1,12] ),
        .FDRE_I1_2(\state_grid[3,12] ),
        .FDRE_I1_3(\state_grid[3,11] ),
        .FDRE_I1_4(\state_grid[3,10] ),
        .FDRE_I1_5(\state_grid[1,10] ),
        .FDRE_I1_6(\state_grid[1,11] ),
        .FDRE_I1_7(\state_grid[2,10] ),
        .Q(\state_grid[2,12] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_659 \ROW[2].COL[12].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[2,12] ),
        .FDRE_I1_1(\state_grid[1,13] ),
        .FDRE_I1_2(\state_grid[3,13] ),
        .FDRE_I1_3(\state_grid[3,12] ),
        .FDRE_I1_4(\state_grid[3,11] ),
        .FDRE_I1_5(\state_grid[1,11] ),
        .FDRE_I1_6(\state_grid[1,12] ),
        .FDRE_I1_7(\state_grid[2,11] ),
        .Q(\state_grid[2,13] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_660 \ROW[2].COL[13].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[2,13] ),
        .FDRE_I1_1(\state_grid[1,14] ),
        .FDRE_I1_2(\state_grid[3,14] ),
        .FDRE_I1_3(\state_grid[3,13] ),
        .FDRE_I1_4(\state_grid[3,12] ),
        .FDRE_I1_5(\state_grid[1,12] ),
        .FDRE_I1_6(\state_grid[1,13] ),
        .FDRE_I1_7(\state_grid[2,12] ),
        .Q(\state_grid[2,14] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_661 \ROW[2].COL[14].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[2,14] ),
        .FDRE_I1_1(\state_grid[1,15] ),
        .FDRE_I1_2(\state_grid[3,15] ),
        .FDRE_I1_3(\state_grid[3,14] ),
        .FDRE_I1_4(\state_grid[3,13] ),
        .FDRE_I1_5(\state_grid[1,13] ),
        .FDRE_I1_6(\state_grid[1,14] ),
        .FDRE_I1_7(\state_grid[2,13] ),
        .Q(\state_grid[2,15] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_662 \ROW[2].COL[15].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[2,15] ),
        .FDRE_I1_1(\state_grid[1,16] ),
        .FDRE_I1_2(\state_grid[3,16] ),
        .FDRE_I1_3(\state_grid[3,15] ),
        .FDRE_I1_4(\state_grid[3,14] ),
        .FDRE_I1_5(\state_grid[1,14] ),
        .FDRE_I1_6(\state_grid[1,15] ),
        .FDRE_I1_7(\state_grid[2,14] ),
        .Q(\state_grid[2,16] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_663 \ROW[2].COL[16].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[2,16] ),
        .FDRE_I1_1({\state_grid[3,16] ,\state_grid[2,17] }),
        .FDRE_I1_2(\state_grid[3,15] ),
        .FDRE_I1_3(\state_grid[1,15] ),
        .FDRE_I1_4(\state_grid[2,15] ),
        .Q(\state_grid[3,17] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .prox({\state_grid[1,16] ,\state_grid[1,17] }),
        .s00_axi_aclk(s00_axi_aclk));
  cell_664 \ROW[2].COL[17].EH.E_RS.CELL_XWYE 
       (.FDRE_I1_0({\state_grid[1,16] ,\state_grid[1,17] }),
        .FDRE_I1_1(\state_grid[2,16] ),
        .Q(\state_grid[2,17] ),
        .ce(ce),
        .prox({\state_grid[3,16] ,\state_grid[3,17] }),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_665 \ROW[2].COL[1].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[2,1] ),
        .FDRE_I1_1(\state_grid[1,2] ),
        .FDRE_I1_2(\state_grid[3,2] ),
        .FDRE_I1_3(\state_grid[3,1] ),
        .FDRE_I1_4(\state_grid[3,0] ),
        .FDRE_I1_5(\state_grid[1,0] ),
        .FDRE_I1_6(\state_grid[1,1] ),
        .FDRE_I1_7(\state_grid[2,0] ),
        .Q(\state_grid[2,2] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_666 \ROW[2].COL[2].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[2,2] ),
        .FDRE_I1_1(\state_grid[1,3] ),
        .FDRE_I1_2(\state_grid[3,3] ),
        .FDRE_I1_3(\state_grid[3,2] ),
        .FDRE_I1_4(\state_grid[3,1] ),
        .FDRE_I1_5(\state_grid[1,1] ),
        .FDRE_I1_6(\state_grid[1,2] ),
        .FDRE_I1_7(\state_grid[2,1] ),
        .Q(\state_grid[2,3] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_667 \ROW[2].COL[3].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[2,3] ),
        .FDRE_I1_1(\state_grid[1,4] ),
        .FDRE_I1_2(\state_grid[3,4] ),
        .FDRE_I1_3(\state_grid[3,3] ),
        .FDRE_I1_4(\state_grid[3,2] ),
        .FDRE_I1_5(\state_grid[1,2] ),
        .FDRE_I1_6(\state_grid[1,3] ),
        .FDRE_I1_7(\state_grid[2,2] ),
        .Q(\state_grid[2,4] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_668 \ROW[2].COL[4].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[2,4] ),
        .FDRE_I1_1(\state_grid[1,5] ),
        .FDRE_I1_2(\state_grid[3,5] ),
        .FDRE_I1_3(\state_grid[3,4] ),
        .FDRE_I1_4(\state_grid[3,3] ),
        .FDRE_I1_5(\state_grid[1,3] ),
        .FDRE_I1_6(\state_grid[1,4] ),
        .FDRE_I1_7(\state_grid[2,3] ),
        .Q(\state_grid[2,5] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_669 \ROW[2].COL[5].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[2,5] ),
        .FDRE_I1_1(\state_grid[1,6] ),
        .FDRE_I1_2(\state_grid[3,6] ),
        .FDRE_I1_3(\state_grid[3,5] ),
        .FDRE_I1_4(\state_grid[3,4] ),
        .FDRE_I1_5(\state_grid[1,4] ),
        .FDRE_I1_6(\state_grid[1,5] ),
        .FDRE_I1_7(\state_grid[2,4] ),
        .Q(\state_grid[2,6] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_670 \ROW[2].COL[6].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[2,6] ),
        .FDRE_I1_1(\state_grid[1,7] ),
        .FDRE_I1_2(\state_grid[3,7] ),
        .FDRE_I1_3(\state_grid[3,6] ),
        .FDRE_I1_4(\state_grid[3,5] ),
        .FDRE_I1_5(\state_grid[1,5] ),
        .FDRE_I1_6(\state_grid[1,6] ),
        .FDRE_I1_7(\state_grid[2,5] ),
        .Q(\state_grid[2,7] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_671 \ROW[2].COL[7].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[2,7] ),
        .FDRE_I1_1(\state_grid[1,8] ),
        .FDRE_I1_2(\state_grid[3,8] ),
        .FDRE_I1_3(\state_grid[3,7] ),
        .FDRE_I1_4(\state_grid[3,6] ),
        .FDRE_I1_5(\state_grid[1,6] ),
        .FDRE_I1_6(\state_grid[1,7] ),
        .FDRE_I1_7(\state_grid[2,6] ),
        .Q(\state_grid[2,8] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_672 \ROW[2].COL[8].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[2,8] ),
        .FDRE_I1_1(\state_grid[1,9] ),
        .FDRE_I1_2(\state_grid[3,9] ),
        .FDRE_I1_3(\state_grid[3,8] ),
        .FDRE_I1_4(\state_grid[3,7] ),
        .FDRE_I1_5(\state_grid[1,7] ),
        .FDRE_I1_6(\state_grid[1,8] ),
        .FDRE_I1_7(\state_grid[2,7] ),
        .Q(\state_grid[2,9] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_673 \ROW[2].COL[9].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[2,9] ),
        .FDRE_I1_1(\state_grid[1,10] ),
        .FDRE_I1_2(\state_grid[2,10] ),
        .FDRE_I1_3(\state_grid[3,9] ),
        .FDRE_I1_4(\state_grid[3,8] ),
        .FDRE_I1_5(\state_grid[1,8] ),
        .FDRE_I1_6(\state_grid[1,9] ),
        .FDRE_I1_7(\state_grid[2,8] ),
        .Q(\state_grid[3,10] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_674 \ROW[3].COL[0].EH.O_LS.CELL_X0YO 
       (.FDRE_I1_0(\state_grid[3,0] ),
        .FDRE_I1_1(\state_grid[2,1] ),
        .FDRE_I1_2(\state_grid[4,0] ),
        .FDRE_I1_3(\state_grid[2,0] ),
        .FDRE_I1_4(\state_grid[3,1] ),
        .Q(\state_grid[4,1] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_675 \ROW[3].COL[10].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[3,10] ),
        .FDRE_I1_1(\state_grid[2,11] ),
        .FDRE_I1_2(\state_grid[2,9] ),
        .FDRE_I1_3(\state_grid[4,10] ),
        .FDRE_I1_4(\state_grid[4,9] ),
        .FDRE_I1_5(\state_grid[3,9] ),
        .FDRE_I1_6(\state_grid[2,10] ),
        .FDRE_I1_7(\state_grid[3,11] ),
        .Q(\state_grid[4,11] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_676 \ROW[3].COL[11].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[3,11] ),
        .FDRE_I1_1(\state_grid[2,12] ),
        .FDRE_I1_2(\state_grid[2,10] ),
        .FDRE_I1_3(\state_grid[4,11] ),
        .FDRE_I1_4(\state_grid[4,10] ),
        .FDRE_I1_5(\state_grid[3,10] ),
        .FDRE_I1_6(\state_grid[2,11] ),
        .FDRE_I1_7(\state_grid[3,12] ),
        .Q(\state_grid[4,12] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_677 \ROW[3].COL[12].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[3,12] ),
        .FDRE_I1_1(\state_grid[2,13] ),
        .FDRE_I1_2(\state_grid[2,11] ),
        .FDRE_I1_3(\state_grid[4,12] ),
        .FDRE_I1_4(\state_grid[4,11] ),
        .FDRE_I1_5(\state_grid[3,11] ),
        .FDRE_I1_6(\state_grid[2,12] ),
        .FDRE_I1_7(\state_grid[3,13] ),
        .Q(\state_grid[4,13] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_678 \ROW[3].COL[13].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[3,13] ),
        .FDRE_I1_1(\state_grid[2,14] ),
        .FDRE_I1_2(\state_grid[2,12] ),
        .FDRE_I1_3(\state_grid[4,13] ),
        .FDRE_I1_4(\state_grid[4,12] ),
        .FDRE_I1_5(\state_grid[3,12] ),
        .FDRE_I1_6(\state_grid[2,13] ),
        .FDRE_I1_7(\state_grid[3,14] ),
        .Q(\state_grid[4,14] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_679 \ROW[3].COL[14].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[3,14] ),
        .FDRE_I1_1(\state_grid[2,15] ),
        .FDRE_I1_2(\state_grid[2,13] ),
        .FDRE_I1_3(\state_grid[4,14] ),
        .FDRE_I1_4(\state_grid[4,13] ),
        .FDRE_I1_5(\state_grid[3,13] ),
        .FDRE_I1_6(\state_grid[2,14] ),
        .FDRE_I1_7(\state_grid[3,15] ),
        .Q(\state_grid[4,15] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_680 \ROW[3].COL[15].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[3,15] ),
        .FDRE_I1_1(\state_grid[2,16] ),
        .FDRE_I1_2(\state_grid[2,14] ),
        .FDRE_I1_3(\state_grid[4,15] ),
        .FDRE_I1_4(\state_grid[4,14] ),
        .FDRE_I1_5(\state_grid[3,14] ),
        .FDRE_I1_6(\state_grid[2,15] ),
        .FDRE_I1_7(\state_grid[3,16] ),
        .Q(\state_grid[4,16] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_681 \ROW[3].COL[16].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[3,16] ),
        .FDRE_I1_1(\state_grid[2,15] ),
        .FDRE_I1_2({\state_grid[4,16] ,\state_grid[4,17] }),
        .FDRE_I1_3(\state_grid[3,15] ),
        .FDRE_I1_4(\state_grid[3,17] ),
        .Q(\state_grid[4,15] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .prox({\state_grid[2,16] ,\state_grid[2,17] }),
        .s00_axi_aclk(s00_axi_aclk));
  cell_682 \ROW[3].COL[17].EH.O_RS.CELL_XWYO 
       (.FDRE_I1_0({\state_grid[3,16] ,\state_grid[2,17] }),
        .FDRE_I1_1(\state_grid[2,16] ),
        .Q(\state_grid[3,17] ),
        .ce(ce),
        .prox({\state_grid[4,16] ,\state_grid[4,17] }),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_683 \ROW[3].COL[1].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[3,1] ),
        .FDRE_I1_1(\state_grid[2,2] ),
        .FDRE_I1_2(\state_grid[2,0] ),
        .FDRE_I1_3(\state_grid[4,1] ),
        .FDRE_I1_4(\state_grid[4,0] ),
        .FDRE_I1_5(\state_grid[3,0] ),
        .FDRE_I1_6(\state_grid[2,1] ),
        .FDRE_I1_7(\state_grid[3,2] ),
        .Q(\state_grid[4,2] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_684 \ROW[3].COL[2].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[3,2] ),
        .FDRE_I1_1(\state_grid[2,3] ),
        .FDRE_I1_2(\state_grid[2,1] ),
        .FDRE_I1_3(\state_grid[4,2] ),
        .FDRE_I1_4(\state_grid[4,1] ),
        .FDRE_I1_5(\state_grid[3,1] ),
        .FDRE_I1_6(\state_grid[2,2] ),
        .FDRE_I1_7(\state_grid[3,3] ),
        .Q(\state_grid[4,3] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_685 \ROW[3].COL[3].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[3,3] ),
        .FDRE_I1_1(\state_grid[2,4] ),
        .FDRE_I1_2(\state_grid[2,2] ),
        .FDRE_I1_3(\state_grid[4,3] ),
        .FDRE_I1_4(\state_grid[4,2] ),
        .FDRE_I1_5(\state_grid[3,2] ),
        .FDRE_I1_6(\state_grid[2,3] ),
        .FDRE_I1_7(\state_grid[3,4] ),
        .Q(\state_grid[4,4] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_686 \ROW[3].COL[4].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[3,4] ),
        .FDRE_I1_1(\state_grid[2,5] ),
        .FDRE_I1_2(\state_grid[2,3] ),
        .FDRE_I1_3(\state_grid[4,4] ),
        .FDRE_I1_4(\state_grid[4,3] ),
        .FDRE_I1_5(\state_grid[3,3] ),
        .FDRE_I1_6(\state_grid[2,4] ),
        .FDRE_I1_7(\state_grid[3,5] ),
        .Q(\state_grid[4,5] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_687 \ROW[3].COL[5].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[3,5] ),
        .FDRE_I1_1(\state_grid[2,6] ),
        .FDRE_I1_2(\state_grid[2,4] ),
        .FDRE_I1_3(\state_grid[4,5] ),
        .FDRE_I1_4(\state_grid[4,4] ),
        .FDRE_I1_5(\state_grid[3,4] ),
        .FDRE_I1_6(\state_grid[2,5] ),
        .FDRE_I1_7(\state_grid[3,6] ),
        .Q(\state_grid[4,6] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_688 \ROW[3].COL[6].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[3,6] ),
        .FDRE_I1_1(\state_grid[2,7] ),
        .FDRE_I1_2(\state_grid[2,5] ),
        .FDRE_I1_3(\state_grid[4,6] ),
        .FDRE_I1_4(\state_grid[4,5] ),
        .FDRE_I1_5(\state_grid[3,5] ),
        .FDRE_I1_6(\state_grid[2,6] ),
        .FDRE_I1_7(\state_grid[3,7] ),
        .Q(\state_grid[4,7] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_689 \ROW[3].COL[7].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[3,7] ),
        .FDRE_I1_1(\state_grid[2,8] ),
        .FDRE_I1_2(\state_grid[2,6] ),
        .FDRE_I1_3(\state_grid[4,7] ),
        .FDRE_I1_4(\state_grid[4,6] ),
        .FDRE_I1_5(\state_grid[3,6] ),
        .FDRE_I1_6(\state_grid[2,7] ),
        .FDRE_I1_7(\state_grid[3,8] ),
        .Q(\state_grid[4,8] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_690 \ROW[3].COL[8].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[3,8] ),
        .FDRE_I1_1(\state_grid[2,9] ),
        .FDRE_I1_2(\state_grid[2,7] ),
        .FDRE_I1_3(\state_grid[4,8] ),
        .FDRE_I1_4(\state_grid[4,7] ),
        .FDRE_I1_5(\state_grid[3,7] ),
        .FDRE_I1_6(\state_grid[2,8] ),
        .FDRE_I1_7(\state_grid[3,9] ),
        .Q(\state_grid[4,9] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_691 \ROW[3].COL[9].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[3,9] ),
        .FDRE_I1_1(\state_grid[2,10] ),
        .FDRE_I1_2(\state_grid[2,8] ),
        .FDRE_I1_3(\state_grid[4,9] ),
        .FDRE_I1_4(\state_grid[4,8] ),
        .FDRE_I1_5(\state_grid[3,8] ),
        .FDRE_I1_6(\state_grid[2,9] ),
        .FDRE_I1_7(\state_grid[3,10] ),
        .Q(\state_grid[4,10] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_692 \ROW[4].COL[0].EH.E_LS.CELL_X0YE 
       (.FDRE_I1_0(\state_grid[4,0] ),
        .FDRE_I1_1(\state_grid[3,1] ),
        .FDRE_I1_2(\state_grid[5,1] ),
        .FDRE_I1_3(\state_grid[5,0] ),
        .FDRE_I1_4(\state_grid[3,0] ),
        .Q(\state_grid[4,1] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_693 \ROW[4].COL[10].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[4,10] ),
        .FDRE_I1_1(\state_grid[3,11] ),
        .FDRE_I1_2(\state_grid[5,11] ),
        .FDRE_I1_3(\state_grid[5,10] ),
        .FDRE_I1_4(\state_grid[5,9] ),
        .FDRE_I1_5(\state_grid[3,9] ),
        .FDRE_I1_6(\state_grid[3,10] ),
        .FDRE_I1_7(\state_grid[4,9] ),
        .Q(\state_grid[4,11] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_694 \ROW[4].COL[11].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[4,11] ),
        .FDRE_I1_1(\state_grid[3,12] ),
        .FDRE_I1_2(\state_grid[5,12] ),
        .FDRE_I1_3(\state_grid[5,11] ),
        .FDRE_I1_4(\state_grid[5,10] ),
        .FDRE_I1_5(\state_grid[3,10] ),
        .FDRE_I1_6(\state_grid[3,11] ),
        .FDRE_I1_7(\state_grid[4,10] ),
        .Q(\state_grid[4,12] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_695 \ROW[4].COL[12].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[4,12] ),
        .FDRE_I1_1(\state_grid[3,13] ),
        .FDRE_I1_2(\state_grid[5,13] ),
        .FDRE_I1_3(\state_grid[5,12] ),
        .FDRE_I1_4(\state_grid[5,11] ),
        .FDRE_I1_5(\state_grid[3,11] ),
        .FDRE_I1_6(\state_grid[3,12] ),
        .FDRE_I1_7(\state_grid[4,11] ),
        .Q(\state_grid[4,13] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_696 \ROW[4].COL[13].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[4,13] ),
        .FDRE_I1_1(\state_grid[3,14] ),
        .FDRE_I1_2(\state_grid[5,14] ),
        .FDRE_I1_3(\state_grid[5,13] ),
        .FDRE_I1_4(\state_grid[5,12] ),
        .FDRE_I1_5(\state_grid[3,12] ),
        .FDRE_I1_6(\state_grid[3,13] ),
        .FDRE_I1_7(\state_grid[4,12] ),
        .Q(\state_grid[4,14] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_697 \ROW[4].COL[14].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[4,14] ),
        .FDRE_I1_1(\state_grid[3,15] ),
        .FDRE_I1_2(\state_grid[5,15] ),
        .FDRE_I1_3(\state_grid[5,14] ),
        .FDRE_I1_4(\state_grid[5,13] ),
        .FDRE_I1_5(\state_grid[3,13] ),
        .FDRE_I1_6(\state_grid[3,14] ),
        .FDRE_I1_7(\state_grid[4,13] ),
        .Q(\state_grid[4,15] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_698 \ROW[4].COL[15].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[4,15] ),
        .FDRE_I1_1(\state_grid[3,16] ),
        .FDRE_I1_2(\state_grid[5,16] ),
        .FDRE_I1_3(\state_grid[5,15] ),
        .FDRE_I1_4(\state_grid[5,14] ),
        .FDRE_I1_5(\state_grid[3,14] ),
        .FDRE_I1_6(\state_grid[3,15] ),
        .FDRE_I1_7(\state_grid[4,14] ),
        .Q(\state_grid[4,16] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_699 \ROW[4].COL[16].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[4,16] ),
        .FDRE_I1_1({\state_grid[5,16] ,\state_grid[4,17] }),
        .FDRE_I1_2(\state_grid[5,15] ),
        .FDRE_I1_3(\state_grid[3,15] ),
        .FDRE_I1_4(\state_grid[4,15] ),
        .Q(\state_grid[5,17] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .prox({\state_grid[3,16] ,\state_grid[3,17] }),
        .s00_axi_aclk(s00_axi_aclk));
  cell_700 \ROW[4].COL[17].EH.E_RS.CELL_XWYE 
       (.FDRE_I1_0({\state_grid[3,16] ,\state_grid[3,17] }),
        .FDRE_I1_1(\state_grid[4,16] ),
        .Q(\state_grid[4,17] ),
        .ce(ce),
        .prox({\state_grid[5,16] ,\state_grid[5,17] }),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_701 \ROW[4].COL[1].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[4,1] ),
        .FDRE_I1_1(\state_grid[3,2] ),
        .FDRE_I1_2(\state_grid[5,2] ),
        .FDRE_I1_3(\state_grid[5,1] ),
        .FDRE_I1_4(\state_grid[5,0] ),
        .FDRE_I1_5(\state_grid[3,0] ),
        .FDRE_I1_6(\state_grid[3,1] ),
        .FDRE_I1_7(\state_grid[4,0] ),
        .Q(\state_grid[4,2] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_702 \ROW[4].COL[2].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[4,2] ),
        .FDRE_I1_1(\state_grid[3,3] ),
        .FDRE_I1_2(\state_grid[5,3] ),
        .FDRE_I1_3(\state_grid[5,2] ),
        .FDRE_I1_4(\state_grid[5,1] ),
        .FDRE_I1_5(\state_grid[3,1] ),
        .FDRE_I1_6(\state_grid[3,2] ),
        .FDRE_I1_7(\state_grid[4,1] ),
        .Q(\state_grid[4,3] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_703 \ROW[4].COL[3].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[4,3] ),
        .FDRE_I1_1(\state_grid[3,4] ),
        .FDRE_I1_2(\state_grid[5,4] ),
        .FDRE_I1_3(\state_grid[5,3] ),
        .FDRE_I1_4(\state_grid[5,2] ),
        .FDRE_I1_5(\state_grid[3,2] ),
        .FDRE_I1_6(\state_grid[3,3] ),
        .FDRE_I1_7(\state_grid[4,2] ),
        .Q(\state_grid[4,4] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_704 \ROW[4].COL[4].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[4,4] ),
        .FDRE_I1_1(\state_grid[3,5] ),
        .FDRE_I1_2(\state_grid[5,5] ),
        .FDRE_I1_3(\state_grid[5,4] ),
        .FDRE_I1_4(\state_grid[5,3] ),
        .FDRE_I1_5(\state_grid[3,3] ),
        .FDRE_I1_6(\state_grid[3,4] ),
        .FDRE_I1_7(\state_grid[4,3] ),
        .Q(\state_grid[4,5] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_705 \ROW[4].COL[5].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[4,5] ),
        .FDRE_I1_1(\state_grid[3,6] ),
        .FDRE_I1_2(\state_grid[5,6] ),
        .FDRE_I1_3(\state_grid[5,5] ),
        .FDRE_I1_4(\state_grid[5,4] ),
        .FDRE_I1_5(\state_grid[3,4] ),
        .FDRE_I1_6(\state_grid[3,5] ),
        .FDRE_I1_7(\state_grid[4,4] ),
        .Q(\state_grid[4,6] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_706 \ROW[4].COL[6].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[4,6] ),
        .FDRE_I1_1(\state_grid[3,7] ),
        .FDRE_I1_2(\state_grid[5,7] ),
        .FDRE_I1_3(\state_grid[5,6] ),
        .FDRE_I1_4(\state_grid[5,5] ),
        .FDRE_I1_5(\state_grid[3,5] ),
        .FDRE_I1_6(\state_grid[3,6] ),
        .FDRE_I1_7(\state_grid[4,5] ),
        .Q(\state_grid[4,7] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_707 \ROW[4].COL[7].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[4,7] ),
        .FDRE_I1_1(\state_grid[3,8] ),
        .FDRE_I1_2(\state_grid[5,8] ),
        .FDRE_I1_3(\state_grid[5,7] ),
        .FDRE_I1_4(\state_grid[5,6] ),
        .FDRE_I1_5(\state_grid[3,6] ),
        .FDRE_I1_6(\state_grid[3,7] ),
        .FDRE_I1_7(\state_grid[4,6] ),
        .Q(\state_grid[4,8] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_708 \ROW[4].COL[8].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[4,8] ),
        .FDRE_I1_1(\state_grid[3,9] ),
        .FDRE_I1_2(\state_grid[5,9] ),
        .FDRE_I1_3(\state_grid[5,8] ),
        .FDRE_I1_4(\state_grid[5,7] ),
        .FDRE_I1_5(\state_grid[3,7] ),
        .FDRE_I1_6(\state_grid[3,8] ),
        .FDRE_I1_7(\state_grid[4,7] ),
        .Q(\state_grid[4,9] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_709 \ROW[4].COL[9].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[4,9] ),
        .FDRE_I1_1(\state_grid[3,10] ),
        .FDRE_I1_2(\state_grid[4,10] ),
        .FDRE_I1_3(\state_grid[5,9] ),
        .FDRE_I1_4(\state_grid[5,8] ),
        .FDRE_I1_5(\state_grid[3,8] ),
        .FDRE_I1_6(\state_grid[3,9] ),
        .FDRE_I1_7(\state_grid[4,8] ),
        .Q(\state_grid[5,10] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_710 \ROW[5].COL[0].EH.O_LS.CELL_X0YO 
       (.FDRE_I1_0(\state_grid[5,0] ),
        .FDRE_I1_1(\state_grid[4,1] ),
        .FDRE_I1_2(\state_grid[6,0] ),
        .FDRE_I1_3(\state_grid[4,0] ),
        .FDRE_I1_4(\state_grid[5,1] ),
        .Q(\state_grid[6,1] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_711 \ROW[5].COL[10].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[5,10] ),
        .FDRE_I1_1(\state_grid[4,11] ),
        .FDRE_I1_2(\state_grid[4,9] ),
        .FDRE_I1_3(\state_grid[6,10] ),
        .FDRE_I1_4(\state_grid[6,9] ),
        .FDRE_I1_5(\state_grid[5,9] ),
        .FDRE_I1_6(\state_grid[4,10] ),
        .FDRE_I1_7(\state_grid[5,11] ),
        .Q(\state_grid[6,11] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_712 \ROW[5].COL[11].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[5,11] ),
        .FDRE_I1_1(\state_grid[4,12] ),
        .FDRE_I1_2(\state_grid[4,10] ),
        .FDRE_I1_3(\state_grid[6,11] ),
        .FDRE_I1_4(\state_grid[6,10] ),
        .FDRE_I1_5(\state_grid[5,10] ),
        .FDRE_I1_6(\state_grid[4,11] ),
        .FDRE_I1_7(\state_grid[5,12] ),
        .Q(\state_grid[6,12] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_713 \ROW[5].COL[12].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[5,12] ),
        .FDRE_I1_1(\state_grid[4,13] ),
        .FDRE_I1_2(\state_grid[4,11] ),
        .FDRE_I1_3(\state_grid[6,12] ),
        .FDRE_I1_4(\state_grid[6,11] ),
        .FDRE_I1_5(\state_grid[5,11] ),
        .FDRE_I1_6(\state_grid[4,12] ),
        .FDRE_I1_7(\state_grid[5,13] ),
        .Q(\state_grid[6,13] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_714 \ROW[5].COL[13].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[5,13] ),
        .FDRE_I1_1(\state_grid[4,14] ),
        .FDRE_I1_2(\state_grid[4,12] ),
        .FDRE_I1_3(\state_grid[6,13] ),
        .FDRE_I1_4(\state_grid[6,12] ),
        .FDRE_I1_5(\state_grid[5,12] ),
        .FDRE_I1_6(\state_grid[4,13] ),
        .FDRE_I1_7(\state_grid[5,14] ),
        .Q(\state_grid[6,14] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_715 \ROW[5].COL[14].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[5,14] ),
        .FDRE_I1_1(\state_grid[4,15] ),
        .FDRE_I1_2(\state_grid[4,13] ),
        .FDRE_I1_3(\state_grid[6,14] ),
        .FDRE_I1_4(\state_grid[6,13] ),
        .FDRE_I1_5(\state_grid[5,13] ),
        .FDRE_I1_6(\state_grid[4,14] ),
        .FDRE_I1_7(\state_grid[5,15] ),
        .Q(\state_grid[6,15] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_716 \ROW[5].COL[15].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[5,15] ),
        .FDRE_I1_1(\state_grid[4,16] ),
        .FDRE_I1_2(\state_grid[4,14] ),
        .FDRE_I1_3(\state_grid[6,15] ),
        .FDRE_I1_4(\state_grid[6,14] ),
        .FDRE_I1_5(\state_grid[5,14] ),
        .FDRE_I1_6(\state_grid[4,15] ),
        .FDRE_I1_7(\state_grid[5,16] ),
        .Q(\state_grid[6,16] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_717 \ROW[5].COL[16].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[5,16] ),
        .FDRE_I1_1(\state_grid[4,15] ),
        .FDRE_I1_2({\state_grid[6,16] ,\state_grid[6,17] }),
        .FDRE_I1_3(\state_grid[5,15] ),
        .FDRE_I1_4(\state_grid[5,17] ),
        .Q(\state_grid[6,15] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .prox({\state_grid[4,16] ,\state_grid[4,17] }),
        .s00_axi_aclk(s00_axi_aclk));
  cell_718 \ROW[5].COL[17].EH.O_RS.CELL_XWYO 
       (.FDRE_I1_0({\state_grid[5,16] ,\state_grid[4,17] }),
        .FDRE_I1_1(\state_grid[4,16] ),
        .Q(\state_grid[5,17] ),
        .ce(ce),
        .prox({\state_grid[6,16] ,\state_grid[6,17] }),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_719 \ROW[5].COL[1].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[5,1] ),
        .FDRE_I1_1(\state_grid[4,2] ),
        .FDRE_I1_2(\state_grid[4,0] ),
        .FDRE_I1_3(\state_grid[6,1] ),
        .FDRE_I1_4(\state_grid[6,0] ),
        .FDRE_I1_5(\state_grid[5,0] ),
        .FDRE_I1_6(\state_grid[4,1] ),
        .FDRE_I1_7(\state_grid[5,2] ),
        .Q(\state_grid[6,2] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_720 \ROW[5].COL[2].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[5,2] ),
        .FDRE_I1_1(\state_grid[4,3] ),
        .FDRE_I1_2(\state_grid[4,1] ),
        .FDRE_I1_3(\state_grid[6,2] ),
        .FDRE_I1_4(\state_grid[6,1] ),
        .FDRE_I1_5(\state_grid[5,1] ),
        .FDRE_I1_6(\state_grid[4,2] ),
        .FDRE_I1_7(\state_grid[5,3] ),
        .Q(\state_grid[6,3] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_721 \ROW[5].COL[3].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[5,3] ),
        .FDRE_I1_1(\state_grid[4,4] ),
        .FDRE_I1_2(\state_grid[4,2] ),
        .FDRE_I1_3(\state_grid[6,3] ),
        .FDRE_I1_4(\state_grid[6,2] ),
        .FDRE_I1_5(\state_grid[5,2] ),
        .FDRE_I1_6(\state_grid[4,3] ),
        .FDRE_I1_7(\state_grid[5,4] ),
        .Q(\state_grid[6,4] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_722 \ROW[5].COL[4].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[5,4] ),
        .FDRE_I1_1(\state_grid[4,5] ),
        .FDRE_I1_2(\state_grid[4,3] ),
        .FDRE_I1_3(\state_grid[6,4] ),
        .FDRE_I1_4(\state_grid[6,3] ),
        .FDRE_I1_5(\state_grid[5,3] ),
        .FDRE_I1_6(\state_grid[4,4] ),
        .FDRE_I1_7(\state_grid[5,5] ),
        .Q(\state_grid[6,5] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_723 \ROW[5].COL[5].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[5,5] ),
        .FDRE_I1_1(\state_grid[4,6] ),
        .FDRE_I1_2(\state_grid[4,4] ),
        .FDRE_I1_3(\state_grid[6,5] ),
        .FDRE_I1_4(\state_grid[6,4] ),
        .FDRE_I1_5(\state_grid[5,4] ),
        .FDRE_I1_6(\state_grid[4,5] ),
        .FDRE_I1_7(\state_grid[5,6] ),
        .Q(\state_grid[6,6] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_724 \ROW[5].COL[6].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[5,6] ),
        .FDRE_I1_1(\state_grid[4,7] ),
        .FDRE_I1_2(\state_grid[4,5] ),
        .FDRE_I1_3(\state_grid[6,6] ),
        .FDRE_I1_4(\state_grid[6,5] ),
        .FDRE_I1_5(\state_grid[5,5] ),
        .FDRE_I1_6(\state_grid[4,6] ),
        .FDRE_I1_7(\state_grid[5,7] ),
        .Q(\state_grid[6,7] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_725 \ROW[5].COL[7].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[5,7] ),
        .FDRE_I1_1(\state_grid[4,8] ),
        .FDRE_I1_2(\state_grid[4,6] ),
        .FDRE_I1_3(\state_grid[6,7] ),
        .FDRE_I1_4(\state_grid[6,6] ),
        .FDRE_I1_5(\state_grid[5,6] ),
        .FDRE_I1_6(\state_grid[4,7] ),
        .FDRE_I1_7(\state_grid[5,8] ),
        .Q(\state_grid[6,8] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_726 \ROW[5].COL[8].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[5,8] ),
        .FDRE_I1_1(\state_grid[4,9] ),
        .FDRE_I1_2(\state_grid[4,7] ),
        .FDRE_I1_3(\state_grid[6,8] ),
        .FDRE_I1_4(\state_grid[6,7] ),
        .FDRE_I1_5(\state_grid[5,7] ),
        .FDRE_I1_6(\state_grid[4,8] ),
        .FDRE_I1_7(\state_grid[5,9] ),
        .Q(\state_grid[6,9] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_727 \ROW[5].COL[9].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[5,9] ),
        .FDRE_I1_1(\state_grid[4,10] ),
        .FDRE_I1_2(\state_grid[4,8] ),
        .FDRE_I1_3(\state_grid[6,9] ),
        .FDRE_I1_4(\state_grid[6,8] ),
        .FDRE_I1_5(\state_grid[5,8] ),
        .FDRE_I1_6(\state_grid[4,9] ),
        .FDRE_I1_7(\state_grid[5,10] ),
        .Q(\state_grid[6,10] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_728 \ROW[6].COL[0].EH.E_LS.CELL_X0YE 
       (.FDRE_I1_0(\state_grid[6,0] ),
        .FDRE_I1_1(\state_grid[5,1] ),
        .FDRE_I1_2(\state_grid[7,1] ),
        .FDRE_I1_3(\state_grid[7,0] ),
        .FDRE_I1_4(\state_grid[5,0] ),
        .Q(\state_grid[6,1] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_729 \ROW[6].COL[10].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[6,10] ),
        .FDRE_I1_1(\state_grid[5,11] ),
        .FDRE_I1_2(\state_grid[7,11] ),
        .FDRE_I1_3(\state_grid[7,10] ),
        .FDRE_I1_4(\state_grid[7,9] ),
        .FDRE_I1_5(\state_grid[5,9] ),
        .FDRE_I1_6(\state_grid[5,10] ),
        .FDRE_I1_7(\state_grid[6,9] ),
        .Q(\state_grid[6,11] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_730 \ROW[6].COL[11].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[6,11] ),
        .FDRE_I1_1(\state_grid[5,12] ),
        .FDRE_I1_2(\state_grid[7,12] ),
        .FDRE_I1_3(\state_grid[7,11] ),
        .FDRE_I1_4(\state_grid[7,10] ),
        .FDRE_I1_5(\state_grid[5,10] ),
        .FDRE_I1_6(\state_grid[5,11] ),
        .FDRE_I1_7(\state_grid[6,10] ),
        .Q(\state_grid[6,12] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_731 \ROW[6].COL[12].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[6,12] ),
        .FDRE_I1_1(\state_grid[5,13] ),
        .FDRE_I1_2(\state_grid[7,13] ),
        .FDRE_I1_3(\state_grid[7,12] ),
        .FDRE_I1_4(\state_grid[7,11] ),
        .FDRE_I1_5(\state_grid[5,11] ),
        .FDRE_I1_6(\state_grid[5,12] ),
        .FDRE_I1_7(\state_grid[6,11] ),
        .Q(\state_grid[6,13] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_732 \ROW[6].COL[13].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[6,13] ),
        .FDRE_I1_1(\state_grid[5,14] ),
        .FDRE_I1_2(\state_grid[7,14] ),
        .FDRE_I1_3(\state_grid[7,13] ),
        .FDRE_I1_4(\state_grid[7,12] ),
        .FDRE_I1_5(\state_grid[5,12] ),
        .FDRE_I1_6(\state_grid[5,13] ),
        .FDRE_I1_7(\state_grid[6,12] ),
        .Q(\state_grid[6,14] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_733 \ROW[6].COL[14].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[6,14] ),
        .FDRE_I1_1(\state_grid[5,15] ),
        .FDRE_I1_2(\state_grid[7,15] ),
        .FDRE_I1_3(\state_grid[7,14] ),
        .FDRE_I1_4(\state_grid[7,13] ),
        .FDRE_I1_5(\state_grid[5,13] ),
        .FDRE_I1_6(\state_grid[5,14] ),
        .FDRE_I1_7(\state_grid[6,13] ),
        .Q(\state_grid[6,15] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_734 \ROW[6].COL[15].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[6,15] ),
        .FDRE_I1_1(\state_grid[5,16] ),
        .FDRE_I1_2(\state_grid[7,16] ),
        .FDRE_I1_3(\state_grid[7,15] ),
        .FDRE_I1_4(\state_grid[7,14] ),
        .FDRE_I1_5(\state_grid[5,14] ),
        .FDRE_I1_6(\state_grid[5,15] ),
        .FDRE_I1_7(\state_grid[6,14] ),
        .Q(\state_grid[6,16] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_735 \ROW[6].COL[16].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[6,16] ),
        .FDRE_I1_1({\state_grid[7,16] ,\state_grid[6,17] }),
        .FDRE_I1_2(\state_grid[7,15] ),
        .FDRE_I1_3(\state_grid[5,15] ),
        .FDRE_I1_4(\state_grid[6,15] ),
        .Q(\state_grid[7,17] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .prox({\state_grid[5,16] ,\state_grid[5,17] }),
        .s00_axi_aclk(s00_axi_aclk));
  cell_736 \ROW[6].COL[17].EH.E_RS.CELL_XWYE 
       (.FDRE_I1_0({\state_grid[5,16] ,\state_grid[5,17] }),
        .FDRE_I1_1(\state_grid[6,16] ),
        .Q(\state_grid[6,17] ),
        .ce(ce),
        .prox({\state_grid[7,16] ,\state_grid[7,17] }),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_737 \ROW[6].COL[1].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[6,1] ),
        .FDRE_I1_1(\state_grid[5,2] ),
        .FDRE_I1_2(\state_grid[7,2] ),
        .FDRE_I1_3(\state_grid[7,1] ),
        .FDRE_I1_4(\state_grid[7,0] ),
        .FDRE_I1_5(\state_grid[5,0] ),
        .FDRE_I1_6(\state_grid[5,1] ),
        .FDRE_I1_7(\state_grid[6,0] ),
        .Q(\state_grid[6,2] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_738 \ROW[6].COL[2].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[6,2] ),
        .FDRE_I1_1(\state_grid[5,3] ),
        .FDRE_I1_2(\state_grid[7,3] ),
        .FDRE_I1_3(\state_grid[7,2] ),
        .FDRE_I1_4(\state_grid[7,1] ),
        .FDRE_I1_5(\state_grid[5,1] ),
        .FDRE_I1_6(\state_grid[5,2] ),
        .FDRE_I1_7(\state_grid[6,1] ),
        .Q(\state_grid[6,3] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_739 \ROW[6].COL[3].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[6,3] ),
        .FDRE_I1_1(\state_grid[5,4] ),
        .FDRE_I1_2(\state_grid[7,4] ),
        .FDRE_I1_3(\state_grid[7,3] ),
        .FDRE_I1_4(\state_grid[7,2] ),
        .FDRE_I1_5(\state_grid[5,2] ),
        .FDRE_I1_6(\state_grid[5,3] ),
        .FDRE_I1_7(\state_grid[6,2] ),
        .Q(\state_grid[6,4] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_740 \ROW[6].COL[4].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[6,4] ),
        .FDRE_I1_1(\state_grid[5,5] ),
        .FDRE_I1_2(\state_grid[7,5] ),
        .FDRE_I1_3(\state_grid[7,4] ),
        .FDRE_I1_4(\state_grid[7,3] ),
        .FDRE_I1_5(\state_grid[5,3] ),
        .FDRE_I1_6(\state_grid[5,4] ),
        .FDRE_I1_7(\state_grid[6,3] ),
        .Q(\state_grid[6,5] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_741 \ROW[6].COL[5].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[6,5] ),
        .FDRE_I1_1(\state_grid[5,6] ),
        .FDRE_I1_2(\state_grid[7,6] ),
        .FDRE_I1_3(\state_grid[7,5] ),
        .FDRE_I1_4(\state_grid[7,4] ),
        .FDRE_I1_5(\state_grid[5,4] ),
        .FDRE_I1_6(\state_grid[5,5] ),
        .FDRE_I1_7(\state_grid[6,4] ),
        .Q(\state_grid[6,6] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_742 \ROW[6].COL[6].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[6,6] ),
        .FDRE_I1_1(\state_grid[5,7] ),
        .FDRE_I1_2(\state_grid[7,7] ),
        .FDRE_I1_3(\state_grid[7,6] ),
        .FDRE_I1_4(\state_grid[7,5] ),
        .FDRE_I1_5(\state_grid[5,5] ),
        .FDRE_I1_6(\state_grid[5,6] ),
        .FDRE_I1_7(\state_grid[6,5] ),
        .Q(\state_grid[6,7] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_743 \ROW[6].COL[7].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[6,7] ),
        .FDRE_I1_1(\state_grid[5,8] ),
        .FDRE_I1_2(\state_grid[7,8] ),
        .FDRE_I1_3(\state_grid[7,7] ),
        .FDRE_I1_4(\state_grid[7,6] ),
        .FDRE_I1_5(\state_grid[5,6] ),
        .FDRE_I1_6(\state_grid[5,7] ),
        .FDRE_I1_7(\state_grid[6,6] ),
        .Q(\state_grid[6,8] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_744 \ROW[6].COL[8].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[6,8] ),
        .FDRE_I1_1(\state_grid[5,9] ),
        .FDRE_I1_2(\state_grid[7,9] ),
        .FDRE_I1_3(\state_grid[7,8] ),
        .FDRE_I1_4(\state_grid[7,7] ),
        .FDRE_I1_5(\state_grid[5,7] ),
        .FDRE_I1_6(\state_grid[5,8] ),
        .FDRE_I1_7(\state_grid[6,7] ),
        .Q(\state_grid[6,9] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_745 \ROW[6].COL[9].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[6,9] ),
        .FDRE_I1_1(\state_grid[5,10] ),
        .FDRE_I1_2(\state_grid[6,10] ),
        .FDRE_I1_3(\state_grid[7,9] ),
        .FDRE_I1_4(\state_grid[7,8] ),
        .FDRE_I1_5(\state_grid[5,8] ),
        .FDRE_I1_6(\state_grid[5,9] ),
        .FDRE_I1_7(\state_grid[6,8] ),
        .Q(\state_grid[7,10] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_746 \ROW[7].COL[0].EH.O_LS.CELL_X0YO 
       (.FDRE_I1_0(\state_grid[7,0] ),
        .FDRE_I1_1(\state_grid[6,1] ),
        .FDRE_I1_2(\state_grid[8,0] ),
        .FDRE_I1_3(\state_grid[6,0] ),
        .FDRE_I1_4(\state_grid[7,1] ),
        .Q(\state_grid[8,1] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_747 \ROW[7].COL[10].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[7,10] ),
        .FDRE_I1_1(\state_grid[6,11] ),
        .FDRE_I1_2(\state_grid[6,9] ),
        .FDRE_I1_3(\state_grid[8,10] ),
        .FDRE_I1_4(\state_grid[8,9] ),
        .FDRE_I1_5(\state_grid[7,9] ),
        .FDRE_I1_6(\state_grid[6,10] ),
        .FDRE_I1_7(\state_grid[7,11] ),
        .Q(\state_grid[8,11] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_748 \ROW[7].COL[11].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[7,11] ),
        .FDRE_I1_1(\state_grid[6,12] ),
        .FDRE_I1_2(\state_grid[6,10] ),
        .FDRE_I1_3(\state_grid[8,11] ),
        .FDRE_I1_4(\state_grid[8,10] ),
        .FDRE_I1_5(\state_grid[7,10] ),
        .FDRE_I1_6(\state_grid[6,11] ),
        .FDRE_I1_7(\state_grid[7,12] ),
        .Q(\state_grid[8,12] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_749 \ROW[7].COL[12].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[7,12] ),
        .FDRE_I1_1(\state_grid[6,13] ),
        .FDRE_I1_2(\state_grid[6,11] ),
        .FDRE_I1_3(\state_grid[8,12] ),
        .FDRE_I1_4(\state_grid[8,11] ),
        .FDRE_I1_5(\state_grid[7,11] ),
        .FDRE_I1_6(\state_grid[6,12] ),
        .FDRE_I1_7(\state_grid[7,13] ),
        .Q(\state_grid[8,13] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_750 \ROW[7].COL[13].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[7,13] ),
        .FDRE_I1_1(\state_grid[6,14] ),
        .FDRE_I1_2(\state_grid[6,12] ),
        .FDRE_I1_3(\state_grid[8,13] ),
        .FDRE_I1_4(\state_grid[8,12] ),
        .FDRE_I1_5(\state_grid[7,12] ),
        .FDRE_I1_6(\state_grid[6,13] ),
        .FDRE_I1_7(\state_grid[7,14] ),
        .Q(\state_grid[8,14] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_751 \ROW[7].COL[14].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[7,14] ),
        .FDRE_I1_1(\state_grid[6,15] ),
        .FDRE_I1_2(\state_grid[6,13] ),
        .FDRE_I1_3(\state_grid[8,14] ),
        .FDRE_I1_4(\state_grid[8,13] ),
        .FDRE_I1_5(\state_grid[7,13] ),
        .FDRE_I1_6(\state_grid[6,14] ),
        .FDRE_I1_7(\state_grid[7,15] ),
        .Q(\state_grid[8,15] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_752 \ROW[7].COL[15].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[7,15] ),
        .FDRE_I1_1(\state_grid[6,16] ),
        .FDRE_I1_2(\state_grid[6,14] ),
        .FDRE_I1_3(\state_grid[8,15] ),
        .FDRE_I1_4(\state_grid[8,14] ),
        .FDRE_I1_5(\state_grid[7,14] ),
        .FDRE_I1_6(\state_grid[6,15] ),
        .FDRE_I1_7(\state_grid[7,16] ),
        .Q(\state_grid[8,16] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_753 \ROW[7].COL[16].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[7,16] ),
        .FDRE_I1_1(\state_grid[6,15] ),
        .FDRE_I1_2({\state_grid[8,16] ,\state_grid[8,17] }),
        .FDRE_I1_3(\state_grid[7,15] ),
        .FDRE_I1_4(\state_grid[7,17] ),
        .Q(\state_grid[8,15] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .prox({\state_grid[6,16] ,\state_grid[6,17] }),
        .s00_axi_aclk(s00_axi_aclk));
  cell_754 \ROW[7].COL[17].EH.O_RS.CELL_XWYO 
       (.FDRE_I1_0({\state_grid[7,16] ,\state_grid[6,17] }),
        .FDRE_I1_1(\state_grid[6,16] ),
        .Q(\state_grid[7,17] ),
        .ce(ce),
        .prox({\state_grid[8,16] ,\state_grid[8,17] }),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_755 \ROW[7].COL[1].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[7,1] ),
        .FDRE_I1_1(\state_grid[6,2] ),
        .FDRE_I1_2(\state_grid[6,0] ),
        .FDRE_I1_3(\state_grid[8,1] ),
        .FDRE_I1_4(\state_grid[8,0] ),
        .FDRE_I1_5(\state_grid[7,0] ),
        .FDRE_I1_6(\state_grid[6,1] ),
        .FDRE_I1_7(\state_grid[7,2] ),
        .Q(\state_grid[8,2] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_756 \ROW[7].COL[2].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[7,2] ),
        .FDRE_I1_1(\state_grid[6,3] ),
        .FDRE_I1_2(\state_grid[6,1] ),
        .FDRE_I1_3(\state_grid[8,2] ),
        .FDRE_I1_4(\state_grid[8,1] ),
        .FDRE_I1_5(\state_grid[7,1] ),
        .FDRE_I1_6(\state_grid[6,2] ),
        .FDRE_I1_7(\state_grid[7,3] ),
        .Q(\state_grid[8,3] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_757 \ROW[7].COL[3].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[7,3] ),
        .FDRE_I1_1(\state_grid[6,4] ),
        .FDRE_I1_2(\state_grid[6,2] ),
        .FDRE_I1_3(\state_grid[8,3] ),
        .FDRE_I1_4(\state_grid[8,2] ),
        .FDRE_I1_5(\state_grid[7,2] ),
        .FDRE_I1_6(\state_grid[6,3] ),
        .FDRE_I1_7(\state_grid[7,4] ),
        .Q(\state_grid[8,4] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_758 \ROW[7].COL[4].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[7,4] ),
        .FDRE_I1_1(\state_grid[6,5] ),
        .FDRE_I1_2(\state_grid[6,3] ),
        .FDRE_I1_3(\state_grid[8,4] ),
        .FDRE_I1_4(\state_grid[8,3] ),
        .FDRE_I1_5(\state_grid[7,3] ),
        .FDRE_I1_6(\state_grid[6,4] ),
        .FDRE_I1_7(\state_grid[7,5] ),
        .Q(\state_grid[8,5] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_759 \ROW[7].COL[5].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[7,5] ),
        .FDRE_I1_1(\state_grid[6,6] ),
        .FDRE_I1_2(\state_grid[6,4] ),
        .FDRE_I1_3(\state_grid[8,5] ),
        .FDRE_I1_4(\state_grid[8,4] ),
        .FDRE_I1_5(\state_grid[7,4] ),
        .FDRE_I1_6(\state_grid[6,5] ),
        .FDRE_I1_7(\state_grid[7,6] ),
        .Q(\state_grid[8,6] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_760 \ROW[7].COL[6].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[7,6] ),
        .FDRE_I1_1(\state_grid[6,7] ),
        .FDRE_I1_2(\state_grid[6,5] ),
        .FDRE_I1_3(\state_grid[8,6] ),
        .FDRE_I1_4(\state_grid[8,5] ),
        .FDRE_I1_5(\state_grid[7,5] ),
        .FDRE_I1_6(\state_grid[6,6] ),
        .FDRE_I1_7(\state_grid[7,7] ),
        .Q(\state_grid[8,7] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_761 \ROW[7].COL[7].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[7,7] ),
        .FDRE_I1_1(\state_grid[6,8] ),
        .FDRE_I1_2(\state_grid[6,6] ),
        .FDRE_I1_3(\state_grid[8,7] ),
        .FDRE_I1_4(\state_grid[8,6] ),
        .FDRE_I1_5(\state_grid[7,6] ),
        .FDRE_I1_6(\state_grid[6,7] ),
        .FDRE_I1_7(\state_grid[7,8] ),
        .Q(\state_grid[8,8] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_762 \ROW[7].COL[8].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[7,8] ),
        .FDRE_I1_1(\state_grid[6,9] ),
        .FDRE_I1_2(\state_grid[6,7] ),
        .FDRE_I1_3(\state_grid[8,8] ),
        .FDRE_I1_4(\state_grid[8,7] ),
        .FDRE_I1_5(\state_grid[7,7] ),
        .FDRE_I1_6(\state_grid[6,8] ),
        .FDRE_I1_7(\state_grid[7,9] ),
        .Q(\state_grid[8,9] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_763 \ROW[7].COL[9].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[7,9] ),
        .FDRE_I1_1(\state_grid[6,10] ),
        .FDRE_I1_2(\state_grid[6,8] ),
        .FDRE_I1_3(\state_grid[8,9] ),
        .FDRE_I1_4(\state_grid[8,8] ),
        .FDRE_I1_5(\state_grid[7,8] ),
        .FDRE_I1_6(\state_grid[6,9] ),
        .FDRE_I1_7(\state_grid[7,10] ),
        .Q(\state_grid[8,10] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_764 \ROW[8].COL[0].EH.E_LS.CELL_X0YE 
       (.FDRE_I1_0(\state_grid[8,0] ),
        .FDRE_I1_1(\state_grid[7,1] ),
        .FDRE_I1_2(\state_grid[9,1] ),
        .FDRE_I1_3(\state_grid[9,0] ),
        .FDRE_I1_4(\state_grid[7,0] ),
        .Q(\state_grid[8,1] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_765 \ROW[8].COL[10].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[8,10] ),
        .FDRE_I1_1(\state_grid[7,11] ),
        .FDRE_I1_2(\state_grid[9,11] ),
        .FDRE_I1_3({\state_grid[9,9] ,\state_grid[9,10] }),
        .FDRE_I1_4(\state_grid[7,9] ),
        .FDRE_I1_5(\state_grid[7,10] ),
        .FDRE_I1_6(\state_grid[8,9] ),
        .Q(\state_grid[8,11] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_766 \ROW[8].COL[11].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[8,11] ),
        .FDRE_I1_1(\state_grid[7,12] ),
        .FDRE_I1_2(\state_grid[9,12] ),
        .FDRE_I1_3(\state_grid[9,11] ),
        .FDRE_I1_4(\state_grid[9,10] ),
        .FDRE_I1_5(\state_grid[7,10] ),
        .FDRE_I1_6(\state_grid[7,11] ),
        .FDRE_I1_7(\state_grid[8,10] ),
        .Q(\state_grid[8,12] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_767 \ROW[8].COL[12].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[8,12] ),
        .FDRE_I1_1(\state_grid[7,13] ),
        .FDRE_I1_2(\state_grid[9,13] ),
        .FDRE_I1_3(\state_grid[9,12] ),
        .FDRE_I1_4(\state_grid[9,11] ),
        .FDRE_I1_5(\state_grid[7,11] ),
        .FDRE_I1_6(\state_grid[7,12] ),
        .FDRE_I1_7(\state_grid[8,11] ),
        .Q(\state_grid[8,13] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_768 \ROW[8].COL[13].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[8,13] ),
        .FDRE_I1_1(\state_grid[7,14] ),
        .FDRE_I1_2(\state_grid[9,14] ),
        .FDRE_I1_3(\state_grid[9,13] ),
        .FDRE_I1_4(\state_grid[9,12] ),
        .FDRE_I1_5(\state_grid[7,12] ),
        .FDRE_I1_6(\state_grid[7,13] ),
        .FDRE_I1_7(\state_grid[8,12] ),
        .Q(\state_grid[8,14] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_769 \ROW[8].COL[14].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[8,14] ),
        .FDRE_I1_1(\state_grid[7,15] ),
        .FDRE_I1_2(\state_grid[9,15] ),
        .FDRE_I1_3(\state_grid[9,14] ),
        .FDRE_I1_4(\state_grid[9,13] ),
        .FDRE_I1_5(\state_grid[7,13] ),
        .FDRE_I1_6(\state_grid[7,14] ),
        .FDRE_I1_7(\state_grid[8,13] ),
        .Q(\state_grid[8,15] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_770 \ROW[8].COL[15].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[8,15] ),
        .FDRE_I1_1(\state_grid[7,16] ),
        .FDRE_I1_2(\state_grid[9,16] ),
        .FDRE_I1_3(\state_grid[9,15] ),
        .FDRE_I1_4(\state_grid[9,14] ),
        .FDRE_I1_5(\state_grid[7,14] ),
        .FDRE_I1_6(\state_grid[7,15] ),
        .FDRE_I1_7(\state_grid[8,14] ),
        .Q(\state_grid[8,16] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_771 \ROW[8].COL[16].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[8,16] ),
        .FDRE_I1_1({\state_grid[9,16] ,\state_grid[8,17] }),
        .FDRE_I1_2(\state_grid[9,15] ),
        .FDRE_I1_3(\state_grid[7,15] ),
        .FDRE_I1_4(\state_grid[8,15] ),
        .Q(\state_grid[9,17] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .prox({\state_grid[7,16] ,\state_grid[7,17] }),
        .s00_axi_aclk(s00_axi_aclk));
  cell_772 \ROW[8].COL[17].EH.E_RS.CELL_XWYE 
       (.FDRE_I1_0({\state_grid[7,16] ,\state_grid[7,17] }),
        .FDRE_I1_1(\state_grid[8,16] ),
        .Q(\state_grid[8,17] ),
        .ce(ce),
        .prox({\state_grid[9,16] ,\state_grid[9,17] }),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_773 \ROW[8].COL[1].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[8,1] ),
        .FDRE_I1_1(\state_grid[7,2] ),
        .FDRE_I1_2(\state_grid[9,2] ),
        .FDRE_I1_3(\state_grid[9,1] ),
        .FDRE_I1_4(\state_grid[9,0] ),
        .FDRE_I1_5(\state_grid[7,0] ),
        .FDRE_I1_6(\state_grid[7,1] ),
        .FDRE_I1_7(\state_grid[8,0] ),
        .Q(\state_grid[8,2] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_774 \ROW[8].COL[2].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[8,2] ),
        .FDRE_I1_1(\state_grid[7,3] ),
        .FDRE_I1_2(\state_grid[9,3] ),
        .FDRE_I1_3(\state_grid[9,2] ),
        .FDRE_I1_4(\state_grid[9,1] ),
        .FDRE_I1_5(\state_grid[7,1] ),
        .FDRE_I1_6(\state_grid[7,2] ),
        .FDRE_I1_7(\state_grid[8,1] ),
        .Q(\state_grid[8,3] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_775 \ROW[8].COL[3].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[8,3] ),
        .FDRE_I1_1(\state_grid[7,4] ),
        .FDRE_I1_2(\state_grid[9,4] ),
        .FDRE_I1_3(\state_grid[9,3] ),
        .FDRE_I1_4(\state_grid[9,2] ),
        .FDRE_I1_5(\state_grid[7,2] ),
        .FDRE_I1_6(\state_grid[7,3] ),
        .FDRE_I1_7(\state_grid[8,2] ),
        .Q(\state_grid[8,4] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_776 \ROW[8].COL[4].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[8,4] ),
        .FDRE_I1_1(\state_grid[7,5] ),
        .FDRE_I1_2(\state_grid[9,5] ),
        .FDRE_I1_3(\state_grid[9,4] ),
        .FDRE_I1_4(\state_grid[9,3] ),
        .FDRE_I1_5(\state_grid[7,3] ),
        .FDRE_I1_6(\state_grid[7,4] ),
        .FDRE_I1_7(\state_grid[8,3] ),
        .Q(\state_grid[8,5] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_777 \ROW[8].COL[5].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[8,5] ),
        .FDRE_I1_1(\state_grid[7,6] ),
        .FDRE_I1_2(\state_grid[9,6] ),
        .FDRE_I1_3(\state_grid[9,5] ),
        .FDRE_I1_4(\state_grid[9,4] ),
        .FDRE_I1_5(\state_grid[7,4] ),
        .FDRE_I1_6(\state_grid[7,5] ),
        .FDRE_I1_7(\state_grid[8,4] ),
        .Q(\state_grid[8,6] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_778 \ROW[8].COL[6].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[8,6] ),
        .FDRE_I1_1(\state_grid[7,7] ),
        .FDRE_I1_2(\state_grid[9,7] ),
        .FDRE_I1_3(\state_grid[9,6] ),
        .FDRE_I1_4(\state_grid[9,5] ),
        .FDRE_I1_5(\state_grid[7,5] ),
        .FDRE_I1_6(\state_grid[7,6] ),
        .FDRE_I1_7(\state_grid[8,5] ),
        .Q(\state_grid[8,7] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_779 \ROW[8].COL[7].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[8,7] ),
        .FDRE_I1_1(\state_grid[7,8] ),
        .FDRE_I1_2(\state_grid[9,8] ),
        .FDRE_I1_3(\state_grid[9,7] ),
        .FDRE_I1_4(\state_grid[9,6] ),
        .FDRE_I1_5(\state_grid[7,6] ),
        .FDRE_I1_6(\state_grid[7,7] ),
        .FDRE_I1_7(\state_grid[8,6] ),
        .Q(\state_grid[8,8] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_780 \ROW[8].COL[8].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[8,8] ),
        .FDRE_I1_1(\state_grid[7,9] ),
        .FDRE_I1_2(\state_grid[9,7] ),
        .FDRE_I1_3(\state_grid[7,7] ),
        .FDRE_I1_4(\state_grid[7,8] ),
        .FDRE_I1_5(\state_grid[8,7] ),
        .Q(\state_grid[8,9] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .prox({\state_grid[9,8] ,\state_grid[9,9] }),
        .s00_axi_aclk(s00_axi_aclk));
  cell_781 \ROW[8].COL[9].EH.E_M.CELL_XIYE 
       (.FDRE_I1_0(\state_grid[8,9] ),
        .FDRE_I1_1(\state_grid[7,10] ),
        .FDRE_I1_2(\state_grid[8,10] ),
        .FDRE_I1_3({\state_grid[9,9] ,\state_grid[9,10] }),
        .FDRE_I1_4(\state_grid[7,8] ),
        .FDRE_I1_5(\state_grid[7,9] ),
        .FDRE_I1_6(\state_grid[8,8] ),
        .Q(\state_grid[9,8] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_782 \ROW[9].COL[0].EH.O_LS.CELL_X0YO 
       (.FDRE_I1_0(\state_grid[8,1] ),
        .FDRE_I1_1(\state_grid[10,1] ),
        .FDRE_I1_2(\state_grid[10,0] ),
        .FDRE_I1_3(\state_grid[8,0] ),
        .FDRE_I1_4(\state_grid[9,1] ),
        .Q(\state_grid[9,0] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_783 \ROW[9].COL[10].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[9,10] ),
        .FDRE_I1_1(\state_grid[8,11] ),
        .FDRE_I1_2(\state_grid[8,9] ),
        .FDRE_I1_3(\state_grid[10,11] ),
        .FDRE_I1_4(\state_grid[10,10] ),
        .FDRE_I1_5(\state_grid[10,9] ),
        .FDRE_I1_6(\state_grid[8,10] ),
        .FDRE_I1_7(\state_grid[9,11] ),
        .Q(\state_grid[9,9] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_784 \ROW[9].COL[11].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[9,11] ),
        .FDRE_I1_1(\state_grid[8,12] ),
        .FDRE_I1_2(\state_grid[8,10] ),
        .FDRE_I1_3(\state_grid[10,11] ),
        .FDRE_I1_4(\state_grid[10,10] ),
        .FDRE_I1_5(\state_grid[9,10] ),
        .FDRE_I1_6(\state_grid[8,11] ),
        .FDRE_I1_7(\state_grid[9,12] ),
        .Q(\state_grid[10,12] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_785 \ROW[9].COL[12].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[9,12] ),
        .FDRE_I1_1(\state_grid[8,13] ),
        .FDRE_I1_2(\state_grid[8,11] ),
        .FDRE_I1_3(\state_grid[10,12] ),
        .FDRE_I1_4(\state_grid[10,11] ),
        .FDRE_I1_5(\state_grid[9,11] ),
        .FDRE_I1_6(\state_grid[8,12] ),
        .FDRE_I1_7(\state_grid[9,13] ),
        .Q(\state_grid[10,13] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_786 \ROW[9].COL[13].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[9,13] ),
        .FDRE_I1_1(\state_grid[8,14] ),
        .FDRE_I1_2(\state_grid[8,12] ),
        .FDRE_I1_3(\state_grid[10,13] ),
        .FDRE_I1_4(\state_grid[10,12] ),
        .FDRE_I1_5(\state_grid[9,12] ),
        .FDRE_I1_6(\state_grid[8,13] ),
        .FDRE_I1_7(\state_grid[9,14] ),
        .Q(\state_grid[10,14] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_787 \ROW[9].COL[14].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[9,14] ),
        .FDRE_I1_1(\state_grid[8,15] ),
        .FDRE_I1_2(\state_grid[8,13] ),
        .FDRE_I1_3(\state_grid[10,14] ),
        .FDRE_I1_4(\state_grid[10,13] ),
        .FDRE_I1_5(\state_grid[9,13] ),
        .FDRE_I1_6(\state_grid[8,14] ),
        .FDRE_I1_7(\state_grid[9,15] ),
        .Q(\state_grid[10,15] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_788 \ROW[9].COL[15].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[9,15] ),
        .FDRE_I1_1(\state_grid[8,16] ),
        .FDRE_I1_2(\state_grid[8,14] ),
        .FDRE_I1_3(\state_grid[10,16] ),
        .FDRE_I1_4(\state_grid[10,14] ),
        .FDRE_I1_5(\state_grid[9,14] ),
        .FDRE_I1_6(\state_grid[8,15] ),
        .FDRE_I1_7(\state_grid[9,16] ),
        .Q(\state_grid[10,15] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_789 \ROW[9].COL[16].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[9,16] ),
        .FDRE_I1_1(\state_grid[8,15] ),
        .FDRE_I1_2({\state_grid[10,16] ,\state_grid[10,17] }),
        .FDRE_I1_3(\state_grid[9,15] ),
        .FDRE_I1_4(\state_grid[9,17] ),
        .Q(\state_grid[10,15] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .prox({\state_grid[8,16] ,\state_grid[8,17] }),
        .s00_axi_aclk(s00_axi_aclk));
  cell_790 \ROW[9].COL[17].EH.O_RS.CELL_XWYO 
       (.FDRE_I1_0({\state_grid[10,16] ,\state_grid[10,17] }),
        .FDRE_I1_1({\state_grid[9,16] ,\state_grid[8,17] }),
        .FDRE_I1_2(\state_grid[8,16] ),
        .Q(\state_grid[9,17] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_791 \ROW[9].COL[1].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[9,1] ),
        .FDRE_I1_1(\state_grid[8,2] ),
        .FDRE_I1_2(\state_grid[8,0] ),
        .FDRE_I1_3(\state_grid[10,1] ),
        .FDRE_I1_4(\state_grid[10,0] ),
        .FDRE_I1_5(\state_grid[9,0] ),
        .FDRE_I1_6(\state_grid[8,1] ),
        .FDRE_I1_7(\state_grid[9,2] ),
        .Q(\state_grid[10,2] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_792 \ROW[9].COL[2].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[9,2] ),
        .FDRE_I1_1(\state_grid[8,3] ),
        .FDRE_I1_2(\state_grid[8,1] ),
        .FDRE_I1_3(\state_grid[10,2] ),
        .FDRE_I1_4(\state_grid[10,1] ),
        .FDRE_I1_5(\state_grid[9,1] ),
        .FDRE_I1_6(\state_grid[8,2] ),
        .FDRE_I1_7(\state_grid[9,3] ),
        .Q(\state_grid[10,3] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_793 \ROW[9].COL[3].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[9,3] ),
        .FDRE_I1_1(\state_grid[8,4] ),
        .FDRE_I1_2(\state_grid[8,2] ),
        .FDRE_I1_3(\state_grid[10,3] ),
        .FDRE_I1_4(\state_grid[10,2] ),
        .FDRE_I1_5(\state_grid[9,2] ),
        .FDRE_I1_6(\state_grid[8,3] ),
        .FDRE_I1_7(\state_grid[9,4] ),
        .Q(\state_grid[10,4] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_794 \ROW[9].COL[4].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[9,4] ),
        .FDRE_I1_1(\state_grid[8,5] ),
        .FDRE_I1_2(\state_grid[8,3] ),
        .FDRE_I1_3(\state_grid[10,4] ),
        .FDRE_I1_4(\state_grid[10,3] ),
        .FDRE_I1_5(\state_grid[9,3] ),
        .FDRE_I1_6(\state_grid[8,4] ),
        .FDRE_I1_7(\state_grid[9,5] ),
        .Q(\state_grid[10,5] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_795 \ROW[9].COL[5].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[9,5] ),
        .FDRE_I1_1(\state_grid[8,6] ),
        .FDRE_I1_2(\state_grid[8,4] ),
        .FDRE_I1_3(\state_grid[10,5] ),
        .FDRE_I1_4(\state_grid[10,4] ),
        .FDRE_I1_5(\state_grid[9,4] ),
        .FDRE_I1_6(\state_grid[8,5] ),
        .FDRE_I1_7(\state_grid[9,6] ),
        .Q(\state_grid[10,6] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_796 \ROW[9].COL[6].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[9,6] ),
        .FDRE_I1_1(\state_grid[8,7] ),
        .FDRE_I1_2(\state_grid[8,5] ),
        .FDRE_I1_3(\state_grid[10,6] ),
        .FDRE_I1_4(\state_grid[10,5] ),
        .FDRE_I1_5(\state_grid[9,5] ),
        .FDRE_I1_6(\state_grid[8,6] ),
        .FDRE_I1_7(\state_grid[9,7] ),
        .Q(\state_grid[10,7] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_797 \ROW[9].COL[7].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[9,7] ),
        .FDRE_I1_1(\state_grid[8,8] ),
        .FDRE_I1_2(\state_grid[8,6] ),
        .FDRE_I1_3(\state_grid[10,8] ),
        .FDRE_I1_4(\state_grid[10,6] ),
        .FDRE_I1_5(\state_grid[9,6] ),
        .FDRE_I1_6(\state_grid[8,7] ),
        .FDRE_I1_7(\state_grid[9,8] ),
        .Q(\state_grid[10,7] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
  cell_798 \ROW[9].COL[8].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[9,8] ),
        .FDRE_I1_1(\state_grid[8,9] ),
        .FDRE_I1_2(\state_grid[8,7] ),
        .FDRE_I1_3(\state_grid[10,9] ),
        .FDRE_I1_4(\state_grid[10,8] ),
        .FDRE_I1_5(\state_grid[9,7] ),
        .FDRE_I1_6(\state_grid[8,8] ),
        .FDRE_I1_7(\state_grid[9,9] ),
        .Q(\state_grid[10,7] ),
        .ce(ce),
        .internal_shift_reg_rep(internal_shift_reg_rep),
        .s00_axi_aclk(s00_axi_aclk));
  cell_799 \ROW[9].COL[9].EH.O_M.CELL_XIYO 
       (.FDRE_I1_0(\state_grid[8,10] ),
        .FDRE_I1_1(\state_grid[8,8] ),
        .FDRE_I1_2(\state_grid[10,10] ),
        .FDRE_I1_3(\state_grid[10,9] ),
        .FDRE_I1_4(\state_grid[10,8] ),
        .FDRE_I1_5(\state_grid[9,8] ),
        .FDRE_I1_6(\state_grid[8,9] ),
        .FDRE_I1_7(\state_grid[9,10] ),
        .Q(\state_grid[9,9] ),
        .ce(ce),
        .s00_axi_aclk(s00_axi_aclk),
        .shift(shift));
endmodule

module lmb_bram_if_cntlr
   (BRAM_WEN_A,
    Sl_Ready,
    LMB_Rst,
    LMB_AddrStrobe,
    LMB_Clk,
    LMB_ABus,
    LMB_WriteStrobe,
    LMB_BE);
  output [0:3]BRAM_WEN_A;
  output Sl_Ready;
  input LMB_Rst;
  input LMB_AddrStrobe;
  input LMB_Clk;
  input [0:0]LMB_ABus;
  input LMB_WriteStrobe;
  input [0:3]LMB_BE;

  wire [0:3]BRAM_WEN_A;
  wire [0:0]LMB_ABus;
  wire LMB_AddrStrobe;
  wire [0:3]LMB_BE;
  wire LMB_Clk;
  wire LMB_Rst;
  wire LMB_WriteStrobe;
  wire Sl_Rdy;
  wire Sl_Ready;
  wire lmb_as;
  wire lmb_select;

  LUT3 #(
    .INIT(8'h20)) 
    \BRAM_WEN_A[0]_INST_0 
       (.I0(LMB_WriteStrobe),
        .I1(LMB_ABus),
        .I2(LMB_BE[0]),
        .O(BRAM_WEN_A[0]));
  LUT3 #(
    .INIT(8'h40)) 
    \BRAM_WEN_A[1]_INST_0 
       (.I0(LMB_ABus),
        .I1(LMB_WriteStrobe),
        .I2(LMB_BE[1]),
        .O(BRAM_WEN_A[1]));
  LUT3 #(
    .INIT(8'h40)) 
    \BRAM_WEN_A[2]_INST_0 
       (.I0(LMB_ABus),
        .I1(LMB_WriteStrobe),
        .I2(LMB_BE[2]),
        .O(BRAM_WEN_A[2]));
  LUT3 #(
    .INIT(8'h40)) 
    \BRAM_WEN_A[3]_INST_0 
       (.I0(LMB_ABus),
        .I1(LMB_WriteStrobe),
        .I2(LMB_BE[3]),
        .O(BRAM_WEN_A[3]));
  LUT1 #(
    .INIT(2'h1)) 
    \No_ECC.Sl_Rdy_i_1 
       (.I0(LMB_ABus),
        .O(lmb_select));
  FDRE #(
    .INIT(1'b0)) 
    \No_ECC.Sl_Rdy_reg 
       (.C(LMB_Clk),
        .CE(1'b1),
        .D(lmb_select),
        .Q(Sl_Rdy),
        .R(LMB_Rst));
  FDRE #(
    .INIT(1'b0)) 
    \No_ECC.lmb_as_reg 
       (.C(LMB_Clk),
        .CE(1'b1),
        .D(LMB_AddrStrobe),
        .Q(lmb_as),
        .R(LMB_Rst));
  LUT2 #(
    .INIT(4'h8)) 
    Sl_Ready_INST_0
       (.I0(Sl_Rdy),
        .I1(lmb_as),
        .O(Sl_Ready));
endmodule

(* ORIG_REF_NAME = "lmb_bram_if_cntlr" *) 
module lmb_bram_if_cntlr__parameterized1
   (BRAM_WEN_A,
    Sl_Ready,
    LMB_WriteStrobe,
    LMB_BE,
    LMB_Rst,
    LMB_AddrStrobe,
    LMB_Clk);
  output [0:3]BRAM_WEN_A;
  output Sl_Ready;
  input LMB_WriteStrobe;
  input [0:3]LMB_BE;
  input LMB_Rst;
  input LMB_AddrStrobe;
  input LMB_Clk;

  wire LMB_AddrStrobe;
  wire [0:3]LMB_BE;
  wire LMB_Clk;
  wire LMB_Rst;
  wire Sl_Rdy;
  wire Sl_Ready;
  wire lmb_as;

  assign BRAM_WEN_A[0] = LMB_BE[0];
  assign BRAM_WEN_A[1] = LMB_BE[0];
  assign BRAM_WEN_A[2] = LMB_BE[0];
  assign BRAM_WEN_A[3] = LMB_BE[0];
  FDRE #(
    .INIT(1'b0)) 
    \No_ECC.Sl_Rdy_reg 
       (.C(LMB_Clk),
        .CE(1'b1),
        .D(1'b1),
        .Q(Sl_Rdy),
        .R(LMB_Rst));
  FDRE #(
    .INIT(1'b0)) 
    \No_ECC.lmb_as_reg 
       (.C(LMB_Clk),
        .CE(1'b1),
        .D(LMB_AddrStrobe),
        .Q(lmb_as),
        .R(LMB_Rst));
  LUT2 #(
    .INIT(4'h8)) 
    Sl_Ready_INST_0
       (.I0(Sl_Rdy),
        .I1(lmb_as),
        .O(Sl_Ready));
endmodule

(* C_EXT_RESET_HIGH = "1" *) (* C_LMB_AWIDTH = "32" *) (* C_LMB_DWIDTH = "32" *) 
(* C_LMB_NUM_SLAVES = "1" *) 
module lmb_v10
   (LMB_Clk,
    SYS_Rst,
    LMB_Rst,
    M_ABus,
    M_ReadStrobe,
    M_WriteStrobe,
    M_AddrStrobe,
    M_DBus,
    M_BE,
    Sl_DBus,
    Sl_Ready,
    Sl_Wait,
    Sl_UE,
    Sl_CE,
    LMB_ABus,
    LMB_ReadStrobe,
    LMB_WriteStrobe,
    LMB_AddrStrobe,
    LMB_ReadDBus,
    LMB_WriteDBus,
    LMB_Ready,
    LMB_Wait,
    LMB_UE,
    LMB_CE,
    LMB_BE);
  input LMB_Clk;
  input SYS_Rst;
  output LMB_Rst;
  input [0:31]M_ABus;
  input M_ReadStrobe;
  input M_WriteStrobe;
  input M_AddrStrobe;
  input [0:31]M_DBus;
  input [0:3]M_BE;
  input [0:31]Sl_DBus;
  input [0:0]Sl_Ready;
  input [0:0]Sl_Wait;
  input [0:0]Sl_UE;
  input [0:0]Sl_CE;
  output [0:31]LMB_ABus;
  output LMB_ReadStrobe;
  output LMB_WriteStrobe;
  output LMB_AddrStrobe;
  output [0:31]LMB_ReadDBus;
  output [0:31]LMB_WriteDBus;
  output LMB_Ready;
  output LMB_Wait;
  output LMB_UE;
  output LMB_CE;
  output [0:3]LMB_BE;

  wire [0:31]M_ABus;
  wire M_AddrStrobe;
  wire [0:3]M_BE;
  wire [0:31]M_DBus;
  wire [0:31]Sl_DBus;
  wire [0:0]Sl_Ready;

  assign LMB_ABus[18:29] = M_ABus[18:29];
  assign LMB_AddrStrobe = M_AddrStrobe;
  assign LMB_BE[0] = M_BE[0];
  assign LMB_ReadDBus[0:31] = Sl_DBus;
  assign LMB_Ready = Sl_Ready;
  assign LMB_WriteDBus[0:31] = M_DBus;
endmodule

(* C_EXT_RESET_HIGH = "1" *) (* C_LMB_AWIDTH = "32" *) (* C_LMB_DWIDTH = "32" *) 
(* C_LMB_NUM_SLAVES = "1" *) (* ORIG_REF_NAME = "lmb_v10" *) 
module lmb_v10__1
   (LMB_Clk,
    SYS_Rst,
    LMB_Rst,
    M_ABus,
    M_ReadStrobe,
    M_WriteStrobe,
    M_AddrStrobe,
    M_DBus,
    M_BE,
    Sl_DBus,
    Sl_Ready,
    Sl_Wait,
    Sl_UE,
    Sl_CE,
    LMB_ABus,
    LMB_ReadStrobe,
    LMB_WriteStrobe,
    LMB_AddrStrobe,
    LMB_ReadDBus,
    LMB_WriteDBus,
    LMB_Ready,
    LMB_Wait,
    LMB_UE,
    LMB_CE,
    LMB_BE);
  input LMB_Clk;
  input SYS_Rst;
  output LMB_Rst;
  input [0:31]M_ABus;
  input M_ReadStrobe;
  input M_WriteStrobe;
  input M_AddrStrobe;
  input [0:31]M_DBus;
  input [0:3]M_BE;
  input [0:31]Sl_DBus;
  input [0:0]Sl_Ready;
  input [0:0]Sl_Wait;
  input [0:0]Sl_UE;
  input [0:0]Sl_CE;
  output [0:31]LMB_ABus;
  output LMB_ReadStrobe;
  output LMB_WriteStrobe;
  output LMB_AddrStrobe;
  output [0:31]LMB_ReadDBus;
  output [0:31]LMB_WriteDBus;
  output LMB_Ready;
  output LMB_Wait;
  output LMB_UE;
  output LMB_CE;
  output [0:3]LMB_BE;

  wire [0:31]M_ABus;
  wire M_AddrStrobe;
  wire [0:3]M_BE;
  wire [0:31]M_DBus;
  wire M_WriteStrobe;
  wire [0:31]Sl_DBus;
  wire [0:0]Sl_Ready;

  assign LMB_ABus[10] = M_ABus[10];
  assign LMB_ABus[18:29] = M_ABus[18:29];
  assign LMB_AddrStrobe = M_AddrStrobe;
  assign LMB_BE[0:3] = M_BE;
  assign LMB_ReadDBus[0:31] = Sl_DBus;
  assign LMB_Ready = Sl_Ready;
  assign LMB_WriteDBus[0:31] = M_DBus;
  assign LMB_WriteStrobe = M_WriteStrobe;
endmodule

module lpf
   (lpf_int,
    slowest_sync_clk,
    dcm_locked,
    ext_reset_in,
    mb_debug_sys_rst,
    aux_reset_in);
  output lpf_int;
  input slowest_sync_clk;
  input dcm_locked;
  input ext_reset_in;
  input mb_debug_sys_rst;
  input aux_reset_in;

  wire \ACTIVE_HIGH_EXT.ACT_HI_EXT_n_0 ;
  wire Q;
  wire dcm_locked;
  wire ext_reset_in;
  wire lpf_exr;
  wire lpf_int;
  wire lpf_int0__0;
  wire mb_debug_sys_rst;
  wire [3:0]p_3_out;
  wire slowest_sync_clk;

  cdc_sync__parameterized0 \ACTIVE_HIGH_EXT.ACT_HI_EXT 
       (.ext_reset_in(ext_reset_in),
        .lpf_exr(lpf_exr),
        .lpf_exr_reg(\ACTIVE_HIGH_EXT.ACT_HI_EXT_n_0 ),
        .mb_debug_sys_rst(mb_debug_sys_rst),
        .p_3_out(p_3_out[2:0]),
        .scndry_out(p_3_out[3]),
        .slowest_sync_clk(slowest_sync_clk));
  FDRE #(
    .INIT(1'b0)) 
    \EXT_LPF[1].exr_lpf_reg[1] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(p_3_out[3]),
        .Q(p_3_out[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \EXT_LPF[2].exr_lpf_reg[2] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(p_3_out[2]),
        .Q(p_3_out[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \EXT_LPF[3].exr_lpf_reg[3] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(p_3_out[1]),
        .Q(p_3_out[0]),
        .R(1'b0));
  (* XILINX_LEGACY_PRIM = "SRL16" *) 
  (* box_type = "PRIMITIVE" *) 
  (* srl_name = "design_gol_i/rst_clk_wiz_1_100M/U0/\EXT_LPF/POR_SRL_I " *) 
  SRL16E #(
    .INIT(16'hFFFF)) 
    POR_SRL_I
       (.A0(1'b1),
        .A1(1'b1),
        .A2(1'b1),
        .A3(1'b1),
        .CE(1'b1),
        .CLK(slowest_sync_clk),
        .D(1'b0),
        .Q(Q));
  FDRE #(
    .INIT(1'b0)) 
    lpf_exr_reg
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(\ACTIVE_HIGH_EXT.ACT_HI_EXT_n_0 ),
        .Q(lpf_exr),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hFD)) 
    lpf_int0
       (.I0(dcm_locked),
        .I1(Q),
        .I2(lpf_exr),
        .O(lpf_int0__0));
  FDRE #(
    .INIT(1'b0)) 
    lpf_int_reg
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(lpf_int0__0),
        .Q(lpf_int),
        .R(1'b0));
endmodule

module mdm_v3_2_10_MB_SRL16E
   (tdo,
    Q,
    \Use_BSCAN.PORT_Selector_reg[0] ,
    \Use_BSCAN.PORT_Selector_reg[2] ,
    \Use_BSCAN.PORT_Selector_reg[0]_0 ,
    \Use_BSCAN.command_reg[0] ,
    \Use_BSCAN.command_reg[5] ,
    \Use_BSCAN.command_reg[0]_0 ,
    \Use_BSCAN.command_reg[3] ,
    \Use_BSCAN.command_reg[4] ,
    Dbg_TDO_0,
    \Use_Serial_Unified_Completion.completion_status_reg[0] ,
    config_TDO_2);
  output tdo;
  input [4:0]Q;
  input \Use_BSCAN.PORT_Selector_reg[0] ;
  input \Use_BSCAN.PORT_Selector_reg[2] ;
  input [0:0]\Use_BSCAN.PORT_Selector_reg[0]_0 ;
  input \Use_BSCAN.command_reg[0] ;
  input \Use_BSCAN.command_reg[5] ;
  input \Use_BSCAN.command_reg[0]_0 ;
  input \Use_BSCAN.command_reg[3] ;
  input [2:0]\Use_BSCAN.command_reg[4] ;
  input Dbg_TDO_0;
  input [0:0]\Use_Serial_Unified_Completion.completion_status_reg[0] ;
  input config_TDO_2;

  wire Dbg_TDO_0;
  wire [4:0]Q;
  wire \Use_BSCAN.PORT_Selector_reg[0] ;
  wire [0:0]\Use_BSCAN.PORT_Selector_reg[0]_0 ;
  wire \Use_BSCAN.PORT_Selector_reg[2] ;
  wire \Use_BSCAN.command_reg[0] ;
  wire \Use_BSCAN.command_reg[0]_0 ;
  wire \Use_BSCAN.command_reg[3] ;
  wire [2:0]\Use_BSCAN.command_reg[4] ;
  wire \Use_BSCAN.command_reg[5] ;
  wire \Use_E2.BSCANE2_I_i_4_n_0 ;
  wire \Use_E2.BSCANE2_I_i_8_n_0 ;
  wire [0:0]\Use_Serial_Unified_Completion.completion_status_reg[0] ;
  wire \Use_unisim.MB_SRL16E_I1_n_0 ;
  wire config_TDO_2;
  wire tdo;

  LUT6 #(
    .INIT(64'hEEEEEEEAEAEAEAEA)) 
    \Use_E2.BSCANE2_I_i_1 
       (.I0(\Use_BSCAN.PORT_Selector_reg[2] ),
        .I1(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .I2(\Use_BSCAN.command_reg[0] ),
        .I3(\Use_E2.BSCANE2_I_i_4_n_0 ),
        .I4(\Use_BSCAN.command_reg[5] ),
        .I5(\Use_BSCAN.command_reg[0]_0 ),
        .O(tdo));
  LUT5 #(
    .INIT(32'hFEEEBAAA)) 
    \Use_E2.BSCANE2_I_i_4 
       (.I0(\Use_BSCAN.command_reg[3] ),
        .I1(\Use_BSCAN.command_reg[4] [0]),
        .I2(\Use_BSCAN.command_reg[4] [2]),
        .I3(\Use_E2.BSCANE2_I_i_8_n_0 ),
        .I4(Dbg_TDO_0),
        .O(\Use_E2.BSCANE2_I_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hFACA0ACA)) 
    \Use_E2.BSCANE2_I_i_8 
       (.I0(\Use_Serial_Unified_Completion.completion_status_reg[0] ),
        .I1(\Use_unisim.MB_SRL16E_I1_n_0 ),
        .I2(\Use_BSCAN.command_reg[4] [1]),
        .I3(Q[4]),
        .I4(config_TDO_2),
        .O(\Use_E2.BSCANE2_I_i_8_n_0 ));
  (* box_type = "PRIMITIVE" *) 
  (* srl_name = "design_gol_i/mdm_1/U0/\MDM_Core_I1/JTAG_CONTROL_I/Use_Config_SRL16E.SRL16E_1/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0167),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(1'b0),
        .CLK(\Use_BSCAN.PORT_Selector_reg[0] ),
        .D(1'b0),
        .Q(\Use_unisim.MB_SRL16E_I1_n_0 ));
endmodule

(* ORIG_REF_NAME = "mdm_v3_2_10_MB_SRL16E" *) 
module mdm_v3_2_10_MB_SRL16E__parameterized0
   (config_TDO_2,
    Q,
    \Use_BSCAN.PORT_Selector_reg[0] );
  output config_TDO_2;
  input [3:0]Q;
  input \Use_BSCAN.PORT_Selector_reg[0] ;

  wire [3:0]Q;
  wire \Use_BSCAN.PORT_Selector_reg[0] ;
  wire config_TDO_2;

  (* box_type = "PRIMITIVE" *) 
  (* srl_name = "design_gol_i/mdm_1/U0/\MDM_Core_I1/JTAG_CONTROL_I/Use_Config_SRL16E.SRL16E_2/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h4287),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(1'b0),
        .CLK(\Use_BSCAN.PORT_Selector_reg[0] ),
        .D(1'b0),
        .Q(config_TDO_2));
endmodule

(* ORIG_REF_NAME = "mdm_v3_2_10_MB_SRL16E" *) 
module mdm_v3_2_10_MB_SRL16E__parameterized1
   (sel_n_reg,
    Q,
    \Use_BSCAN.PORT_Selector_reg[0] ,
    \Use_BSCAN.command_reg[1] ,
    ID_TDO_2);
  output sel_n_reg;
  input [4:0]Q;
  input \Use_BSCAN.PORT_Selector_reg[0] ;
  input [5:0]\Use_BSCAN.command_reg[1] ;
  input ID_TDO_2;

  wire ID_TDO_2;
  wire [4:0]Q;
  wire Q0_out;
  wire \Use_BSCAN.PORT_Selector_reg[0] ;
  wire [5:0]\Use_BSCAN.command_reg[1] ;
  wire \Use_E2.BSCANE2_I_i_9_n_0 ;
  wire sel_n_reg;

  LUT6 #(
    .INIT(64'hFFFFFFFFFFFB88CC)) 
    \Use_E2.BSCANE2_I_i_5 
       (.I0(\Use_BSCAN.command_reg[1] [2]),
        .I1(\Use_BSCAN.command_reg[1] [1]),
        .I2(\Use_BSCAN.command_reg[1] [3]),
        .I3(\Use_BSCAN.command_reg[1] [4]),
        .I4(\Use_BSCAN.command_reg[1] [5]),
        .I5(\Use_E2.BSCANE2_I_i_9_n_0 ),
        .O(sel_n_reg));
  LUT6 #(
    .INIT(64'h0101010000000100)) 
    \Use_E2.BSCANE2_I_i_9 
       (.I0(\Use_BSCAN.command_reg[1] [1]),
        .I1(\Use_BSCAN.command_reg[1] [0]),
        .I2(\Use_BSCAN.command_reg[1] [2]),
        .I3(Q0_out),
        .I4(Q[4]),
        .I5(ID_TDO_2),
        .O(\Use_E2.BSCANE2_I_i_9_n_0 ));
  (* box_type = "PRIMITIVE" *) 
  (* srl_name = "design_gol_i/mdm_1/U0/\MDM_Core_I1/JTAG_CONTROL_I/Use_ID_SRL16E.SRL16E_ID_1/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h4443),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(1'b0),
        .CLK(\Use_BSCAN.PORT_Selector_reg[0] ),
        .D(1'b0),
        .Q(Q0_out));
endmodule

(* ORIG_REF_NAME = "mdm_v3_2_10_MB_SRL16E" *) 
module mdm_v3_2_10_MB_SRL16E__parameterized2
   (ID_TDO_2,
    Q,
    \Use_BSCAN.PORT_Selector_reg[0] );
  output ID_TDO_2;
  input [3:0]Q;
  input \Use_BSCAN.PORT_Selector_reg[0] ;

  wire ID_TDO_2;
  wire [3:0]Q;
  wire \Use_BSCAN.PORT_Selector_reg[0] ;

  (* box_type = "PRIMITIVE" *) 
  (* srl_name = "design_gol_i/mdm_1/U0/\MDM_Core_I1/JTAG_CONTROL_I/Use_ID_SRL16E.SRL16E_ID_2/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h584D),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(1'b0),
        .CLK(\Use_BSCAN.PORT_Selector_reg[0] ),
        .D(1'b0),
        .Q(ID_TDO_2));
endmodule

module microblaze_0_local_memory_imp_1GIH4L3
   (DLMB_readdbus,
    DLMB_ready,
    DLMB_wait,
    DLMB_ue,
    DLMB_ce,
    ILMB_readdbus,
    ILMB_ready,
    ILMB_wait,
    ILMB_ue,
    ILMB_ce,
    clk_out1,
    bus_struct_reset,
    DLMB_abus,
    DLMB_readstrobe,
    DLMB_writestrobe,
    DLMB_addrstrobe,
    DLMB_writedbus,
    DLMB_be,
    ILMB_abus,
    ILMB_readstrobe,
    ILMB_addrstrobe);
  output [0:31]DLMB_readdbus;
  output DLMB_ready;
  output DLMB_wait;
  output DLMB_ue;
  output DLMB_ce;
  output [0:31]ILMB_readdbus;
  output ILMB_ready;
  output ILMB_wait;
  output ILMB_ue;
  output ILMB_ce;
  input clk_out1;
  input [0:0]bus_struct_reset;
  input [0:31]DLMB_abus;
  input DLMB_readstrobe;
  input DLMB_writestrobe;
  input DLMB_addrstrobe;
  input [0:31]DLMB_writedbus;
  input [0:3]DLMB_be;
  input [0:31]ILMB_abus;
  input ILMB_readstrobe;
  input ILMB_addrstrobe;

  wire [0:31]DLMB_abus;
  wire DLMB_addrstrobe;
  wire [0:3]DLMB_be;
  wire [0:31]DLMB_readdbus;
  wire DLMB_ready;
  wire [0:31]DLMB_writedbus;
  wire DLMB_writestrobe;
  wire [0:31]ILMB_abus;
  wire ILMB_addrstrobe;
  wire [0:31]ILMB_readdbus;
  wire ILMB_ready;
  wire [0:31]Sl_DBus;
  wire [0:0]bus_struct_reset;
  wire clk_out1;
  wire ilmb_bram_if_cntlr_n_0;
  wire ilmb_bram_if_cntlr_n_1;
  wire ilmb_bram_if_cntlr_n_10;
  wire ilmb_bram_if_cntlr_n_11;
  wire ilmb_bram_if_cntlr_n_12;
  wire ilmb_bram_if_cntlr_n_13;
  wire ilmb_bram_if_cntlr_n_14;
  wire ilmb_bram_if_cntlr_n_15;
  wire ilmb_bram_if_cntlr_n_16;
  wire ilmb_bram_if_cntlr_n_17;
  wire ilmb_bram_if_cntlr_n_18;
  wire ilmb_bram_if_cntlr_n_19;
  wire ilmb_bram_if_cntlr_n_2;
  wire ilmb_bram_if_cntlr_n_20;
  wire ilmb_bram_if_cntlr_n_21;
  wire ilmb_bram_if_cntlr_n_22;
  wire ilmb_bram_if_cntlr_n_23;
  wire ilmb_bram_if_cntlr_n_24;
  wire ilmb_bram_if_cntlr_n_25;
  wire ilmb_bram_if_cntlr_n_26;
  wire ilmb_bram_if_cntlr_n_27;
  wire ilmb_bram_if_cntlr_n_28;
  wire ilmb_bram_if_cntlr_n_29;
  wire ilmb_bram_if_cntlr_n_3;
  wire ilmb_bram_if_cntlr_n_30;
  wire ilmb_bram_if_cntlr_n_31;
  wire ilmb_bram_if_cntlr_n_4;
  wire ilmb_bram_if_cntlr_n_5;
  wire ilmb_bram_if_cntlr_n_6;
  wire ilmb_bram_if_cntlr_n_7;
  wire ilmb_bram_if_cntlr_n_8;
  wire ilmb_bram_if_cntlr_n_9;
  wire [0:31]microblaze_0_dlmb_bus_ABUS;
  wire microblaze_0_dlmb_bus_ADDRSTROBE;
  wire [0:3]microblaze_0_dlmb_bus_BE;
  wire microblaze_0_dlmb_bus_READY;
  wire [0:31]microblaze_0_dlmb_bus_WRITEDBUS;
  wire microblaze_0_dlmb_bus_WRITESTROBE;
  wire [0:31]microblaze_0_dlmb_cntlr_ADDR;
  wire microblaze_0_dlmb_cntlr_CLK;
  wire [0:31]microblaze_0_dlmb_cntlr_DIN;
  wire [31:0]microblaze_0_dlmb_cntlr_DOUT;
  wire microblaze_0_dlmb_cntlr_EN;
  wire microblaze_0_dlmb_cntlr_RST;
  wire [0:3]microblaze_0_dlmb_cntlr_WE;
  wire [0:31]microblaze_0_ilmb_bus_ABUS;
  wire microblaze_0_ilmb_bus_ADDRSTROBE;
  wire [0:3]microblaze_0_ilmb_bus_BE;
  wire microblaze_0_ilmb_bus_READY;
  wire [0:31]microblaze_0_ilmb_bus_WRITEDBUS;
  wire [0:31]microblaze_0_ilmb_cntlr_ADDR;
  wire microblaze_0_ilmb_cntlr_CLK;
  wire [0:31]microblaze_0_ilmb_cntlr_DIN;
  wire [31:0]microblaze_0_ilmb_cntlr_DOUT;
  wire microblaze_0_ilmb_cntlr_EN;
  wire microblaze_0_ilmb_cntlr_RST;
  wire [0:3]microblaze_0_ilmb_cntlr_WE;
  wire NLW_dlmb_bram_if_cntlr_LMB_ReadStrobe_UNCONNECTED;
  wire NLW_dlmb_bram_if_cntlr_Sl_CE_UNCONNECTED;
  wire NLW_dlmb_bram_if_cntlr_Sl_UE_UNCONNECTED;
  wire NLW_dlmb_bram_if_cntlr_Sl_Wait_UNCONNECTED;
  wire [0:31]NLW_dlmb_bram_if_cntlr_BRAM_Addr_A_UNCONNECTED;
  wire [0:31]NLW_dlmb_bram_if_cntlr_LMB_ABus_UNCONNECTED;
  wire NLW_dlmb_v10_LMB_CE_UNCONNECTED;
  wire NLW_dlmb_v10_LMB_Clk_UNCONNECTED;
  wire NLW_dlmb_v10_LMB_ReadStrobe_UNCONNECTED;
  wire NLW_dlmb_v10_LMB_Rst_UNCONNECTED;
  wire NLW_dlmb_v10_LMB_UE_UNCONNECTED;
  wire NLW_dlmb_v10_LMB_Wait_UNCONNECTED;
  wire NLW_dlmb_v10_M_ReadStrobe_UNCONNECTED;
  wire NLW_dlmb_v10_SYS_Rst_UNCONNECTED;
  wire [0:31]NLW_dlmb_v10_LMB_ABus_UNCONNECTED;
  wire [0:31]NLW_dlmb_v10_M_ABus_UNCONNECTED;
  wire [0:0]NLW_dlmb_v10_Sl_CE_UNCONNECTED;
  wire [0:0]NLW_dlmb_v10_Sl_UE_UNCONNECTED;
  wire [0:0]NLW_dlmb_v10_Sl_Wait_UNCONNECTED;
  wire NLW_ilmb_bram_if_cntlr_LMB_ReadStrobe_UNCONNECTED;
  wire NLW_ilmb_bram_if_cntlr_LMB_WriteStrobe_UNCONNECTED;
  wire NLW_ilmb_bram_if_cntlr_Sl_CE_UNCONNECTED;
  wire NLW_ilmb_bram_if_cntlr_Sl_UE_UNCONNECTED;
  wire NLW_ilmb_bram_if_cntlr_Sl_Wait_UNCONNECTED;
  wire [0:31]NLW_ilmb_bram_if_cntlr_BRAM_Addr_A_UNCONNECTED;
  wire [0:31]NLW_ilmb_bram_if_cntlr_LMB_ABus_UNCONNECTED;
  wire [1:3]NLW_ilmb_bram_if_cntlr_LMB_BE_UNCONNECTED;
  wire NLW_ilmb_v10_LMB_CE_UNCONNECTED;
  wire NLW_ilmb_v10_LMB_Clk_UNCONNECTED;
  wire NLW_ilmb_v10_LMB_ReadStrobe_UNCONNECTED;
  wire NLW_ilmb_v10_LMB_Rst_UNCONNECTED;
  wire NLW_ilmb_v10_LMB_UE_UNCONNECTED;
  wire NLW_ilmb_v10_LMB_Wait_UNCONNECTED;
  wire NLW_ilmb_v10_LMB_WriteStrobe_UNCONNECTED;
  wire NLW_ilmb_v10_M_ReadStrobe_UNCONNECTED;
  wire NLW_ilmb_v10_M_WriteStrobe_UNCONNECTED;
  wire NLW_ilmb_v10_SYS_Rst_UNCONNECTED;
  wire [0:31]NLW_ilmb_v10_LMB_ABus_UNCONNECTED;
  wire [1:3]NLW_ilmb_v10_LMB_BE_UNCONNECTED;
  wire [0:31]NLW_ilmb_v10_M_ABus_UNCONNECTED;
  wire [1:3]NLW_ilmb_v10_M_BE_UNCONNECTED;
  wire [0:0]NLW_ilmb_v10_Sl_CE_UNCONNECTED;
  wire [0:0]NLW_ilmb_v10_Sl_UE_UNCONNECTED;
  wire [0:0]NLW_ilmb_v10_Sl_Wait_UNCONNECTED;
  wire [31:0]NLW_lmb_bram_addra_UNCONNECTED;
  wire [31:0]NLW_lmb_bram_addrb_UNCONNECTED;

  (* BMM_INFO_ADDRESS_SPACE = "byte  0x00000000 32 > design_gol microblaze_0_local_memory/lmb_bram" *) 
  (* CHECK_LICENSE_TYPE = "design_gol_dlmb_bram_if_cntlr_0,lmb_bram_if_cntlr,{}" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* X_CORE_INFO = "lmb_bram_if_cntlr,Vivado 2017.2" *) 
  design_gol_dlmb_bram_if_cntlr_0 dlmb_bram_if_cntlr
       (.BRAM_Addr_A({NLW_dlmb_bram_if_cntlr_BRAM_Addr_A_UNCONNECTED[0:17],microblaze_0_dlmb_cntlr_ADDR[18:29],NLW_dlmb_bram_if_cntlr_BRAM_Addr_A_UNCONNECTED[30:31]}),
        .BRAM_Clk_A(microblaze_0_dlmb_cntlr_CLK),
        .BRAM_Din_A({microblaze_0_dlmb_cntlr_DOUT[31],microblaze_0_dlmb_cntlr_DOUT[30],microblaze_0_dlmb_cntlr_DOUT[29],microblaze_0_dlmb_cntlr_DOUT[28],microblaze_0_dlmb_cntlr_DOUT[27],microblaze_0_dlmb_cntlr_DOUT[26],microblaze_0_dlmb_cntlr_DOUT[25],microblaze_0_dlmb_cntlr_DOUT[24],microblaze_0_dlmb_cntlr_DOUT[23],microblaze_0_dlmb_cntlr_DOUT[22],microblaze_0_dlmb_cntlr_DOUT[21],microblaze_0_dlmb_cntlr_DOUT[20],microblaze_0_dlmb_cntlr_DOUT[19],microblaze_0_dlmb_cntlr_DOUT[18],microblaze_0_dlmb_cntlr_DOUT[17],microblaze_0_dlmb_cntlr_DOUT[16],microblaze_0_dlmb_cntlr_DOUT[15],microblaze_0_dlmb_cntlr_DOUT[14],microblaze_0_dlmb_cntlr_DOUT[13],microblaze_0_dlmb_cntlr_DOUT[12],microblaze_0_dlmb_cntlr_DOUT[11],microblaze_0_dlmb_cntlr_DOUT[10],microblaze_0_dlmb_cntlr_DOUT[9],microblaze_0_dlmb_cntlr_DOUT[8],microblaze_0_dlmb_cntlr_DOUT[7],microblaze_0_dlmb_cntlr_DOUT[6],microblaze_0_dlmb_cntlr_DOUT[5],microblaze_0_dlmb_cntlr_DOUT[4],microblaze_0_dlmb_cntlr_DOUT[3],microblaze_0_dlmb_cntlr_DOUT[2],microblaze_0_dlmb_cntlr_DOUT[1],microblaze_0_dlmb_cntlr_DOUT[0]}),
        .BRAM_Dout_A(microblaze_0_dlmb_cntlr_DIN),
        .BRAM_EN_A(microblaze_0_dlmb_cntlr_EN),
        .BRAM_Rst_A(microblaze_0_dlmb_cntlr_RST),
        .BRAM_WEN_A(microblaze_0_dlmb_cntlr_WE),
        .LMB_ABus({NLW_dlmb_bram_if_cntlr_LMB_ABus_UNCONNECTED[0:9],microblaze_0_dlmb_bus_ABUS[10],NLW_dlmb_bram_if_cntlr_LMB_ABus_UNCONNECTED[11:17],microblaze_0_dlmb_bus_ABUS[18:29],NLW_dlmb_bram_if_cntlr_LMB_ABus_UNCONNECTED[30:31]}),
        .LMB_AddrStrobe(microblaze_0_dlmb_bus_ADDRSTROBE),
        .LMB_BE(microblaze_0_dlmb_bus_BE),
        .LMB_Clk(clk_out1),
        .LMB_ReadStrobe(NLW_dlmb_bram_if_cntlr_LMB_ReadStrobe_UNCONNECTED),
        .LMB_Rst(bus_struct_reset),
        .LMB_WriteDBus(microblaze_0_dlmb_bus_WRITEDBUS),
        .LMB_WriteStrobe(microblaze_0_dlmb_bus_WRITESTROBE),
        .Sl_CE(NLW_dlmb_bram_if_cntlr_Sl_CE_UNCONNECTED),
        .Sl_DBus(Sl_DBus),
        .Sl_Ready(microblaze_0_dlmb_bus_READY),
        .Sl_UE(NLW_dlmb_bram_if_cntlr_Sl_UE_UNCONNECTED),
        .Sl_Wait(NLW_dlmb_bram_if_cntlr_Sl_Wait_UNCONNECTED));
  (* CHECK_LICENSE_TYPE = "design_gol_dlmb_v10_0,lmb_v10,{}" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* X_CORE_INFO = "lmb_v10,Vivado 2017.2" *) 
  design_gol_dlmb_v10_0 dlmb_v10
       (.LMB_ABus({NLW_dlmb_v10_LMB_ABus_UNCONNECTED[0:9],microblaze_0_dlmb_bus_ABUS[10],NLW_dlmb_v10_LMB_ABus_UNCONNECTED[11:17],microblaze_0_dlmb_bus_ABUS[18:29],NLW_dlmb_v10_LMB_ABus_UNCONNECTED[30:31]}),
        .LMB_AddrStrobe(microblaze_0_dlmb_bus_ADDRSTROBE),
        .LMB_BE(microblaze_0_dlmb_bus_BE),
        .LMB_CE(NLW_dlmb_v10_LMB_CE_UNCONNECTED),
        .LMB_Clk(NLW_dlmb_v10_LMB_Clk_UNCONNECTED),
        .LMB_ReadDBus(DLMB_readdbus),
        .LMB_ReadStrobe(NLW_dlmb_v10_LMB_ReadStrobe_UNCONNECTED),
        .LMB_Ready(DLMB_ready),
        .LMB_Rst(NLW_dlmb_v10_LMB_Rst_UNCONNECTED),
        .LMB_UE(NLW_dlmb_v10_LMB_UE_UNCONNECTED),
        .LMB_Wait(NLW_dlmb_v10_LMB_Wait_UNCONNECTED),
        .LMB_WriteDBus(microblaze_0_dlmb_bus_WRITEDBUS),
        .LMB_WriteStrobe(microblaze_0_dlmb_bus_WRITESTROBE),
        .M_ABus({NLW_dlmb_v10_M_ABus_UNCONNECTED[0:9],DLMB_abus[10],NLW_dlmb_v10_M_ABus_UNCONNECTED[11:17],DLMB_abus[18:29],NLW_dlmb_v10_M_ABus_UNCONNECTED[30:31]}),
        .M_AddrStrobe(DLMB_addrstrobe),
        .M_BE(DLMB_be),
        .M_DBus(DLMB_writedbus),
        .M_ReadStrobe(NLW_dlmb_v10_M_ReadStrobe_UNCONNECTED),
        .M_WriteStrobe(DLMB_writestrobe),
        .SYS_Rst(NLW_dlmb_v10_SYS_Rst_UNCONNECTED),
        .Sl_CE(NLW_dlmb_v10_Sl_CE_UNCONNECTED[0]),
        .Sl_DBus(Sl_DBus),
        .Sl_Ready(microblaze_0_dlmb_bus_READY),
        .Sl_UE(NLW_dlmb_v10_Sl_UE_UNCONNECTED[0]),
        .Sl_Wait(NLW_dlmb_v10_Sl_Wait_UNCONNECTED[0]));
  (* CHECK_LICENSE_TYPE = "design_gol_ilmb_bram_if_cntlr_0,lmb_bram_if_cntlr,{}" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* X_CORE_INFO = "lmb_bram_if_cntlr,Vivado 2017.2" *) 
  design_gol_ilmb_bram_if_cntlr_0 ilmb_bram_if_cntlr
       (.BRAM_Addr_A({NLW_ilmb_bram_if_cntlr_BRAM_Addr_A_UNCONNECTED[0:17],microblaze_0_ilmb_cntlr_ADDR[18:29],NLW_ilmb_bram_if_cntlr_BRAM_Addr_A_UNCONNECTED[30:31]}),
        .BRAM_Clk_A(microblaze_0_ilmb_cntlr_CLK),
        .BRAM_Din_A({microblaze_0_ilmb_cntlr_DOUT[31],microblaze_0_ilmb_cntlr_DOUT[30],microblaze_0_ilmb_cntlr_DOUT[29],microblaze_0_ilmb_cntlr_DOUT[28],microblaze_0_ilmb_cntlr_DOUT[27],microblaze_0_ilmb_cntlr_DOUT[26],microblaze_0_ilmb_cntlr_DOUT[25],microblaze_0_ilmb_cntlr_DOUT[24],microblaze_0_ilmb_cntlr_DOUT[23],microblaze_0_ilmb_cntlr_DOUT[22],microblaze_0_ilmb_cntlr_DOUT[21],microblaze_0_ilmb_cntlr_DOUT[20],microblaze_0_ilmb_cntlr_DOUT[19],microblaze_0_ilmb_cntlr_DOUT[18],microblaze_0_ilmb_cntlr_DOUT[17],microblaze_0_ilmb_cntlr_DOUT[16],microblaze_0_ilmb_cntlr_DOUT[15],microblaze_0_ilmb_cntlr_DOUT[14],microblaze_0_ilmb_cntlr_DOUT[13],microblaze_0_ilmb_cntlr_DOUT[12],microblaze_0_ilmb_cntlr_DOUT[11],microblaze_0_ilmb_cntlr_DOUT[10],microblaze_0_ilmb_cntlr_DOUT[9],microblaze_0_ilmb_cntlr_DOUT[8],microblaze_0_ilmb_cntlr_DOUT[7],microblaze_0_ilmb_cntlr_DOUT[6],microblaze_0_ilmb_cntlr_DOUT[5],microblaze_0_ilmb_cntlr_DOUT[4],microblaze_0_ilmb_cntlr_DOUT[3],microblaze_0_ilmb_cntlr_DOUT[2],microblaze_0_ilmb_cntlr_DOUT[1],microblaze_0_ilmb_cntlr_DOUT[0]}),
        .BRAM_Dout_A(microblaze_0_ilmb_cntlr_DIN),
        .BRAM_EN_A(microblaze_0_ilmb_cntlr_EN),
        .BRAM_Rst_A(microblaze_0_ilmb_cntlr_RST),
        .BRAM_WEN_A(microblaze_0_ilmb_cntlr_WE),
        .LMB_ABus({NLW_ilmb_bram_if_cntlr_LMB_ABus_UNCONNECTED[0:17],microblaze_0_ilmb_bus_ABUS[18:29],NLW_ilmb_bram_if_cntlr_LMB_ABus_UNCONNECTED[30:31]}),
        .LMB_AddrStrobe(microblaze_0_ilmb_bus_ADDRSTROBE),
        .LMB_BE({microblaze_0_ilmb_bus_BE[0],NLW_ilmb_bram_if_cntlr_LMB_BE_UNCONNECTED[1:3]}),
        .LMB_Clk(clk_out1),
        .LMB_ReadStrobe(NLW_ilmb_bram_if_cntlr_LMB_ReadStrobe_UNCONNECTED),
        .LMB_Rst(bus_struct_reset),
        .LMB_WriteDBus(microblaze_0_ilmb_bus_WRITEDBUS),
        .LMB_WriteStrobe(NLW_ilmb_bram_if_cntlr_LMB_WriteStrobe_UNCONNECTED),
        .Sl_CE(NLW_ilmb_bram_if_cntlr_Sl_CE_UNCONNECTED),
        .Sl_DBus({ilmb_bram_if_cntlr_n_0,ilmb_bram_if_cntlr_n_1,ilmb_bram_if_cntlr_n_2,ilmb_bram_if_cntlr_n_3,ilmb_bram_if_cntlr_n_4,ilmb_bram_if_cntlr_n_5,ilmb_bram_if_cntlr_n_6,ilmb_bram_if_cntlr_n_7,ilmb_bram_if_cntlr_n_8,ilmb_bram_if_cntlr_n_9,ilmb_bram_if_cntlr_n_10,ilmb_bram_if_cntlr_n_11,ilmb_bram_if_cntlr_n_12,ilmb_bram_if_cntlr_n_13,ilmb_bram_if_cntlr_n_14,ilmb_bram_if_cntlr_n_15,ilmb_bram_if_cntlr_n_16,ilmb_bram_if_cntlr_n_17,ilmb_bram_if_cntlr_n_18,ilmb_bram_if_cntlr_n_19,ilmb_bram_if_cntlr_n_20,ilmb_bram_if_cntlr_n_21,ilmb_bram_if_cntlr_n_22,ilmb_bram_if_cntlr_n_23,ilmb_bram_if_cntlr_n_24,ilmb_bram_if_cntlr_n_25,ilmb_bram_if_cntlr_n_26,ilmb_bram_if_cntlr_n_27,ilmb_bram_if_cntlr_n_28,ilmb_bram_if_cntlr_n_29,ilmb_bram_if_cntlr_n_30,ilmb_bram_if_cntlr_n_31}),
        .Sl_Ready(microblaze_0_ilmb_bus_READY),
        .Sl_UE(NLW_ilmb_bram_if_cntlr_Sl_UE_UNCONNECTED),
        .Sl_Wait(NLW_ilmb_bram_if_cntlr_Sl_Wait_UNCONNECTED));
  (* CHECK_LICENSE_TYPE = "design_gol_ilmb_v10_0,lmb_v10,{}" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* X_CORE_INFO = "lmb_v10,Vivado 2017.2" *) 
  design_gol_ilmb_v10_0 ilmb_v10
       (.LMB_ABus({NLW_ilmb_v10_LMB_ABus_UNCONNECTED[0:17],microblaze_0_ilmb_bus_ABUS[18:29],NLW_ilmb_v10_LMB_ABus_UNCONNECTED[30:31]}),
        .LMB_AddrStrobe(microblaze_0_ilmb_bus_ADDRSTROBE),
        .LMB_BE({microblaze_0_ilmb_bus_BE[0],NLW_ilmb_v10_LMB_BE_UNCONNECTED[1:3]}),
        .LMB_CE(NLW_ilmb_v10_LMB_CE_UNCONNECTED),
        .LMB_Clk(NLW_ilmb_v10_LMB_Clk_UNCONNECTED),
        .LMB_ReadDBus(ILMB_readdbus),
        .LMB_ReadStrobe(NLW_ilmb_v10_LMB_ReadStrobe_UNCONNECTED),
        .LMB_Ready(ILMB_ready),
        .LMB_Rst(NLW_ilmb_v10_LMB_Rst_UNCONNECTED),
        .LMB_UE(NLW_ilmb_v10_LMB_UE_UNCONNECTED),
        .LMB_Wait(NLW_ilmb_v10_LMB_Wait_UNCONNECTED),
        .LMB_WriteDBus(microblaze_0_ilmb_bus_WRITEDBUS),
        .LMB_WriteStrobe(NLW_ilmb_v10_LMB_WriteStrobe_UNCONNECTED),
        .M_ABus({NLW_ilmb_v10_M_ABus_UNCONNECTED[0:17],ILMB_abus[18:29],NLW_ilmb_v10_M_ABus_UNCONNECTED[30:31]}),
        .M_AddrStrobe(ILMB_addrstrobe),
        .M_BE({1'b0,NLW_ilmb_v10_M_BE_UNCONNECTED[1:3]}),
        .M_DBus({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .M_ReadStrobe(NLW_ilmb_v10_M_ReadStrobe_UNCONNECTED),
        .M_WriteStrobe(NLW_ilmb_v10_M_WriteStrobe_UNCONNECTED),
        .SYS_Rst(NLW_ilmb_v10_SYS_Rst_UNCONNECTED),
        .Sl_CE(NLW_ilmb_v10_Sl_CE_UNCONNECTED[0]),
        .Sl_DBus({ilmb_bram_if_cntlr_n_0,ilmb_bram_if_cntlr_n_1,ilmb_bram_if_cntlr_n_2,ilmb_bram_if_cntlr_n_3,ilmb_bram_if_cntlr_n_4,ilmb_bram_if_cntlr_n_5,ilmb_bram_if_cntlr_n_6,ilmb_bram_if_cntlr_n_7,ilmb_bram_if_cntlr_n_8,ilmb_bram_if_cntlr_n_9,ilmb_bram_if_cntlr_n_10,ilmb_bram_if_cntlr_n_11,ilmb_bram_if_cntlr_n_12,ilmb_bram_if_cntlr_n_13,ilmb_bram_if_cntlr_n_14,ilmb_bram_if_cntlr_n_15,ilmb_bram_if_cntlr_n_16,ilmb_bram_if_cntlr_n_17,ilmb_bram_if_cntlr_n_18,ilmb_bram_if_cntlr_n_19,ilmb_bram_if_cntlr_n_20,ilmb_bram_if_cntlr_n_21,ilmb_bram_if_cntlr_n_22,ilmb_bram_if_cntlr_n_23,ilmb_bram_if_cntlr_n_24,ilmb_bram_if_cntlr_n_25,ilmb_bram_if_cntlr_n_26,ilmb_bram_if_cntlr_n_27,ilmb_bram_if_cntlr_n_28,ilmb_bram_if_cntlr_n_29,ilmb_bram_if_cntlr_n_30,ilmb_bram_if_cntlr_n_31}),
        .Sl_Ready(microblaze_0_ilmb_bus_READY),
        .Sl_UE(NLW_ilmb_v10_Sl_UE_UNCONNECTED[0]),
        .Sl_Wait(NLW_ilmb_v10_Sl_Wait_UNCONNECTED[0]));
  (* CHECK_LICENSE_TYPE = "design_gol_lmb_bram_0,blk_mem_gen_v8_3_6,{}" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* X_CORE_INFO = "blk_mem_gen_v8_3_6,Vivado 2017.2" *) 
  design_gol_lmb_bram_0 lmb_bram
       (.addra({NLW_lmb_bram_addra_UNCONNECTED[31:14],microblaze_0_dlmb_cntlr_ADDR[18],microblaze_0_dlmb_cntlr_ADDR[19],microblaze_0_dlmb_cntlr_ADDR[20],microblaze_0_dlmb_cntlr_ADDR[21],microblaze_0_dlmb_cntlr_ADDR[22],microblaze_0_dlmb_cntlr_ADDR[23],microblaze_0_dlmb_cntlr_ADDR[24],microblaze_0_dlmb_cntlr_ADDR[25],microblaze_0_dlmb_cntlr_ADDR[26],microblaze_0_dlmb_cntlr_ADDR[27],microblaze_0_dlmb_cntlr_ADDR[28],microblaze_0_dlmb_cntlr_ADDR[29],NLW_lmb_bram_addra_UNCONNECTED[1:0]}),
        .addrb({NLW_lmb_bram_addrb_UNCONNECTED[31:14],microblaze_0_ilmb_cntlr_ADDR[18],microblaze_0_ilmb_cntlr_ADDR[19],microblaze_0_ilmb_cntlr_ADDR[20],microblaze_0_ilmb_cntlr_ADDR[21],microblaze_0_ilmb_cntlr_ADDR[22],microblaze_0_ilmb_cntlr_ADDR[23],microblaze_0_ilmb_cntlr_ADDR[24],microblaze_0_ilmb_cntlr_ADDR[25],microblaze_0_ilmb_cntlr_ADDR[26],microblaze_0_ilmb_cntlr_ADDR[27],microblaze_0_ilmb_cntlr_ADDR[28],microblaze_0_ilmb_cntlr_ADDR[29],NLW_lmb_bram_addrb_UNCONNECTED[1:0]}),
        .clka(microblaze_0_dlmb_cntlr_CLK),
        .clkb(microblaze_0_ilmb_cntlr_CLK),
        .dina({microblaze_0_dlmb_cntlr_DIN[0],microblaze_0_dlmb_cntlr_DIN[1],microblaze_0_dlmb_cntlr_DIN[2],microblaze_0_dlmb_cntlr_DIN[3],microblaze_0_dlmb_cntlr_DIN[4],microblaze_0_dlmb_cntlr_DIN[5],microblaze_0_dlmb_cntlr_DIN[6],microblaze_0_dlmb_cntlr_DIN[7],microblaze_0_dlmb_cntlr_DIN[8],microblaze_0_dlmb_cntlr_DIN[9],microblaze_0_dlmb_cntlr_DIN[10],microblaze_0_dlmb_cntlr_DIN[11],microblaze_0_dlmb_cntlr_DIN[12],microblaze_0_dlmb_cntlr_DIN[13],microblaze_0_dlmb_cntlr_DIN[14],microblaze_0_dlmb_cntlr_DIN[15],microblaze_0_dlmb_cntlr_DIN[16],microblaze_0_dlmb_cntlr_DIN[17],microblaze_0_dlmb_cntlr_DIN[18],microblaze_0_dlmb_cntlr_DIN[19],microblaze_0_dlmb_cntlr_DIN[20],microblaze_0_dlmb_cntlr_DIN[21],microblaze_0_dlmb_cntlr_DIN[22],microblaze_0_dlmb_cntlr_DIN[23],microblaze_0_dlmb_cntlr_DIN[24],microblaze_0_dlmb_cntlr_DIN[25],microblaze_0_dlmb_cntlr_DIN[26],microblaze_0_dlmb_cntlr_DIN[27],microblaze_0_dlmb_cntlr_DIN[28],microblaze_0_dlmb_cntlr_DIN[29],microblaze_0_dlmb_cntlr_DIN[30],microblaze_0_dlmb_cntlr_DIN[31]}),
        .dinb({microblaze_0_ilmb_cntlr_DIN[0],microblaze_0_ilmb_cntlr_DIN[1],microblaze_0_ilmb_cntlr_DIN[2],microblaze_0_ilmb_cntlr_DIN[3],microblaze_0_ilmb_cntlr_DIN[4],microblaze_0_ilmb_cntlr_DIN[5],microblaze_0_ilmb_cntlr_DIN[6],microblaze_0_ilmb_cntlr_DIN[7],microblaze_0_ilmb_cntlr_DIN[8],microblaze_0_ilmb_cntlr_DIN[9],microblaze_0_ilmb_cntlr_DIN[10],microblaze_0_ilmb_cntlr_DIN[11],microblaze_0_ilmb_cntlr_DIN[12],microblaze_0_ilmb_cntlr_DIN[13],microblaze_0_ilmb_cntlr_DIN[14],microblaze_0_ilmb_cntlr_DIN[15],microblaze_0_ilmb_cntlr_DIN[16],microblaze_0_ilmb_cntlr_DIN[17],microblaze_0_ilmb_cntlr_DIN[18],microblaze_0_ilmb_cntlr_DIN[19],microblaze_0_ilmb_cntlr_DIN[20],microblaze_0_ilmb_cntlr_DIN[21],microblaze_0_ilmb_cntlr_DIN[22],microblaze_0_ilmb_cntlr_DIN[23],microblaze_0_ilmb_cntlr_DIN[24],microblaze_0_ilmb_cntlr_DIN[25],microblaze_0_ilmb_cntlr_DIN[26],microblaze_0_ilmb_cntlr_DIN[27],microblaze_0_ilmb_cntlr_DIN[28],microblaze_0_ilmb_cntlr_DIN[29],microblaze_0_ilmb_cntlr_DIN[30],microblaze_0_ilmb_cntlr_DIN[31]}),
        .douta(microblaze_0_dlmb_cntlr_DOUT),
        .doutb(microblaze_0_ilmb_cntlr_DOUT),
        .ena(microblaze_0_dlmb_cntlr_EN),
        .enb(microblaze_0_ilmb_cntlr_EN),
        .rsta(microblaze_0_dlmb_cntlr_RST),
        .rstb(microblaze_0_ilmb_cntlr_RST),
        .wea({microblaze_0_dlmb_cntlr_WE[0],microblaze_0_dlmb_cntlr_WE[1],microblaze_0_dlmb_cntlr_WE[2],microblaze_0_dlmb_cntlr_WE[3]}),
        .web({microblaze_0_ilmb_cntlr_WE[0],microblaze_0_ilmb_cntlr_WE[1],microblaze_0_ilmb_cntlr_WE[2],microblaze_0_ilmb_cntlr_WE[3]}));
endmodule

(* C_AUX_RESET_HIGH = "1'b0" *) (* C_AUX_RST_WIDTH = "4" *) (* C_EXT_RESET_HIGH = "1'b1" *) 
(* C_EXT_RST_WIDTH = "4" *) (* C_FAMILY = "zynq" *) (* C_NUM_BUS_RST = "1" *) 
(* C_NUM_INTERCONNECT_ARESETN = "1" *) (* C_NUM_PERP_ARESETN = "1" *) (* C_NUM_PERP_RST = "1" *) 
module proc_sys_reset
   (slowest_sync_clk,
    ext_reset_in,
    aux_reset_in,
    mb_debug_sys_rst,
    dcm_locked,
    mb_reset,
    bus_struct_reset,
    peripheral_reset,
    interconnect_aresetn,
    peripheral_aresetn);
  input slowest_sync_clk;
  input ext_reset_in;
  input aux_reset_in;
  input mb_debug_sys_rst;
  input dcm_locked;
  output mb_reset;
  (* equivalent_register_removal = "no" *) output [0:0]bus_struct_reset;
  (* equivalent_register_removal = "no" *) output [0:0]peripheral_reset;
  (* equivalent_register_removal = "no" *) output [0:0]interconnect_aresetn;
  (* equivalent_register_removal = "no" *) output [0:0]peripheral_aresetn;

  wire Core;
  wire SEQ_n_3;
  wire SEQ_n_4;
  wire bsr;
  wire [0:0]bus_struct_reset;
  wire dcm_locked;
  wire ext_reset_in;
  wire [0:0]interconnect_aresetn;
  wire lpf_int;
  wire mb_debug_sys_rst;
  wire mb_reset;
  wire [0:0]peripheral_aresetn;
  wire slowest_sync_clk;
  wire NLW_EXT_LPF_aux_reset_in_UNCONNECTED;
  wire NLW_SEQ_pr_UNCONNECTED;

  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b1)) 
    \ACTIVE_LOW_BSR_OUT_DFF[0].interconnect_aresetn_reg[0] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(SEQ_n_3),
        .Q(interconnect_aresetn),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b1)) 
    \ACTIVE_LOW_PR_OUT_DFF[0].peripheral_aresetn_reg[0] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(SEQ_n_4),
        .Q(peripheral_aresetn),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \BSR_OUT_DFF[0].bus_struct_reset_reg[0] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(bsr),
        .Q(bus_struct_reset),
        .R(1'b0));
  lpf EXT_LPF
       (.aux_reset_in(NLW_EXT_LPF_aux_reset_in_UNCONNECTED),
        .dcm_locked(dcm_locked),
        .ext_reset_in(ext_reset_in),
        .lpf_int(lpf_int),
        .mb_debug_sys_rst(mb_debug_sys_rst),
        .slowest_sync_clk(slowest_sync_clk));
  sequence_psr SEQ
       (.\ACTIVE_LOW_BSR_OUT_DFF[0].interconnect_aresetn_reg[0] (SEQ_n_3),
        .\ACTIVE_LOW_PR_OUT_DFF[0].peripheral_aresetn_reg[0] (SEQ_n_4),
        .Core(Core),
        .bsr(bsr),
        .lpf_int(lpf_int),
        .pr(NLW_SEQ_pr_UNCONNECTED),
        .slowest_sync_clk(slowest_sync_clk));
  FDRE #(
    .INIT(1'b0)) 
    mb_reset_reg
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(Core),
        .Q(mb_reset),
        .R(1'b0));
endmodule

module pselect_f
   (ce_expnd_i_3,
    \bus2ip_addr_i_reg[2] ,
    start2,
    \bus2ip_addr_i_reg[3] );
  output ce_expnd_i_3;
  input \bus2ip_addr_i_reg[2] ;
  input start2;
  input \bus2ip_addr_i_reg[3] ;

  wire \bus2ip_addr_i_reg[2] ;
  wire \bus2ip_addr_i_reg[3] ;
  wire ce_expnd_i_3;
  wire start2;

  LUT3 #(
    .INIT(8'h04)) 
    CS
       (.I0(\bus2ip_addr_i_reg[2] ),
        .I1(start2),
        .I2(\bus2ip_addr_i_reg[3] ),
        .O(ce_expnd_i_3));
endmodule

(* ORIG_REF_NAME = "pselect_f" *) 
module pselect_f__parameterized1
   (ce_expnd_i_1,
    \bus2ip_addr_i_reg[3] ,
    start2,
    \bus2ip_addr_i_reg[2] );
  output ce_expnd_i_1;
  input \bus2ip_addr_i_reg[3] ;
  input start2;
  input \bus2ip_addr_i_reg[2] ;

  wire \bus2ip_addr_i_reg[2] ;
  wire \bus2ip_addr_i_reg[3] ;
  wire ce_expnd_i_1;
  wire start2;

  LUT3 #(
    .INIT(8'h08)) 
    CS
       (.I0(\bus2ip_addr_i_reg[3] ),
        .I1(start2),
        .I2(\bus2ip_addr_i_reg[2] ),
        .O(ce_expnd_i_1));
endmodule

module sequence_psr
   (Core,
    bsr,
    pr,
    \ACTIVE_LOW_BSR_OUT_DFF[0].interconnect_aresetn_reg[0] ,
    \ACTIVE_LOW_PR_OUT_DFF[0].peripheral_aresetn_reg[0] ,
    lpf_int,
    slowest_sync_clk);
  output Core;
  output bsr;
  output pr;
  output \ACTIVE_LOW_BSR_OUT_DFF[0].interconnect_aresetn_reg[0] ;
  output \ACTIVE_LOW_PR_OUT_DFF[0].peripheral_aresetn_reg[0] ;
  input lpf_int;
  input slowest_sync_clk;

  wire \ACTIVE_LOW_BSR_OUT_DFF[0].interconnect_aresetn_reg[0] ;
  wire \ACTIVE_LOW_PR_OUT_DFF[0].peripheral_aresetn_reg[0] ;
  wire Core;
  wire Core_i_1_n_0;
  wire bsr;
  wire \bsr_dec_reg_n_0_[0] ;
  wire \bsr_dec_reg_n_0_[2] ;
  wire bsr_i_1_n_0;
  wire \core_dec[0]_i_1_n_0 ;
  wire \core_dec[2]_i_1_n_0 ;
  wire \core_dec_reg_n_0_[0] ;
  wire \core_dec_reg_n_0_[1] ;
  wire from_sys_i_1_n_0;
  wire lpf_int;
  wire p_0_in;
  wire [2:0]p_3_out;
  wire [2:0]p_5_out;
  wire \^pr ;
  wire pr_dec0__0;
  wire \pr_dec_reg_n_0_[0] ;
  wire \pr_dec_reg_n_0_[2] ;
  wire pr_i_1_n_0;
  wire seq_clr;
  wire [5:0]seq_cnt;
  wire seq_cnt_en;
  wire slowest_sync_clk;

  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \ACTIVE_LOW_BSR_OUT_DFF[0].interconnect_aresetn[0]_i_1 
       (.I0(bsr),
        .O(\ACTIVE_LOW_BSR_OUT_DFF[0].interconnect_aresetn_reg[0] ));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \ACTIVE_LOW_PR_OUT_DFF[0].peripheral_aresetn[0]_i_1 
       (.I0(\^pr ),
        .O(\ACTIVE_LOW_PR_OUT_DFF[0].peripheral_aresetn_reg[0] ));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT2 #(
    .INIT(4'h2)) 
    Core_i_1
       (.I0(Core),
        .I1(p_0_in),
        .O(Core_i_1_n_0));
  FDSE #(
    .INIT(1'b0)) 
    Core_reg
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(Core_i_1_n_0),
        .Q(Core),
        .S(lpf_int));
  upcnt_n SEQ_COUNTER
       (.Q(seq_cnt),
        .seq_clr(seq_clr),
        .seq_cnt_en(seq_cnt_en),
        .slowest_sync_clk(slowest_sync_clk));
  LUT4 #(
    .INIT(16'h0804)) 
    \bsr_dec[0]_i_1 
       (.I0(seq_cnt_en),
        .I1(seq_cnt[3]),
        .I2(seq_cnt[5]),
        .I3(seq_cnt[4]),
        .O(p_5_out[0]));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \bsr_dec[2]_i_1 
       (.I0(\core_dec_reg_n_0_[1] ),
        .I1(\bsr_dec_reg_n_0_[0] ),
        .O(p_5_out[2]));
  FDRE #(
    .INIT(1'b0)) 
    \bsr_dec_reg[0] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(p_5_out[0]),
        .Q(\bsr_dec_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \bsr_dec_reg[2] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(p_5_out[2]),
        .Q(\bsr_dec_reg_n_0_[2] ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT2 #(
    .INIT(4'h2)) 
    bsr_i_1
       (.I0(bsr),
        .I1(\bsr_dec_reg_n_0_[2] ),
        .O(bsr_i_1_n_0));
  FDSE #(
    .INIT(1'b0)) 
    bsr_reg
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(bsr_i_1_n_0),
        .Q(bsr),
        .S(lpf_int));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT4 #(
    .INIT(16'h8040)) 
    \core_dec[0]_i_1 
       (.I0(seq_cnt[4]),
        .I1(seq_cnt[3]),
        .I2(seq_cnt[5]),
        .I3(seq_cnt_en),
        .O(\core_dec[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \core_dec[2]_i_1 
       (.I0(\core_dec_reg_n_0_[1] ),
        .I1(\core_dec_reg_n_0_[0] ),
        .O(\core_dec[2]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \core_dec_reg[0] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(\core_dec[0]_i_1_n_0 ),
        .Q(\core_dec_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \core_dec_reg[1] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(pr_dec0__0),
        .Q(\core_dec_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \core_dec_reg[2] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(\core_dec[2]_i_1_n_0 ),
        .Q(p_0_in),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT2 #(
    .INIT(4'h8)) 
    from_sys_i_1
       (.I0(Core),
        .I1(seq_cnt_en),
        .O(from_sys_i_1_n_0));
  FDSE #(
    .INIT(1'b0)) 
    from_sys_reg
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(from_sys_i_1_n_0),
        .Q(seq_cnt_en),
        .S(lpf_int));
  LUT4 #(
    .INIT(16'h0210)) 
    pr_dec0
       (.I0(seq_cnt[0]),
        .I1(seq_cnt[1]),
        .I2(seq_cnt[2]),
        .I3(seq_cnt_en),
        .O(pr_dec0__0));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT4 #(
    .INIT(16'h1080)) 
    \pr_dec[0]_i_1 
       (.I0(seq_cnt_en),
        .I1(seq_cnt[5]),
        .I2(seq_cnt[3]),
        .I3(seq_cnt[4]),
        .O(p_3_out[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \pr_dec[2]_i_1 
       (.I0(\core_dec_reg_n_0_[1] ),
        .I1(\pr_dec_reg_n_0_[0] ),
        .O(p_3_out[2]));
  FDRE #(
    .INIT(1'b0)) 
    \pr_dec_reg[0] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(p_3_out[0]),
        .Q(\pr_dec_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \pr_dec_reg[2] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(p_3_out[2]),
        .Q(\pr_dec_reg_n_0_[2] ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT2 #(
    .INIT(4'h2)) 
    pr_i_1
       (.I0(\^pr ),
        .I1(\pr_dec_reg_n_0_[2] ),
        .O(pr_i_1_n_0));
  FDSE #(
    .INIT(1'b0)) 
    pr_reg
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(pr_i_1_n_0),
        .Q(\^pr ),
        .S(lpf_int));
  FDRE #(
    .INIT(1'b0)) 
    seq_clr_reg
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(1'b1),
        .Q(seq_clr),
        .R(lpf_int));
endmodule

module slave_attachment
   (tx_Buffer_Empty_Pre_reg,
    \s_axi_rresp_i_reg[1]_0 ,
    s_axi_rresp,
    enable_interrupts_reg,
    s_axi_rvalid_i_reg_0,
    s_axi_bvalid_i_reg_0,
    s_axi_bresp,
    fifo_wr,
    \INFERRED_GEN.cnt_i_reg[2] ,
    s_axi_awready,
    \INFERRED_GEN.cnt_i_reg[2]_0 ,
    s_axi_arready,
    FIFO_Full_reg,
    reset_TX_FIFO,
    reset_RX_FIFO,
    bus2ip_rdce,
    enable_interrupts_reg_0,
    tx_Buffer_Empty_Pre_reg_0,
    rx_Data_Present_Pre_reg,
    s_axi_rdata,
    bus2ip_reset,
    s_axi_aclk,
    tx_Buffer_Full,
    Q,
    s_axi_arvalid,
    out,
    rx_Buffer_Full,
    \INFERRED_GEN.cnt_i_reg[4] ,
    enable_interrupts,
    status_reg,
    s_axi_wdata,
    s_axi_aresetn,
    s_axi_bready,
    s_axi_rready,
    s_axi_awvalid,
    s_axi_wvalid,
    s_axi_awaddr,
    s_axi_araddr);
  output tx_Buffer_Empty_Pre_reg;
  output \s_axi_rresp_i_reg[1]_0 ;
  output [0:0]s_axi_rresp;
  output enable_interrupts_reg;
  output s_axi_rvalid_i_reg_0;
  output s_axi_bvalid_i_reg_0;
  output [0:0]s_axi_bresp;
  output fifo_wr;
  output \INFERRED_GEN.cnt_i_reg[2] ;
  output s_axi_awready;
  output \INFERRED_GEN.cnt_i_reg[2]_0 ;
  output s_axi_arready;
  output FIFO_Full_reg;
  output reset_TX_FIFO;
  output reset_RX_FIFO;
  output [0:0]bus2ip_rdce;
  output enable_interrupts_reg_0;
  output tx_Buffer_Empty_Pre_reg_0;
  output rx_Data_Present_Pre_reg;
  output [7:0]s_axi_rdata;
  input bus2ip_reset;
  input s_axi_aclk;
  input tx_Buffer_Full;
  input [0:0]Q;
  input s_axi_arvalid;
  input [7:0]out;
  input rx_Buffer_Full;
  input [0:0]\INFERRED_GEN.cnt_i_reg[4] ;
  input enable_interrupts;
  input [1:0]status_reg;
  input [2:0]s_axi_wdata;
  input s_axi_aresetn;
  input s_axi_bready;
  input s_axi_rready;
  input s_axi_awvalid;
  input s_axi_wvalid;
  input [1:0]s_axi_awaddr;
  input [1:0]s_axi_araddr;

  wire FIFO_Full_reg;
  wire \INFERRED_GEN.cnt_i_reg[2] ;
  wire \INFERRED_GEN.cnt_i_reg[2]_0 ;
  wire [0:0]\INFERRED_GEN.cnt_i_reg[4] ;
  wire I_DECODER_n_25;
  wire I_DECODER_n_26;
  wire I_DECODER_n_6;
  wire I_DECODER_n_7;
  wire [0:0]Q;
  wire [0:7]SIn_DBus;
  wire \bus2ip_addr_i[2]_i_1_n_0 ;
  wire \bus2ip_addr_i[3]_i_1_n_0 ;
  wire \bus2ip_addr_i_reg_n_0_[2] ;
  wire \bus2ip_addr_i_reg_n_0_[3] ;
  wire [0:0]bus2ip_rdce;
  wire bus2ip_reset;
  wire bus2ip_rnw_i;
  wire bus2ip_rnw_i_i_1_n_0;
  wire enable_interrupts;
  wire enable_interrupts_reg;
  wire enable_interrupts_reg_0;
  wire fifo_wr;
  wire [7:0]out;
  wire reset_RX_FIFO;
  wire reset_TX_FIFO;
  wire rst;
  wire rx_Buffer_Full;
  wire s_axi_aclk;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire [1:0]s_axi_awaddr;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid_i_reg_0;
  wire [7:0]s_axi_rdata;
  wire s_axi_rdata_i;
  wire s_axi_rready;
  wire \s_axi_rresp_i_reg[1]_0 ;
  wire s_axi_rvalid_i_reg_0;
  wire [2:0]s_axi_wdata;
  wire s_axi_wvalid;
  wire start2;
  wire start2_i_1_n_0;
  wire [1:0]state;
  wire \state[0]_i_2_n_0 ;
  wire \state[1]_i_2_n_0 ;
  wire \state[1]_i_3_n_0 ;
  wire [1:0]status_reg;
  wire tx_Buffer_Empty_Pre_reg;
  wire tx_Buffer_Full;
  wire NLW_I_DECODER_ip2bus_error_UNCONNECTED;
  wire NLW_I_DECODER_rx_Data_Present_Pre_reg_UNCONNECTED;
  wire \NLW_I_DECODER_s_axi_bresp_i_reg[1]_UNCONNECTED ;
  wire NLW_I_DECODER_tx_Buffer_Empty_Pre_reg_0_UNCONNECTED;
  wire [0:0]NLW_I_DECODER_s_axi_bresp_UNCONNECTED;

  address_decoder I_DECODER
       (.D({I_DECODER_n_6,I_DECODER_n_7}),
        .FIFO_Full_reg(FIFO_Full_reg),
        .\INFERRED_GEN.cnt_i_reg[2] (\INFERRED_GEN.cnt_i_reg[2] ),
        .\INFERRED_GEN.cnt_i_reg[2]_0 (\INFERRED_GEN.cnt_i_reg[2]_0 ),
        .\INFERRED_GEN.cnt_i_reg[4] (\INFERRED_GEN.cnt_i_reg[4] ),
        .Q(Q),
        .\bus2ip_addr_i_reg[2] (\bus2ip_addr_i_reg_n_0_[2] ),
        .\bus2ip_addr_i_reg[3] (\bus2ip_addr_i_reg_n_0_[3] ),
        .bus2ip_rdce(bus2ip_rdce),
        .bus2ip_rnw_i(bus2ip_rnw_i),
        .enable_interrupts(enable_interrupts),
        .enable_interrupts_reg(enable_interrupts_reg),
        .enable_interrupts_reg_0(enable_interrupts_reg_0),
        .fifo_wr(fifo_wr),
        .ip2bus_error(NLW_I_DECODER_ip2bus_error_UNCONNECTED),
        .\m_atarget_hot_reg[0] (\state[1]_i_3_n_0 ),
        .out(out),
        .reset_RX_FIFO(reset_RX_FIFO),
        .reset_TX_FIFO(reset_TX_FIFO),
        .rx_Buffer_Full(rx_Buffer_Full),
        .rx_Data_Present_Pre_reg(NLW_I_DECODER_rx_Data_Present_Pre_reg_UNCONNECTED),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awready(s_axi_awready),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(NLW_I_DECODER_s_axi_bresp_UNCONNECTED[0]),
        .\s_axi_bresp_i_reg[1] (\NLW_I_DECODER_s_axi_bresp_i_reg[1]_UNCONNECTED ),
        .s_axi_bvalid_i_reg(I_DECODER_n_26),
        .s_axi_bvalid_i_reg_0(\state[1]_i_2_n_0 ),
        .s_axi_bvalid_i_reg_1(s_axi_bvalid_i_reg_0),
        .\s_axi_rdata_i_reg[7] ({SIn_DBus[0],SIn_DBus[1],SIn_DBus[2],SIn_DBus[3],SIn_DBus[4],SIn_DBus[5],SIn_DBus[6],SIn_DBus[7]}),
        .s_axi_rready(s_axi_rready),
        .\s_axi_rresp_i_reg[1] (\s_axi_rresp_i_reg[1]_0 ),
        .s_axi_rvalid_i_reg(I_DECODER_n_25),
        .s_axi_rvalid_i_reg_0(s_axi_rvalid_i_reg_0),
        .s_axi_wdata(s_axi_wdata),
        .start2(start2),
        .\state_reg[0] (\state[0]_i_2_n_0 ),
        .\state_reg[1] (state),
        .status_reg(status_reg),
        .tx_Buffer_Empty_Pre_reg(tx_Buffer_Empty_Pre_reg),
        .tx_Buffer_Empty_Pre_reg_0(NLW_I_DECODER_tx_Buffer_Empty_Pre_reg_0_UNCONNECTED),
        .tx_Buffer_Full(tx_Buffer_Full));
  LUT3 #(
    .INIT(8'hB8)) 
    \bus2ip_addr_i[2]_i_1 
       (.I0(s_axi_awaddr[0]),
        .I1(start2_i_1_n_0),
        .I2(\bus2ip_addr_i_reg_n_0_[2] ),
        .O(\bus2ip_addr_i[2]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \bus2ip_addr_i[3]_i_1 
       (.I0(s_axi_awaddr[1]),
        .I1(start2_i_1_n_0),
        .I2(\bus2ip_addr_i_reg_n_0_[3] ),
        .O(\bus2ip_addr_i[3]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \bus2ip_addr_i_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\bus2ip_addr_i[2]_i_1_n_0 ),
        .Q(\bus2ip_addr_i_reg_n_0_[2] ),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \bus2ip_addr_i_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\bus2ip_addr_i[3]_i_1_n_0 ),
        .Q(\bus2ip_addr_i_reg_n_0_[3] ),
        .R(rst));
  LUT6 #(
    .INIT(64'hFFFFFFF7000000F0)) 
    bus2ip_rnw_i_i_1
       (.I0(s_axi_awvalid),
        .I1(s_axi_wvalid),
        .I2(s_axi_arvalid),
        .I3(state[0]),
        .I4(state[1]),
        .I5(bus2ip_rnw_i),
        .O(bus2ip_rnw_i_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    bus2ip_rnw_i_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(bus2ip_rnw_i_i_1_n_0),
        .Q(bus2ip_rnw_i),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    rst_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(bus2ip_reset),
        .Q(rst),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    s_axi_bvalid_i_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(I_DECODER_n_26),
        .Q(s_axi_bvalid_i_reg_0),
        .R(rst));
  LUT2 #(
    .INIT(4'h2)) 
    \s_axi_rdata_i[7]_i_1 
       (.I0(state[0]),
        .I1(state[1]),
        .O(s_axi_rdata_i));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[0] 
       (.C(s_axi_aclk),
        .CE(s_axi_rdata_i),
        .D(SIn_DBus[7]),
        .Q(s_axi_rdata[0]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[1] 
       (.C(s_axi_aclk),
        .CE(s_axi_rdata_i),
        .D(SIn_DBus[6]),
        .Q(s_axi_rdata[1]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[2] 
       (.C(s_axi_aclk),
        .CE(s_axi_rdata_i),
        .D(SIn_DBus[5]),
        .Q(s_axi_rdata[2]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[3] 
       (.C(s_axi_aclk),
        .CE(s_axi_rdata_i),
        .D(SIn_DBus[4]),
        .Q(s_axi_rdata[3]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[4] 
       (.C(s_axi_aclk),
        .CE(s_axi_rdata_i),
        .D(SIn_DBus[3]),
        .Q(s_axi_rdata[4]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[5] 
       (.C(s_axi_aclk),
        .CE(s_axi_rdata_i),
        .D(SIn_DBus[2]),
        .Q(s_axi_rdata[5]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[6] 
       (.C(s_axi_aclk),
        .CE(s_axi_rdata_i),
        .D(SIn_DBus[1]),
        .Q(s_axi_rdata[6]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[7] 
       (.C(s_axi_aclk),
        .CE(s_axi_rdata_i),
        .D(SIn_DBus[0]),
        .Q(s_axi_rdata[7]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    s_axi_rvalid_i_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(I_DECODER_n_25),
        .Q(s_axi_rvalid_i_reg_0),
        .R(rst));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT5 #(
    .INIT(32'h000000F8)) 
    start2_i_1
       (.I0(s_axi_awvalid),
        .I1(s_axi_wvalid),
        .I2(s_axi_arvalid),
        .I3(state[0]),
        .I4(state[1]),
        .O(start2_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    start2_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(start2_i_1_n_0),
        .Q(start2),
        .R(rst));
  LUT5 #(
    .INIT(32'h002A2A2A)) 
    \state[0]_i_2 
       (.I0(state[0]),
        .I1(s_axi_rvalid_i_reg_0),
        .I2(s_axi_rready),
        .I3(s_axi_bready),
        .I4(s_axi_bvalid_i_reg_0),
        .O(\state[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0777FFFF00000000)) 
    \state[1]_i_2 
       (.I0(s_axi_bvalid_i_reg_0),
        .I1(s_axi_bready),
        .I2(s_axi_rready),
        .I3(s_axi_rvalid_i_reg_0),
        .I4(state[0]),
        .I5(state[1]),
        .O(\state[1]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \state[1]_i_3 
       (.I0(s_axi_awvalid),
        .I1(s_axi_wvalid),
        .O(\state[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \state_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(I_DECODER_n_7),
        .Q(state[0]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \state_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(I_DECODER_n_6),
        .Q(state[1]),
        .R(rst));
endmodule

module srl_fifo_f
   (tx_Buffer_Full,
    mux_Out,
    Q,
    tx_Start0,
    Interrupt0,
    s_axi_aclk,
    \mux_sel_reg[1] ,
    \mux_sel_reg[0] ,
    p_4_in,
    \mux_sel_reg[2] ,
    fifo_Read,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] ,
    Bus_RNW_reg,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ,
    tx_Start,
    tx_DataBits,
    tx_Data_Enable_reg,
    tx_Buffer_Empty_Pre,
    enable_interrupts,
    rx_Data_Present_Pre,
    \INFERRED_GEN.cnt_i_reg[4] ,
    reset_TX_FIFO_reg,
    s_axi_aresetn,
    fifo_wr,
    s_axi_wdata);
  output tx_Buffer_Full;
  output mux_Out;
  output [0:0]Q;
  output tx_Start0;
  output Interrupt0;
  input s_axi_aclk;
  input \mux_sel_reg[1] ;
  input \mux_sel_reg[0] ;
  input p_4_in;
  input \mux_sel_reg[2] ;
  input fifo_Read;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] ;
  input Bus_RNW_reg;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  input tx_Start;
  input tx_DataBits;
  input tx_Data_Enable_reg;
  input tx_Buffer_Empty_Pre;
  input enable_interrupts;
  input rx_Data_Present_Pre;
  input [0:0]\INFERRED_GEN.cnt_i_reg[4] ;
  input reset_TX_FIFO_reg;
  input s_axi_aresetn;
  input fifo_wr;
  input [7:0]s_axi_wdata;

  wire Bus_RNW_reg;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] ;
  wire [0:0]Q;
  wire fifo_Read;
  wire fifo_wr;
  wire mux_Out;
  wire \mux_sel_reg[0] ;
  wire \mux_sel_reg[1] ;
  wire \mux_sel_reg[2] ;
  wire p_4_in;
  wire reset_TX_FIFO_reg;
  wire s_axi_aclk;
  wire s_axi_aresetn;
  wire [7:0]s_axi_wdata;
  wire tx_Buffer_Full;
  wire tx_DataBits;
  wire tx_Data_Enable_reg;
  wire tx_Start;
  wire tx_Start0;
  wire NLW_I_SRL_FIFO_RBU_F_Interrupt0_UNCONNECTED;
  wire NLW_I_SRL_FIFO_RBU_F_enable_interrupts_UNCONNECTED;
  wire NLW_I_SRL_FIFO_RBU_F_rx_Data_Present_Pre_UNCONNECTED;
  wire NLW_I_SRL_FIFO_RBU_F_tx_Buffer_Empty_Pre_UNCONNECTED;
  wire [0:0]\NLW_I_SRL_FIFO_RBU_F_INFERRED_GEN.cnt_i_reg[4]_UNCONNECTED ;

  srl_fifo_rbu_f I_SRL_FIFO_RBU_F
       (.Bus_RNW_reg(Bus_RNW_reg),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] ),
        .\INFERRED_GEN.cnt_i_reg[4] (\NLW_I_SRL_FIFO_RBU_F_INFERRED_GEN.cnt_i_reg[4]_UNCONNECTED [0]),
        .Interrupt0(NLW_I_SRL_FIFO_RBU_F_Interrupt0_UNCONNECTED),
        .Q(Q),
        .enable_interrupts(NLW_I_SRL_FIFO_RBU_F_enable_interrupts_UNCONNECTED),
        .fifo_Read(fifo_Read),
        .fifo_wr(fifo_wr),
        .mux_Out(mux_Out),
        .\mux_sel_reg[0] (\mux_sel_reg[0] ),
        .\mux_sel_reg[1] (\mux_sel_reg[1] ),
        .\mux_sel_reg[2] (\mux_sel_reg[2] ),
        .p_4_in(p_4_in),
        .reset_TX_FIFO_reg(reset_TX_FIFO_reg),
        .rx_Data_Present_Pre(NLW_I_SRL_FIFO_RBU_F_rx_Data_Present_Pre_UNCONNECTED),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_wdata(s_axi_wdata),
        .tx_Buffer_Empty_Pre(NLW_I_SRL_FIFO_RBU_F_tx_Buffer_Empty_Pre_UNCONNECTED),
        .tx_Buffer_Full(tx_Buffer_Full),
        .tx_DataBits(tx_DataBits),
        .tx_Data_Enable_reg(tx_Data_Enable_reg),
        .tx_Start(tx_Start),
        .tx_Start0(tx_Start0));
endmodule

(* ORIG_REF_NAME = "srl_fifo_f" *) 
module srl_fifo_f_800
   (\status_reg_reg[2] ,
    Q,
    \status_reg_reg[2]_0 ,
    out,
    s_axi_aclk,
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] ,
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ,
    Bus_RNW_reg,
    Bus_RNW_reg_reg,
    valid_rx,
    fifo_Write,
    status_reg,
    s_axi_aresetn,
    clr_Status,
    reset_RX_FIFO_reg,
    in);
  output \status_reg_reg[2] ;
  output [0:0]Q;
  output \status_reg_reg[2]_0 ;
  output [7:0]out;
  input s_axi_aclk;
  input \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] ;
  input \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  input Bus_RNW_reg;
  input Bus_RNW_reg_reg;
  input valid_rx;
  input fifo_Write;
  input [0:0]status_reg;
  input s_axi_aresetn;
  input clr_Status;
  input reset_RX_FIFO_reg;
  input [0:7]in;

  wire Bus_RNW_reg;
  wire Bus_RNW_reg_reg;
  wire \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] ;
  wire [0:0]Q;
  wire clr_Status;
  wire fifo_Write;
  wire [0:7]in;
  wire [7:0]out;
  wire reset_RX_FIFO_reg;
  wire s_axi_aclk;
  wire s_axi_aresetn;
  wire [0:0]status_reg;
  wire \status_reg_reg[2] ;
  wire \status_reg_reg[2]_0 ;
  wire valid_rx;

  srl_fifo_rbu_f_801 I_SRL_FIFO_RBU_F
       (.Bus_RNW_reg(Bus_RNW_reg),
        .Bus_RNW_reg_reg(Bus_RNW_reg_reg),
        .\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg (\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] (\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] ),
        .Q(Q),
        .clr_Status(clr_Status),
        .fifo_Write(fifo_Write),
        .in(in),
        .out(out),
        .reset_RX_FIFO_reg(reset_RX_FIFO_reg),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_aresetn(s_axi_aresetn),
        .status_reg(status_reg),
        .\status_reg_reg[2] (\status_reg_reg[2] ),
        .\status_reg_reg[2]_0 (\status_reg_reg[2]_0 ),
        .valid_rx(valid_rx));
endmodule

module srl_fifo_rbu_f
   (tx_Buffer_Full,
    mux_Out,
    Q,
    tx_Start0,
    Interrupt0,
    s_axi_aclk,
    \mux_sel_reg[1] ,
    \mux_sel_reg[0] ,
    p_4_in,
    \mux_sel_reg[2] ,
    fifo_Read,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] ,
    Bus_RNW_reg,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ,
    tx_Start,
    tx_DataBits,
    tx_Data_Enable_reg,
    tx_Buffer_Empty_Pre,
    enable_interrupts,
    rx_Data_Present_Pre,
    \INFERRED_GEN.cnt_i_reg[4] ,
    reset_TX_FIFO_reg,
    s_axi_aresetn,
    fifo_wr,
    s_axi_wdata);
  output tx_Buffer_Full;
  output mux_Out;
  output [0:0]Q;
  output tx_Start0;
  output Interrupt0;
  input s_axi_aclk;
  input \mux_sel_reg[1] ;
  input \mux_sel_reg[0] ;
  input p_4_in;
  input \mux_sel_reg[2] ;
  input fifo_Read;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] ;
  input Bus_RNW_reg;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  input tx_Start;
  input tx_DataBits;
  input tx_Data_Enable_reg;
  input tx_Buffer_Empty_Pre;
  input enable_interrupts;
  input rx_Data_Present_Pre;
  input [0:0]\INFERRED_GEN.cnt_i_reg[4] ;
  input reset_TX_FIFO_reg;
  input s_axi_aresetn;
  input fifo_wr;
  input [7:0]s_axi_wdata;

  wire Bus_RNW_reg;
  wire CNTR_INCR_DECR_ADDN_F_I_n_1;
  wire CNTR_INCR_DECR_ADDN_F_I_n_2;
  wire CNTR_INCR_DECR_ADDN_F_I_n_3;
  wire CNTR_INCR_DECR_ADDN_F_I_n_4;
  wire CNTR_INCR_DECR_ADDN_F_I_n_8;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] ;
  wire [0:0]Q;
  wire fifo_Read;
  wire fifo_full_p1;
  wire fifo_wr;
  wire mux_Out;
  wire \mux_sel_reg[0] ;
  wire \mux_sel_reg[1] ;
  wire \mux_sel_reg[2] ;
  wire p_4_in;
  wire reset_TX_FIFO_reg;
  wire s_axi_aclk;
  wire s_axi_aresetn;
  wire [7:0]s_axi_wdata;
  wire tx_Buffer_Full;
  wire tx_DataBits;
  wire tx_Data_Enable_reg;
  wire tx_Start;
  wire tx_Start0;
  wire NLW_CNTR_INCR_DECR_ADDN_F_I_Interrupt0_UNCONNECTED;
  wire NLW_CNTR_INCR_DECR_ADDN_F_I_enable_interrupts_UNCONNECTED;
  wire NLW_CNTR_INCR_DECR_ADDN_F_I_rx_Data_Present_Pre_UNCONNECTED;
  wire NLW_CNTR_INCR_DECR_ADDN_F_I_tx_Buffer_Empty_Pre_UNCONNECTED;
  wire [0:0]\NLW_CNTR_INCR_DECR_ADDN_F_I_INFERRED_GEN.cnt_i_reg[4]_0_UNCONNECTED ;

  cntr_incr_decr_addn_f CNTR_INCR_DECR_ADDN_F_I
       (.Bus_RNW_reg(Bus_RNW_reg),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] ),
        .\INFERRED_GEN.cnt_i_reg[4]_0 (\NLW_CNTR_INCR_DECR_ADDN_F_I_INFERRED_GEN.cnt_i_reg[4]_0_UNCONNECTED [0]),
        .Interrupt0(NLW_CNTR_INCR_DECR_ADDN_F_I_Interrupt0_UNCONNECTED),
        .Q({Q,CNTR_INCR_DECR_ADDN_F_I_n_1,CNTR_INCR_DECR_ADDN_F_I_n_2,CNTR_INCR_DECR_ADDN_F_I_n_3,CNTR_INCR_DECR_ADDN_F_I_n_4}),
        .SS(CNTR_INCR_DECR_ADDN_F_I_n_8),
        .enable_interrupts(NLW_CNTR_INCR_DECR_ADDN_F_I_enable_interrupts_UNCONNECTED),
        .fifo_Read(fifo_Read),
        .fifo_full_p1(fifo_full_p1),
        .reset_TX_FIFO_reg(reset_TX_FIFO_reg),
        .rx_Data_Present_Pre(NLW_CNTR_INCR_DECR_ADDN_F_I_rx_Data_Present_Pre_UNCONNECTED),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_aresetn(s_axi_aresetn),
        .tx_Buffer_Empty_Pre(NLW_CNTR_INCR_DECR_ADDN_F_I_tx_Buffer_Empty_Pre_UNCONNECTED),
        .tx_Buffer_Full(tx_Buffer_Full),
        .tx_DataBits(tx_DataBits),
        .tx_Data_Enable_reg(tx_Data_Enable_reg),
        .tx_Start(tx_Start),
        .tx_Start0(tx_Start0));
  dynshreg_f DYNSHREG_F_I
       (.Q({CNTR_INCR_DECR_ADDN_F_I_n_1,CNTR_INCR_DECR_ADDN_F_I_n_2,CNTR_INCR_DECR_ADDN_F_I_n_3,CNTR_INCR_DECR_ADDN_F_I_n_4}),
        .fifo_wr(fifo_wr),
        .mux_Out(mux_Out),
        .\mux_sel_reg[0] (\mux_sel_reg[0] ),
        .\mux_sel_reg[1] (\mux_sel_reg[1] ),
        .\mux_sel_reg[2] (\mux_sel_reg[2] ),
        .p_4_in(p_4_in),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_wdata(s_axi_wdata));
  FDRE #(
    .INIT(1'b0)) 
    FIFO_Full_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(fifo_full_p1),
        .Q(tx_Buffer_Full),
        .R(CNTR_INCR_DECR_ADDN_F_I_n_8));
endmodule

(* ORIG_REF_NAME = "srl_fifo_rbu_f" *) 
module srl_fifo_rbu_f_801
   (\status_reg_reg[2] ,
    Q,
    \status_reg_reg[2]_0 ,
    out,
    s_axi_aclk,
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] ,
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ,
    Bus_RNW_reg,
    Bus_RNW_reg_reg,
    valid_rx,
    fifo_Write,
    status_reg,
    s_axi_aresetn,
    clr_Status,
    reset_RX_FIFO_reg,
    in);
  output \status_reg_reg[2] ;
  output [0:0]Q;
  output \status_reg_reg[2]_0 ;
  output [7:0]out;
  input s_axi_aclk;
  input \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] ;
  input \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  input Bus_RNW_reg;
  input Bus_RNW_reg_reg;
  input valid_rx;
  input fifo_Write;
  input [0:0]status_reg;
  input s_axi_aresetn;
  input clr_Status;
  input reset_RX_FIFO_reg;
  input [0:7]in;

  wire Bus_RNW_reg;
  wire Bus_RNW_reg_reg;
  wire CNTR_INCR_DECR_ADDN_F_I_n_2;
  wire CNTR_INCR_DECR_ADDN_F_I_n_3;
  wire CNTR_INCR_DECR_ADDN_F_I_n_4;
  wire CNTR_INCR_DECR_ADDN_F_I_n_5;
  wire CNTR_INCR_DECR_ADDN_F_I_n_6;
  wire \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] ;
  wire [0:0]Q;
  wire clr_Status;
  wire fifo_Write;
  wire fifo_full_p1;
  wire [0:7]in;
  wire [7:0]out;
  wire reset_RX_FIFO_reg;
  wire s_axi_aclk;
  wire s_axi_aresetn;
  wire [0:0]status_reg;
  wire \status_reg_reg[2] ;
  wire \status_reg_reg[2]_0 ;
  wire valid_rx;

  cntr_incr_decr_addn_f_802 CNTR_INCR_DECR_ADDN_F_I
       (.Bus_RNW_reg(Bus_RNW_reg),
        .Bus_RNW_reg_reg(Bus_RNW_reg_reg),
        .FIFO_Full_reg(\status_reg_reg[2] ),
        .\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg (\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] (\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] ),
        .Q({Q,CNTR_INCR_DECR_ADDN_F_I_n_2,CNTR_INCR_DECR_ADDN_F_I_n_3,CNTR_INCR_DECR_ADDN_F_I_n_4,CNTR_INCR_DECR_ADDN_F_I_n_5}),
        .SS(CNTR_INCR_DECR_ADDN_F_I_n_6),
        .fifo_Write(fifo_Write),
        .fifo_full_p1(fifo_full_p1),
        .reset_RX_FIFO_reg(reset_RX_FIFO_reg),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_aresetn(s_axi_aresetn),
        .valid_rx(valid_rx));
  dynshreg_f_803 DYNSHREG_F_I
       (.FIFO_Full_reg(\status_reg_reg[2] ),
        .Q({CNTR_INCR_DECR_ADDN_F_I_n_2,CNTR_INCR_DECR_ADDN_F_I_n_3,CNTR_INCR_DECR_ADDN_F_I_n_4,CNTR_INCR_DECR_ADDN_F_I_n_5}),
        .fifo_Write(fifo_Write),
        .in(in),
        .out(out),
        .s_axi_aclk(s_axi_aclk),
        .valid_rx(valid_rx));
  FDRE #(
    .INIT(1'b0)) 
    FIFO_Full_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(fifo_full_p1),
        .Q(\status_reg_reg[2] ),
        .R(CNTR_INCR_DECR_ADDN_F_I_n_6));
  LUT5 #(
    .INIT(32'h0000EA00)) 
    \status_reg[2]_i_1 
       (.I0(status_reg),
        .I1(fifo_Write),
        .I2(\status_reg_reg[2] ),
        .I3(s_axi_aresetn),
        .I4(clr_Status),
        .O(\status_reg_reg[2]_0 ));
endmodule

module uartlite_core
   (status_reg,
    bus2ip_reset,
    rx_Buffer_Full,
    tx_Buffer_Full,
    tx,
    interrupt,
    enable_interrupts,
    Q,
    FIFO_Full_reg,
    out,
    s_axi_aclk,
    reset_TX_FIFO,
    reset_RX_FIFO,
    bus2ip_rdce,
    \MEM_DataBus_Write_Data_reg[27] ,
    \INFERRED_GEN.cnt_i_reg[4] ,
    \ACTIVE_LOW_PR_OUT_DFF[0].peripheral_aresetn_reg[0] ,
    s_axi_aresetn,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] ,
    Bus_RNW_reg,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ,
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] ,
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ,
    Bus_RNW_reg_reg,
    rx,
    fifo_wr,
    s_axi_wdata);
  output [1:0]status_reg;
  output bus2ip_reset;
  output rx_Buffer_Full;
  output tx_Buffer_Full;
  output tx;
  output interrupt;
  output enable_interrupts;
  output [0:0]Q;
  output [0:0]FIFO_Full_reg;
  output [7:0]out;
  input s_axi_aclk;
  input reset_TX_FIFO;
  input reset_RX_FIFO;
  input [0:0]bus2ip_rdce;
  input \MEM_DataBus_Write_Data_reg[27] ;
  input \INFERRED_GEN.cnt_i_reg[4] ;
  input \ACTIVE_LOW_PR_OUT_DFF[0].peripheral_aresetn_reg[0] ;
  input s_axi_aresetn;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] ;
  input Bus_RNW_reg;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  input \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] ;
  input \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  input Bus_RNW_reg_reg;
  input rx;
  input fifo_wr;
  input [7:0]s_axi_wdata;

  wire Bus_RNW_reg;
  wire Bus_RNW_reg_reg;
  wire [0:0]FIFO_Full_reg;
  wire \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] ;
  wire \MEM_DataBus_Write_Data_reg[27] ;
  wire [0:0]Q;
  wire UARTLITE_RX_I_n_4;
  wire [0:0]bus2ip_rdce;
  wire bus2ip_reset;
  wire clr_Status;
  wire en_16x_Baud;
  wire enable_interrupts;
  wire fifo_wr;
  wire [7:0]out;
  wire reset_RX_FIFO;
  wire reset_RX_FIFO_reg_n_0;
  wire reset_TX_FIFO;
  wire reset_TX_FIFO_reg_n_0;
  wire rx;
  wire rx_Buffer_Full;
  wire s_axi_aclk;
  wire s_axi_aresetn;
  wire [7:0]s_axi_wdata;
  wire [1:0]status_reg;
  wire status_reg_reg0;
  wire tx;
  wire tx_Buffer_Full;
  wire NLW_UARTLITE_TX_I_Interrupt0_UNCONNECTED;
  wire NLW_UARTLITE_TX_I_enable_interrupts_UNCONNECTED;
  wire NLW_UARTLITE_TX_I_rx_Data_Present_Pre_UNCONNECTED;
  wire NLW_UARTLITE_TX_I_tx_Buffer_Empty_Pre_UNCONNECTED;
  wire [0:0]\NLW_UARTLITE_TX_I_INFERRED_GEN.cnt_i_reg[4]_UNCONNECTED ;

  baudrate BAUD_RATE_I
       (.SR(bus2ip_reset),
        .en_16x_Baud(en_16x_Baud),
        .s_axi_aclk(s_axi_aclk));
  uartlite_rx UARTLITE_RX_I
       (.Bus_RNW_reg(Bus_RNW_reg),
        .Bus_RNW_reg_reg(Bus_RNW_reg_reg),
        .\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg (\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] (\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] ),
        .Q(FIFO_Full_reg),
        .SR(bus2ip_reset),
        .clr_Status(clr_Status),
        .en_16x_Baud(en_16x_Baud),
        .out(out),
        .reset_RX_FIFO_reg(reset_RX_FIFO_reg_n_0),
        .rx(rx),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_aresetn(s_axi_aresetn),
        .status_reg(status_reg),
        .status_reg_reg0(status_reg_reg0),
        .\status_reg_reg[2] (rx_Buffer_Full),
        .\status_reg_reg[2]_0 (UARTLITE_RX_I_n_4));
  uartlite_tx UARTLITE_TX_I
       (.Bus_RNW_reg(Bus_RNW_reg),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] ),
        .\INFERRED_GEN.cnt_i_reg[4] (\NLW_UARTLITE_TX_I_INFERRED_GEN.cnt_i_reg[4]_UNCONNECTED [0]),
        .Interrupt0(NLW_UARTLITE_TX_I_Interrupt0_UNCONNECTED),
        .Q(Q),
        .SR(bus2ip_reset),
        .en_16x_Baud(en_16x_Baud),
        .enable_interrupts(NLW_UARTLITE_TX_I_enable_interrupts_UNCONNECTED),
        .fifo_wr(fifo_wr),
        .reset_TX_FIFO_reg(reset_TX_FIFO_reg_n_0),
        .rx_Data_Present_Pre(NLW_UARTLITE_TX_I_rx_Data_Present_Pre_UNCONNECTED),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_wdata(s_axi_wdata),
        .tx(tx),
        .tx_Buffer_Empty_Pre(NLW_UARTLITE_TX_I_tx_Buffer_Empty_Pre_UNCONNECTED),
        .tx_Buffer_Full(tx_Buffer_Full));
  FDRE #(
    .INIT(1'b0)) 
    clr_Status_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(bus2ip_rdce),
        .Q(clr_Status),
        .R(bus2ip_reset));
  FDRE #(
    .INIT(1'b0)) 
    enable_interrupts_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\MEM_DataBus_Write_Data_reg[27] ),
        .Q(enable_interrupts),
        .R(bus2ip_reset));
  FDSE #(
    .INIT(1'b1)) 
    reset_RX_FIFO_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(reset_RX_FIFO),
        .Q(reset_RX_FIFO_reg_n_0),
        .S(bus2ip_reset));
  FDSE #(
    .INIT(1'b1)) 
    reset_TX_FIFO_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(reset_TX_FIFO),
        .Q(reset_TX_FIFO_reg_n_0),
        .S(bus2ip_reset));
  FDRE #(
    .INIT(1'b0)) 
    \status_reg_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(status_reg_reg0),
        .Q(status_reg[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \status_reg_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(UARTLITE_RX_I_n_4),
        .Q(status_reg[0]),
        .R(1'b0));
endmodule

module uartlite_rx
   (\status_reg_reg[2] ,
    SR,
    status_reg_reg0,
    Q,
    \status_reg_reg[2]_0 ,
    out,
    s_axi_aclk,
    en_16x_Baud,
    s_axi_aresetn,
    status_reg,
    clr_Status,
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] ,
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ,
    Bus_RNW_reg,
    Bus_RNW_reg_reg,
    reset_RX_FIFO_reg,
    rx);
  output \status_reg_reg[2] ;
  output [0:0]SR;
  output status_reg_reg0;
  output [0:0]Q;
  output \status_reg_reg[2]_0 ;
  output [7:0]out;
  input s_axi_aclk;
  input en_16x_Baud;
  input s_axi_aresetn;
  input [1:0]status_reg;
  input clr_Status;
  input \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] ;
  input \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  input Bus_RNW_reg;
  input Bus_RNW_reg_reg;
  input reset_RX_FIFO_reg;
  input rx;

  wire Bus_RNW_reg;
  wire Bus_RNW_reg_reg;
  wire DELAY_16_I_n_1;
  wire DELAY_16_I_n_10;
  wire DELAY_16_I_n_11;
  wire DELAY_16_I_n_12;
  wire \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] ;
  wire [0:0]Q;
  wire RX_D2;
  wire [0:0]SR;
  wire clr_Status;
  wire en_16x_Baud;
  wire fifo_Write;
  wire fifo_Write0;
  wire [1:8]fifo_din;
  wire frame_err_ocrd;
  wire [7:0]out;
  wire p_11_out;
  wire p_14_out;
  wire p_17_out;
  wire p_20_out;
  wire p_26_out;
  wire p_2_out;
  wire p_5_out;
  wire p_8_out;
  wire reset_RX_FIFO_reg;
  wire running_reg_n_0;
  wire rx;
  wire rx_1;
  wire rx_2;
  wire rx_3;
  wire rx_4;
  wire rx_5;
  wire rx_6;
  wire rx_7;
  wire rx_8;
  wire rx_9;
  wire s_axi_aclk;
  wire s_axi_aresetn;
  wire start_Edge_Detected;
  wire start_Edge_Detected0;
  wire start_Edge_Detected_i_2_n_0;
  wire [1:0]status_reg;
  wire status_reg_reg0;
  wire \status_reg_reg[2] ;
  wire \status_reg_reg[2]_0 ;
  wire stop_Bit_Position_reg_n_0;
  wire valid_rx;
  wire valid_rx_i_1_n_0;

  dynshreg_i_f DELAY_16_I
       (.\SERIAL_TO_PARALLEL[2].fifo_din_reg[2] (DELAY_16_I_n_1),
        .clr_Status(clr_Status),
        .en_16x_Baud(en_16x_Baud),
        .fifo_Write0(fifo_Write0),
        .frame_err_ocrd(frame_err_ocrd),
        .frame_err_ocrd_reg(DELAY_16_I_n_11),
        .in(fifo_din),
        .p_11_out(p_11_out),
        .p_14_out(p_14_out),
        .p_17_out(p_17_out),
        .p_20_out(p_20_out),
        .p_2_out(p_2_out),
        .p_5_out(p_5_out),
        .p_8_out(p_8_out),
        .running_reg(DELAY_16_I_n_12),
        .running_reg_0(running_reg_n_0),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_aresetn(s_axi_aresetn),
        .scndry_out(RX_D2),
        .start_Edge_Detected(start_Edge_Detected),
        .status_reg(status_reg[1]),
        .status_reg_reg0(status_reg_reg0),
        .stop_Bit_Position_reg(DELAY_16_I_n_10),
        .stop_Bit_Position_reg_0(stop_Bit_Position_reg_n_0),
        .valid_rx(valid_rx));
  cdc_sync INPUT_DOUBLE_REGS3
       (.EN_16x_Baud_reg(DELAY_16_I_n_1),
        .in(fifo_din[1]),
        .p_26_out(p_26_out),
        .rx(rx),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_aresetn(s_axi_aresetn),
        .scndry_out(RX_D2),
        .start_Edge_Detected(start_Edge_Detected));
  LUT1 #(
    .INIT(2'h1)) 
    Interrupt_i_1
       (.I0(s_axi_aresetn),
        .O(SR));
  FDRE #(
    .INIT(1'b0)) 
    \SERIAL_TO_PARALLEL[1].fifo_din_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_26_out),
        .Q(fifo_din[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \SERIAL_TO_PARALLEL[2].fifo_din_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_20_out),
        .Q(fifo_din[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \SERIAL_TO_PARALLEL[3].fifo_din_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_17_out),
        .Q(fifo_din[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \SERIAL_TO_PARALLEL[4].fifo_din_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_14_out),
        .Q(fifo_din[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \SERIAL_TO_PARALLEL[5].fifo_din_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_11_out),
        .Q(fifo_din[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \SERIAL_TO_PARALLEL[6].fifo_din_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_8_out),
        .Q(fifo_din[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \SERIAL_TO_PARALLEL[7].fifo_din_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_5_out),
        .Q(fifo_din[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \SERIAL_TO_PARALLEL[8].fifo_din_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_2_out),
        .Q(fifo_din[8]),
        .R(1'b0));
  srl_fifo_f_800 SRL_FIFO_I
       (.Bus_RNW_reg(Bus_RNW_reg),
        .Bus_RNW_reg_reg(Bus_RNW_reg_reg),
        .\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg (\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] (\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] ),
        .Q(Q),
        .clr_Status(clr_Status),
        .fifo_Write(fifo_Write),
        .in(fifo_din),
        .out(out),
        .reset_RX_FIFO_reg(reset_RX_FIFO_reg),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_aresetn(s_axi_aresetn),
        .status_reg(status_reg[0]),
        .\status_reg_reg[2] (\status_reg_reg[2] ),
        .\status_reg_reg[2]_0 (\status_reg_reg[2]_0 ),
        .valid_rx(valid_rx));
  FDRE #(
    .INIT(1'b0)) 
    fifo_Write_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(fifo_Write0),
        .Q(fifo_Write),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    frame_err_ocrd_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(DELAY_16_I_n_11),
        .Q(frame_err_ocrd),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    running_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(DELAY_16_I_n_12),
        .Q(running_reg_n_0),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    rx_1_reg
       (.C(s_axi_aclk),
        .CE(en_16x_Baud),
        .D(RX_D2),
        .Q(rx_1),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    rx_2_reg
       (.C(s_axi_aclk),
        .CE(en_16x_Baud),
        .D(rx_1),
        .Q(rx_2),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    rx_3_reg
       (.C(s_axi_aclk),
        .CE(en_16x_Baud),
        .D(rx_2),
        .Q(rx_3),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    rx_4_reg
       (.C(s_axi_aclk),
        .CE(en_16x_Baud),
        .D(rx_3),
        .Q(rx_4),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    rx_5_reg
       (.C(s_axi_aclk),
        .CE(en_16x_Baud),
        .D(rx_4),
        .Q(rx_5),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    rx_6_reg
       (.C(s_axi_aclk),
        .CE(en_16x_Baud),
        .D(rx_5),
        .Q(rx_6),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    rx_7_reg
       (.C(s_axi_aclk),
        .CE(en_16x_Baud),
        .D(rx_6),
        .Q(rx_7),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    rx_8_reg
       (.C(s_axi_aclk),
        .CE(en_16x_Baud),
        .D(rx_7),
        .Q(rx_8),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    rx_9_reg
       (.C(s_axi_aclk),
        .CE(en_16x_Baud),
        .D(rx_8),
        .Q(rx_9),
        .R(SR));
  LUT6 #(
    .INIT(64'h0000000000000010)) 
    start_Edge_Detected_i_1
       (.I0(rx_8),
        .I1(rx_2),
        .I2(start_Edge_Detected_i_2_n_0),
        .I3(rx_3),
        .I4(rx_1),
        .I5(frame_err_ocrd),
        .O(start_Edge_Detected0));
  LUT6 #(
    .INIT(64'h0000000000000010)) 
    start_Edge_Detected_i_2
       (.I0(rx_5),
        .I1(rx_7),
        .I2(rx_9),
        .I3(running_reg_n_0),
        .I4(rx_6),
        .I5(rx_4),
        .O(start_Edge_Detected_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    start_Edge_Detected_reg
       (.C(s_axi_aclk),
        .CE(en_16x_Baud),
        .D(start_Edge_Detected0),
        .Q(start_Edge_Detected),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    stop_Bit_Position_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(DELAY_16_I_n_10),
        .Q(stop_Bit_Position_reg_n_0),
        .R(SR));
  LUT3 #(
    .INIT(8'hBA)) 
    valid_rx_i_1
       (.I0(start_Edge_Detected),
        .I1(fifo_Write),
        .I2(valid_rx),
        .O(valid_rx_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    valid_rx_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(valid_rx_i_1_n_0),
        .Q(valid_rx),
        .R(SR));
endmodule

module uartlite_tx
   (tx_Buffer_Full,
    tx,
    Q,
    Interrupt0,
    s_axi_aclk,
    SR,
    en_16x_Baud,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] ,
    Bus_RNW_reg,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ,
    tx_Buffer_Empty_Pre,
    enable_interrupts,
    rx_Data_Present_Pre,
    \INFERRED_GEN.cnt_i_reg[4] ,
    reset_TX_FIFO_reg,
    s_axi_aresetn,
    fifo_wr,
    s_axi_wdata);
  output tx_Buffer_Full;
  output tx;
  output [0:0]Q;
  output Interrupt0;
  input s_axi_aclk;
  input [0:0]SR;
  input en_16x_Baud;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] ;
  input Bus_RNW_reg;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  input tx_Buffer_Empty_Pre;
  input enable_interrupts;
  input rx_Data_Present_Pre;
  input [0:0]\INFERRED_GEN.cnt_i_reg[4] ;
  input reset_TX_FIFO_reg;
  input s_axi_aresetn;
  input fifo_wr;
  input [7:0]s_axi_wdata;

  wire Bus_RNW_reg;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] ;
  wire MID_START_BIT_SRL16_I_n_0;
  wire [0:0]Q;
  wire [0:0]SR;
  wire TX0;
  wire en_16x_Baud;
  wire fifo_Read;
  wire fifo_Read0;
  wire fifo_wr;
  wire mux_Out;
  wire \mux_sel[0]_i_1_n_0 ;
  wire \mux_sel[1]_i_1_n_0 ;
  wire \mux_sel[2]_i_1_n_0 ;
  wire \mux_sel_reg_n_0_[0] ;
  wire \mux_sel_reg_n_0_[2] ;
  wire p_4_in;
  wire reset_TX_FIFO_reg;
  wire s_axi_aclk;
  wire s_axi_aresetn;
  wire [7:0]s_axi_wdata;
  wire serial_Data;
  wire serial_Data_i_6_n_0;
  wire tx;
  wire tx_Buffer_Full;
  wire tx_DataBits;
  wire tx_DataBits0;
  wire tx_Data_Enable_reg_n_0;
  wire tx_Start;
  wire tx_Start0;
  wire NLW_SRL_FIFO_I_Interrupt0_UNCONNECTED;
  wire NLW_SRL_FIFO_I_enable_interrupts_UNCONNECTED;
  wire NLW_SRL_FIFO_I_rx_Data_Present_Pre_UNCONNECTED;
  wire NLW_SRL_FIFO_I_tx_Buffer_Empty_Pre_UNCONNECTED;
  wire [0:0]\NLW_SRL_FIFO_I_INFERRED_GEN.cnt_i_reg[4]_UNCONNECTED ;

  dynshreg_i_f__parameterized0 MID_START_BIT_SRL16_I
       (.en_16x_Baud(en_16x_Baud),
        .s_axi_aclk(s_axi_aclk),
        .tx_Data_Enable_reg(MID_START_BIT_SRL16_I_n_0),
        .tx_Data_Enable_reg_0(tx_Data_Enable_reg_n_0));
  srl_fifo_f SRL_FIFO_I
       (.Bus_RNW_reg(Bus_RNW_reg),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] ),
        .\INFERRED_GEN.cnt_i_reg[4] (\NLW_SRL_FIFO_I_INFERRED_GEN.cnt_i_reg[4]_UNCONNECTED [0]),
        .Interrupt0(NLW_SRL_FIFO_I_Interrupt0_UNCONNECTED),
        .Q(Q),
        .enable_interrupts(NLW_SRL_FIFO_I_enable_interrupts_UNCONNECTED),
        .fifo_Read(fifo_Read),
        .fifo_wr(fifo_wr),
        .mux_Out(mux_Out),
        .\mux_sel_reg[0] (\mux_sel_reg_n_0_[0] ),
        .\mux_sel_reg[1] (serial_Data_i_6_n_0),
        .\mux_sel_reg[2] (\mux_sel_reg_n_0_[2] ),
        .p_4_in(p_4_in),
        .reset_TX_FIFO_reg(reset_TX_FIFO_reg),
        .rx_Data_Present_Pre(NLW_SRL_FIFO_I_rx_Data_Present_Pre_UNCONNECTED),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_wdata(s_axi_wdata),
        .tx_Buffer_Empty_Pre(NLW_SRL_FIFO_I_tx_Buffer_Empty_Pre_UNCONNECTED),
        .tx_Buffer_Full(tx_Buffer_Full),
        .tx_DataBits(tx_DataBits),
        .tx_Data_Enable_reg(tx_Data_Enable_reg_n_0),
        .tx_Start(tx_Start),
        .tx_Start0(tx_Start0));
  LUT3 #(
    .INIT(8'h0B)) 
    TX_i_1
       (.I0(serial_Data),
        .I1(tx_DataBits),
        .I2(tx_Start),
        .O(TX0));
  FDSE #(
    .INIT(1'b1)) 
    TX_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(TX0),
        .Q(tx),
        .S(SR));
  LUT4 #(
    .INIT(16'h0100)) 
    fifo_Read_i_1
       (.I0(\mux_sel_reg_n_0_[0] ),
        .I1(\mux_sel_reg_n_0_[2] ),
        .I2(p_4_in),
        .I3(tx_Data_Enable_reg_n_0),
        .O(fifo_Read0));
  FDRE #(
    .INIT(1'b0)) 
    fifo_Read_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(fifo_Read0),
        .Q(fifo_Read),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT5 #(
    .INIT(32'hE1F0F1F0)) 
    \mux_sel[0]_i_1 
       (.I0(p_4_in),
        .I1(\mux_sel_reg_n_0_[2] ),
        .I2(\mux_sel_reg_n_0_[0] ),
        .I3(tx_Data_Enable_reg_n_0),
        .I4(tx_DataBits),
        .O(\mux_sel[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h99AAABAA)) 
    \mux_sel[1]_i_1 
       (.I0(p_4_in),
        .I1(\mux_sel_reg_n_0_[2] ),
        .I2(\mux_sel_reg_n_0_[0] ),
        .I3(tx_Data_Enable_reg_n_0),
        .I4(tx_DataBits),
        .O(\mux_sel[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT5 #(
    .INIT(32'h7777888C)) 
    \mux_sel[2]_i_1 
       (.I0(tx_DataBits),
        .I1(tx_Data_Enable_reg_n_0),
        .I2(\mux_sel_reg_n_0_[0] ),
        .I3(p_4_in),
        .I4(\mux_sel_reg_n_0_[2] ),
        .O(\mux_sel[2]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \mux_sel_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\mux_sel[0]_i_1_n_0 ),
        .Q(\mux_sel_reg_n_0_[0] ),
        .S(SR));
  FDSE #(
    .INIT(1'b1)) 
    \mux_sel_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\mux_sel[1]_i_1_n_0 ),
        .Q(p_4_in),
        .S(SR));
  FDSE #(
    .INIT(1'b1)) 
    \mux_sel_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\mux_sel[2]_i_1_n_0 ),
        .Q(\mux_sel_reg_n_0_[2] ),
        .S(SR));
  LUT3 #(
    .INIT(8'h01)) 
    serial_Data_i_6
       (.I0(p_4_in),
        .I1(\mux_sel_reg_n_0_[2] ),
        .I2(\mux_sel_reg_n_0_[0] ),
        .O(serial_Data_i_6_n_0));
  FDRE #(
    .INIT(1'b0)) 
    serial_Data_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(mux_Out),
        .Q(serial_Data),
        .R(SR));
  LUT4 #(
    .INIT(16'h3222)) 
    tx_DataBits_i_1
       (.I0(tx_DataBits),
        .I1(fifo_Read),
        .I2(tx_Start),
        .I3(tx_Data_Enable_reg_n_0),
        .O(tx_DataBits0));
  FDRE #(
    .INIT(1'b0)) 
    tx_DataBits_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(tx_DataBits0),
        .Q(tx_DataBits),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    tx_Data_Enable_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(MID_START_BIT_SRL16_I_n_0),
        .Q(tx_Data_Enable_reg_n_0),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    tx_Start_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(tx_Start0),
        .Q(tx_Start),
        .R(SR));
endmodule

module upcnt_n
   (Q,
    seq_clr,
    seq_cnt_en,
    slowest_sync_clk);
  output [5:0]Q;
  input seq_clr;
  input seq_cnt_en;
  input slowest_sync_clk;

  wire [5:0]Q;
  wire clear;
  wire [5:0]q_int0;
  wire seq_clr;
  wire seq_cnt_en;
  wire slowest_sync_clk;

  LUT1 #(
    .INIT(2'h1)) 
    \q_int[0]_i_1 
       (.I0(Q[0]),
        .O(q_int0[0]));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \q_int[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(q_int0[1]));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \q_int[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(q_int0[2]));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \q_int[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(q_int0[3]));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \q_int[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(q_int0[4]));
  LUT1 #(
    .INIT(2'h1)) 
    \q_int[5]_i_1 
       (.I0(seq_clr),
        .O(clear));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \q_int[5]_i_2 
       (.I0(Q[3]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(Q[4]),
        .I5(Q[5]),
        .O(q_int0[5]));
  FDRE #(
    .INIT(1'b1)) 
    \q_int_reg[0] 
       (.C(slowest_sync_clk),
        .CE(seq_cnt_en),
        .D(q_int0[0]),
        .Q(Q[0]),
        .R(clear));
  FDRE #(
    .INIT(1'b1)) 
    \q_int_reg[1] 
       (.C(slowest_sync_clk),
        .CE(seq_cnt_en),
        .D(q_int0[1]),
        .Q(Q[1]),
        .R(clear));
  FDRE #(
    .INIT(1'b1)) 
    \q_int_reg[2] 
       (.C(slowest_sync_clk),
        .CE(seq_cnt_en),
        .D(q_int0[2]),
        .Q(Q[2]),
        .R(clear));
  FDRE #(
    .INIT(1'b1)) 
    \q_int_reg[3] 
       (.C(slowest_sync_clk),
        .CE(seq_cnt_en),
        .D(q_int0[3]),
        .Q(Q[3]),
        .R(clear));
  FDRE #(
    .INIT(1'b1)) 
    \q_int_reg[4] 
       (.C(slowest_sync_clk),
        .CE(seq_cnt_en),
        .D(q_int0[4]),
        .Q(Q[4]),
        .R(clear));
  FDRE #(
    .INIT(1'b1)) 
    \q_int_reg[5] 
       (.C(slowest_sync_clk),
        .CE(seq_cnt_en),
        .D(q_int0[5]),
        .Q(Q[5]),
        .R(clear));
endmodule

module ALU
   (\Using_FPGA.Native ,
    \MEM_DataBus_Addr_reg[0] ,
    ex_databus_addr,
    ex_use_carry,
    ex_alu_carryin,
    EX_CMP_Op_reg,
    ex_unsigned_op,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[0] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    S,
    ex_valid_reg,
    ex_load_shift_carry,
    ex_load_alu_carry_reg,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5);
  output \Using_FPGA.Native ;
  output [29:0]\MEM_DataBus_Addr_reg[0] ;
  output [1:0]ex_databus_addr;
  input ex_use_carry;
  input ex_alu_carryin;
  input EX_CMP_Op_reg;
  input ex_unsigned_op;
  input [31:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [31:0]\EX_Op1_reg[0] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input S;
  input ex_valid_reg;
  input ex_load_shift_carry;
  input ex_load_alu_carry_reg;
  input lopt;
  output lopt_1;
  input lopt_2;
  output lopt_3;
  output lopt_4;
  input lopt_5;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_CMP_Op_reg;
  wire EX_Enable_ALU;
  wire [31:0]\EX_Op1_reg[0] ;
  wire [29:0]\MEM_DataBus_Addr_reg[0] ;
  wire [31:0]Q;
  wire S;
  wire \Using_FPGA.Native ;
  wire alu_carry_1;
  wire alu_carry_13;
  wire alu_carry_17;
  wire alu_carry_21;
  wire alu_carry_25;
  wire alu_carry_29;
  wire alu_carry_5;
  wire alu_carry_9;
  wire [1:0]ex_databus_addr;
  wire ex_load_alu_carry_reg;
  wire ex_load_shift_carry;
  wire ex_unsigned_op;
  wire ex_use_carry;
  wire ex_valid_reg;
  wire \^lopt_1 ;
  wire lopt_10;
  wire lopt_11;
  wire lopt_12;
  wire lopt_13;
  wire lopt_14;
  wire lopt_15;
  wire lopt_16;
  wire lopt_18;
  wire lopt_19;
  wire \^lopt_2 ;
  wire lopt_21;
  wire lopt_22;
  wire lopt_23;
  wire lopt_24;
  wire lopt_25;
  wire lopt_26;
  wire lopt_27;
  wire lopt_28;
  wire \^lopt_3 ;
  wire lopt_30;
  wire lopt_31;
  wire lopt_33;
  wire lopt_34;
  wire lopt_35;
  wire lopt_36;
  wire lopt_37;
  wire lopt_38;
  wire lopt_39;
  wire \^lopt_4 ;
  wire lopt_40;
  wire lopt_42;
  wire lopt_43;
  wire lopt_45;
  wire lopt_46;
  wire lopt_47;
  wire lopt_48;
  wire lopt_49;
  wire lopt_50;
  wire lopt_51;
  wire lopt_52;
  wire lopt_54;
  wire lopt_55;
  wire lopt_57;
  wire lopt_58;
  wire lopt_59;
  wire lopt_6;
  wire lopt_60;
  wire lopt_61;
  wire lopt_62;
  wire lopt_63;
  wire lopt_64;
  wire lopt_66;
  wire lopt_67;
  wire lopt_69;
  wire lopt_7;
  wire lopt_70;
  wire lopt_71;
  wire lopt_72;
  wire lopt_73;
  wire lopt_74;
  wire lopt_75;
  wire lopt_76;
  wire lopt_78;
  wire lopt_79;
  wire lopt_81;
  wire lopt_82;
  wire lopt_83;
  wire lopt_84;
  wire lopt_85;
  wire lopt_86;
  wire lopt_87;
  wire lopt_88;
  wire lopt_9;
  wire lopt_90;
  wire lopt_91;
  wire lopt_93;
  wire lopt_94;
  wire lopt_95;
  wire lopt_96;
  wire lopt_97;
  wire \NLW_Using_FPGA.ALL_Bits[0].ALU_Bit_I1_EX_CMP_Op_reg_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[0].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[0].ALU_Bit_I1_ex_unsigned_op_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[0].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[10].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[10].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[10].ALU_Bit_I1_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[11].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[12].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[12].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[12].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[13].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[13].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[13].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[14].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[14].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[14].ALU_Bit_I1_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[15].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[16].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[16].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[16].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[17].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[17].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[17].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[18].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[18].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[18].ALU_Bit_I1_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[19].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[1].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[1].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[1].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[20].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[20].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[20].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[21].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[21].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[21].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[22].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[22].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[22].ALU_Bit_I1_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[23].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[24].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[24].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[24].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[25].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[25].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[25].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[26].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[26].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[26].ALU_Bit_I1_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[27].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[28].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[28].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[28].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[29].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[29].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[29].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[2].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[2].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[2].ALU_Bit_I1_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[30].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[30].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[30].ALU_Bit_I1_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[31].ALU_Bit_I1_EX_CarryIn_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[3].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[4].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[4].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[4].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[5].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[5].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[5].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[6].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[6].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[6].ALU_Bit_I1_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[7].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[8].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[8].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[8].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[9].ALU_Bit_I1_EX_CarryIn_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[9].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[9].ALU_Bit_I1_lopt_UNCONNECTED ;

  assign \^lopt_1  = lopt_2;
  assign \^lopt_4  = lopt_5;
  assign lopt_1 = DI;
  assign lopt_3 = \^lopt_2 ;
  assign lopt_4 = \^lopt_3 ;
  ALU_Bit__parameterized2 \Using_FPGA.ALL_Bits[0].ALU_Bit_I1 
       (.\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CMP_Op_reg(\NLW_Using_FPGA.ALL_Bits[0].ALU_Bit_I1_EX_CMP_Op_reg_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[0] ({\EX_Op1_reg[0] [31],\EX_Op1_reg[0] [0]}),
        .LO(\NLW_Using_FPGA.ALL_Bits[0].ALU_Bit_I1_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[0] (\MEM_DataBus_Addr_reg[0] [29]),
        .Q(Q[31]),
        .S(S),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .ex_load_alu_carry_reg(ex_load_alu_carry_reg),
        .ex_load_shift_carry(ex_load_shift_carry),
        .ex_unsigned_op(\NLW_Using_FPGA.ALL_Bits[0].ALU_Bit_I1_ex_unsigned_op_UNCONNECTED ),
        .ex_valid_reg(ex_valid_reg),
        .lopt(\NLW_Using_FPGA.ALL_Bits[0].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_93),
        .lopt_2(lopt_94),
        .lopt_3(lopt_95),
        .lopt_4(lopt_97));
  ALU_Bit \Using_FPGA.ALL_Bits[10].ALU_Bit_I1 
       (.\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[10].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[10] (\EX_Op1_reg[0] [21]),
        .LO(alu_carry_21),
        .\MEM_DataBus_Addr_reg[10] (\MEM_DataBus_Addr_reg[0] [19]),
        .Q(Q[21]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[10].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_66),
        .lopt_10(lopt_75),
        .lopt_11(lopt_76),
        .lopt_2(lopt_67),
        .lopt_3(\NLW_Using_FPGA.ALL_Bits[10].ALU_Bit_I1_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_69),
        .lopt_5(lopt_70),
        .lopt_6(lopt_71),
        .lopt_7(lopt_72),
        .lopt_8(lopt_73),
        .lopt_9(lopt_74));
  ALU_Bit_492 \Using_FPGA.ALL_Bits[11].ALU_Bit_I1 
       (.\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(alu_carry_21),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[11] (\EX_Op1_reg[0] [20]),
        .LO(\NLW_Using_FPGA.ALL_Bits[11].ALU_Bit_I1_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[11] (\MEM_DataBus_Addr_reg[0] [18]),
        .Q(Q[20]),
        .lopt(lopt_59),
        .lopt_1(lopt_60),
        .lopt_2(lopt_61),
        .lopt_3(lopt_64));
  ALU_Bit_493 \Using_FPGA.ALL_Bits[12].ALU_Bit_I1 
       (.\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[12].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[12] (\EX_Op1_reg[0] [19]),
        .LO(\NLW_Using_FPGA.ALL_Bits[12].ALU_Bit_I1_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[12] (\MEM_DataBus_Addr_reg[0] [17]),
        .Q(Q[19]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[12].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_57),
        .lopt_2(lopt_58),
        .lopt_3(lopt_63));
  ALU_Bit_494 \Using_FPGA.ALL_Bits[13].ALU_Bit_I1 
       (.\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[13].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[13] (\EX_Op1_reg[0] [18]),
        .LO(\NLW_Using_FPGA.ALL_Bits[13].ALU_Bit_I1_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[13] (\MEM_DataBus_Addr_reg[0] [16]),
        .Q(Q[18]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[13].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_54),
        .lopt_2(lopt_55),
        .lopt_3(lopt_62));
  ALU_Bit_495 \Using_FPGA.ALL_Bits[14].ALU_Bit_I1 
       (.\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[14].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[14] (\EX_Op1_reg[0] [17]),
        .LO(alu_carry_17),
        .\MEM_DataBus_Addr_reg[14] (\MEM_DataBus_Addr_reg[0] [15]),
        .Q(Q[17]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[14].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_54),
        .lopt_10(lopt_63),
        .lopt_11(lopt_64),
        .lopt_2(lopt_55),
        .lopt_3(\NLW_Using_FPGA.ALL_Bits[14].ALU_Bit_I1_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_57),
        .lopt_5(lopt_58),
        .lopt_6(lopt_59),
        .lopt_7(lopt_60),
        .lopt_8(lopt_61),
        .lopt_9(lopt_62));
  ALU_Bit_496 \Using_FPGA.ALL_Bits[15].ALU_Bit_I1 
       (.\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(alu_carry_17),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[15] (\EX_Op1_reg[0] [16]),
        .LO(\NLW_Using_FPGA.ALL_Bits[15].ALU_Bit_I1_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[15] (\MEM_DataBus_Addr_reg[0] [14]),
        .Q(Q[16]),
        .lopt(lopt_47),
        .lopt_1(lopt_48),
        .lopt_2(lopt_49),
        .lopt_3(lopt_52));
  ALU_Bit_497 \Using_FPGA.ALL_Bits[16].ALU_Bit_I1 
       (.\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[16].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[16] (\EX_Op1_reg[0] [15]),
        .LO(\NLW_Using_FPGA.ALL_Bits[16].ALU_Bit_I1_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[16] (\MEM_DataBus_Addr_reg[0] [13]),
        .Q(Q[15]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[16].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_45),
        .lopt_2(lopt_46),
        .lopt_3(lopt_51));
  ALU_Bit_498 \Using_FPGA.ALL_Bits[17].ALU_Bit_I1 
       (.\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[17].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[17] (\EX_Op1_reg[0] [14]),
        .LO(\NLW_Using_FPGA.ALL_Bits[17].ALU_Bit_I1_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[17] (\MEM_DataBus_Addr_reg[0] [12]),
        .Q(Q[14]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[17].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_42),
        .lopt_2(lopt_43),
        .lopt_3(lopt_50));
  ALU_Bit_499 \Using_FPGA.ALL_Bits[18].ALU_Bit_I1 
       (.\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[18].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[18] (\EX_Op1_reg[0] [13]),
        .LO(alu_carry_13),
        .\MEM_DataBus_Addr_reg[18] (\MEM_DataBus_Addr_reg[0] [11]),
        .Q(Q[13]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[18].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_42),
        .lopt_10(lopt_51),
        .lopt_11(lopt_52),
        .lopt_2(lopt_43),
        .lopt_3(\NLW_Using_FPGA.ALL_Bits[18].ALU_Bit_I1_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_45),
        .lopt_5(lopt_46),
        .lopt_6(lopt_47),
        .lopt_7(lopt_48),
        .lopt_8(lopt_49),
        .lopt_9(lopt_50));
  ALU_Bit_500 \Using_FPGA.ALL_Bits[19].ALU_Bit_I1 
       (.\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(alu_carry_13),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[19] (\EX_Op1_reg[0] [12]),
        .LO(\NLW_Using_FPGA.ALL_Bits[19].ALU_Bit_I1_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[19] (\MEM_DataBus_Addr_reg[0] [10]),
        .Q(Q[12]),
        .lopt(lopt_35),
        .lopt_1(lopt_36),
        .lopt_2(lopt_37),
        .lopt_3(lopt_40));
  ALU_Bit_501 \Using_FPGA.ALL_Bits[1].ALU_Bit_I1 
       (.\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[1].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[1] (\EX_Op1_reg[0] [30]),
        .LO(\NLW_Using_FPGA.ALL_Bits[1].ALU_Bit_I1_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[1] (\MEM_DataBus_Addr_reg[0] [28]),
        .Q(Q[30]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[1].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_90),
        .lopt_2(lopt_91),
        .lopt_3(lopt_96));
  ALU_Bit_502 \Using_FPGA.ALL_Bits[20].ALU_Bit_I1 
       (.\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[20].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[20] (\EX_Op1_reg[0] [11]),
        .LO(\NLW_Using_FPGA.ALL_Bits[20].ALU_Bit_I1_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[20] (\MEM_DataBus_Addr_reg[0] [9]),
        .Q(Q[11]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[20].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_33),
        .lopt_2(lopt_34),
        .lopt_3(lopt_39));
  ALU_Bit_503 \Using_FPGA.ALL_Bits[21].ALU_Bit_I1 
       (.\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[21].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[21] (\EX_Op1_reg[0] [10]),
        .LO(\NLW_Using_FPGA.ALL_Bits[21].ALU_Bit_I1_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[21] (\MEM_DataBus_Addr_reg[0] [8]),
        .Q(Q[10]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[21].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_30),
        .lopt_2(lopt_31),
        .lopt_3(lopt_38));
  ALU_Bit_504 \Using_FPGA.ALL_Bits[22].ALU_Bit_I1 
       (.\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[22].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[22] (\EX_Op1_reg[0] [9]),
        .LO(alu_carry_9),
        .\MEM_DataBus_Addr_reg[22] (\MEM_DataBus_Addr_reg[0] [7]),
        .Q(Q[9]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[22].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_30),
        .lopt_10(lopt_39),
        .lopt_11(lopt_40),
        .lopt_2(lopt_31),
        .lopt_3(\NLW_Using_FPGA.ALL_Bits[22].ALU_Bit_I1_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_33),
        .lopt_5(lopt_34),
        .lopt_6(lopt_35),
        .lopt_7(lopt_36),
        .lopt_8(lopt_37),
        .lopt_9(lopt_38));
  ALU_Bit_505 \Using_FPGA.ALL_Bits[23].ALU_Bit_I1 
       (.\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(alu_carry_9),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[23] (\EX_Op1_reg[0] [8]),
        .LO(\NLW_Using_FPGA.ALL_Bits[23].ALU_Bit_I1_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[23] (\MEM_DataBus_Addr_reg[0] [6]),
        .Q(Q[8]),
        .lopt(lopt_23),
        .lopt_1(lopt_24),
        .lopt_2(lopt_25),
        .lopt_3(lopt_28));
  ALU_Bit_506 \Using_FPGA.ALL_Bits[24].ALU_Bit_I1 
       (.\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[24].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[24] (\EX_Op1_reg[0] [7]),
        .LO(\NLW_Using_FPGA.ALL_Bits[24].ALU_Bit_I1_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[24] (\MEM_DataBus_Addr_reg[0] [5]),
        .Q(Q[7]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[24].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_21),
        .lopt_2(lopt_22),
        .lopt_3(lopt_27));
  ALU_Bit_507 \Using_FPGA.ALL_Bits[25].ALU_Bit_I1 
       (.\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[25].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[25] (\EX_Op1_reg[0] [6]),
        .LO(\NLW_Using_FPGA.ALL_Bits[25].ALU_Bit_I1_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[25] (\MEM_DataBus_Addr_reg[0] [4]),
        .Q(Q[6]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[25].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_18),
        .lopt_2(lopt_19),
        .lopt_3(lopt_26));
  ALU_Bit_508 \Using_FPGA.ALL_Bits[26].ALU_Bit_I1 
       (.\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[26].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[26] (\EX_Op1_reg[0] [5]),
        .LO(alu_carry_5),
        .\MEM_DataBus_Addr_reg[26] (\MEM_DataBus_Addr_reg[0] [3]),
        .Q(Q[5]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[26].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_18),
        .lopt_10(lopt_27),
        .lopt_11(lopt_28),
        .lopt_2(lopt_19),
        .lopt_3(\NLW_Using_FPGA.ALL_Bits[26].ALU_Bit_I1_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_21),
        .lopt_5(lopt_22),
        .lopt_6(lopt_23),
        .lopt_7(lopt_24),
        .lopt_8(lopt_25),
        .lopt_9(lopt_26));
  ALU_Bit_509 \Using_FPGA.ALL_Bits[27].ALU_Bit_I1 
       (.\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(alu_carry_5),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[27] (\EX_Op1_reg[0] [4]),
        .LO(\NLW_Using_FPGA.ALL_Bits[27].ALU_Bit_I1_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[27] (\MEM_DataBus_Addr_reg[0] [2]),
        .Q(Q[4]),
        .lopt(lopt_11),
        .lopt_1(lopt_12),
        .lopt_2(lopt_13),
        .lopt_3(lopt_16));
  ALU_Bit_510 \Using_FPGA.ALL_Bits[28].ALU_Bit_I1 
       (.\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[28].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[28] (\EX_Op1_reg[0] [3]),
        .LO(\NLW_Using_FPGA.ALL_Bits[28].ALU_Bit_I1_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[28] (\MEM_DataBus_Addr_reg[0] [1]),
        .Q(Q[3]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[28].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_9),
        .lopt_2(lopt_10),
        .lopt_3(lopt_15));
  ALU_Bit_511 \Using_FPGA.ALL_Bits[29].ALU_Bit_I1 
       (.\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[29].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[29] (\EX_Op1_reg[0] [2]),
        .LO(\NLW_Using_FPGA.ALL_Bits[29].ALU_Bit_I1_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[29] (\MEM_DataBus_Addr_reg[0] [0]),
        .Q(Q[2]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[29].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_6),
        .lopt_2(lopt_7),
        .lopt_3(lopt_14));
  ALU_Bit_512 \Using_FPGA.ALL_Bits[2].ALU_Bit_I1 
       (.\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[2].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[2] (\EX_Op1_reg[0] [29]),
        .LO(alu_carry_29),
        .\MEM_DataBus_Addr_reg[2] (\MEM_DataBus_Addr_reg[0] [27]),
        .Q(Q[29]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[2].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_90),
        .lopt_10(lopt_97),
        .lopt_2(lopt_91),
        .lopt_3(\NLW_Using_FPGA.ALL_Bits[2].ALU_Bit_I1_lopt_3_UNCONNECTED ),
        .lopt_4(ex_unsigned_op),
        .lopt_5(EX_CMP_Op_reg),
        .lopt_6(lopt_93),
        .lopt_7(lopt_94),
        .lopt_8(lopt_95),
        .lopt_9(lopt_96));
  ALU_Bit_513 \Using_FPGA.ALL_Bits[30].ALU_Bit_I1 
       (.\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[30].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[30] (\EX_Op1_reg[0] [1]),
        .LO(alu_carry_1),
        .Q(Q[1]),
        .ex_databus_addr(ex_databus_addr[1]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[30].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_6),
        .lopt_10(lopt_15),
        .lopt_11(lopt_16),
        .lopt_2(lopt_7),
        .lopt_3(\NLW_Using_FPGA.ALL_Bits[30].ALU_Bit_I1_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_9),
        .lopt_5(lopt_10),
        .lopt_6(lopt_11),
        .lopt_7(lopt_12),
        .lopt_8(lopt_13),
        .lopt_9(lopt_14));
  ALU_Bit_514 \Using_FPGA.ALL_Bits[31].ALU_Bit_I1 
       (.\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryIn(\NLW_Using_FPGA.ALL_Bits[31].ALU_Bit_I1_EX_CarryIn_UNCONNECTED ),
        .EX_CarryOut(alu_carry_1),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[31] (\EX_Op1_reg[0] [0]),
        .Q(Q[0]),
        .ex_databus_addr(ex_databus_addr[0]),
        .lopt(\^lopt_1 ),
        .lopt_1(\^lopt_2 ),
        .lopt_2(\^lopt_3 ),
        .lopt_3(\^lopt_4 ));
  ALU_Bit_515 \Using_FPGA.ALL_Bits[3].ALU_Bit_I1 
       (.\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(alu_carry_29),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[3] (\EX_Op1_reg[0] [28]),
        .LO(\NLW_Using_FPGA.ALL_Bits[3].ALU_Bit_I1_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[3] (\MEM_DataBus_Addr_reg[0] [26]),
        .Q(Q[28]),
        .lopt(lopt_83),
        .lopt_1(lopt_84),
        .lopt_2(lopt_85),
        .lopt_3(lopt_88));
  ALU_Bit_516 \Using_FPGA.ALL_Bits[4].ALU_Bit_I1 
       (.\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[4].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[4] (\EX_Op1_reg[0] [27]),
        .LO(\NLW_Using_FPGA.ALL_Bits[4].ALU_Bit_I1_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[4] (\MEM_DataBus_Addr_reg[0] [25]),
        .Q(Q[27]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[4].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_81),
        .lopt_2(lopt_82),
        .lopt_3(lopt_87));
  ALU_Bit_517 \Using_FPGA.ALL_Bits[5].ALU_Bit_I1 
       (.\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[5].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[5] (\EX_Op1_reg[0] [26]),
        .LO(\NLW_Using_FPGA.ALL_Bits[5].ALU_Bit_I1_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[5] (\MEM_DataBus_Addr_reg[0] [24]),
        .Q(Q[26]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[5].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_78),
        .lopt_2(lopt_79),
        .lopt_3(lopt_86));
  ALU_Bit_518 \Using_FPGA.ALL_Bits[6].ALU_Bit_I1 
       (.\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[6].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[6] (\EX_Op1_reg[0] [25]),
        .LO(alu_carry_25),
        .\MEM_DataBus_Addr_reg[6] (\MEM_DataBus_Addr_reg[0] [23]),
        .Q(Q[25]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[6].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_78),
        .lopt_10(lopt_87),
        .lopt_11(lopt_88),
        .lopt_2(lopt_79),
        .lopt_3(\NLW_Using_FPGA.ALL_Bits[6].ALU_Bit_I1_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_81),
        .lopt_5(lopt_82),
        .lopt_6(lopt_83),
        .lopt_7(lopt_84),
        .lopt_8(lopt_85),
        .lopt_9(lopt_86));
  ALU_Bit_519 \Using_FPGA.ALL_Bits[7].ALU_Bit_I1 
       (.\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(alu_carry_25),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[7] (\EX_Op1_reg[0] [24]),
        .LO(\NLW_Using_FPGA.ALL_Bits[7].ALU_Bit_I1_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[7] (\MEM_DataBus_Addr_reg[0] [22]),
        .Q(Q[24]),
        .lopt(lopt_71),
        .lopt_1(lopt_72),
        .lopt_2(lopt_73),
        .lopt_3(lopt_76));
  ALU_Bit_520 \Using_FPGA.ALL_Bits[8].ALU_Bit_I1 
       (.\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[8].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[8] (\EX_Op1_reg[0] [23]),
        .LO(\NLW_Using_FPGA.ALL_Bits[8].ALU_Bit_I1_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[8] (\MEM_DataBus_Addr_reg[0] [21]),
        .Q(Q[23]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[8].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_69),
        .lopt_2(lopt_70),
        .lopt_3(lopt_75));
  ALU_Bit_521 \Using_FPGA.ALL_Bits[9].ALU_Bit_I1 
       (.\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryIn(\NLW_Using_FPGA.ALL_Bits[9].ALU_Bit_I1_EX_CarryIn_UNCONNECTED ),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[9].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[9] (\EX_Op1_reg[0] [22]),
        .\MEM_DataBus_Addr_reg[9] (\MEM_DataBus_Addr_reg[0] [20]),
        .Q(Q[22]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[9].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_66),
        .lopt_2(lopt_67),
        .lopt_3(lopt_74));
  LUT4 #(
    .INIT(16'h1000)) 
    ex_subtract_op
       (.I0(EX_ALU_Sel_Logic),
        .I1(ex_use_carry),
        .I2(\EX_ALU_Op_reg[0] [0]),
        .I3(\EX_ALU_Op_reg[0] [1]),
        .O(DI));
endmodule

module ALU_Bit
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[10] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[10] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[10] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[10] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[10] ;
  wire LO;
  wire [0:0]\MEM_DataBus_Addr_reg[10] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire lopt_1;
  wire lopt_10;
  wire lopt_11;
  wire lopt_2;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_3_UNCONNECTED ;

  MB_LUT6_2_581 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[10] (\EX_Op1_reg[10] ),
        .Q(Q),
        .S(alu_AddSub));
  microblaze_v10_0_3_MB_MUXCY_XORCY_582 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .LO(LO),
        .\MEM_DataBus_Addr_reg[10] (\MEM_DataBus_Addr_reg[10] ),
        .S(alu_AddSub),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_1),
        .lopt_10(lopt_10),
        .lopt_11(lopt_11),
        .lopt_2(lopt_2),
        .lopt_3(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .lopt_9(lopt_9));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ALU_Bit_492
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[11] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[11] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[11] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[11] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_CarryOut;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[11] ;
  wire [0:0]\MEM_DataBus_Addr_reg[11] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire lopt;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  MB_LUT6_2_579 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[11] (\EX_Op1_reg[11] ),
        .Q(Q),
        .S(alu_AddSub));
  microblaze_v10_0_3_MB_MUXCY_XORCY_580 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .EX_CarryOut(EX_CarryOut),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[11] (\MEM_DataBus_Addr_reg[11] ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(lopt),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ALU_Bit_493
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[12] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[12] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[12] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[12] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[12] ;
  wire [0:0]\MEM_DataBus_Addr_reg[12] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  MB_LUT6_2_577 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[12] (\EX_Op1_reg[12] ),
        .Q(Q),
        .S(alu_AddSub));
  microblaze_v10_0_3_MB_MUXCY_XORCY_578 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[12] (\MEM_DataBus_Addr_reg[12] ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ALU_Bit_494
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[13] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[13] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[13] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[13] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[13] ;
  wire [0:0]\MEM_DataBus_Addr_reg[13] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  MB_LUT6_2_575 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[13] (\EX_Op1_reg[13] ),
        .Q(Q),
        .S(alu_AddSub));
  microblaze_v10_0_3_MB_MUXCY_XORCY_576 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[13] (\MEM_DataBus_Addr_reg[13] ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ALU_Bit_495
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[14] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[14] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[14] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[14] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[14] ;
  wire LO;
  wire [0:0]\MEM_DataBus_Addr_reg[14] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire lopt_1;
  wire lopt_10;
  wire lopt_11;
  wire lopt_2;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_3_UNCONNECTED ;

  MB_LUT6_2_573 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[14] (\EX_Op1_reg[14] ),
        .Q(Q),
        .S(alu_AddSub));
  microblaze_v10_0_3_MB_MUXCY_XORCY_574 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .LO(LO),
        .\MEM_DataBus_Addr_reg[14] (\MEM_DataBus_Addr_reg[14] ),
        .S(alu_AddSub),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_1),
        .lopt_10(lopt_10),
        .lopt_11(lopt_11),
        .lopt_2(lopt_2),
        .lopt_3(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .lopt_9(lopt_9));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ALU_Bit_496
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[15] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[15] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[15] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[15] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_CarryOut;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[15] ;
  wire [0:0]\MEM_DataBus_Addr_reg[15] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire lopt;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  MB_LUT6_2_571 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[15] (\EX_Op1_reg[15] ),
        .Q(Q),
        .S(alu_AddSub));
  microblaze_v10_0_3_MB_MUXCY_XORCY_572 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .EX_CarryOut(EX_CarryOut),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[15] (\MEM_DataBus_Addr_reg[15] ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(lopt),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ALU_Bit_497
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[16] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[16] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[16] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[16] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[16] ;
  wire [0:0]\MEM_DataBus_Addr_reg[16] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  MB_LUT6_2_569 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[16] (\EX_Op1_reg[16] ),
        .Q(Q),
        .S(alu_AddSub));
  microblaze_v10_0_3_MB_MUXCY_XORCY_570 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[16] (\MEM_DataBus_Addr_reg[16] ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ALU_Bit_498
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[17] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[17] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[17] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[17] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[17] ;
  wire [0:0]\MEM_DataBus_Addr_reg[17] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  MB_LUT6_2_567 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[17] (\EX_Op1_reg[17] ),
        .Q(Q),
        .S(alu_AddSub));
  microblaze_v10_0_3_MB_MUXCY_XORCY_568 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[17] (\MEM_DataBus_Addr_reg[17] ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ALU_Bit_499
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[18] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[18] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[18] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[18] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[18] ;
  wire LO;
  wire [0:0]\MEM_DataBus_Addr_reg[18] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire lopt_1;
  wire lopt_10;
  wire lopt_11;
  wire lopt_2;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_3_UNCONNECTED ;

  MB_LUT6_2_565 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[18] (\EX_Op1_reg[18] ),
        .Q(Q),
        .S(alu_AddSub));
  microblaze_v10_0_3_MB_MUXCY_XORCY_566 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .LO(LO),
        .\MEM_DataBus_Addr_reg[18] (\MEM_DataBus_Addr_reg[18] ),
        .S(alu_AddSub),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_1),
        .lopt_10(lopt_10),
        .lopt_11(lopt_11),
        .lopt_2(lopt_2),
        .lopt_3(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .lopt_9(lopt_9));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ALU_Bit_500
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[19] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[19] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[19] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[19] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_CarryOut;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[19] ;
  wire [0:0]\MEM_DataBus_Addr_reg[19] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire lopt;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  MB_LUT6_2_563 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[19] (\EX_Op1_reg[19] ),
        .Q(Q),
        .S(alu_AddSub));
  microblaze_v10_0_3_MB_MUXCY_XORCY_564 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .EX_CarryOut(EX_CarryOut),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[19] (\MEM_DataBus_Addr_reg[19] ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(lopt),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ALU_Bit_501
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[1] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[1] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[1] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[1] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[1] ;
  wire [0:0]\MEM_DataBus_Addr_reg[1] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  MB_LUT6_2_561 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[1] (\EX_Op1_reg[1] ),
        .Q(Q),
        .S(alu_AddSub));
  microblaze_v10_0_3_MB_MUXCY_XORCY_562 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[1] (\MEM_DataBus_Addr_reg[1] ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ALU_Bit_502
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[20] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[20] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[20] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[20] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[20] ;
  wire [0:0]\MEM_DataBus_Addr_reg[20] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  MB_LUT6_2_559 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[20] (\EX_Op1_reg[20] ),
        .Q(Q),
        .S(alu_AddSub));
  microblaze_v10_0_3_MB_MUXCY_XORCY_560 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[20] (\MEM_DataBus_Addr_reg[20] ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ALU_Bit_503
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[21] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[21] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[21] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[21] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[21] ;
  wire [0:0]\MEM_DataBus_Addr_reg[21] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  MB_LUT6_2_557 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[21] (\EX_Op1_reg[21] ),
        .Q(Q),
        .S(alu_AddSub));
  microblaze_v10_0_3_MB_MUXCY_XORCY_558 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[21] (\MEM_DataBus_Addr_reg[21] ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ALU_Bit_504
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[22] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[22] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[22] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[22] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[22] ;
  wire LO;
  wire [0:0]\MEM_DataBus_Addr_reg[22] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire lopt_1;
  wire lopt_10;
  wire lopt_11;
  wire lopt_2;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_3_UNCONNECTED ;

  MB_LUT6_2_555 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[22] (\EX_Op1_reg[22] ),
        .Q(Q),
        .S(alu_AddSub));
  microblaze_v10_0_3_MB_MUXCY_XORCY_556 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .LO(LO),
        .\MEM_DataBus_Addr_reg[22] (\MEM_DataBus_Addr_reg[22] ),
        .S(alu_AddSub),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_1),
        .lopt_10(lopt_10),
        .lopt_11(lopt_11),
        .lopt_2(lopt_2),
        .lopt_3(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .lopt_9(lopt_9));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ALU_Bit_505
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[23] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[23] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[23] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[23] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_CarryOut;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[23] ;
  wire [0:0]\MEM_DataBus_Addr_reg[23] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire lopt;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  MB_LUT6_2_553 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[23] (\EX_Op1_reg[23] ),
        .Q(Q),
        .S(alu_AddSub));
  microblaze_v10_0_3_MB_MUXCY_XORCY_554 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .EX_CarryOut(EX_CarryOut),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[23] (\MEM_DataBus_Addr_reg[23] ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(lopt),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ALU_Bit_506
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[24] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[24] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[24] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[24] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[24] ;
  wire [0:0]\MEM_DataBus_Addr_reg[24] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  MB_LUT6_2_551 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[24] (\EX_Op1_reg[24] ),
        .Q(Q),
        .S(alu_AddSub));
  microblaze_v10_0_3_MB_MUXCY_XORCY_552 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[24] (\MEM_DataBus_Addr_reg[24] ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ALU_Bit_507
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[25] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[25] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[25] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[25] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[25] ;
  wire [0:0]\MEM_DataBus_Addr_reg[25] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  MB_LUT6_2_549 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[25] (\EX_Op1_reg[25] ),
        .Q(Q),
        .S(alu_AddSub));
  microblaze_v10_0_3_MB_MUXCY_XORCY_550 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[25] (\MEM_DataBus_Addr_reg[25] ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ALU_Bit_508
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[26] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[26] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[26] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[26] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[26] ;
  wire LO;
  wire [0:0]\MEM_DataBus_Addr_reg[26] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire lopt_1;
  wire lopt_10;
  wire lopt_11;
  wire lopt_2;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_3_UNCONNECTED ;

  MB_LUT6_2_547 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[26] (\EX_Op1_reg[26] ),
        .Q(Q),
        .S(alu_AddSub));
  microblaze_v10_0_3_MB_MUXCY_XORCY_548 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .LO(LO),
        .\MEM_DataBus_Addr_reg[26] (\MEM_DataBus_Addr_reg[26] ),
        .S(alu_AddSub),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_1),
        .lopt_10(lopt_10),
        .lopt_11(lopt_11),
        .lopt_2(lopt_2),
        .lopt_3(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .lopt_9(lopt_9));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ALU_Bit_509
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[27] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[27] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[27] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[27] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_CarryOut;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[27] ;
  wire [0:0]\MEM_DataBus_Addr_reg[27] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire lopt;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  MB_LUT6_2_545 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[27] (\EX_Op1_reg[27] ),
        .Q(Q),
        .S(alu_AddSub));
  microblaze_v10_0_3_MB_MUXCY_XORCY_546 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .EX_CarryOut(EX_CarryOut),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[27] (\MEM_DataBus_Addr_reg[27] ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(lopt),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ALU_Bit_510
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[28] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[28] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[28] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[28] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[28] ;
  wire [0:0]\MEM_DataBus_Addr_reg[28] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  MB_LUT6_2_543 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[28] (\EX_Op1_reg[28] ),
        .Q(Q),
        .S(alu_AddSub));
  microblaze_v10_0_3_MB_MUXCY_XORCY_544 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[28] (\MEM_DataBus_Addr_reg[28] ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ALU_Bit_511
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[29] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[29] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[29] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[29] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[29] ;
  wire [0:0]\MEM_DataBus_Addr_reg[29] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  MB_LUT6_2_541 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[29] (\EX_Op1_reg[29] ),
        .Q(Q),
        .S(alu_AddSub));
  microblaze_v10_0_3_MB_MUXCY_XORCY_542 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[29] (\MEM_DataBus_Addr_reg[29] ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ALU_Bit_512
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[2] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[2] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[2] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[2] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;

  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[2] ;
  wire LO;
  wire [0:0]\MEM_DataBus_Addr_reg[2] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire lopt_1;
  wire lopt_10;
  wire lopt_2;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_3_UNCONNECTED ;

  MB_LUT6_2_539 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[2] (\EX_Op1_reg[2] ),
        .Q(Q),
        .S(alu_AddSub));
  microblaze_v10_0_3_MB_MUXCY_XORCY_540 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .LO(LO),
        .\MEM_DataBus_Addr_reg[2] (\MEM_DataBus_Addr_reg[2] ),
        .S(alu_AddSub),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_1),
        .lopt_10(lopt_10),
        .lopt_2(lopt_2),
        .lopt_3(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .lopt_9(lopt_9));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ALU_Bit_513
   (EX_CarryOut,
    ex_databus_addr,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[30] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output EX_CarryOut;
  output [0:0]ex_databus_addr;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[30] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[30] ;
  wire LO;
  wire [0:0]Q;
  wire alu_AddSub;
  wire [0:0]ex_databus_addr;
  wire lopt_1;
  wire lopt_10;
  wire lopt_11;
  wire lopt_2;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_3_UNCONNECTED ;

  MB_LUT6_2_537 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[30] (\EX_Op1_reg[30] ),
        .Q(Q),
        .S(alu_AddSub));
  microblaze_v10_0_3_MB_MUXCY_XORCY_538 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .LO(LO),
        .S(alu_AddSub),
        .ex_databus_addr(ex_databus_addr),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_1),
        .lopt_10(lopt_10),
        .lopt_11(lopt_11),
        .lopt_2(lopt_2),
        .lopt_3(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .lopt_9(lopt_9));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ALU_Bit_514
   (EX_CarryOut,
    ex_databus_addr,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[31] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    EX_CarryIn,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]ex_databus_addr;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[31] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input EX_CarryIn;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_CarryOut;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[31] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire [0:0]ex_databus_addr;
  wire lopt;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryIn_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  MB_LUT6_2_535 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[31] (\EX_Op1_reg[31] ),
        .Q(Q),
        .S(alu_AddSub));
  microblaze_v10_0_3_MB_MUXCY_XORCY_536 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .EX_CarryIn(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryIn_UNCONNECTED ),
        .EX_CarryOut(EX_CarryOut),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .ex_databus_addr(ex_databus_addr),
        .lopt(lopt),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ALU_Bit_515
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[3] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[3] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[3] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[3] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_CarryOut;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[3] ;
  wire [0:0]\MEM_DataBus_Addr_reg[3] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire lopt;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  MB_LUT6_2_533 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[3] (\EX_Op1_reg[3] ),
        .Q(Q),
        .S(alu_AddSub));
  microblaze_v10_0_3_MB_MUXCY_XORCY_534 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .EX_CarryOut(EX_CarryOut),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[3] (\MEM_DataBus_Addr_reg[3] ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(lopt),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ALU_Bit_516
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[4] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[4] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[4] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[4] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[4] ;
  wire [0:0]\MEM_DataBus_Addr_reg[4] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  MB_LUT6_2_531 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[4] (\EX_Op1_reg[4] ),
        .Q(Q),
        .S(alu_AddSub));
  microblaze_v10_0_3_MB_MUXCY_XORCY_532 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[4] (\MEM_DataBus_Addr_reg[4] ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ALU_Bit_517
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[5] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[5] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[5] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[5] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[5] ;
  wire [0:0]\MEM_DataBus_Addr_reg[5] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  MB_LUT6_2_529 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[5] (\EX_Op1_reg[5] ),
        .Q(Q),
        .S(alu_AddSub));
  microblaze_v10_0_3_MB_MUXCY_XORCY_530 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[5] (\MEM_DataBus_Addr_reg[5] ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ALU_Bit_518
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[6] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[6] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[6] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[6] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[6] ;
  wire LO;
  wire [0:0]\MEM_DataBus_Addr_reg[6] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire lopt_1;
  wire lopt_10;
  wire lopt_11;
  wire lopt_2;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_3_UNCONNECTED ;

  MB_LUT6_2_527 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[6] (\EX_Op1_reg[6] ),
        .Q(Q),
        .S(alu_AddSub));
  microblaze_v10_0_3_MB_MUXCY_XORCY_528 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .LO(LO),
        .\MEM_DataBus_Addr_reg[6] (\MEM_DataBus_Addr_reg[6] ),
        .S(alu_AddSub),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_1),
        .lopt_10(lopt_10),
        .lopt_11(lopt_11),
        .lopt_2(lopt_2),
        .lopt_3(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .lopt_9(lopt_9));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ALU_Bit_519
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[7] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[7] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[7] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[7] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_CarryOut;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[7] ;
  wire [0:0]\MEM_DataBus_Addr_reg[7] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire lopt;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  MB_LUT6_2_525 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[7] (\EX_Op1_reg[7] ),
        .Q(Q),
        .S(alu_AddSub));
  microblaze_v10_0_3_MB_MUXCY_XORCY_526 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .EX_CarryOut(EX_CarryOut),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[7] (\MEM_DataBus_Addr_reg[7] ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(lopt),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ALU_Bit_520
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[8] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[8] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[8] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[8] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[8] ;
  wire [0:0]\MEM_DataBus_Addr_reg[8] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  MB_LUT6_2_523 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[8] (\EX_Op1_reg[8] ),
        .Q(Q),
        .S(alu_AddSub));
  microblaze_v10_0_3_MB_MUXCY_XORCY_524 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[8] (\MEM_DataBus_Addr_reg[8] ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ALU_Bit_521
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[9] ,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[9] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    EX_CarryIn,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[9] ;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[9] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input EX_CarryIn;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[9] ;
  wire [0:0]\MEM_DataBus_Addr_reg[9] ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryIn_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  MB_LUT6_2 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[9] (\EX_Op1_reg[9] ),
        .Q(Q),
        .S(alu_AddSub));
  microblaze_v10_0_3_MB_MUXCY_XORCY_522 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .EX_CarryIn(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryIn_UNCONNECTED ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[9] (\MEM_DataBus_Addr_reg[9] ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module ALU_Bit__parameterized2
   (\Using_FPGA.Native ,
    \MEM_DataBus_Addr_reg[0] ,
    EX_CMP_Op_reg,
    ex_unsigned_op,
    LO,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[0] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    S,
    ex_valid_reg,
    ex_load_shift_carry,
    ex_load_alu_carry_reg,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4);
  output \Using_FPGA.Native ;
  output [0:0]\MEM_DataBus_Addr_reg[0] ;
  input EX_CMP_Op_reg;
  input ex_unsigned_op;
  input LO;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [1:0]\EX_Op1_reg[0] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input S;
  input ex_valid_reg;
  input ex_load_shift_carry;
  input ex_load_alu_carry_reg;
  input lopt;
  input lopt_1;
  output lopt_2;
  output lopt_3;
  input lopt_4;

  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [1:0]\EX_Op1_reg[0] ;
  wire [0:0]\MEM_DataBus_Addr_reg[0] ;
  wire [0:0]Q;
  wire S;
  wire \Using_FPGA.Native ;
  wire alu_AddSub;
  wire alu_AddSub_1;
  wire ex_load_alu_carry_reg;
  wire ex_load_shift_carry;
  wire ex_valid_reg;
  wire lopt_1;
  wire \^lopt_2 ;
  wire op2_is_1;
  wire [0:0]\NLW_Last_Bit.I_ALU_LUT_2_EX_ALU_Op_reg[0]_UNCONNECTED ;
  wire \NLW_Last_Bit.MUXCY_XOR_I_CI_UNCONNECTED ;
  wire \NLW_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;

  assign \^lopt_2  = lopt_4;
  assign lopt_2 = op2_is_1;
  assign lopt_3 = alu_AddSub;
  MB_LUT4 \Last_Bit.I_ALU_LUT_2 
       (.\EX_ALU_Op_reg[0] (\NLW_Last_Bit.I_ALU_LUT_2_EX_ALU_Op_reg[0]_UNCONNECTED [0]),
        .EX_CMP_Op_reg(S),
        .Q(Q),
        .S(alu_AddSub),
        .alu_AddSub_1(alu_AddSub_1));
  microblaze_v10_0_3_MB_LUT6__parameterized5 \Last_Bit.I_ALU_LUT_V5 
       (.\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[0] (\EX_Op1_reg[0] [1]),
        .Q(Q),
        .alu_AddSub_1(alu_AddSub_1));
  MB_MULT_AND \Last_Bit.MULT_AND_I 
       (.DI(op2_is_1),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] [1]),
        .Q(Q));
  microblaze_v10_0_3_MB_MUXCY_XORCY_583 \Last_Bit.MUXCY_XOR_I 
       (.CI(\NLW_Last_Bit.MUXCY_XOR_I_CI_UNCONNECTED ),
        .DI(\NLW_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .\EX_Op1_reg[31] (\EX_Op1_reg[0] [0]),
        .\MEM_DataBus_Addr_reg[0] (\MEM_DataBus_Addr_reg[0] ),
        .S(\NLW_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .ex_load_alu_carry_reg(ex_load_alu_carry_reg),
        .ex_load_shift_carry(ex_load_shift_carry),
        .ex_valid_reg(ex_valid_reg),
        .lopt(lopt_1),
        .lopt_1(\^lopt_2 ));
endmodule

module Byte_Doublet_Handle_gti
   (wb_read_msb_doublet_sel_reg_0,
    wb_read_lsb_1_sel,
    wb_read_msb_doublet_sel,
    \wb_read_lsb_1_sel_reg[0]_0 ,
    \trace_data_write_value_i_reg[0] ,
    \LOCKSTEP_Out_reg[3031] ,
    sync_reset,
    ex_branch_with_delayslot_reg,
    ex_reverse_mem_access,
    Clk,
    mem_valid_reg,
    mem_byte_access,
    mem_doublet_access,
    D,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    mem_byte_access_reg);
  output wb_read_msb_doublet_sel_reg_0;
  output [0:0]wb_read_lsb_1_sel;
  output wb_read_msb_doublet_sel;
  output [0:0]\wb_read_lsb_1_sel_reg[0]_0 ;
  output [35:0]\trace_data_write_value_i_reg[0] ;
  output [1:0]\LOCKSTEP_Out_reg[3031] ;
  input sync_reset;
  input ex_branch_with_delayslot_reg;
  input ex_reverse_mem_access;
  input Clk;
  input mem_valid_reg;
  input mem_byte_access;
  input mem_doublet_access;
  input [31:0]D;
  input [3:0]\Using_FPGA.Native ;
  input [1:0]\Using_FPGA.Native_0 ;
  input [0:0]mem_byte_access_reg;

  wire Clk;
  wire [31:0]D;
  wire [1:0]\LOCKSTEP_Out_reg[3031] ;
  wire [1:0]\Using_FPGA.Native_0 ;
  wire ex_branch_with_delayslot_reg;
  wire ex_reverse_mem_access;
  wire mem_byte_access;
  wire [0:0]mem_byte_access_reg;
  wire \mem_byte_selects_reg_n_0_[1] ;
  wire mem_doublet_access;
  wire mem_valid_reg;
  wire sync_reset;
  wire [35:0]\trace_data_write_value_i_reg[0] ;
  wire [0:0]wb_read_lsb_1_sel;
  wire \wb_read_lsb_1_sel[0]_i_1_n_0 ;
  wire [0:0]\wb_read_lsb_1_sel_reg[0]_0 ;
  wire \wb_read_lsb_sel[1]_i_1_n_0 ;
  wire wb_read_msb_doublet_sel;
  wire wb_read_msb_doublet_sel_reg_0;

  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[0] 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(D[31]),
        .Q(\trace_data_write_value_i_reg[0] [35]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[10] 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(D[21]),
        .Q(\trace_data_write_value_i_reg[0] [25]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[11] 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(D[20]),
        .Q(\trace_data_write_value_i_reg[0] [24]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[12] 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(D[19]),
        .Q(\trace_data_write_value_i_reg[0] [23]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[13] 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(D[18]),
        .Q(\trace_data_write_value_i_reg[0] [22]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[14] 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(D[17]),
        .Q(\trace_data_write_value_i_reg[0] [21]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[15] 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(D[16]),
        .Q(\trace_data_write_value_i_reg[0] [20]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[16] 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(D[15]),
        .Q(\trace_data_write_value_i_reg[0] [19]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[17] 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(D[14]),
        .Q(\trace_data_write_value_i_reg[0] [18]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[18] 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(D[13]),
        .Q(\trace_data_write_value_i_reg[0] [17]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[19] 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(D[12]),
        .Q(\trace_data_write_value_i_reg[0] [16]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[1] 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(D[30]),
        .Q(\trace_data_write_value_i_reg[0] [34]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[20] 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(D[11]),
        .Q(\trace_data_write_value_i_reg[0] [15]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[21] 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(D[10]),
        .Q(\trace_data_write_value_i_reg[0] [14]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[22] 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(D[9]),
        .Q(\trace_data_write_value_i_reg[0] [13]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[23] 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(D[8]),
        .Q(\trace_data_write_value_i_reg[0] [12]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[24] 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(D[7]),
        .Q(\trace_data_write_value_i_reg[0] [11]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[25] 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(D[6]),
        .Q(\trace_data_write_value_i_reg[0] [10]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[26] 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(D[5]),
        .Q(\trace_data_write_value_i_reg[0] [9]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[27] 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(D[4]),
        .Q(\trace_data_write_value_i_reg[0] [8]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[28] 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(D[3]),
        .Q(\trace_data_write_value_i_reg[0] [7]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[29] 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(D[2]),
        .Q(\trace_data_write_value_i_reg[0] [6]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[2] 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(D[29]),
        .Q(\trace_data_write_value_i_reg[0] [33]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[30] 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(D[1]),
        .Q(\trace_data_write_value_i_reg[0] [5]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[31] 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(D[0]),
        .Q(\trace_data_write_value_i_reg[0] [4]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[3] 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(D[28]),
        .Q(\trace_data_write_value_i_reg[0] [32]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[4] 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(D[27]),
        .Q(\trace_data_write_value_i_reg[0] [31]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[5] 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(D[26]),
        .Q(\trace_data_write_value_i_reg[0] [30]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[6] 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(D[25]),
        .Q(\trace_data_write_value_i_reg[0] [29]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[7] 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(D[24]),
        .Q(\trace_data_write_value_i_reg[0] [28]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[8] 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(D[23]),
        .Q(\trace_data_write_value_i_reg[0] [27]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[9] 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(D[22]),
        .Q(\trace_data_write_value_i_reg[0] [26]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_byte_selects_reg[0] 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(\Using_FPGA.Native_0 [1]),
        .Q(\wb_read_lsb_1_sel_reg[0]_0 ),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_byte_selects_reg[1] 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(\Using_FPGA.Native_0 [0]),
        .Q(\mem_byte_selects_reg_n_0_[1] ),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    mem_reverse_byteorder_reg
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(ex_reverse_mem_access),
        .Q(wb_read_msb_doublet_sel_reg_0),
        .R(sync_reset));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT3 #(
    .INIT(8'h8B)) 
    \wb_read_lsb_1_sel[0]_i_1 
       (.I0(\wb_read_lsb_1_sel_reg[0]_0 ),
        .I1(mem_doublet_access),
        .I2(wb_read_msb_doublet_sel_reg_0),
        .O(\wb_read_lsb_1_sel[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wb_read_lsb_1_sel_reg[0] 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(\wb_read_lsb_1_sel[0]_i_1_n_0 ),
        .Q(wb_read_lsb_1_sel),
        .R(sync_reset));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT3 #(
    .INIT(8'h8B)) 
    \wb_read_lsb_sel[1]_i_1 
       (.I0(\mem_byte_selects_reg_n_0_[1] ),
        .I1(mem_byte_access),
        .I2(wb_read_msb_doublet_sel_reg_0),
        .O(\wb_read_lsb_sel[1]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wb_read_lsb_sel_reg[0] 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(mem_byte_access_reg),
        .Q(\LOCKSTEP_Out_reg[3031] [1]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \wb_read_lsb_sel_reg[1] 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(\wb_read_lsb_sel[1]_i_1_n_0 ),
        .Q(\LOCKSTEP_Out_reg[3031] [0]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    wb_read_msb_doublet_sel_reg
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(wb_read_msb_doublet_sel_reg_0),
        .Q(wb_read_msb_doublet_sel),
        .R(sync_reset));
endmodule

module DAXI_interface
   (active_access_d1,
    D,
    \LOCKSTEP_Out_reg[3007] ,
    \LOCKSTEP_Out_reg[3031] ,
    \LOCKSTEP_Out_reg[3023] ,
    \LOCKSTEP_Out_reg[3008] ,
    \LOCKSTEP_Out_reg[3032] ,
    \LOCKSTEP_Out_reg[3024] ,
    \LOCKSTEP_Out_reg[3033] ,
    \LOCKSTEP_Out_reg[3025] ,
    \LOCKSTEP_Out_reg[3009] ,
    \LOCKSTEP_Out_reg[3010] ,
    \LOCKSTEP_Out_reg[3034] ,
    \LOCKSTEP_Out_reg[3026] ,
    \LOCKSTEP_Out_reg[3035] ,
    \LOCKSTEP_Out_reg[3027] ,
    \LOCKSTEP_Out_reg[3011] ,
    \LOCKSTEP_Out_reg[3012] ,
    \LOCKSTEP_Out_reg[3036] ,
    \LOCKSTEP_Out_reg[3028] ,
    \LOCKSTEP_Out_reg[3037] ,
    \LOCKSTEP_Out_reg[3029] ,
    \LOCKSTEP_Out_reg[3013] ,
    \LOCKSTEP_Out_reg[3038] ,
    \LOCKSTEP_Out_reg[3030] ,
    \LOCKSTEP_Out_reg[3014] ,
    \LOCKSTEP_Out_reg[3015] ,
    \LOCKSTEP_Out_reg[3016] ,
    \LOCKSTEP_Out_reg[3017] ,
    \LOCKSTEP_Out_reg[3018] ,
    \LOCKSTEP_Out_reg[3019] ,
    \LOCKSTEP_Out_reg[3020] ,
    \LOCKSTEP_Out_reg[3021] ,
    \LOCKSTEP_Out_reg[3022] ,
    S,
    sync_reset,
    Clk,
    MEM_DataBus_Write_reg,
    MEM_DataBus_Write_reg_0,
    MEM_DataBus_Write_reg_1,
    Q,
    wb_read_msb_doublet_sel,
    \wb_read_lsb_sel_reg[0] ,
    wb_read_lsb_1_sel,
    DReady,
    M_AXI_DP_BVALID,
    M_AXI_DP_RVALID,
    new_request,
    \Serial_Dbg_Intf.force_stop_cmd_i_reg ,
    MEM_DataBus_Access_reg,
    M_AXI_DP_RDATA);
  output active_access_d1;
  output [2:0]D;
  output \LOCKSTEP_Out_reg[3007] ;
  output \LOCKSTEP_Out_reg[3031] ;
  output \LOCKSTEP_Out_reg[3023] ;
  output \LOCKSTEP_Out_reg[3008] ;
  output \LOCKSTEP_Out_reg[3032] ;
  output \LOCKSTEP_Out_reg[3024] ;
  output \LOCKSTEP_Out_reg[3033] ;
  output \LOCKSTEP_Out_reg[3025] ;
  output \LOCKSTEP_Out_reg[3009] ;
  output \LOCKSTEP_Out_reg[3010] ;
  output \LOCKSTEP_Out_reg[3034] ;
  output \LOCKSTEP_Out_reg[3026] ;
  output \LOCKSTEP_Out_reg[3035] ;
  output \LOCKSTEP_Out_reg[3027] ;
  output \LOCKSTEP_Out_reg[3011] ;
  output \LOCKSTEP_Out_reg[3012] ;
  output \LOCKSTEP_Out_reg[3036] ;
  output \LOCKSTEP_Out_reg[3028] ;
  output \LOCKSTEP_Out_reg[3037] ;
  output \LOCKSTEP_Out_reg[3029] ;
  output \LOCKSTEP_Out_reg[3013] ;
  output \LOCKSTEP_Out_reg[3038] ;
  output \LOCKSTEP_Out_reg[3030] ;
  output \LOCKSTEP_Out_reg[3014] ;
  output \LOCKSTEP_Out_reg[3015] ;
  output \LOCKSTEP_Out_reg[3016] ;
  output \LOCKSTEP_Out_reg[3017] ;
  output \LOCKSTEP_Out_reg[3018] ;
  output \LOCKSTEP_Out_reg[3019] ;
  output \LOCKSTEP_Out_reg[3020] ;
  output \LOCKSTEP_Out_reg[3021] ;
  output \LOCKSTEP_Out_reg[3022] ;
  output S;
  input sync_reset;
  input Clk;
  input MEM_DataBus_Write_reg;
  input MEM_DataBus_Write_reg_0;
  input MEM_DataBus_Write_reg_1;
  input [31:0]Q;
  input wb_read_msb_doublet_sel;
  input [1:0]\wb_read_lsb_sel_reg[0] ;
  input [0:0]wb_read_lsb_1_sel;
  input DReady;
  input M_AXI_DP_BVALID;
  input M_AXI_DP_RVALID;
  input new_request;
  input \Serial_Dbg_Intf.force_stop_cmd_i_reg ;
  input [0:0]MEM_DataBus_Access_reg;
  input [31:0]M_AXI_DP_RDATA;

  wire Clk;
  wire [2:0]D;
  wire DReady;
  wire \LOCKSTEP_Out_reg[3007] ;
  wire \LOCKSTEP_Out_reg[3008] ;
  wire \LOCKSTEP_Out_reg[3009] ;
  wire \LOCKSTEP_Out_reg[3010] ;
  wire \LOCKSTEP_Out_reg[3011] ;
  wire \LOCKSTEP_Out_reg[3012] ;
  wire \LOCKSTEP_Out_reg[3013] ;
  wire \LOCKSTEP_Out_reg[3014] ;
  wire \LOCKSTEP_Out_reg[3015] ;
  wire \LOCKSTEP_Out_reg[3016] ;
  wire \LOCKSTEP_Out_reg[3017] ;
  wire \LOCKSTEP_Out_reg[3018] ;
  wire \LOCKSTEP_Out_reg[3019] ;
  wire \LOCKSTEP_Out_reg[3020] ;
  wire \LOCKSTEP_Out_reg[3021] ;
  wire \LOCKSTEP_Out_reg[3022] ;
  wire \LOCKSTEP_Out_reg[3023] ;
  wire \LOCKSTEP_Out_reg[3024] ;
  wire \LOCKSTEP_Out_reg[3025] ;
  wire \LOCKSTEP_Out_reg[3026] ;
  wire \LOCKSTEP_Out_reg[3027] ;
  wire \LOCKSTEP_Out_reg[3028] ;
  wire \LOCKSTEP_Out_reg[3029] ;
  wire \LOCKSTEP_Out_reg[3030] ;
  wire \LOCKSTEP_Out_reg[3031] ;
  wire \LOCKSTEP_Out_reg[3032] ;
  wire \LOCKSTEP_Out_reg[3033] ;
  wire \LOCKSTEP_Out_reg[3034] ;
  wire \LOCKSTEP_Out_reg[3035] ;
  wire \LOCKSTEP_Out_reg[3036] ;
  wire \LOCKSTEP_Out_reg[3037] ;
  wire \LOCKSTEP_Out_reg[3038] ;
  wire MEM_DAXI_Data_Strobe;
  wire [0:0]MEM_DataBus_Access_reg;
  wire MEM_DataBus_Write_reg;
  wire MEM_DataBus_Write_reg_0;
  wire MEM_DataBus_Write_reg_1;
  wire M_AXI_DP_BVALID;
  wire [31:0]M_AXI_DP_RDATA;
  wire M_AXI_DP_RVALID;
  wire [31:0]Q;
  wire S;
  wire \Serial_Dbg_Intf.force_stop_cmd_i_reg ;
  wire \Trace_New_Reg_Value[16]_INST_0_i_2_n_0 ;
  wire \Trace_New_Reg_Value[16]_INST_0_i_3_n_0 ;
  wire \Trace_New_Reg_Value[16]_INST_0_i_4_n_0 ;
  wire \Trace_New_Reg_Value[16]_INST_0_i_5_n_0 ;
  wire \Trace_New_Reg_Value[17]_INST_0_i_2_n_0 ;
  wire \Trace_New_Reg_Value[17]_INST_0_i_3_n_0 ;
  wire \Trace_New_Reg_Value[17]_INST_0_i_4_n_0 ;
  wire \Trace_New_Reg_Value[17]_INST_0_i_5_n_0 ;
  wire \Trace_New_Reg_Value[18]_INST_0_i_2_n_0 ;
  wire \Trace_New_Reg_Value[18]_INST_0_i_3_n_0 ;
  wire \Trace_New_Reg_Value[18]_INST_0_i_4_n_0 ;
  wire \Trace_New_Reg_Value[18]_INST_0_i_5_n_0 ;
  wire \Trace_New_Reg_Value[19]_INST_0_i_2_n_0 ;
  wire \Trace_New_Reg_Value[19]_INST_0_i_3_n_0 ;
  wire \Trace_New_Reg_Value[19]_INST_0_i_4_n_0 ;
  wire \Trace_New_Reg_Value[19]_INST_0_i_5_n_0 ;
  wire \Trace_New_Reg_Value[20]_INST_0_i_2_n_0 ;
  wire \Trace_New_Reg_Value[20]_INST_0_i_3_n_0 ;
  wire \Trace_New_Reg_Value[20]_INST_0_i_4_n_0 ;
  wire \Trace_New_Reg_Value[20]_INST_0_i_5_n_0 ;
  wire \Trace_New_Reg_Value[21]_INST_0_i_2_n_0 ;
  wire \Trace_New_Reg_Value[21]_INST_0_i_3_n_0 ;
  wire \Trace_New_Reg_Value[21]_INST_0_i_4_n_0 ;
  wire \Trace_New_Reg_Value[21]_INST_0_i_5_n_0 ;
  wire \Trace_New_Reg_Value[22]_INST_0_i_2_n_0 ;
  wire \Trace_New_Reg_Value[22]_INST_0_i_3_n_0 ;
  wire \Trace_New_Reg_Value[22]_INST_0_i_4_n_0 ;
  wire \Trace_New_Reg_Value[22]_INST_0_i_5_n_0 ;
  wire \Trace_New_Reg_Value[23]_INST_0_i_2_n_0 ;
  wire \Trace_New_Reg_Value[23]_INST_0_i_3_n_0 ;
  wire \Trace_New_Reg_Value[23]_INST_0_i_4_n_0 ;
  wire \Trace_New_Reg_Value[23]_INST_0_i_5_n_0 ;
  wire active_access;
  wire active_access_d1;
  wire active_access_i_1_n_0;
  wire mem_access_completed0;
  wire new_request;
  wire sync_reset;
  wire wb_dext_Data_Strobe;
  wire [0:31]wb_dext_read_data;
  wire [0:0]wb_read_lsb_1_sel;
  wire [1:0]\wb_read_lsb_sel_reg[0] ;
  wire wb_read_msb_doublet_sel;

  FDRE #(
    .INIT(1'b0)) 
    M_AXI_DP_ARVALID_i_reg
       (.C(Clk),
        .CE(1'b1),
        .D(MEM_DataBus_Write_reg),
        .Q(D[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    M_AXI_DP_AWVALID_i_reg
       (.C(Clk),
        .CE(1'b1),
        .D(MEM_DataBus_Write_reg_1),
        .Q(D[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    M_AXI_DP_WVALID_i_reg
       (.C(Clk),
        .CE(1'b1),
        .D(MEM_DataBus_Write_reg_0),
        .Q(D[1]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hEFEFEFE0AFA0AFA0)) 
    \Trace_New_Reg_Value[0]_INST_0_i_1 
       (.I0(Q[7]),
        .I1(wb_dext_read_data[24]),
        .I2(wb_read_msb_doublet_sel),
        .I3(Q[31]),
        .I4(wb_dext_read_data[0]),
        .I5(wb_dext_Data_Strobe),
        .O(\LOCKSTEP_Out_reg[3007] ));
  LUT6 #(
    .INIT(64'hEFEFEFE0AFA0AFA0)) 
    \Trace_New_Reg_Value[10]_INST_0_i_1 
       (.I0(Q[13]),
        .I1(wb_dext_read_data[18]),
        .I2(wb_read_msb_doublet_sel),
        .I3(Q[21]),
        .I4(wb_dext_read_data[10]),
        .I5(wb_dext_Data_Strobe),
        .O(\LOCKSTEP_Out_reg[3017] ));
  LUT6 #(
    .INIT(64'hEFEFEFE0AFA0AFA0)) 
    \Trace_New_Reg_Value[11]_INST_0_i_1 
       (.I0(Q[12]),
        .I1(wb_dext_read_data[19]),
        .I2(wb_read_msb_doublet_sel),
        .I3(Q[20]),
        .I4(wb_dext_read_data[11]),
        .I5(wb_dext_Data_Strobe),
        .O(\LOCKSTEP_Out_reg[3018] ));
  LUT6 #(
    .INIT(64'hEFEFEFE0AFA0AFA0)) 
    \Trace_New_Reg_Value[12]_INST_0_i_1 
       (.I0(Q[11]),
        .I1(wb_dext_read_data[20]),
        .I2(wb_read_msb_doublet_sel),
        .I3(Q[19]),
        .I4(wb_dext_read_data[12]),
        .I5(wb_dext_Data_Strobe),
        .O(\LOCKSTEP_Out_reg[3019] ));
  LUT6 #(
    .INIT(64'hEFEFEFE0AFA0AFA0)) 
    \Trace_New_Reg_Value[13]_INST_0_i_1 
       (.I0(Q[10]),
        .I1(wb_dext_read_data[21]),
        .I2(wb_read_msb_doublet_sel),
        .I3(Q[18]),
        .I4(wb_dext_read_data[13]),
        .I5(wb_dext_Data_Strobe),
        .O(\LOCKSTEP_Out_reg[3020] ));
  LUT6 #(
    .INIT(64'hEFEFEFE0AFA0AFA0)) 
    \Trace_New_Reg_Value[14]_INST_0_i_1 
       (.I0(Q[9]),
        .I1(wb_dext_read_data[22]),
        .I2(wb_read_msb_doublet_sel),
        .I3(Q[17]),
        .I4(wb_dext_read_data[14]),
        .I5(wb_dext_Data_Strobe),
        .O(\LOCKSTEP_Out_reg[3021] ));
  LUT6 #(
    .INIT(64'hEFEFEFE0AFA0AFA0)) 
    \Trace_New_Reg_Value[15]_INST_0_i_1 
       (.I0(Q[8]),
        .I1(wb_dext_read_data[23]),
        .I2(wb_read_msb_doublet_sel),
        .I3(Q[16]),
        .I4(wb_dext_read_data[15]),
        .I5(wb_dext_Data_Strobe),
        .O(\LOCKSTEP_Out_reg[3022] ));
  LUT6 #(
    .INIT(64'h00330F55FF330F55)) 
    \Trace_New_Reg_Value[16]_INST_0_i_1 
       (.I0(\Trace_New_Reg_Value[16]_INST_0_i_2_n_0 ),
        .I1(\Trace_New_Reg_Value[16]_INST_0_i_3_n_0 ),
        .I2(\Trace_New_Reg_Value[16]_INST_0_i_4_n_0 ),
        .I3(wb_read_lsb_1_sel),
        .I4(wb_read_msb_doublet_sel),
        .I5(\Trace_New_Reg_Value[16]_INST_0_i_5_n_0 ),
        .O(\LOCKSTEP_Out_reg[3023] ));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[16]_INST_0_i_2 
       (.I0(Q[31]),
        .I1(wb_dext_read_data[0]),
        .I2(wb_dext_Data_Strobe),
        .O(\Trace_New_Reg_Value[16]_INST_0_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[16]_INST_0_i_3 
       (.I0(Q[23]),
        .I1(wb_dext_read_data[8]),
        .I2(wb_dext_Data_Strobe),
        .O(\Trace_New_Reg_Value[16]_INST_0_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[16]_INST_0_i_4 
       (.I0(Q[15]),
        .I1(wb_dext_read_data[16]),
        .I2(wb_dext_Data_Strobe),
        .O(\Trace_New_Reg_Value[16]_INST_0_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[16]_INST_0_i_5 
       (.I0(Q[7]),
        .I1(wb_dext_read_data[24]),
        .I2(wb_dext_Data_Strobe),
        .O(\Trace_New_Reg_Value[16]_INST_0_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h00330F55FF330F55)) 
    \Trace_New_Reg_Value[17]_INST_0_i_1 
       (.I0(\Trace_New_Reg_Value[17]_INST_0_i_2_n_0 ),
        .I1(\Trace_New_Reg_Value[17]_INST_0_i_3_n_0 ),
        .I2(\Trace_New_Reg_Value[17]_INST_0_i_4_n_0 ),
        .I3(wb_read_lsb_1_sel),
        .I4(wb_read_msb_doublet_sel),
        .I5(\Trace_New_Reg_Value[17]_INST_0_i_5_n_0 ),
        .O(\LOCKSTEP_Out_reg[3024] ));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[17]_INST_0_i_2 
       (.I0(Q[30]),
        .I1(wb_dext_read_data[1]),
        .I2(wb_dext_Data_Strobe),
        .O(\Trace_New_Reg_Value[17]_INST_0_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[17]_INST_0_i_3 
       (.I0(Q[22]),
        .I1(wb_dext_read_data[9]),
        .I2(wb_dext_Data_Strobe),
        .O(\Trace_New_Reg_Value[17]_INST_0_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[17]_INST_0_i_4 
       (.I0(Q[14]),
        .I1(wb_dext_read_data[17]),
        .I2(wb_dext_Data_Strobe),
        .O(\Trace_New_Reg_Value[17]_INST_0_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[17]_INST_0_i_5 
       (.I0(Q[6]),
        .I1(wb_dext_read_data[25]),
        .I2(wb_dext_Data_Strobe),
        .O(\Trace_New_Reg_Value[17]_INST_0_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h00330F55FF330F55)) 
    \Trace_New_Reg_Value[18]_INST_0_i_1 
       (.I0(\Trace_New_Reg_Value[18]_INST_0_i_2_n_0 ),
        .I1(\Trace_New_Reg_Value[18]_INST_0_i_3_n_0 ),
        .I2(\Trace_New_Reg_Value[18]_INST_0_i_4_n_0 ),
        .I3(wb_read_lsb_1_sel),
        .I4(wb_read_msb_doublet_sel),
        .I5(\Trace_New_Reg_Value[18]_INST_0_i_5_n_0 ),
        .O(\LOCKSTEP_Out_reg[3025] ));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[18]_INST_0_i_2 
       (.I0(Q[29]),
        .I1(wb_dext_read_data[2]),
        .I2(wb_dext_Data_Strobe),
        .O(\Trace_New_Reg_Value[18]_INST_0_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[18]_INST_0_i_3 
       (.I0(Q[21]),
        .I1(wb_dext_read_data[10]),
        .I2(wb_dext_Data_Strobe),
        .O(\Trace_New_Reg_Value[18]_INST_0_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[18]_INST_0_i_4 
       (.I0(Q[13]),
        .I1(wb_dext_read_data[18]),
        .I2(wb_dext_Data_Strobe),
        .O(\Trace_New_Reg_Value[18]_INST_0_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[18]_INST_0_i_5 
       (.I0(Q[5]),
        .I1(wb_dext_read_data[26]),
        .I2(wb_dext_Data_Strobe),
        .O(\Trace_New_Reg_Value[18]_INST_0_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h00330F55FF330F55)) 
    \Trace_New_Reg_Value[19]_INST_0_i_1 
       (.I0(\Trace_New_Reg_Value[19]_INST_0_i_2_n_0 ),
        .I1(\Trace_New_Reg_Value[19]_INST_0_i_3_n_0 ),
        .I2(\Trace_New_Reg_Value[19]_INST_0_i_4_n_0 ),
        .I3(wb_read_lsb_1_sel),
        .I4(wb_read_msb_doublet_sel),
        .I5(\Trace_New_Reg_Value[19]_INST_0_i_5_n_0 ),
        .O(\LOCKSTEP_Out_reg[3026] ));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[19]_INST_0_i_2 
       (.I0(Q[28]),
        .I1(wb_dext_read_data[3]),
        .I2(wb_dext_Data_Strobe),
        .O(\Trace_New_Reg_Value[19]_INST_0_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[19]_INST_0_i_3 
       (.I0(Q[20]),
        .I1(wb_dext_read_data[11]),
        .I2(wb_dext_Data_Strobe),
        .O(\Trace_New_Reg_Value[19]_INST_0_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[19]_INST_0_i_4 
       (.I0(Q[12]),
        .I1(wb_dext_read_data[19]),
        .I2(wb_dext_Data_Strobe),
        .O(\Trace_New_Reg_Value[19]_INST_0_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[19]_INST_0_i_5 
       (.I0(Q[4]),
        .I1(wb_dext_read_data[27]),
        .I2(wb_dext_Data_Strobe),
        .O(\Trace_New_Reg_Value[19]_INST_0_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hEFEFEFE0AFA0AFA0)) 
    \Trace_New_Reg_Value[1]_INST_0_i_1 
       (.I0(Q[6]),
        .I1(wb_dext_read_data[25]),
        .I2(wb_read_msb_doublet_sel),
        .I3(Q[30]),
        .I4(wb_dext_read_data[1]),
        .I5(wb_dext_Data_Strobe),
        .O(\LOCKSTEP_Out_reg[3008] ));
  LUT6 #(
    .INIT(64'h00330F55FF330F55)) 
    \Trace_New_Reg_Value[20]_INST_0_i_1 
       (.I0(\Trace_New_Reg_Value[20]_INST_0_i_2_n_0 ),
        .I1(\Trace_New_Reg_Value[20]_INST_0_i_3_n_0 ),
        .I2(\Trace_New_Reg_Value[20]_INST_0_i_4_n_0 ),
        .I3(wb_read_lsb_1_sel),
        .I4(wb_read_msb_doublet_sel),
        .I5(\Trace_New_Reg_Value[20]_INST_0_i_5_n_0 ),
        .O(\LOCKSTEP_Out_reg[3027] ));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[20]_INST_0_i_2 
       (.I0(Q[27]),
        .I1(wb_dext_read_data[4]),
        .I2(wb_dext_Data_Strobe),
        .O(\Trace_New_Reg_Value[20]_INST_0_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[20]_INST_0_i_3 
       (.I0(Q[19]),
        .I1(wb_dext_read_data[12]),
        .I2(wb_dext_Data_Strobe),
        .O(\Trace_New_Reg_Value[20]_INST_0_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[20]_INST_0_i_4 
       (.I0(Q[11]),
        .I1(wb_dext_read_data[20]),
        .I2(wb_dext_Data_Strobe),
        .O(\Trace_New_Reg_Value[20]_INST_0_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[20]_INST_0_i_5 
       (.I0(Q[3]),
        .I1(wb_dext_read_data[28]),
        .I2(wb_dext_Data_Strobe),
        .O(\Trace_New_Reg_Value[20]_INST_0_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h00330F55FF330F55)) 
    \Trace_New_Reg_Value[21]_INST_0_i_1 
       (.I0(\Trace_New_Reg_Value[21]_INST_0_i_2_n_0 ),
        .I1(\Trace_New_Reg_Value[21]_INST_0_i_3_n_0 ),
        .I2(\Trace_New_Reg_Value[21]_INST_0_i_4_n_0 ),
        .I3(wb_read_lsb_1_sel),
        .I4(wb_read_msb_doublet_sel),
        .I5(\Trace_New_Reg_Value[21]_INST_0_i_5_n_0 ),
        .O(\LOCKSTEP_Out_reg[3028] ));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[21]_INST_0_i_2 
       (.I0(Q[26]),
        .I1(wb_dext_read_data[5]),
        .I2(wb_dext_Data_Strobe),
        .O(\Trace_New_Reg_Value[21]_INST_0_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[21]_INST_0_i_3 
       (.I0(Q[18]),
        .I1(wb_dext_read_data[13]),
        .I2(wb_dext_Data_Strobe),
        .O(\Trace_New_Reg_Value[21]_INST_0_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[21]_INST_0_i_4 
       (.I0(Q[10]),
        .I1(wb_dext_read_data[21]),
        .I2(wb_dext_Data_Strobe),
        .O(\Trace_New_Reg_Value[21]_INST_0_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[21]_INST_0_i_5 
       (.I0(Q[2]),
        .I1(wb_dext_read_data[29]),
        .I2(wb_dext_Data_Strobe),
        .O(\Trace_New_Reg_Value[21]_INST_0_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h00330F55FF330F55)) 
    \Trace_New_Reg_Value[22]_INST_0_i_1 
       (.I0(\Trace_New_Reg_Value[22]_INST_0_i_2_n_0 ),
        .I1(\Trace_New_Reg_Value[22]_INST_0_i_3_n_0 ),
        .I2(\Trace_New_Reg_Value[22]_INST_0_i_4_n_0 ),
        .I3(wb_read_lsb_1_sel),
        .I4(wb_read_msb_doublet_sel),
        .I5(\Trace_New_Reg_Value[22]_INST_0_i_5_n_0 ),
        .O(\LOCKSTEP_Out_reg[3029] ));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[22]_INST_0_i_2 
       (.I0(Q[25]),
        .I1(wb_dext_read_data[6]),
        .I2(wb_dext_Data_Strobe),
        .O(\Trace_New_Reg_Value[22]_INST_0_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[22]_INST_0_i_3 
       (.I0(Q[17]),
        .I1(wb_dext_read_data[14]),
        .I2(wb_dext_Data_Strobe),
        .O(\Trace_New_Reg_Value[22]_INST_0_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[22]_INST_0_i_4 
       (.I0(Q[9]),
        .I1(wb_dext_read_data[22]),
        .I2(wb_dext_Data_Strobe),
        .O(\Trace_New_Reg_Value[22]_INST_0_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[22]_INST_0_i_5 
       (.I0(Q[1]),
        .I1(wb_dext_read_data[30]),
        .I2(wb_dext_Data_Strobe),
        .O(\Trace_New_Reg_Value[22]_INST_0_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h00330F55FF330F55)) 
    \Trace_New_Reg_Value[23]_INST_0_i_1 
       (.I0(\Trace_New_Reg_Value[23]_INST_0_i_2_n_0 ),
        .I1(\Trace_New_Reg_Value[23]_INST_0_i_3_n_0 ),
        .I2(\Trace_New_Reg_Value[23]_INST_0_i_4_n_0 ),
        .I3(wb_read_lsb_1_sel),
        .I4(wb_read_msb_doublet_sel),
        .I5(\Trace_New_Reg_Value[23]_INST_0_i_5_n_0 ),
        .O(\LOCKSTEP_Out_reg[3030] ));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[23]_INST_0_i_2 
       (.I0(Q[24]),
        .I1(wb_dext_read_data[7]),
        .I2(wb_dext_Data_Strobe),
        .O(\Trace_New_Reg_Value[23]_INST_0_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[23]_INST_0_i_3 
       (.I0(Q[16]),
        .I1(wb_dext_read_data[15]),
        .I2(wb_dext_Data_Strobe),
        .O(\Trace_New_Reg_Value[23]_INST_0_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[23]_INST_0_i_4 
       (.I0(Q[8]),
        .I1(wb_dext_read_data[23]),
        .I2(wb_dext_Data_Strobe),
        .O(\Trace_New_Reg_Value[23]_INST_0_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[23]_INST_0_i_5 
       (.I0(Q[0]),
        .I1(wb_dext_read_data[31]),
        .I2(wb_dext_Data_Strobe),
        .O(\Trace_New_Reg_Value[23]_INST_0_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hCCAAFFF0CCAA00F0)) 
    \Trace_New_Reg_Value[24]_INST_0_i_1 
       (.I0(\Trace_New_Reg_Value[16]_INST_0_i_4_n_0 ),
        .I1(\Trace_New_Reg_Value[16]_INST_0_i_5_n_0 ),
        .I2(\Trace_New_Reg_Value[16]_INST_0_i_2_n_0 ),
        .I3(\wb_read_lsb_sel_reg[0] [0]),
        .I4(\wb_read_lsb_sel_reg[0] [1]),
        .I5(\Trace_New_Reg_Value[16]_INST_0_i_3_n_0 ),
        .O(\LOCKSTEP_Out_reg[3031] ));
  LUT6 #(
    .INIT(64'hF0FFCCAAF000CCAA)) 
    \Trace_New_Reg_Value[25]_INST_0_i_1 
       (.I0(\Trace_New_Reg_Value[17]_INST_0_i_2_n_0 ),
        .I1(\Trace_New_Reg_Value[17]_INST_0_i_3_n_0 ),
        .I2(\Trace_New_Reg_Value[17]_INST_0_i_5_n_0 ),
        .I3(\wb_read_lsb_sel_reg[0] [0]),
        .I4(\wb_read_lsb_sel_reg[0] [1]),
        .I5(\Trace_New_Reg_Value[17]_INST_0_i_4_n_0 ),
        .O(\LOCKSTEP_Out_reg[3032] ));
  LUT6 #(
    .INIT(64'hCCAAFFF0CCAA00F0)) 
    \Trace_New_Reg_Value[26]_INST_0_i_1 
       (.I0(\Trace_New_Reg_Value[18]_INST_0_i_4_n_0 ),
        .I1(\Trace_New_Reg_Value[18]_INST_0_i_5_n_0 ),
        .I2(\Trace_New_Reg_Value[18]_INST_0_i_2_n_0 ),
        .I3(\wb_read_lsb_sel_reg[0] [0]),
        .I4(\wb_read_lsb_sel_reg[0] [1]),
        .I5(\Trace_New_Reg_Value[18]_INST_0_i_3_n_0 ),
        .O(\LOCKSTEP_Out_reg[3033] ));
  LUT6 #(
    .INIT(64'hCCAAFFF0CCAA00F0)) 
    \Trace_New_Reg_Value[27]_INST_0_i_1 
       (.I0(\Trace_New_Reg_Value[19]_INST_0_i_4_n_0 ),
        .I1(\Trace_New_Reg_Value[19]_INST_0_i_5_n_0 ),
        .I2(\Trace_New_Reg_Value[19]_INST_0_i_2_n_0 ),
        .I3(\wb_read_lsb_sel_reg[0] [0]),
        .I4(\wb_read_lsb_sel_reg[0] [1]),
        .I5(\Trace_New_Reg_Value[19]_INST_0_i_3_n_0 ),
        .O(\LOCKSTEP_Out_reg[3034] ));
  LUT6 #(
    .INIT(64'hAACCFFF0AACC00F0)) 
    \Trace_New_Reg_Value[28]_INST_0_i_1 
       (.I0(\Trace_New_Reg_Value[20]_INST_0_i_5_n_0 ),
        .I1(\Trace_New_Reg_Value[20]_INST_0_i_4_n_0 ),
        .I2(\Trace_New_Reg_Value[20]_INST_0_i_2_n_0 ),
        .I3(\wb_read_lsb_sel_reg[0] [0]),
        .I4(\wb_read_lsb_sel_reg[0] [1]),
        .I5(\Trace_New_Reg_Value[20]_INST_0_i_3_n_0 ),
        .O(\LOCKSTEP_Out_reg[3035] ));
  LUT6 #(
    .INIT(64'hAACCFFF0AACC00F0)) 
    \Trace_New_Reg_Value[29]_INST_0_i_1 
       (.I0(\Trace_New_Reg_Value[21]_INST_0_i_5_n_0 ),
        .I1(\Trace_New_Reg_Value[21]_INST_0_i_4_n_0 ),
        .I2(\Trace_New_Reg_Value[21]_INST_0_i_2_n_0 ),
        .I3(\wb_read_lsb_sel_reg[0] [0]),
        .I4(\wb_read_lsb_sel_reg[0] [1]),
        .I5(\Trace_New_Reg_Value[21]_INST_0_i_3_n_0 ),
        .O(\LOCKSTEP_Out_reg[3036] ));
  LUT6 #(
    .INIT(64'hEFEFEFE0AFA0AFA0)) 
    \Trace_New_Reg_Value[2]_INST_0_i_1 
       (.I0(Q[5]),
        .I1(wb_dext_read_data[26]),
        .I2(wb_read_msb_doublet_sel),
        .I3(Q[29]),
        .I4(wb_dext_read_data[2]),
        .I5(wb_dext_Data_Strobe),
        .O(\LOCKSTEP_Out_reg[3009] ));
  LUT6 #(
    .INIT(64'hAACCFFF0AACC00F0)) 
    \Trace_New_Reg_Value[30]_INST_0_i_1 
       (.I0(\Trace_New_Reg_Value[22]_INST_0_i_5_n_0 ),
        .I1(\Trace_New_Reg_Value[22]_INST_0_i_4_n_0 ),
        .I2(\Trace_New_Reg_Value[22]_INST_0_i_2_n_0 ),
        .I3(\wb_read_lsb_sel_reg[0] [0]),
        .I4(\wb_read_lsb_sel_reg[0] [1]),
        .I5(\Trace_New_Reg_Value[22]_INST_0_i_3_n_0 ),
        .O(\LOCKSTEP_Out_reg[3037] ));
  LUT6 #(
    .INIT(64'hAACCFFF0AACC00F0)) 
    \Trace_New_Reg_Value[31]_INST_0_i_1 
       (.I0(\Trace_New_Reg_Value[23]_INST_0_i_5_n_0 ),
        .I1(\Trace_New_Reg_Value[23]_INST_0_i_4_n_0 ),
        .I2(\Trace_New_Reg_Value[23]_INST_0_i_2_n_0 ),
        .I3(\wb_read_lsb_sel_reg[0] [0]),
        .I4(\wb_read_lsb_sel_reg[0] [1]),
        .I5(\Trace_New_Reg_Value[23]_INST_0_i_3_n_0 ),
        .O(\LOCKSTEP_Out_reg[3038] ));
  LUT6 #(
    .INIT(64'hEFEFEFE0AFA0AFA0)) 
    \Trace_New_Reg_Value[3]_INST_0_i_1 
       (.I0(Q[4]),
        .I1(wb_dext_read_data[27]),
        .I2(wb_read_msb_doublet_sel),
        .I3(Q[28]),
        .I4(wb_dext_read_data[3]),
        .I5(wb_dext_Data_Strobe),
        .O(\LOCKSTEP_Out_reg[3010] ));
  LUT6 #(
    .INIT(64'hEFEFEFE0AFA0AFA0)) 
    \Trace_New_Reg_Value[4]_INST_0_i_1 
       (.I0(Q[3]),
        .I1(wb_dext_read_data[28]),
        .I2(wb_read_msb_doublet_sel),
        .I3(Q[27]),
        .I4(wb_dext_read_data[4]),
        .I5(wb_dext_Data_Strobe),
        .O(\LOCKSTEP_Out_reg[3011] ));
  LUT6 #(
    .INIT(64'hEFEFEFE0AFA0AFA0)) 
    \Trace_New_Reg_Value[5]_INST_0_i_1 
       (.I0(Q[2]),
        .I1(wb_dext_read_data[29]),
        .I2(wb_read_msb_doublet_sel),
        .I3(Q[26]),
        .I4(wb_dext_read_data[5]),
        .I5(wb_dext_Data_Strobe),
        .O(\LOCKSTEP_Out_reg[3012] ));
  LUT6 #(
    .INIT(64'hEFEFEFE0AFA0AFA0)) 
    \Trace_New_Reg_Value[6]_INST_0_i_1 
       (.I0(Q[1]),
        .I1(wb_dext_read_data[30]),
        .I2(wb_read_msb_doublet_sel),
        .I3(Q[25]),
        .I4(wb_dext_read_data[6]),
        .I5(wb_dext_Data_Strobe),
        .O(\LOCKSTEP_Out_reg[3013] ));
  LUT6 #(
    .INIT(64'hEFEFEFE0AFA0AFA0)) 
    \Trace_New_Reg_Value[7]_INST_0_i_1 
       (.I0(Q[0]),
        .I1(wb_dext_read_data[31]),
        .I2(wb_read_msb_doublet_sel),
        .I3(Q[24]),
        .I4(wb_dext_read_data[7]),
        .I5(wb_dext_Data_Strobe),
        .O(\LOCKSTEP_Out_reg[3014] ));
  LUT6 #(
    .INIT(64'hEFEFEFE0AFA0AFA0)) 
    \Trace_New_Reg_Value[8]_INST_0_i_1 
       (.I0(Q[15]),
        .I1(wb_dext_read_data[16]),
        .I2(wb_read_msb_doublet_sel),
        .I3(Q[23]),
        .I4(wb_dext_read_data[8]),
        .I5(wb_dext_Data_Strobe),
        .O(\LOCKSTEP_Out_reg[3015] ));
  LUT6 #(
    .INIT(64'hEFEFEFE0AFA0AFA0)) 
    \Trace_New_Reg_Value[9]_INST_0_i_1 
       (.I0(Q[14]),
        .I1(wb_dext_read_data[17]),
        .I2(wb_read_msb_doublet_sel),
        .I3(Q[22]),
        .I4(wb_dext_read_data[9]),
        .I5(wb_dext_Data_Strobe),
        .O(\LOCKSTEP_Out_reg[3016] ));
  LUT2 #(
    .INIT(4'h1)) 
    \Using_FPGA.Native_i_1__133 
       (.I0(DReady),
        .I1(MEM_DAXI_Data_Strobe),
        .O(S));
  FDRE #(
    .INIT(1'b0)) 
    WB_DAXI_Data_Strobe_reg
       (.C(Clk),
        .CE(1'b1),
        .D(MEM_DAXI_Data_Strobe),
        .Q(wb_dext_Data_Strobe),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[0] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[31]),
        .Q(wb_dext_read_data[0]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[10] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[21]),
        .Q(wb_dext_read_data[10]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[11] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[20]),
        .Q(wb_dext_read_data[11]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[12] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[19]),
        .Q(wb_dext_read_data[12]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[13] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[18]),
        .Q(wb_dext_read_data[13]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[14] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[17]),
        .Q(wb_dext_read_data[14]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[15] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[16]),
        .Q(wb_dext_read_data[15]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[16] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[15]),
        .Q(wb_dext_read_data[16]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[17] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[14]),
        .Q(wb_dext_read_data[17]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[18] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[13]),
        .Q(wb_dext_read_data[18]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[19] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[12]),
        .Q(wb_dext_read_data[19]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[1] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[30]),
        .Q(wb_dext_read_data[1]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[20] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[11]),
        .Q(wb_dext_read_data[20]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[21] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[10]),
        .Q(wb_dext_read_data[21]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[22] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[9]),
        .Q(wb_dext_read_data[22]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[23] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[8]),
        .Q(wb_dext_read_data[23]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[24] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[7]),
        .Q(wb_dext_read_data[24]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[25] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[6]),
        .Q(wb_dext_read_data[25]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[26] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[5]),
        .Q(wb_dext_read_data[26]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[27] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[4]),
        .Q(wb_dext_read_data[27]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[28] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[3]),
        .Q(wb_dext_read_data[28]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[29] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[2]),
        .Q(wb_dext_read_data[29]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[2] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[29]),
        .Q(wb_dext_read_data[2]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[30] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[1]),
        .Q(wb_dext_read_data[30]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[31] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[0]),
        .Q(wb_dext_read_data[31]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[3] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[28]),
        .Q(wb_dext_read_data[3]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[4] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[27]),
        .Q(wb_dext_read_data[4]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[5] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[26]),
        .Q(wb_dext_read_data[5]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[6] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[25]),
        .Q(wb_dext_read_data[6]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[7] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[24]),
        .Q(wb_dext_read_data[7]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[8] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[23]),
        .Q(wb_dext_read_data[8]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[9] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[22]),
        .Q(wb_dext_read_data[9]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    active_access_d1_reg
       (.C(Clk),
        .CE(1'b1),
        .D(active_access),
        .Q(active_access_d1),
        .R(sync_reset));
  LUT6 #(
    .INIT(64'h00000000000E0E0E)) 
    active_access_i_1
       (.I0(active_access),
        .I1(new_request),
        .I2(sync_reset),
        .I3(\Serial_Dbg_Intf.force_stop_cmd_i_reg ),
        .I4(MEM_DataBus_Access_reg),
        .I5(mem_access_completed0),
        .O(active_access_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    active_access_reg
       (.C(Clk),
        .CE(1'b1),
        .D(active_access_i_1_n_0),
        .Q(active_access),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hA8)) 
    mem_access_completed_i_1
       (.I0(active_access),
        .I1(M_AXI_DP_BVALID),
        .I2(M_AXI_DP_RVALID),
        .O(mem_access_completed0));
  FDRE #(
    .INIT(1'b0)) 
    mem_access_completed_reg
       (.C(Clk),
        .CE(1'b1),
        .D(mem_access_completed0),
        .Q(MEM_DAXI_Data_Strobe),
        .R(sync_reset));
endmodule

module Data_Flow_Logic
   (mem_ex_result,
    Q,
    R,
    ex_branch_with_delayslot_reg,
    EX_Fwd,
    Clk,
    ex_sel_alu_i_reg,
    SR,
    mem_valid_reg,
    \Using_FPGA.Native );
  output [0:31]mem_ex_result;
  output [31:0]Q;
  input R;
  input ex_branch_with_delayslot_reg;
  input [15:0]EX_Fwd;
  input Clk;
  input [15:0]ex_sel_alu_i_reg;
  input [0:0]SR;
  input mem_valid_reg;
  input [3:0]\Using_FPGA.Native ;

  wire Clk;
  wire [15:0]EX_Fwd;
  wire [31:0]Q;
  wire R;
  wire [0:0]SR;
  wire [3:0]\Using_FPGA.Native ;
  wire ex_branch_with_delayslot_reg;
  wire [15:0]ex_sel_alu_i_reg;
  wire [0:31]mem_ex_result;
  wire mem_valid_reg;

  microblaze_v10_0_3_MB_FDRE_459 \Gen_Bits[0].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[15]),
        .R(R),
        .ex_branch_with_delayslot_reg(ex_branch_with_delayslot_reg),
        .mem_ex_result(mem_ex_result[0]));
  microblaze_v10_0_3_MB_FDRE_460 \Gen_Bits[10].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .R(R),
        .ex_branch_with_delayslot_reg(ex_branch_with_delayslot_reg),
        .ex_sel_alu_i_reg(ex_sel_alu_i_reg[6]),
        .mem_ex_result(mem_ex_result[10]));
  microblaze_v10_0_3_MB_FDRE_461 \Gen_Bits[11].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .R(R),
        .ex_branch_with_delayslot_reg(ex_branch_with_delayslot_reg),
        .ex_sel_alu_i_reg(ex_sel_alu_i_reg[5]),
        .mem_ex_result(mem_ex_result[11]));
  microblaze_v10_0_3_MB_FDRE_462 \Gen_Bits[12].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .R(R),
        .ex_branch_with_delayslot_reg(ex_branch_with_delayslot_reg),
        .ex_sel_alu_i_reg(ex_sel_alu_i_reg[4]),
        .mem_ex_result(mem_ex_result[12]));
  microblaze_v10_0_3_MB_FDRE_463 \Gen_Bits[13].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .R(R),
        .ex_branch_with_delayslot_reg(ex_branch_with_delayslot_reg),
        .ex_sel_alu_i_reg(ex_sel_alu_i_reg[3]),
        .mem_ex_result(mem_ex_result[13]));
  microblaze_v10_0_3_MB_FDRE_464 \Gen_Bits[14].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .R(R),
        .ex_branch_with_delayslot_reg(ex_branch_with_delayslot_reg),
        .ex_sel_alu_i_reg(ex_sel_alu_i_reg[2]),
        .mem_ex_result(mem_ex_result[14]));
  microblaze_v10_0_3_MB_FDRE_465 \Gen_Bits[15].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .R(R),
        .ex_branch_with_delayslot_reg(ex_branch_with_delayslot_reg),
        .ex_sel_alu_i_reg(ex_sel_alu_i_reg[1]),
        .mem_ex_result(mem_ex_result[15]));
  microblaze_v10_0_3_MB_FDRE_466 \Gen_Bits[16].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .R(R),
        .ex_branch_with_delayslot_reg(ex_branch_with_delayslot_reg),
        .ex_sel_alu_i_reg(ex_sel_alu_i_reg[0]),
        .mem_ex_result(mem_ex_result[16]));
  microblaze_v10_0_3_MB_FDRE_467 \Gen_Bits[17].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[14]),
        .R(R),
        .ex_branch_with_delayslot_reg(ex_branch_with_delayslot_reg),
        .mem_ex_result(mem_ex_result[17]));
  microblaze_v10_0_3_MB_FDRE_468 \Gen_Bits[18].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[13]),
        .R(R),
        .ex_branch_with_delayslot_reg(ex_branch_with_delayslot_reg),
        .mem_ex_result(mem_ex_result[18]));
  microblaze_v10_0_3_MB_FDRE_469 \Gen_Bits[19].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[12]),
        .R(R),
        .ex_branch_with_delayslot_reg(ex_branch_with_delayslot_reg),
        .mem_ex_result(mem_ex_result[19]));
  microblaze_v10_0_3_MB_FDRE_470 \Gen_Bits[1].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .R(R),
        .ex_branch_with_delayslot_reg(ex_branch_with_delayslot_reg),
        .ex_sel_alu_i_reg(ex_sel_alu_i_reg[15]),
        .mem_ex_result(mem_ex_result[1]));
  microblaze_v10_0_3_MB_FDRE_471 \Gen_Bits[20].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[11]),
        .R(R),
        .ex_branch_with_delayslot_reg(ex_branch_with_delayslot_reg),
        .mem_ex_result(mem_ex_result[20]));
  microblaze_v10_0_3_MB_FDRE_472 \Gen_Bits[21].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[10]),
        .R(R),
        .ex_branch_with_delayslot_reg(ex_branch_with_delayslot_reg),
        .mem_ex_result(mem_ex_result[21]));
  microblaze_v10_0_3_MB_FDRE_473 \Gen_Bits[22].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[9]),
        .R(R),
        .ex_branch_with_delayslot_reg(ex_branch_with_delayslot_reg),
        .mem_ex_result(mem_ex_result[22]));
  microblaze_v10_0_3_MB_FDRE_474 \Gen_Bits[23].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[8]),
        .R(R),
        .ex_branch_with_delayslot_reg(ex_branch_with_delayslot_reg),
        .mem_ex_result(mem_ex_result[23]));
  microblaze_v10_0_3_MB_FDRE_475 \Gen_Bits[24].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[7]),
        .R(R),
        .ex_branch_with_delayslot_reg(ex_branch_with_delayslot_reg),
        .mem_ex_result(mem_ex_result[24]));
  microblaze_v10_0_3_MB_FDRE_476 \Gen_Bits[25].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[6]),
        .R(R),
        .ex_branch_with_delayslot_reg(ex_branch_with_delayslot_reg),
        .mem_ex_result(mem_ex_result[25]));
  microblaze_v10_0_3_MB_FDRE_477 \Gen_Bits[26].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[5]),
        .R(R),
        .ex_branch_with_delayslot_reg(ex_branch_with_delayslot_reg),
        .mem_ex_result(mem_ex_result[26]));
  microblaze_v10_0_3_MB_FDRE_478 \Gen_Bits[27].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[4]),
        .R(R),
        .ex_branch_with_delayslot_reg(ex_branch_with_delayslot_reg),
        .mem_ex_result(mem_ex_result[27]));
  microblaze_v10_0_3_MB_FDRE_479 \Gen_Bits[28].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[3]),
        .R(R),
        .ex_branch_with_delayslot_reg(ex_branch_with_delayslot_reg),
        .mem_ex_result(mem_ex_result[28]));
  microblaze_v10_0_3_MB_FDRE_480 \Gen_Bits[29].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[2]),
        .R(R),
        .ex_branch_with_delayslot_reg(ex_branch_with_delayslot_reg),
        .mem_ex_result(mem_ex_result[29]));
  microblaze_v10_0_3_MB_FDRE_481 \Gen_Bits[2].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .R(R),
        .ex_branch_with_delayslot_reg(ex_branch_with_delayslot_reg),
        .ex_sel_alu_i_reg(ex_sel_alu_i_reg[14]),
        .mem_ex_result(mem_ex_result[2]));
  microblaze_v10_0_3_MB_FDRE_482 \Gen_Bits[30].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[1]),
        .R(R),
        .ex_branch_with_delayslot_reg(ex_branch_with_delayslot_reg),
        .mem_ex_result(mem_ex_result[30]));
  microblaze_v10_0_3_MB_FDRE_483 \Gen_Bits[31].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[0]),
        .R(R),
        .ex_branch_with_delayslot_reg(ex_branch_with_delayslot_reg),
        .mem_ex_result(mem_ex_result[31]));
  microblaze_v10_0_3_MB_FDRE_484 \Gen_Bits[3].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .R(R),
        .ex_branch_with_delayslot_reg(ex_branch_with_delayslot_reg),
        .ex_sel_alu_i_reg(ex_sel_alu_i_reg[13]),
        .mem_ex_result(mem_ex_result[3]));
  microblaze_v10_0_3_MB_FDRE_485 \Gen_Bits[4].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .R(R),
        .ex_branch_with_delayslot_reg(ex_branch_with_delayslot_reg),
        .ex_sel_alu_i_reg(ex_sel_alu_i_reg[12]),
        .mem_ex_result(mem_ex_result[4]));
  microblaze_v10_0_3_MB_FDRE_486 \Gen_Bits[5].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .R(R),
        .ex_branch_with_delayslot_reg(ex_branch_with_delayslot_reg),
        .ex_sel_alu_i_reg(ex_sel_alu_i_reg[11]),
        .mem_ex_result(mem_ex_result[5]));
  microblaze_v10_0_3_MB_FDRE_487 \Gen_Bits[6].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .R(R),
        .ex_branch_with_delayslot_reg(ex_branch_with_delayslot_reg),
        .ex_sel_alu_i_reg(ex_sel_alu_i_reg[10]),
        .mem_ex_result(mem_ex_result[6]));
  microblaze_v10_0_3_MB_FDRE_488 \Gen_Bits[7].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .R(R),
        .ex_branch_with_delayslot_reg(ex_branch_with_delayslot_reg),
        .ex_sel_alu_i_reg(ex_sel_alu_i_reg[9]),
        .mem_ex_result(mem_ex_result[7]));
  microblaze_v10_0_3_MB_FDRE_489 \Gen_Bits[8].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .R(R),
        .ex_branch_with_delayslot_reg(ex_branch_with_delayslot_reg),
        .ex_sel_alu_i_reg(ex_sel_alu_i_reg[8]),
        .mem_ex_result(mem_ex_result[8]));
  microblaze_v10_0_3_MB_FDRE_490 \Gen_Bits[9].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .R(R),
        .ex_branch_with_delayslot_reg(ex_branch_with_delayslot_reg),
        .ex_sel_alu_i_reg(ex_sel_alu_i_reg[7]),
        .mem_ex_result(mem_ex_result[9]));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[0] 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(\Using_FPGA.Native [3]),
        .Q(Q[31]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[10] 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(mem_ex_result[10]),
        .Q(Q[21]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[11] 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(mem_ex_result[11]),
        .Q(Q[20]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[12] 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(mem_ex_result[12]),
        .Q(Q[19]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[13] 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(mem_ex_result[13]),
        .Q(Q[18]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[14] 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(mem_ex_result[14]),
        .Q(Q[17]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[15] 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(mem_ex_result[15]),
        .Q(Q[16]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[16] 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(mem_ex_result[16]),
        .Q(Q[15]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[17] 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(mem_ex_result[17]),
        .Q(Q[14]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[18] 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(mem_ex_result[18]),
        .Q(Q[13]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[19] 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(mem_ex_result[19]),
        .Q(Q[12]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[1] 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(mem_ex_result[1]),
        .Q(Q[30]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[20] 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(mem_ex_result[20]),
        .Q(Q[11]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[21] 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(mem_ex_result[21]),
        .Q(Q[10]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[22] 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(mem_ex_result[22]),
        .Q(Q[9]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[23] 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(mem_ex_result[23]),
        .Q(Q[8]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[24] 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(mem_ex_result[24]),
        .Q(Q[7]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[25] 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(mem_ex_result[25]),
        .Q(Q[6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[26] 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(mem_ex_result[26]),
        .Q(Q[5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[27] 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(mem_ex_result[27]),
        .Q(Q[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[28] 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(\Using_FPGA.Native [2]),
        .Q(Q[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[29] 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(\Using_FPGA.Native [1]),
        .Q(Q[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[2] 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(mem_ex_result[2]),
        .Q(Q[29]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[30] 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(\Using_FPGA.Native [0]),
        .Q(Q[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[31] 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(mem_ex_result[31]),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[3] 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(mem_ex_result[3]),
        .Q(Q[28]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[4] 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(mem_ex_result[4]),
        .Q(Q[27]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[5] 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(mem_ex_result[5]),
        .Q(Q[26]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[6] 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(mem_ex_result[6]),
        .Q(Q[25]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[7] 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(mem_ex_result[7]),
        .Q(Q[24]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[8] 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(mem_ex_result[8]),
        .Q(Q[23]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[9] 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(mem_ex_result[9]),
        .Q(Q[22]),
        .R(SR));
endmodule

module Data_Flow_gti
   (Q,
    \Using_FPGA.Native ,
    out,
    \Using_FPGA.Native_0 ,
    ex_op1_zero,
    mem_reverse_byteorder,
    wb_read_lsb_1_sel,
    wb_read_msb_doublet_sel,
    mem_ex_result,
    \Using_FPGA.Native_1 ,
    mem_MSR,
    ex_MSR,
    DI,
    \LOCKSTEP_Out_reg[2944] ,
    \LOCKSTEP_Out_reg[2943] ,
    \LOCKSTEP_Out_reg[2942] ,
    \LOCKSTEP_Out_reg[2941] ,
    \LOCKSTEP_Out_reg[2940] ,
    \LOCKSTEP_Out_reg[2939] ,
    \LOCKSTEP_Out_reg[2938] ,
    \LOCKSTEP_Out_reg[2937] ,
    \LOCKSTEP_Out_reg[2936] ,
    \LOCKSTEP_Out_reg[2935] ,
    \LOCKSTEP_Out_reg[2934] ,
    \LOCKSTEP_Out_reg[2933] ,
    \LOCKSTEP_Out_reg[2932] ,
    \LOCKSTEP_Out_reg[2931] ,
    \LOCKSTEP_Out_reg[2930] ,
    \LOCKSTEP_Out_reg[2929] ,
    \LOCKSTEP_Out_reg[2928] ,
    \LOCKSTEP_Out_reg[2927] ,
    \LOCKSTEP_Out_reg[2926] ,
    \LOCKSTEP_Out_reg[2925] ,
    \LOCKSTEP_Out_reg[2924] ,
    \LOCKSTEP_Out_reg[2923] ,
    \LOCKSTEP_Out_reg[2922] ,
    \LOCKSTEP_Out_reg[2921] ,
    \LOCKSTEP_Out_reg[2920] ,
    \LOCKSTEP_Out_reg[2919] ,
    \LOCKSTEP_Out_reg[2918] ,
    \LOCKSTEP_Out_reg[2917] ,
    \LOCKSTEP_Out_reg[2916] ,
    \LOCKSTEP_Out_reg[2915] ,
    \MEM_DataBus_Addr_reg[0] ,
    \LOCKSTEP_Out_reg[3007] ,
    \Using_FPGA.Native_2 ,
    \data_rd_reg_reg[16] ,
    \LOCKSTEP_Out_reg[3007]_0 ,
    GPR_Op3,
    GPR_Op1,
    \Using_FPGA.Native_3 ,
    \MEM_DataBus_Write_Data_reg[1] ,
    \Using_FPGA.Native_4 ,
    \EX_Op3_reg[10] ,
    \EX_Op3_reg[6] ,
    \EX_Op3_reg[3] ,
    \EX_Op3_reg[2] ,
    \EX_Branch_CMP_Op1_reg[15] ,
    \EX_Branch_CMP_Op1_reg[14] ,
    \EX_Branch_CMP_Op1_reg[13] ,
    \EX_Branch_CMP_Op1_reg[12] ,
    \EX_Branch_CMP_Op1_reg[11] ,
    \EX_Branch_CMP_Op1_reg[10] ,
    \EX_Branch_CMP_Op1_reg[9] ,
    \EX_Branch_CMP_Op1_reg[7] ,
    \EX_Branch_CMP_Op1_reg[6] ,
    \EX_Branch_CMP_Op1_reg[5] ,
    \EX_Branch_CMP_Op1_reg[4] ,
    \EX_Branch_CMP_Op1_reg[3] ,
    \EX_Branch_CMP_Op1_reg[2] ,
    \EX_Branch_CMP_Op1_reg[1] ,
    \WB_MEM_Result_reg[0] ,
    \Using_FPGA.Native_5 ,
    \Using_FPGA.Native_6 ,
    \Using_FPGA.Native_7 ,
    \Using_FPGA.Native_8 ,
    \Using_FPGA.Native_9 ,
    \Using_FPGA.Native_10 ,
    \Using_FPGA.Native_11 ,
    \Using_FPGA.Native_12 ,
    \Using_FPGA.Native_13 ,
    \Using_FPGA.Native_14 ,
    \Using_FPGA.Native_15 ,
    \Using_FPGA.Native_16 ,
    \Using_FPGA.Native_17 ,
    \Using_FPGA.Native_18 ,
    \mem_byte_selects_reg[0] ,
    \wb_read_lsb_1_sel_reg[0] ,
    GPR_Op2,
    \EX_Op2_reg[0] ,
    \LOCKSTEP_Out_reg[3031] ,
    ex_databus_addr,
    of_op1_sel_spr,
    D,
    I1,
    \Using_FPGA.Native_19 ,
    \Using_FPGA.Native_20 ,
    \Using_FPGA.Native_21 ,
    \Using_FPGA.Native_22 ,
    \Using_FPGA.Native_23 ,
    \Using_FPGA.Native_24 ,
    \Using_FPGA.Native_25 ,
    \Using_FPGA.Native_26 ,
    \Using_FPGA.Native_27 ,
    \Using_FPGA.Native_28 ,
    \Using_FPGA.Native_29 ,
    \Using_FPGA.Native_30 ,
    \Using_FPGA.Native_31 ,
    \Using_FPGA.Native_32 ,
    \Using_FPGA.Native_33 ,
    \Using_FPGA.Native_34 ,
    \Using_FPGA.Native_35 ,
    \Using_FPGA.Native_36 ,
    \Using_FPGA.Native_37 ,
    \Using_FPGA.Native_38 ,
    \Using_FPGA.Native_39 ,
    \Using_FPGA.Native_40 ,
    \Using_FPGA.Native_41 ,
    \Using_FPGA.Native_42 ,
    \Using_FPGA.Native_43 ,
    \Using_FPGA.Native_44 ,
    \Using_FPGA.Native_45 ,
    \Using_FPGA.Native_46 ,
    \Using_FPGA.Native_47 ,
    \Using_FPGA.Native_48 ,
    \Using_FPGA.Native_49 ,
    ex_use_carry,
    ex_unsigned_op,
    \EX_ALU_Op_reg[0] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    in0,
    ex_op1_cmp_equal,
    ex_op1_cmp_equal_n,
    sync_reset,
    ex_branch_with_delayslot_reg,
    ex_reverse_mem_access,
    Clk,
    mem_valid_reg,
    R,
    EX_Fwd,
    ex_move_to_MSR_instr_reg,
    \Using_LWX_SWX_instr.ex_reservation_reg ,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[0] ,
    MEM_WB_Sel_Mem_PC,
    I1_0,
    \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ,
    wb_gpr_write_dbg,
    read_register_MSR_1,
    \wb_exception_kind_i_reg[31] ,
    \wb_read_lsb_1_sel_reg[0]_0 ,
    wb_byte_access,
    \wb_read_lsb_1_sel_reg[0]_1 ,
    \wb_read_lsb_1_sel_reg[0]_2 ,
    \wb_read_lsb_1_sel_reg[0]_3 ,
    \wb_read_lsb_1_sel_reg[0]_4 ,
    \wb_read_lsb_1_sel_reg[0]_5 ,
    \wb_read_lsb_1_sel_reg[0]_6 ,
    \WB_MEM_Result_reg[0]_0 ,
    \Using_FPGA.Native_50 ,
    \Using_FPGA.Native_51 ,
    \wb_gpr_write_addr_reg[3] ,
    \ex_gpr_write_addr_reg[0] ,
    \wb_read_lsb_1_sel_reg[0]_7 ,
    ex_valid_reg,
    ex_load_shift_carry,
    ex_load_alu_carry_reg,
    ex_move_to_MSR_instr,
    ex_byte_access,
    ex_doublet_access,
    ex_swap_byte_instr,
    \Using_FPGA.Native_52 ,
    mem_valid_reg_0,
    \ex_gpr_write_addr_reg[0]_0 ,
    \Using_FPGA.Native_53 ,
    mem_sel_msr,
    ex_sel_alu,
    ex_swap_instr,
    ex_Enable_Sext_Shift,
    \EX_Sext_Op_reg[0] ,
    ex_cmp_op,
    mem_byte_access,
    mem_doublet_access,
    WB_GPR_Wr,
    \WB_MEM_Result_reg[0]_1 ,
    \WB_MEM_Result_reg[1] ,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    \wb_gpr_write_addr_reg[0] ,
    \WB_MEM_Result_reg[2] ,
    \WB_MEM_Result_reg[3] ,
    \WB_MEM_Result_reg[4] ,
    \WB_MEM_Result_reg[5] ,
    \WB_MEM_Result_reg[6] ,
    \WB_MEM_Result_reg[7] ,
    \WB_MEM_Result_reg[8] ,
    \WB_MEM_Result_reg[9] ,
    \WB_MEM_Result_reg[10] ,
    \WB_MEM_Result_reg[11] ,
    \WB_MEM_Result_reg[12] ,
    \WB_MEM_Result_reg[13] ,
    \WB_MEM_Result_reg[14] ,
    \WB_MEM_Result_reg[15] ,
    \wb_exception_kind_i_reg[31]_0 ,
    \wb_exception_kind_i_reg[31]_1 ,
    \wb_exception_kind_i_reg[31]_2 ,
    \wb_exception_kind_i_reg[31]_3 ,
    \wb_exception_kind_i_reg[31]_4 ,
    \wb_exception_kind_i_reg[31]_5 ,
    \wb_exception_kind_i_reg[31]_6 ,
    \wb_exception_kind_i_reg[31]_7 ,
    E,
    of_pause_reg,
    ex_sel_alu_i_reg,
    \Using_FPGA.Native_54 ,
    mem_byte_access_reg,
    wb_piperun,
    SR,
    lopt,
    lopt_1,
    lopt_2);
  output [0:0]Q;
  output [16:0]\Using_FPGA.Native ;
  output out;
  output \Using_FPGA.Native_0 ;
  output ex_op1_zero;
  output mem_reverse_byteorder;
  output [0:0]wb_read_lsb_1_sel;
  output wb_read_msb_doublet_sel;
  output [0:31]mem_ex_result;
  output [15:0]\Using_FPGA.Native_1 ;
  output [2:0]mem_MSR;
  output [2:0]ex_MSR;
  output DI;
  output \LOCKSTEP_Out_reg[2944] ;
  output \LOCKSTEP_Out_reg[2943] ;
  output \LOCKSTEP_Out_reg[2942] ;
  output \LOCKSTEP_Out_reg[2941] ;
  output \LOCKSTEP_Out_reg[2940] ;
  output \LOCKSTEP_Out_reg[2939] ;
  output \LOCKSTEP_Out_reg[2938] ;
  output \LOCKSTEP_Out_reg[2937] ;
  output \LOCKSTEP_Out_reg[2936] ;
  output \LOCKSTEP_Out_reg[2935] ;
  output \LOCKSTEP_Out_reg[2934] ;
  output \LOCKSTEP_Out_reg[2933] ;
  output \LOCKSTEP_Out_reg[2932] ;
  output \LOCKSTEP_Out_reg[2931] ;
  output \LOCKSTEP_Out_reg[2930] ;
  output \LOCKSTEP_Out_reg[2929] ;
  output \LOCKSTEP_Out_reg[2928] ;
  output \LOCKSTEP_Out_reg[2927] ;
  output \LOCKSTEP_Out_reg[2926] ;
  output \LOCKSTEP_Out_reg[2925] ;
  output \LOCKSTEP_Out_reg[2924] ;
  output \LOCKSTEP_Out_reg[2923] ;
  output \LOCKSTEP_Out_reg[2922] ;
  output \LOCKSTEP_Out_reg[2921] ;
  output \LOCKSTEP_Out_reg[2920] ;
  output \LOCKSTEP_Out_reg[2919] ;
  output \LOCKSTEP_Out_reg[2918] ;
  output \LOCKSTEP_Out_reg[2917] ;
  output \LOCKSTEP_Out_reg[2916] ;
  output \LOCKSTEP_Out_reg[2915] ;
  output [97:0]\MEM_DataBus_Addr_reg[0] ;
  output [23:0]\LOCKSTEP_Out_reg[3007] ;
  output [0:0]\Using_FPGA.Native_2 ;
  output [7:0]\data_rd_reg_reg[16] ;
  output [23:0]\LOCKSTEP_Out_reg[3007]_0 ;
  output [30:0]GPR_Op3;
  output [30:0]GPR_Op1;
  output \Using_FPGA.Native_3 ;
  output [15:0]\MEM_DataBus_Write_Data_reg[1] ;
  output \Using_FPGA.Native_4 ;
  output \EX_Op3_reg[10] ;
  output \EX_Op3_reg[6] ;
  output \EX_Op3_reg[3] ;
  output \EX_Op3_reg[2] ;
  output \EX_Branch_CMP_Op1_reg[15] ;
  output \EX_Branch_CMP_Op1_reg[14] ;
  output \EX_Branch_CMP_Op1_reg[13] ;
  output \EX_Branch_CMP_Op1_reg[12] ;
  output \EX_Branch_CMP_Op1_reg[11] ;
  output \EX_Branch_CMP_Op1_reg[10] ;
  output \EX_Branch_CMP_Op1_reg[9] ;
  output \EX_Branch_CMP_Op1_reg[7] ;
  output \EX_Branch_CMP_Op1_reg[6] ;
  output \EX_Branch_CMP_Op1_reg[5] ;
  output \EX_Branch_CMP_Op1_reg[4] ;
  output \EX_Branch_CMP_Op1_reg[3] ;
  output \EX_Branch_CMP_Op1_reg[2] ;
  output \EX_Branch_CMP_Op1_reg[1] ;
  output [3:0]\WB_MEM_Result_reg[0] ;
  output \Using_FPGA.Native_5 ;
  output \Using_FPGA.Native_6 ;
  output \Using_FPGA.Native_7 ;
  output \Using_FPGA.Native_8 ;
  output \Using_FPGA.Native_9 ;
  output \Using_FPGA.Native_10 ;
  output \Using_FPGA.Native_11 ;
  output \Using_FPGA.Native_12 ;
  output \Using_FPGA.Native_13 ;
  output \Using_FPGA.Native_14 ;
  output \Using_FPGA.Native_15 ;
  output \Using_FPGA.Native_16 ;
  output \Using_FPGA.Native_17 ;
  output \Using_FPGA.Native_18 ;
  output \mem_byte_selects_reg[0] ;
  output [0:0]\wb_read_lsb_1_sel_reg[0] ;
  output [0:31]GPR_Op2;
  output [15:0]\EX_Op2_reg[0] ;
  output [1:0]\LOCKSTEP_Out_reg[3031] ;
  output [1:0]ex_databus_addr;
  input of_op1_sel_spr;
  input [30:0]D;
  input I1;
  input \Using_FPGA.Native_19 ;
  input \Using_FPGA.Native_20 ;
  input \Using_FPGA.Native_21 ;
  input \Using_FPGA.Native_22 ;
  input \Using_FPGA.Native_23 ;
  input \Using_FPGA.Native_24 ;
  input \Using_FPGA.Native_25 ;
  input \Using_FPGA.Native_26 ;
  input \Using_FPGA.Native_27 ;
  input \Using_FPGA.Native_28 ;
  input \Using_FPGA.Native_29 ;
  input \Using_FPGA.Native_30 ;
  input \Using_FPGA.Native_31 ;
  input \Using_FPGA.Native_32 ;
  input \Using_FPGA.Native_33 ;
  input \Using_FPGA.Native_34 ;
  input \Using_FPGA.Native_35 ;
  input \Using_FPGA.Native_36 ;
  input \Using_FPGA.Native_37 ;
  input \Using_FPGA.Native_38 ;
  input \Using_FPGA.Native_39 ;
  input \Using_FPGA.Native_40 ;
  input \Using_FPGA.Native_41 ;
  input \Using_FPGA.Native_42 ;
  input \Using_FPGA.Native_43 ;
  input \Using_FPGA.Native_44 ;
  input \Using_FPGA.Native_45 ;
  input \Using_FPGA.Native_46 ;
  input \Using_FPGA.Native_47 ;
  input \Using_FPGA.Native_48 ;
  input \Using_FPGA.Native_49 ;
  input ex_use_carry;
  input ex_unsigned_op;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input in0;
  input ex_op1_cmp_equal;
  input ex_op1_cmp_equal_n;
  input sync_reset;
  input ex_branch_with_delayslot_reg;
  input ex_reverse_mem_access;
  input Clk;
  input mem_valid_reg;
  input R;
  input [15:0]EX_Fwd;
  input ex_move_to_MSR_instr_reg;
  input \Using_LWX_SWX_instr.ex_reservation_reg ;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [31:0]\mem_pc_i_reg[0] ;
  input MEM_WB_Sel_Mem_PC;
  input I1_0;
  input \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  input wb_gpr_write_dbg;
  input read_register_MSR_1;
  input \wb_exception_kind_i_reg[31] ;
  input \wb_read_lsb_1_sel_reg[0]_0 ;
  input wb_byte_access;
  input \wb_read_lsb_1_sel_reg[0]_1 ;
  input \wb_read_lsb_1_sel_reg[0]_2 ;
  input \wb_read_lsb_1_sel_reg[0]_3 ;
  input \wb_read_lsb_1_sel_reg[0]_4 ;
  input \wb_read_lsb_1_sel_reg[0]_5 ;
  input \wb_read_lsb_1_sel_reg[0]_6 ;
  input [30:0]\WB_MEM_Result_reg[0]_0 ;
  input \Using_FPGA.Native_50 ;
  input \Using_FPGA.Native_51 ;
  input \wb_gpr_write_addr_reg[3] ;
  input \ex_gpr_write_addr_reg[0] ;
  input \wb_read_lsb_1_sel_reg[0]_7 ;
  input ex_valid_reg;
  input ex_load_shift_carry;
  input ex_load_alu_carry_reg;
  input ex_move_to_MSR_instr;
  input ex_byte_access;
  input ex_doublet_access;
  input ex_swap_byte_instr;
  input \Using_FPGA.Native_52 ;
  input mem_valid_reg_0;
  input \ex_gpr_write_addr_reg[0]_0 ;
  input \Using_FPGA.Native_53 ;
  input mem_sel_msr;
  input ex_sel_alu;
  input ex_swap_instr;
  input ex_Enable_Sext_Shift;
  input [1:0]\EX_Sext_Op_reg[0] ;
  input ex_cmp_op;
  input mem_byte_access;
  input mem_doublet_access;
  input WB_GPR_Wr;
  input \WB_MEM_Result_reg[0]_1 ;
  input \WB_MEM_Result_reg[1] ;
  input [0:4]of_gpr_op1_rd_addr;
  input [0:15]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]\wb_gpr_write_addr_reg[0] ;
  input \WB_MEM_Result_reg[2] ;
  input \WB_MEM_Result_reg[3] ;
  input \WB_MEM_Result_reg[4] ;
  input \WB_MEM_Result_reg[5] ;
  input \WB_MEM_Result_reg[6] ;
  input \WB_MEM_Result_reg[7] ;
  input \WB_MEM_Result_reg[8] ;
  input \WB_MEM_Result_reg[9] ;
  input \WB_MEM_Result_reg[10] ;
  input \WB_MEM_Result_reg[11] ;
  input \WB_MEM_Result_reg[12] ;
  input \WB_MEM_Result_reg[13] ;
  input \WB_MEM_Result_reg[14] ;
  input \WB_MEM_Result_reg[15] ;
  input \wb_exception_kind_i_reg[31]_0 ;
  input \wb_exception_kind_i_reg[31]_1 ;
  input \wb_exception_kind_i_reg[31]_2 ;
  input \wb_exception_kind_i_reg[31]_3 ;
  input \wb_exception_kind_i_reg[31]_4 ;
  input \wb_exception_kind_i_reg[31]_5 ;
  input \wb_exception_kind_i_reg[31]_6 ;
  input \wb_exception_kind_i_reg[31]_7 ;
  input [0:0]E;
  input of_pause_reg;
  input [31:0]ex_sel_alu_i_reg;
  input [17:0]\Using_FPGA.Native_54 ;
  input [0:0]mem_byte_access_reg;
  input wb_piperun;
  input [0:0]SR;
  output lopt;
  input lopt_1;
  input lopt_2;

  wire Clk;
  wire [30:0]D;
  wire DI;
  wire [0:0]E;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire \EX_Branch_CMP_Op1_reg[10] ;
  wire \EX_Branch_CMP_Op1_reg[11] ;
  wire \EX_Branch_CMP_Op1_reg[12] ;
  wire \EX_Branch_CMP_Op1_reg[13] ;
  wire \EX_Branch_CMP_Op1_reg[14] ;
  wire \EX_Branch_CMP_Op1_reg[15] ;
  wire \EX_Branch_CMP_Op1_reg[1] ;
  wire \EX_Branch_CMP_Op1_reg[2] ;
  wire \EX_Branch_CMP_Op1_reg[3] ;
  wire \EX_Branch_CMP_Op1_reg[4] ;
  wire \EX_Branch_CMP_Op1_reg[5] ;
  wire \EX_Branch_CMP_Op1_reg[6] ;
  wire \EX_Branch_CMP_Op1_reg[7] ;
  wire \EX_Branch_CMP_Op1_reg[9] ;
  wire EX_Enable_ALU;
  wire [15:0]EX_Fwd;
  wire [15:0]\EX_Op2_reg[0] ;
  wire \EX_Op3_reg[10] ;
  wire \EX_Op3_reg[2] ;
  wire \EX_Op3_reg[3] ;
  wire \EX_Op3_reg[6] ;
  wire [1:0]\EX_Sext_Op_reg[0] ;
  wire [30:0]GPR_Op1;
  wire [0:31]GPR_Op2;
  wire [30:0]GPR_Op3;
  wire I1;
  wire I1_0;
  wire \LOCKSTEP_Out_reg[2915] ;
  wire \LOCKSTEP_Out_reg[2916] ;
  wire \LOCKSTEP_Out_reg[2917] ;
  wire \LOCKSTEP_Out_reg[2918] ;
  wire \LOCKSTEP_Out_reg[2919] ;
  wire \LOCKSTEP_Out_reg[2920] ;
  wire \LOCKSTEP_Out_reg[2921] ;
  wire \LOCKSTEP_Out_reg[2922] ;
  wire \LOCKSTEP_Out_reg[2923] ;
  wire \LOCKSTEP_Out_reg[2924] ;
  wire \LOCKSTEP_Out_reg[2925] ;
  wire \LOCKSTEP_Out_reg[2926] ;
  wire \LOCKSTEP_Out_reg[2927] ;
  wire \LOCKSTEP_Out_reg[2928] ;
  wire \LOCKSTEP_Out_reg[2929] ;
  wire \LOCKSTEP_Out_reg[2938] ;
  wire \LOCKSTEP_Out_reg[2939] ;
  wire \LOCKSTEP_Out_reg[2940] ;
  wire \LOCKSTEP_Out_reg[2941] ;
  wire \LOCKSTEP_Out_reg[2942] ;
  wire \LOCKSTEP_Out_reg[2943] ;
  wire \LOCKSTEP_Out_reg[2944] ;
  wire [23:0]\LOCKSTEP_Out_reg[3007] ;
  wire [23:0]\LOCKSTEP_Out_reg[3007]_0 ;
  wire [1:0]\LOCKSTEP_Out_reg[3031] ;
  wire [97:0]\MEM_DataBus_Addr_reg[0] ;
  wire [15:0]\MEM_DataBus_Write_Data_reg[1] ;
  wire MEM_WB_Sel_Mem_PC;
  wire Operand_Select_I_n_0;
  wire Operand_Select_I_n_102;
  wire Operand_Select_I_n_123;
  wire Operand_Select_I_n_153;
  wire Operand_Select_I_n_154;
  wire Operand_Select_I_n_187;
  wire \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  wire [0:0]Q;
  wire R;
  wire [0:0]SR;
  wire \Using_FPGA.ALL_Bits[0].ALU_Bit_I1/S ;
  wire [16:0]\Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [15:0]\Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_10 ;
  wire \Using_FPGA.Native_11 ;
  wire \Using_FPGA.Native_12 ;
  wire \Using_FPGA.Native_13 ;
  wire \Using_FPGA.Native_14 ;
  wire \Using_FPGA.Native_15 ;
  wire \Using_FPGA.Native_16 ;
  wire \Using_FPGA.Native_17 ;
  wire \Using_FPGA.Native_18 ;
  wire \Using_FPGA.Native_19 ;
  wire [0:0]\Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_20 ;
  wire \Using_FPGA.Native_21 ;
  wire \Using_FPGA.Native_22 ;
  wire \Using_FPGA.Native_23 ;
  wire \Using_FPGA.Native_24 ;
  wire \Using_FPGA.Native_25 ;
  wire \Using_FPGA.Native_26 ;
  wire \Using_FPGA.Native_27 ;
  wire \Using_FPGA.Native_28 ;
  wire \Using_FPGA.Native_29 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_30 ;
  wire \Using_FPGA.Native_31 ;
  wire \Using_FPGA.Native_32 ;
  wire \Using_FPGA.Native_33 ;
  wire \Using_FPGA.Native_34 ;
  wire \Using_FPGA.Native_35 ;
  wire \Using_FPGA.Native_36 ;
  wire \Using_FPGA.Native_37 ;
  wire \Using_FPGA.Native_38 ;
  wire \Using_FPGA.Native_39 ;
  wire \Using_FPGA.Native_4 ;
  wire \Using_FPGA.Native_40 ;
  wire \Using_FPGA.Native_41 ;
  wire \Using_FPGA.Native_42 ;
  wire \Using_FPGA.Native_43 ;
  wire \Using_FPGA.Native_44 ;
  wire \Using_FPGA.Native_45 ;
  wire \Using_FPGA.Native_46 ;
  wire \Using_FPGA.Native_47 ;
  wire \Using_FPGA.Native_48 ;
  wire \Using_FPGA.Native_49 ;
  wire \Using_FPGA.Native_5 ;
  wire \Using_FPGA.Native_50 ;
  wire \Using_FPGA.Native_51 ;
  wire \Using_FPGA.Native_52 ;
  wire \Using_FPGA.Native_53 ;
  wire [17:0]\Using_FPGA.Native_54 ;
  wire \Using_FPGA.Native_6 ;
  wire \Using_FPGA.Native_7 ;
  wire \Using_FPGA.Native_8 ;
  wire \Using_FPGA.Native_9 ;
  wire \Using_LWX_SWX_instr.ex_reservation_reg ;
  wire WB_GPR_Wr;
  wire [3:0]\WB_MEM_Result_reg[0] ;
  wire [30:0]\WB_MEM_Result_reg[0]_0 ;
  wire \WB_MEM_Result_reg[0]_1 ;
  wire \WB_MEM_Result_reg[10] ;
  wire \WB_MEM_Result_reg[11] ;
  wire \WB_MEM_Result_reg[12] ;
  wire \WB_MEM_Result_reg[13] ;
  wire \WB_MEM_Result_reg[14] ;
  wire \WB_MEM_Result_reg[15] ;
  wire \WB_MEM_Result_reg[1] ;
  wire \WB_MEM_Result_reg[2] ;
  wire \WB_MEM_Result_reg[3] ;
  wire \WB_MEM_Result_reg[4] ;
  wire \WB_MEM_Result_reg[5] ;
  wire \WB_MEM_Result_reg[6] ;
  wire \WB_MEM_Result_reg[7] ;
  wire \WB_MEM_Result_reg[8] ;
  wire \WB_MEM_Result_reg[9] ;
  wire \Zero_Detecting[0].nibble_Zero_reg ;
  wire [7:0]\data_rd_reg_reg[16] ;
  wire ex_Enable_Sext_Shift;
  wire [2:0]ex_MSR;
  wire [1:29]ex_branch_cmp_op1;
  wire ex_branch_with_delayslot_reg;
  wire ex_byte_access;
  wire ex_cmp_op;
  wire [1:0]ex_databus_addr;
  wire ex_doublet_access;
  wire \ex_gpr_write_addr_reg[0] ;
  wire \ex_gpr_write_addr_reg[0]_0 ;
  wire ex_load_alu_carry_reg;
  wire ex_load_shift_carry;
  wire ex_move_to_MSR_instr;
  wire ex_move_to_MSR_instr_reg;
  wire ex_op1_cmp_equal;
  wire ex_op1_cmp_equal_n;
  wire [1:15]ex_op1_i;
  wire [0:30]ex_op2;
  wire ex_reverse_mem_access;
  wire ex_sel_alu;
  wire [31:0]ex_sel_alu_i_reg;
  wire ex_swap_byte_instr;
  wire ex_swap_instr;
  wire ex_unsigned_op;
  wire ex_use_carry;
  wire ex_valid_reg;
  wire exception_registers_I1_n_73;
  wire [16:16]gpr_op1;
  wire [16:16]gpr_op3;
  wire in0;
  wire \^lopt_1 ;
  wire lopt_10;
  wire lopt_11;
  wire \^lopt_2 ;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire [2:0]mem_MSR;
  wire mem_byte_access;
  wire [0:0]mem_byte_access_reg;
  wire \mem_byte_selects_reg[0] ;
  wire mem_doublet_access;
  wire [0:31]mem_ex_result;
  wire [31:0]\mem_pc_i_reg[0] ;
  wire mem_reverse_byteorder;
  wire mem_sel_msr;
  wire mem_valid_reg;
  wire mem_valid_reg_0;
  wire muxcy_di;
  wire muxcy_sel;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [0:15]of_imm_data;
  wire of_op1_sel_spr;
  wire [16:16]of_op3;
  wire of_pause_reg;
  wire out;
  wire read_register_MSR_1;
  wire sync_reset;
  wire wb_byte_access;
  wire [0:0]\wb_exception_kind_i_reg[28] ;
  wire \wb_exception_kind_i_reg[31] ;
  wire \wb_exception_kind_i_reg[31]_0 ;
  wire \wb_exception_kind_i_reg[31]_1 ;
  wire \wb_exception_kind_i_reg[31]_2 ;
  wire \wb_exception_kind_i_reg[31]_3 ;
  wire \wb_exception_kind_i_reg[31]_4 ;
  wire \wb_exception_kind_i_reg[31]_5 ;
  wire \wb_exception_kind_i_reg[31]_6 ;
  wire \wb_exception_kind_i_reg[31]_7 ;
  wire [4:0]\wb_gpr_write_addr_reg[0] ;
  wire \wb_gpr_write_addr_reg[3] ;
  wire wb_gpr_write_dbg;
  wire [16:23]wb_mem_result;
  wire wb_piperun;
  wire [0:0]wb_read_lsb_1_sel;
  wire [0:0]\wb_read_lsb_1_sel_reg[0] ;
  wire \wb_read_lsb_1_sel_reg[0]_0 ;
  wire \wb_read_lsb_1_sel_reg[0]_1 ;
  wire \wb_read_lsb_1_sel_reg[0]_2 ;
  wire \wb_read_lsb_1_sel_reg[0]_3 ;
  wire \wb_read_lsb_1_sel_reg[0]_4 ;
  wire \wb_read_lsb_1_sel_reg[0]_5 ;
  wire \wb_read_lsb_1_sel_reg[0]_6 ;
  wire \wb_read_lsb_1_sel_reg[0]_7 ;
  wire wb_read_msb_doublet_sel;
  wire NLW_ALU_I_ex_alu_carryin_UNCONNECTED;
  wire NLW_ALU_I_lopt_UNCONNECTED;
  wire [3:0]\NLW_Byte_Doublet_Handle_gti_I_Using_FPGA.Native_UNCONNECTED ;
  wire [3:0]\NLW_Byte_Doublet_Handle_gti_I_trace_data_write_value_i_reg[0]_UNCONNECTED ;
  wire [19:18]\NLW_Operand_Select_I_LOCKSTEP_Out_reg[98]_UNCONNECTED ;
  wire \NLW_Using_DAXI_ALU_Carry.Direct_MUXCY_I_ex_pre_alu_carry_UNCONNECTED ;
  wire \NLW_Using_DAXI_ALU_Carry.Direct_MUXCY_I_lopt_UNCONNECTED ;
  wire \NLW_Using_DAXI_ALU_Carry.Direct_MUXCY_I_lopt_3_UNCONNECTED ;
  wire \NLW_Using_DAXI_ALU_Carry.Post_MUXCY_I_ex_alu_carryin_UNCONNECTED ;
  wire \NLW_Using_DAXI_ALU_Carry.Post_MUXCY_I_ex_pre_alu_carry_UNCONNECTED ;
  wire \NLW_Using_DAXI_ALU_Carry.Post_MUXCY_I_lopt_UNCONNECTED ;
  wire NLW_Zero_Detect_I_ex_op1_zero_UNCONNECTED;
  wire \NLW_exception_registers_I1_LOCKSTEP_Out_reg[2930]_UNCONNECTED ;
  wire \NLW_exception_registers_I1_LOCKSTEP_Out_reg[2931]_UNCONNECTED ;
  wire \NLW_exception_registers_I1_LOCKSTEP_Out_reg[2932]_UNCONNECTED ;
  wire \NLW_exception_registers_I1_LOCKSTEP_Out_reg[2933]_UNCONNECTED ;
  wire \NLW_exception_registers_I1_LOCKSTEP_Out_reg[2934]_UNCONNECTED ;
  wire \NLW_exception_registers_I1_LOCKSTEP_Out_reg[2935]_UNCONNECTED ;
  wire \NLW_exception_registers_I1_LOCKSTEP_Out_reg[2936]_UNCONNECTED ;
  wire \NLW_exception_registers_I1_LOCKSTEP_Out_reg[2937]_UNCONNECTED ;

  assign lopt = lopt_9;
  assign lopt_10 = lopt_1;
  assign lopt_11 = lopt_2;
  ALU ALU_I
       (.\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CMP_Op_reg(Operand_Select_I_n_154),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op1_reg[0] ({\Using_FPGA.Native [16],ex_op1_i[1],ex_op1_i[2],ex_op1_i[3],ex_op1_i[4],ex_op1_i[5],ex_op1_i[6],ex_op1_i[7],ex_op1_i[8],ex_op1_i[9],ex_op1_i[10],ex_op1_i[11],ex_op1_i[12],ex_op1_i[13],ex_op1_i[14],ex_op1_i[15],\Using_FPGA.Native [15:0]}),
        .\MEM_DataBus_Addr_reg[0] (\MEM_DataBus_Addr_reg[0] [97:68]),
        .Q({ex_op2[0],ex_op2[1],ex_op2[2],ex_op2[3],ex_op2[4],ex_op2[5],ex_op2[6],ex_op2[7],ex_op2[8],ex_op2[9],ex_op2[10],ex_op2[11],ex_op2[12],ex_op2[13],ex_op2[14],ex_op2[15],ex_op2[16],ex_op2[17],ex_op2[18],ex_op2[19],ex_op2[20],ex_op2[21],ex_op2[22],ex_op2[23],ex_op2[24],ex_op2[25],ex_op2[26],ex_op2[27],ex_op2[28],ex_op2[29],ex_op2[30],Q}),
        .S(\Using_FPGA.ALL_Bits[0].ALU_Bit_I1/S ),
        .\Using_FPGA.Native (\Using_FPGA.Native_3 ),
        .ex_alu_carryin(NLW_ALU_I_ex_alu_carryin_UNCONNECTED),
        .ex_databus_addr(ex_databus_addr),
        .ex_load_alu_carry_reg(ex_load_alu_carry_reg),
        .ex_load_shift_carry(ex_load_shift_carry),
        .ex_unsigned_op(ex_unsigned_op),
        .ex_use_carry(ex_use_carry),
        .ex_valid_reg(ex_valid_reg),
        .lopt(NLW_ALU_I_lopt_UNCONNECTED),
        .lopt_1(lopt_4),
        .lopt_2(lopt_5),
        .lopt_3(lopt_6),
        .lopt_4(lopt_7),
        .lopt_5(lopt_8));
  Byte_Doublet_Handle_gti Byte_Doublet_Handle_gti_I
       (.Clk(Clk),
        .D({\MEM_DataBus_Addr_reg[0] [65],\Using_FPGA.Native_54 [17:16],\MEM_DataBus_Addr_reg[0] [64:62],\Using_FPGA.Native_54 [15],\MEM_DataBus_Addr_reg[0] [61:60],\Using_FPGA.Native_54 [14:13],\MEM_DataBus_Addr_reg[0] [59],\Using_FPGA.Native_54 [12],\MEM_DataBus_Addr_reg[0] [58],\Using_FPGA.Native_54 [11],\MEM_DataBus_Addr_reg[0] [57:56],\Using_FPGA.Native_54 [10:9],\MEM_DataBus_Addr_reg[0] [55],\Using_FPGA.Native_54 [8],\MEM_DataBus_Addr_reg[0] [54],\Using_FPGA.Native_54 [7],\MEM_DataBus_Addr_reg[0] [53:52],\Using_FPGA.Native_54 [6:5],\MEM_DataBus_Addr_reg[0] [51],\Using_FPGA.Native_54 [4],\MEM_DataBus_Addr_reg[0] [50:48]}),
        .\LOCKSTEP_Out_reg[3031] (\LOCKSTEP_Out_reg[3031] ),
        .\Using_FPGA.Native (\NLW_Byte_Doublet_Handle_gti_I_Using_FPGA.Native_UNCONNECTED [3:0]),
        .\Using_FPGA.Native_0 ({\mem_byte_selects_reg[0] ,Operand_Select_I_n_187}),
        .ex_branch_with_delayslot_reg(ex_branch_with_delayslot_reg),
        .ex_reverse_mem_access(ex_reverse_mem_access),
        .mem_byte_access(mem_byte_access),
        .mem_byte_access_reg(mem_byte_access_reg),
        .mem_doublet_access(mem_doublet_access),
        .mem_valid_reg(mem_valid_reg),
        .sync_reset(sync_reset),
        .\trace_data_write_value_i_reg[0] ({\MEM_DataBus_Addr_reg[0] [47:16],\NLW_Byte_Doublet_Handle_gti_I_trace_data_write_value_i_reg[0]_UNCONNECTED [3:0]}),
        .wb_read_lsb_1_sel(wb_read_lsb_1_sel),
        .\wb_read_lsb_1_sel_reg[0]_0 (\wb_read_lsb_1_sel_reg[0] ),
        .wb_read_msb_doublet_sel(wb_read_msb_doublet_sel),
        .wb_read_msb_doublet_sel_reg_0(mem_reverse_byteorder));
  Data_Flow_Logic Data_Flow_Logic_I
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd),
        .Q({\LOCKSTEP_Out_reg[3007]_0 [23:8],wb_mem_result[16],wb_mem_result[17],wb_mem_result[18],wb_mem_result[19],wb_mem_result[20],wb_mem_result[21],wb_mem_result[22],wb_mem_result[23],\LOCKSTEP_Out_reg[3007]_0 [7:0]}),
        .R(R),
        .SR(SR),
        .\Using_FPGA.Native (\WB_MEM_Result_reg[0] ),
        .ex_branch_with_delayslot_reg(ex_branch_with_delayslot_reg),
        .ex_sel_alu_i_reg(\Using_FPGA.Native_1 ),
        .mem_ex_result(mem_ex_result),
        .mem_valid_reg(mem_valid_reg));
  Operand_Select_gti Operand_Select_I
       (.Clk(Clk),
        .D({D[30:15],exception_registers_I1_n_73,D[14:0]}),
        .E(E),
        .\EX_Branch_CMP_Op1_reg[10]_0 (\EX_Branch_CMP_Op1_reg[10] ),
        .\EX_Branch_CMP_Op1_reg[11]_0 (\EX_Branch_CMP_Op1_reg[11] ),
        .\EX_Branch_CMP_Op1_reg[12]_0 (\EX_Branch_CMP_Op1_reg[12] ),
        .\EX_Branch_CMP_Op1_reg[13]_0 (\EX_Branch_CMP_Op1_reg[13] ),
        .\EX_Branch_CMP_Op1_reg[14]_0 (\EX_Branch_CMP_Op1_reg[14] ),
        .\EX_Branch_CMP_Op1_reg[15]_0 (\EX_Branch_CMP_Op1_reg[15] ),
        .\EX_Branch_CMP_Op1_reg[16]_0 (Operand_Select_I_n_123),
        .\EX_Branch_CMP_Op1_reg[1]_0 (\EX_Branch_CMP_Op1_reg[1] ),
        .\EX_Branch_CMP_Op1_reg[2]_0 (\EX_Branch_CMP_Op1_reg[2] ),
        .\EX_Branch_CMP_Op1_reg[3]_0 (\EX_Branch_CMP_Op1_reg[3] ),
        .\EX_Branch_CMP_Op1_reg[4]_0 (\EX_Branch_CMP_Op1_reg[4] ),
        .\EX_Branch_CMP_Op1_reg[5]_0 (\EX_Branch_CMP_Op1_reg[5] ),
        .\EX_Branch_CMP_Op1_reg[6]_0 (\EX_Branch_CMP_Op1_reg[6] ),
        .\EX_Branch_CMP_Op1_reg[7]_0 (\EX_Branch_CMP_Op1_reg[7] ),
        .\EX_Branch_CMP_Op1_reg[9]_0 (\EX_Branch_CMP_Op1_reg[9] ),
        .\EX_Op2_reg[0]_0 (\EX_Op2_reg[0] ),
        .\EX_Op2_reg[1]_0 (\MEM_DataBus_Addr_reg[0] [96:81]),
        .\EX_Op3_reg[10]_0 (\EX_Op3_reg[10] ),
        .\EX_Op3_reg[16]_0 (Operand_Select_I_n_102),
        .\EX_Op3_reg[2]_0 (\EX_Op3_reg[2] ),
        .\EX_Op3_reg[3]_0 (\EX_Op3_reg[3] ),
        .\EX_Op3_reg[6]_0 (\EX_Op3_reg[6] ),
        .\EX_Sext_Op_reg[0] (\EX_Sext_Op_reg[0] ),
        .\EX_Sext_Op_reg[1] (out),
        .I1(I1),
        .\LOCKSTEP_Out_reg[98] ({\NLW_Operand_Select_I_LOCKSTEP_Out_reg[98]_UNCONNECTED [19:18],\MEM_DataBus_Addr_reg[0] [65:48]}),
        .\MEM_DataBus_Addr_reg[0] ({ex_op2[0],ex_op2[1],ex_op2[2],ex_op2[3],ex_op2[4],ex_op2[5],ex_op2[6],ex_op2[7],ex_op2[8],ex_op2[9],ex_op2[10],ex_op2[11],ex_op2[12],ex_op2[13],ex_op2[14],ex_op2[15],ex_op2[16],ex_op2[17],ex_op2[18],ex_op2[19],ex_op2[20],ex_op2[21],ex_op2[22],ex_op2[23],ex_op2[24],ex_op2[25],ex_op2[26],ex_op2[27],ex_op2[28],ex_op2[29],ex_op2[30],Q}),
        .\MEM_DataBus_Addr_reg[0]_0 (Operand_Select_I_n_154),
        .\MEM_DataBus_Write_Data_reg[1] (\MEM_DataBus_Write_Data_reg[1] ),
        .Q({\Using_FPGA.Native [16],ex_op1_i[1],ex_op1_i[2],ex_op1_i[3],ex_op1_i[4],ex_op1_i[5],ex_op1_i[6],ex_op1_i[7],ex_op1_i[8],ex_op1_i[9],ex_op1_i[10],ex_op1_i[11],ex_op1_i[12],ex_op1_i[13],ex_op1_i[14],ex_op1_i[15],\Using_FPGA.Native [15:0]}),
        .S(\Using_FPGA.ALL_Bits[0].ALU_Bit_I1/S ),
        .\Using_FPGA.Native (Operand_Select_I_n_0),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_4 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .\Using_FPGA.Native_10 (\Using_FPGA.Native_13 ),
        .\Using_FPGA.Native_11 (\Using_FPGA.Native_14 ),
        .\Using_FPGA.Native_12 (\Using_FPGA.Native_15 ),
        .\Using_FPGA.Native_13 (\Using_FPGA.Native_16 ),
        .\Using_FPGA.Native_14 (\Using_FPGA.Native_17 ),
        .\Using_FPGA.Native_15 (\Using_FPGA.Native_18 ),
        .\Using_FPGA.Native_16 ({\Using_FPGA.Native_2 ,ex_branch_cmp_op1[1],ex_branch_cmp_op1[2],ex_branch_cmp_op1[3],ex_branch_cmp_op1[4],ex_branch_cmp_op1[5],ex_branch_cmp_op1[6],ex_branch_cmp_op1[7],ex_branch_cmp_op1[8],ex_branch_cmp_op1[9],ex_branch_cmp_op1[10],ex_branch_cmp_op1[11],ex_branch_cmp_op1[12],ex_branch_cmp_op1[13],ex_branch_cmp_op1[14],ex_branch_cmp_op1[15],ex_branch_cmp_op1[16],ex_branch_cmp_op1[17],ex_branch_cmp_op1[18],ex_branch_cmp_op1[19],ex_branch_cmp_op1[20],ex_branch_cmp_op1[21],ex_branch_cmp_op1[22],ex_branch_cmp_op1[23],ex_branch_cmp_op1[24],ex_branch_cmp_op1[25],ex_branch_cmp_op1[26],ex_branch_cmp_op1[27],ex_branch_cmp_op1[28],ex_branch_cmp_op1[29]}),
        .\Using_FPGA.Native_17 (\Using_FPGA.Native_19 ),
        .\Using_FPGA.Native_18 (\Using_FPGA.Native_20 ),
        .\Using_FPGA.Native_19 (\Using_FPGA.Native_21 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_5 ),
        .\Using_FPGA.Native_20 (\Using_FPGA.Native_22 ),
        .\Using_FPGA.Native_21 (\Using_FPGA.Native_23 ),
        .\Using_FPGA.Native_22 (\Using_FPGA.Native_24 ),
        .\Using_FPGA.Native_23 (\Using_FPGA.Native_25 ),
        .\Using_FPGA.Native_24 (\Using_FPGA.Native_26 ),
        .\Using_FPGA.Native_25 (\Using_FPGA.Native_27 ),
        .\Using_FPGA.Native_26 (\Using_FPGA.Native_28 ),
        .\Using_FPGA.Native_27 (\Using_FPGA.Native_29 ),
        .\Using_FPGA.Native_28 (\Using_FPGA.Native_30 ),
        .\Using_FPGA.Native_29 (\Using_FPGA.Native_31 ),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_6 ),
        .\Using_FPGA.Native_30 (\Using_FPGA.Native_32 ),
        .\Using_FPGA.Native_31 (\Using_FPGA.Native_33 ),
        .\Using_FPGA.Native_32 (\Using_FPGA.Native_34 ),
        .\Using_FPGA.Native_33 (\Using_FPGA.Native_35 ),
        .\Using_FPGA.Native_34 (\Using_FPGA.Native_36 ),
        .\Using_FPGA.Native_35 (\Using_FPGA.Native_37 ),
        .\Using_FPGA.Native_36 (\Using_FPGA.Native_38 ),
        .\Using_FPGA.Native_37 (\Using_FPGA.Native_39 ),
        .\Using_FPGA.Native_38 (\Using_FPGA.Native_40 ),
        .\Using_FPGA.Native_39 (\Using_FPGA.Native_41 ),
        .\Using_FPGA.Native_4 (\Using_FPGA.Native_7 ),
        .\Using_FPGA.Native_40 (\Using_FPGA.Native_42 ),
        .\Using_FPGA.Native_41 (\Using_FPGA.Native_43 ),
        .\Using_FPGA.Native_42 (\Using_FPGA.Native_44 ),
        .\Using_FPGA.Native_43 (\Using_FPGA.Native_45 ),
        .\Using_FPGA.Native_44 (\Using_FPGA.Native_46 ),
        .\Using_FPGA.Native_45 (\Using_FPGA.Native_47 ),
        .\Using_FPGA.Native_46 (\Using_FPGA.Native_48 ),
        .\Using_FPGA.Native_47 (\Using_FPGA.Native_49 ),
        .\Using_FPGA.Native_48 (\Using_FPGA.Native_52 ),
        .\Using_FPGA.Native_49 (\Using_FPGA.Native_53 ),
        .\Using_FPGA.Native_5 (\Using_FPGA.Native_8 ),
        .\Using_FPGA.Native_6 (\Using_FPGA.Native_9 ),
        .\Using_FPGA.Native_7 (\Using_FPGA.Native_10 ),
        .\Using_FPGA.Native_8 (\Using_FPGA.Native_11 ),
        .\Using_FPGA.Native_9 (\Using_FPGA.Native_12 ),
        .\WB_MEM_Result_reg[0] ({\WB_MEM_Result_reg[0]_0 [30:15],of_op3,\WB_MEM_Result_reg[0]_0 [14:0]}),
        .\Zero_Detecting[0].nibble_Zero_reg (\Zero_Detecting[0].nibble_Zero_reg ),
        .ex_Enable_Sext_Shift(ex_Enable_Sext_Shift),
        .ex_MSR(ex_MSR[0]),
        .ex_branch_with_delayslot_reg(ex_branch_with_delayslot_reg),
        .ex_byte_access(ex_byte_access),
        .ex_cmp_op(ex_cmp_op),
        .ex_doublet_access(ex_doublet_access),
        .\ex_gpr_write_addr_reg[0] (\ex_gpr_write_addr_reg[0]_0 ),
        .ex_move_to_MSR_instr(ex_move_to_MSR_instr),
        .ex_reverse_mem_access(ex_reverse_mem_access),
        .ex_sel_alu(ex_sel_alu),
        .ex_sel_alu_i_reg(ex_sel_alu_i_reg),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .ex_swap_instr(ex_swap_instr),
        .ex_valid_reg(ex_valid_reg),
        .in0(Operand_Select_I_n_153),
        .\mem_byte_selects_reg[0] ({\mem_byte_selects_reg[0] ,Operand_Select_I_n_187}),
        .mem_ex_result({mem_ex_result[2],mem_ex_result[3],mem_ex_result[6],mem_ex_result[10],mem_ex_result[16]}),
        .mem_valid_reg(mem_valid_reg_0),
        .of_imm_data(of_imm_data),
        .of_op1_sel_spr(of_op1_sel_spr),
        .of_pause_reg(of_pause_reg),
        .out(\Using_FPGA.Native_0 ),
        .sync_reset(sync_reset));
  Register_File_gti Register_File_I
       (.Clk(Clk),
        .DID({\WB_MEM_Result_reg[0]_1 ,\WB_MEM_Result_reg[1] }),
        .GPR_Op1({GPR_Op1[30],GPR_Op1[29],GPR_Op1[28],GPR_Op1[27],GPR_Op1[26],GPR_Op1[25],GPR_Op1[24],GPR_Op1[23],GPR_Op1[22],GPR_Op1[21],GPR_Op1[20],GPR_Op1[19],GPR_Op1[18],GPR_Op1[17],GPR_Op1[16],GPR_Op1[15],gpr_op1,GPR_Op1[14],GPR_Op1[13],GPR_Op1[12],GPR_Op1[11],GPR_Op1[10],GPR_Op1[9],GPR_Op1[8],GPR_Op1[7],GPR_Op1[6],GPR_Op1[5],GPR_Op1[4],GPR_Op1[3],GPR_Op1[2],GPR_Op1[1],GPR_Op1[0]}),
        .GPR_Op2(GPR_Op2),
        .GPR_Op3({GPR_Op3[30],GPR_Op3[29],GPR_Op3[28],GPR_Op3[27],GPR_Op3[26],GPR_Op3[25],GPR_Op3[24],GPR_Op3[23],GPR_Op3[22],GPR_Op3[21],GPR_Op3[20],GPR_Op3[19],GPR_Op3[18],GPR_Op3[17],GPR_Op3[16],GPR_Op3[15],gpr_op3,GPR_Op3[14],GPR_Op3[13],GPR_Op3[12],GPR_Op3[11],GPR_Op3[10],GPR_Op3[9],GPR_Op3[8],GPR_Op3[7],GPR_Op3[6],GPR_Op3[5],GPR_Op3[4],GPR_Op3[3],GPR_Op3[2],GPR_Op3[1],GPR_Op3[0]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .\WB_MEM_Result_reg[10] ({\WB_MEM_Result_reg[10] ,\WB_MEM_Result_reg[11] }),
        .\WB_MEM_Result_reg[12] ({\WB_MEM_Result_reg[12] ,\WB_MEM_Result_reg[13] }),
        .\WB_MEM_Result_reg[14] ({\WB_MEM_Result_reg[14] ,\WB_MEM_Result_reg[15] }),
        .\WB_MEM_Result_reg[16] (\MEM_DataBus_Addr_reg[0] [7:6]),
        .\WB_MEM_Result_reg[18] (\MEM_DataBus_Addr_reg[0] [5:4]),
        .\WB_MEM_Result_reg[20] (\MEM_DataBus_Addr_reg[0] [3:2]),
        .\WB_MEM_Result_reg[22] (\MEM_DataBus_Addr_reg[0] [1:0]),
        .\WB_MEM_Result_reg[2] ({\WB_MEM_Result_reg[2] ,\WB_MEM_Result_reg[3] }),
        .\WB_MEM_Result_reg[4] ({\WB_MEM_Result_reg[4] ,\WB_MEM_Result_reg[5] }),
        .\WB_MEM_Result_reg[6] ({\WB_MEM_Result_reg[6] ,\WB_MEM_Result_reg[7] }),
        .\WB_MEM_Result_reg[8] ({\WB_MEM_Result_reg[8] ,\WB_MEM_Result_reg[9] }),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data({of_imm_data[0],of_imm_data[1],of_imm_data[2],of_imm_data[3],of_imm_data[4]}),
        .\wb_exception_kind_i_reg[31] ({\wb_exception_kind_i_reg[31]_0 ,\wb_exception_kind_i_reg[31]_1 }),
        .\wb_exception_kind_i_reg[31]_0 ({\wb_exception_kind_i_reg[31]_2 ,\wb_exception_kind_i_reg[31]_3 }),
        .\wb_exception_kind_i_reg[31]_1 ({\wb_exception_kind_i_reg[31]_4 ,\wb_exception_kind_i_reg[31]_5 }),
        .\wb_exception_kind_i_reg[31]_2 ({\wb_exception_kind_i_reg[31]_6 ,\wb_exception_kind_i_reg[31]_7 }),
        .\wb_gpr_write_addr_reg[0] (\wb_gpr_write_addr_reg[0] ));
  Shift_Logic_Module_gti Shift_Logic_Module_I
       (.\EX_Op1_reg[24] (Operand_Select_I_n_153),
        .\Using_FPGA.Native (\Using_FPGA.Native_0 ),
        .in0(in0),
        .out(out));
  microblaze_v10_0_3_MB_MUXCY_302 \Using_DAXI_ALU_Carry.Direct_MUXCY_I 
       (.ex_MSR(ex_MSR[1]),
        .ex_pre_alu_carry(\NLW_Using_DAXI_ALU_Carry.Direct_MUXCY_I_ex_pre_alu_carry_UNCONNECTED ),
        .lopt(\NLW_Using_DAXI_ALU_Carry.Direct_MUXCY_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ),
        .lopt_2(\^lopt_2 ),
        .lopt_3(\NLW_Using_DAXI_ALU_Carry.Direct_MUXCY_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_4),
        .lopt_5(ex_use_carry),
        .lopt_6(lopt_5),
        .lopt_7(lopt_6),
        .lopt_8(lopt_7),
        .lopt_9(lopt_8),
        .muxcy_di(muxcy_di),
        .muxcy_sel(muxcy_sel));
  microblaze_v10_0_3_MB_MUXCY_303 \Using_DAXI_ALU_Carry.Post_MUXCY_I 
       (.ex_alu_carryin(\NLW_Using_DAXI_ALU_Carry.Post_MUXCY_I_ex_alu_carryin_UNCONNECTED ),
        .ex_pre_alu_carry(\NLW_Using_DAXI_ALU_Carry.Post_MUXCY_I_ex_pre_alu_carry_UNCONNECTED ),
        .lopt(\NLW_Using_DAXI_ALU_Carry.Post_MUXCY_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ),
        .lopt_2(\^lopt_2 ));
  MB_LUT6_2__parameterized1 \Using_DAXI_ALU_Carry.direct_lut_INST 
       (.muxcy_di(muxcy_di),
        .muxcy_sel(muxcy_sel));
  Zero_Detect_gti Zero_Detect_I
       (.\EX_Branch_CMP_Op1_reg[0] ({\Using_FPGA.Native_2 ,ex_branch_cmp_op1[1],ex_branch_cmp_op1[2],ex_branch_cmp_op1[3],ex_branch_cmp_op1[4],ex_branch_cmp_op1[5],ex_branch_cmp_op1[6],ex_branch_cmp_op1[7],ex_branch_cmp_op1[8],ex_branch_cmp_op1[9],ex_branch_cmp_op1[10],ex_branch_cmp_op1[11],ex_branch_cmp_op1[12],ex_branch_cmp_op1[13],ex_branch_cmp_op1[14],ex_branch_cmp_op1[15],ex_branch_cmp_op1[16],ex_branch_cmp_op1[17],ex_branch_cmp_op1[18],ex_branch_cmp_op1[19],ex_branch_cmp_op1[20],ex_branch_cmp_op1[21],ex_branch_cmp_op1[22],ex_branch_cmp_op1[23],ex_branch_cmp_op1[24],ex_branch_cmp_op1[25],ex_branch_cmp_op1[26],ex_branch_cmp_op1[27],ex_branch_cmp_op1[28],ex_branch_cmp_op1[29]}),
        .\Zero_Detecting[0].nibble_Zero_reg (\Zero_Detecting[0].nibble_Zero_reg ),
        .ex_op1_cmp_equal(ex_op1_cmp_equal),
        .ex_op1_cmp_equal_n(ex_op1_cmp_equal_n),
        .ex_op1_zero(NLW_Zero_Detect_I_ex_op1_zero_UNCONNECTED),
        .lopt(lopt_9),
        .lopt_1(lopt_10),
        .lopt_2(lopt_11));
  exception_registers_gti exception_registers_I1
       (.Clk(Clk),
        .D(exception_registers_I1_n_73),
        .DI(DI),
        .\EX_Op3_reg[16] (of_op3),
        .GPR_Op1(gpr_op1),
        .GPR_Op3(gpr_op3),
        .I1_0(I1_0),
        .\LOCKSTEP_Out_reg[2914] ({\MEM_DataBus_Addr_reg[0] [11],\MEM_DataBus_Addr_reg[0] [7:0]}),
        .\LOCKSTEP_Out_reg[2915] (\LOCKSTEP_Out_reg[2915] ),
        .\LOCKSTEP_Out_reg[2916] (\LOCKSTEP_Out_reg[2916] ),
        .\LOCKSTEP_Out_reg[2917] (\LOCKSTEP_Out_reg[2917] ),
        .\LOCKSTEP_Out_reg[2918] (\LOCKSTEP_Out_reg[2918] ),
        .\LOCKSTEP_Out_reg[2919] (\LOCKSTEP_Out_reg[2919] ),
        .\LOCKSTEP_Out_reg[2920] (\LOCKSTEP_Out_reg[2920] ),
        .\LOCKSTEP_Out_reg[2921] (\LOCKSTEP_Out_reg[2921] ),
        .\LOCKSTEP_Out_reg[2922] (\LOCKSTEP_Out_reg[2922] ),
        .\LOCKSTEP_Out_reg[2923] (\LOCKSTEP_Out_reg[2923] ),
        .\LOCKSTEP_Out_reg[2924] (\LOCKSTEP_Out_reg[2924] ),
        .\LOCKSTEP_Out_reg[2925] (\LOCKSTEP_Out_reg[2925] ),
        .\LOCKSTEP_Out_reg[2926] (\LOCKSTEP_Out_reg[2926] ),
        .\LOCKSTEP_Out_reg[2927] (\LOCKSTEP_Out_reg[2927] ),
        .\LOCKSTEP_Out_reg[2928] (\LOCKSTEP_Out_reg[2928] ),
        .\LOCKSTEP_Out_reg[2929] (\LOCKSTEP_Out_reg[2929] ),
        .\LOCKSTEP_Out_reg[2930] (\NLW_exception_registers_I1_LOCKSTEP_Out_reg[2930]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2931] (\NLW_exception_registers_I1_LOCKSTEP_Out_reg[2931]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2932] (\NLW_exception_registers_I1_LOCKSTEP_Out_reg[2932]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2933] (\NLW_exception_registers_I1_LOCKSTEP_Out_reg[2933]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2934] (\NLW_exception_registers_I1_LOCKSTEP_Out_reg[2934]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2935] (\NLW_exception_registers_I1_LOCKSTEP_Out_reg[2935]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2936] (\NLW_exception_registers_I1_LOCKSTEP_Out_reg[2936]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2937] (\NLW_exception_registers_I1_LOCKSTEP_Out_reg[2937]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2938] (\LOCKSTEP_Out_reg[2938] ),
        .\LOCKSTEP_Out_reg[2939] (\LOCKSTEP_Out_reg[2939] ),
        .\LOCKSTEP_Out_reg[2940] (\LOCKSTEP_Out_reg[2940] ),
        .\LOCKSTEP_Out_reg[2941] (\LOCKSTEP_Out_reg[2941] ),
        .\LOCKSTEP_Out_reg[2942] (\LOCKSTEP_Out_reg[2942] ),
        .\LOCKSTEP_Out_reg[2943] (\LOCKSTEP_Out_reg[2943] ),
        .\LOCKSTEP_Out_reg[2944] (\LOCKSTEP_Out_reg[2944] ),
        .\LOCKSTEP_Out_reg[3007] (\LOCKSTEP_Out_reg[3007] ),
        .MEM_WB_Sel_Mem_PC(MEM_WB_Sel_Mem_PC),
        .\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg (\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .Q({wb_mem_result[16],wb_mem_result[17],wb_mem_result[18],wb_mem_result[19],wb_mem_result[20],wb_mem_result[21],wb_mem_result[22],wb_mem_result[23]}),
        .\Using_FPGA.Native (\Using_FPGA.Native_50 ),
        .\Using_FPGA.Native_0 (Operand_Select_I_n_102),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_51 ),
        .\Using_FPGA.Native_2 (Operand_Select_I_n_123),
        .\data_rd_reg_reg[16] (\data_rd_reg_reg[16] ),
        .\ex_gpr_write_addr_reg[0] (\ex_gpr_write_addr_reg[0] ),
        .\mem_pc_i_reg[0] (\mem_pc_i_reg[0] ),
        .mem_valid_reg(mem_valid_reg),
        .read_register_MSR_1(read_register_MSR_1),
        .wb_byte_access(wb_byte_access),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ),
        .\wb_exception_kind_i_reg[31] (\wb_exception_kind_i_reg[31] ),
        .\wb_gpr_write_addr_reg[3] (\wb_gpr_write_addr_reg[3] ),
        .wb_gpr_write_dbg(wb_gpr_write_dbg),
        .\wb_read_lsb_1_sel_reg[0] (\wb_read_lsb_1_sel_reg[0]_0 ),
        .\wb_read_lsb_1_sel_reg[0]_0 (\wb_read_lsb_1_sel_reg[0]_1 ),
        .\wb_read_lsb_1_sel_reg[0]_1 (\wb_read_lsb_1_sel_reg[0]_2 ),
        .\wb_read_lsb_1_sel_reg[0]_2 (\wb_read_lsb_1_sel_reg[0]_3 ),
        .\wb_read_lsb_1_sel_reg[0]_3 (\wb_read_lsb_1_sel_reg[0]_4 ),
        .\wb_read_lsb_1_sel_reg[0]_4 (\wb_read_lsb_1_sel_reg[0]_5 ),
        .\wb_read_lsb_1_sel_reg[0]_5 (\wb_read_lsb_1_sel_reg[0]_6 ),
        .\wb_read_lsb_1_sel_reg[0]_6 (\wb_read_lsb_1_sel_reg[0]_7 ));
  msr_reg_gti msr_reg_i
       (.Clk(Clk),
        .\EX_Op1_reg[30] (Operand_Select_I_n_0),
        .\LOCKSTEP_Out_reg[2995] (\MEM_DataBus_Addr_reg[0] [10:8]),
        .\Using_LWX_SWX_instr.ex_reservation_reg (\Using_LWX_SWX_instr.ex_reservation_reg ),
        .\WB_MEM_Result_reg[0] (\WB_MEM_Result_reg[0] ),
        .ex_MSR(ex_MSR),
        .ex_move_to_MSR_instr_reg(ex_move_to_MSR_instr_reg),
        .mem_ex_result({mem_ex_result[0],mem_ex_result[28],mem_ex_result[29],mem_ex_result[30]}),
        .mem_sel_msr(mem_sel_msr),
        .mem_valid_reg(mem_valid_reg),
        .sync_reset(sync_reset),
        .\wb_MSR_i_reg[28]_0 (mem_MSR[2]),
        .\wb_MSR_i_reg[29]_0 (mem_MSR[1]),
        .\wb_MSR_i_reg[30]_0 (mem_MSR[0]),
        .wb_piperun(wb_piperun));
endmodule

module Debug
   (LOCKSTEP_Master_Out,
    \Performace_Debug_Control.force_stop_cmd_1_reg_0 ,
    \Single_Synchronize.use_async_reset.sync_reg ,
    read_register_MSR_1,
    \Performace_Debug_Control.dbg_stop_if_delay_i_reg_0 ,
    \Performace_Debug_Control.dbg_state_nohalt_reg_0 ,
    Sleep_Out,
    \Performace_Debug_Control.dbg_freeze_nohalt_reg_0 ,
    Dbg_Trig_In,
    Dbg_Trig_Ack_Out,
    Dbg_TDO,
    IReady_0,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    ex_exception_no_load_store_mask,
    \if_pc_reg[29] ,
    \Serial_Dbg_Intf.command_reg_reg[1]_0 ,
    mem_exception_from_ex_reg,
    Q,
    Dbg_Clk,
    sync_reset,
    E,
    ex_branch_with_delayslot_reg,
    of_pause_reg,
    Pause,
    Sleep,
    Clk,
    \Using_FPGA.Native_1 ,
    wb_Halted,
    Dbg_Update,
    Dbg_Trig_Ack_In,
    Dbg_Trig_Out,
    wb_read_imm_reg_1,
    D,
    wb_read_imm_reg,
    Dbg_Stop,
    Dbg_Capture,
    dbg_stop_i,
    \Use_Serial_Unified_Completion.completion_block_reg ,
    Status_Reg_En,
    IReady,
    if_missed_fetch,
    Reset_Mode,
    ex_valid,
    Scan_Reset,
    Scan_Reset_Sel,
    Sleep_Decode,
    dbg_clean_stop,
    Dbg_Reg_En,
    \Use_Serial_Unified_Completion.completion_block_reg_0 ,
    Dbg_Shift,
    \Use_Serial_Unified_Completion.completion_block_reg_1 ,
    wb_gpr_write_dbg,
    wb_pc_valid,
    dbg_pause,
    mem_Exception_Taken,
    dbg_halt_reset_mode_reg_0,
    dbg_halt_reset_mode_reg_1,
    \Synchronize.use_sync_reset.sync_reg[2] ,
    wb_valid_reg,
    Dbg_TDI,
    Address,
    MEM_DataBus_Access_reg,
    \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 );
  output [37:0]LOCKSTEP_Master_Out;
  output \Performace_Debug_Control.force_stop_cmd_1_reg_0 ;
  output \Single_Synchronize.use_async_reset.sync_reg ;
  output read_register_MSR_1;
  output \Performace_Debug_Control.dbg_stop_if_delay_i_reg_0 ;
  output \Performace_Debug_Control.dbg_state_nohalt_reg_0 ;
  output Sleep_Out;
  output \Performace_Debug_Control.dbg_freeze_nohalt_reg_0 ;
  output [1:0]Dbg_Trig_In;
  output [1:0]Dbg_Trig_Ack_Out;
  output Dbg_TDO;
  output IReady_0;
  output \Using_FPGA.Native ;
  output \Using_FPGA.Native_0 ;
  output ex_exception_no_load_store_mask;
  output \if_pc_reg[29] ;
  output \Serial_Dbg_Intf.command_reg_reg[1]_0 ;
  output mem_exception_from_ex_reg;
  output [0:0]Q;
  input Dbg_Clk;
  input sync_reset;
  input [0:0]E;
  input ex_branch_with_delayslot_reg;
  input of_pause_reg;
  input Pause;
  input Sleep;
  input Clk;
  input \Using_FPGA.Native_1 ;
  input wb_Halted;
  input Dbg_Update;
  input [1:0]Dbg_Trig_Ack_In;
  input [1:0]Dbg_Trig_Out;
  input wb_read_imm_reg_1;
  input [4:0]D;
  input wb_read_imm_reg;
  input Dbg_Stop;
  input Dbg_Capture;
  input dbg_stop_i;
  input \Use_Serial_Unified_Completion.completion_block_reg ;
  input Status_Reg_En;
  input IReady;
  input if_missed_fetch;
  input [0:1]Reset_Mode;
  input ex_valid;
  input Scan_Reset;
  input Scan_Reset_Sel;
  input Sleep_Decode;
  input dbg_clean_stop;
  input [0:7]Dbg_Reg_En;
  input \Use_Serial_Unified_Completion.completion_block_reg_0 ;
  input Dbg_Shift;
  input \Use_Serial_Unified_Completion.completion_block_reg_1 ;
  input wb_gpr_write_dbg;
  input wb_pc_valid;
  input dbg_pause;
  input mem_Exception_Taken;
  input dbg_halt_reset_mode_reg_0;
  input dbg_halt_reset_mode_reg_1;
  input \Synchronize.use_sync_reset.sync_reg[2] ;
  input wb_valid_reg;
  input Dbg_TDI;
  input [0:31]Address;
  input [0:0]MEM_DataBus_Access_reg;
  input [31:0]\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ;

  wire A1;
  wire A2;
  wire A3;
  wire [0:31]Address;
  wire Clk;
  wire Command_Reg_En;
  wire Control_Reg_En;
  wire [4:0]D;
  wire Dbg_Capture;
  wire Dbg_Clk;
  wire [0:7]Dbg_Reg_En;
  wire Dbg_Shift;
  wire Dbg_TDI;
  wire Dbg_TDO;
  wire Dbg_TDO_INST_0_i_11_n_0;
  wire Dbg_TDO_INST_0_i_15_n_0;
  wire Dbg_TDO_INST_0_i_16_n_0;
  wire Dbg_TDO_INST_0_i_17_n_0;
  wire Dbg_TDO_INST_0_i_18_n_0;
  wire Dbg_TDO_INST_0_i_19_n_0;
  wire Dbg_TDO_INST_0_i_1_n_0;
  wire Dbg_TDO_INST_0_i_20_n_0;
  wire Dbg_TDO_INST_0_i_21_n_0;
  wire Dbg_TDO_INST_0_i_22_n_0;
  wire Dbg_TDO_INST_0_i_23_n_0;
  wire Dbg_TDO_INST_0_i_24_n_0;
  wire Dbg_TDO_INST_0_i_25_n_0;
  wire Dbg_TDO_INST_0_i_26_n_0;
  wire Dbg_TDO_INST_0_i_27_n_0;
  wire Dbg_TDO_INST_0_i_28_n_0;
  wire Dbg_TDO_INST_0_i_29_n_0;
  wire Dbg_TDO_INST_0_i_2_n_0;
  wire Dbg_TDO_INST_0_i_33_n_0;
  wire Dbg_TDO_INST_0_i_34_n_0;
  wire Dbg_TDO_INST_0_i_35_n_0;
  wire Dbg_TDO_INST_0_i_5_n_0;
  wire Dbg_TDO_INST_0_i_7_n_0;
  wire Dbg_TDO_INST_0_i_8_n_0;
  wire Dbg_TDO_INST_0_i_9_n_0;
  wire Dbg_Update;
  wire Full_32_bit;
  wire Full_32_bit_1;
  wire IReady;
  wire IReady_0;
  wire Instr_Insert_Reg_En;
  wire Instr_Insert_Reg_En_1;
  wire [37:0]LOCKSTEP_Master_Out;
  wire [0:0]MEM_DataBus_Access_reg;
  wire New_Dbg_Instr2_TCK;
  wire New_Dbg_Instr_TCK;
  wire \Performace_Debug_Control.dbg_freeze_nohalt_i_1_n_0 ;
  wire \Performace_Debug_Control.dbg_freeze_nohalt_i_2_n_0 ;
  wire \Performace_Debug_Control.dbg_freeze_nohalt_reg_0 ;
  wire \Performace_Debug_Control.dbg_state_nohalt_i_1_n_0 ;
  wire \Performace_Debug_Control.dbg_state_nohalt_i_4_n_0 ;
  wire \Performace_Debug_Control.dbg_state_nohalt_reg_0 ;
  wire \Performace_Debug_Control.dbg_stop_i_reg_n_0 ;
  wire \Performace_Debug_Control.dbg_stop_if_delay_i_i_1_n_0 ;
  wire \Performace_Debug_Control.dbg_stop_if_delay_i_reg_0 ;
  wire \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_i_1_n_0 ;
  wire \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_i_2_n_0 ;
  wire \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_i_3_n_0 ;
  wire [31:0]\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ;
  wire \Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg_n_0 ;
  wire \Performace_Debug_Control.force_stop_cmd_1_reg_0 ;
  wire \Performace_Debug_Control.force_stop_i_i_1_n_0 ;
  wire \Performace_Debug_Control.m0_dbg_hit[0]_i_1_n_0 ;
  wire \Performace_Debug_Control.m0_dbg_hit_reg_n_0_[0] ;
  wire \Performace_Debug_Control.normal_stop_i_i_1_n_0 ;
  wire \Performace_Debug_Control.step_continue_hold_i_1_n_0 ;
  wire [0:0]Q;
  wire Q2_in;
  wire Q2_out;
  wire Q6_out;
  wire Q_0;
  wire Raw;
  wire \Serial_Dbg_Intf.New_Dbg_Instr_TCK_i_2_n_0 ;
  wire \Serial_Dbg_Intf.SRL16E_7_n_0 ;
  wire \Serial_Dbg_Intf.The_Cache_Addresses[2].SRL16E_Cache_I_n_0 ;
  wire \Serial_Dbg_Intf.The_Cache_Addresses[6].SRL16E_Cache_I_n_0 ;
  wire \Serial_Dbg_Intf.command_reg_reg[1]_0 ;
  wire \Serial_Dbg_Intf.continue_from_brk_reg_n_0 ;
  wire \Serial_Dbg_Intf.control_reg_reg_n_0_[0] ;
  wire \Serial_Dbg_Intf.control_reg_reg_n_0_[4] ;
  wire \Serial_Dbg_Intf.control_reg_reg_n_0_[5] ;
  wire \Serial_Dbg_Intf.new_dbg_instr_shifting_CLK_reg_n_0 ;
  wire \Serial_Dbg_Intf.normal_stop_cmd_i_reg_n_0 ;
  wire \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[0] ;
  wire \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[1] ;
  wire \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[2] ;
  wire \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[3] ;
  wire \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[4] ;
  wire \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[6] ;
  wire \Serial_Dbg_Intf.shift_count[7]_i_2_n_0 ;
  wire \Serial_Dbg_Intf.shift_count_reg_n_0_[0] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[10] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[11] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[12] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[13] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[14] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[15] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[16] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[17] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[18] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[19] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[1] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[20] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[21] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[22] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[23] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[24] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[25] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[26] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[27] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[28] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[29] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[2] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[30] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[31] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[3] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[4] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[5] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[6] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[7] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[8] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[9] ;
  wire \Serial_Dbg_Intf.status_reg_reg_n_0_[0] ;
  wire \Serial_Dbg_Intf.status_reg_reg_n_0_[16] ;
  wire \Serial_Dbg_Intf.status_reg_reg_n_0_[17] ;
  wire \Serial_Dbg_Intf.status_reg_reg_n_0_[18] ;
  wire \Serial_Dbg_Intf.status_reg_reg_n_0_[19] ;
  wire \Serial_Dbg_Intf.status_reg_reg_n_0_[20] ;
  wire \Serial_Dbg_Intf.status_reg_reg_n_0_[22] ;
  wire \Serial_Dbg_Intf.status_reg_reg_n_0_[23] ;
  wire \Serial_Dbg_Intf.status_reg_reg_n_0_[24] ;
  wire \Serial_Dbg_Intf.status_reg_reg_n_0_[25] ;
  wire \Serial_Dbg_Intf.status_reg_reg_n_0_[27] ;
  wire \Serial_Dbg_Intf.status_reg_reg_n_0_[29] ;
  wire \Serial_Dbg_Intf.sync_pause_n_1 ;
  wire \Serial_Dbg_Intf.sync_stop_CPU_n_0 ;
  wire \Serial_Dbg_Intf.unchanged_i_1_n_0 ;
  wire \Single_Synchronize.use_async_reset.sync_reg ;
  wire Sleep;
  wire Sleep_Out;
  wire Status_Reg_En;
  wire \Use_Serial_Unified_Completion.completion_block_reg ;
  wire \Use_Serial_Unified_Completion.completion_block_reg_0 ;
  wire \Use_Serial_Unified_Completion.completion_block_reg_1 ;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_PC_Breakpoints.All_PC_Brks[0].Serial_Interface_1.address_hit_I_n_0 ;
  wire \Using_PC_Breakpoints.All_PC_Brks[0].Serial_Interface_1.address_hit_I_n_1 ;
  wire \Using_PC_Breakpoints.All_PC_Brks[0].Serial_Interface_1.address_hit_I_n_2 ;
  wire \Using_PC_Breakpoints.All_PC_Brks[0].Serial_Interface_1.address_hit_I_n_3 ;
  wire capture_1;
  wire [0:1]command_reg;
  wire command_reg_clear;
  wire command_reg_clear_i_1_n_0;
  wire continue_from_brk_TClk;
  wire [0:32]data_rd_reg;
  wire \data_rd_reg[0]_i_1_n_0 ;
  wire \data_rd_reg[32]_i_1_n_0 ;
  wire \data_rd_reg[32]_i_2_n_0 ;
  wire [0:32]data_read_reg;
  wire dbg_brki_hit;
  wire dbg_brki_hit_synced;
  wire dbg_clean_stop;
  wire dbg_freeze_nohalt0_in;
  wire dbg_halt_reset_mode_i_1_n_0;
  wire dbg_halt_reset_mode_i_2_n_0;
  wire dbg_halt_reset_mode_reg_0;
  wire dbg_halt_reset_mode_reg_1;
  wire dbg_stop_i;
  wire delay_slot_instr;
  wire ex_brki_hit;
  wire ex_exception_no_load_store_mask;
  wire ex_pc_brk;
  (* DIRECT_ENABLE *) wire ex_piperun_for_ce;
  wire ex_step_continue_hold;
  wire ex_valid;
  wire exception;
  wire exception_i_1_n_0;
  wire exception_i_2_n_0;
  wire executing;
  wire executing_i_1_n_0;
  wire force_stop_TClk;
  wire force_stop_cmd_1;
  wire force_stop_i;
  wire if_missed_fetch;
  wire \if_pc_reg[29] ;
  wire [0:1]instr_read_reg;
  wire m0_brki_hit;
  (* DIRECT_ENABLE *) wire m3_piperun_for_ce;
  wire mem_Exception_Taken;
  wire mem_exception_from_ex_reg;
  wire normal_stop_TClk;
  wire normal_stop_cmd_1;
  wire normal_stop_i;
  (* DIRECT_ENABLE *) wire of_piperun_for_ce;
  wire [7:0]p_0_in;
  wire p_0_in_1;
  wire p_10_out;
  wire p_65_out;
  wire p_72_out;
  wire p_75_out;
  wire p_78_out;
  wire p_81_out;
  wire p_84_out;
  wire p_87_out;
  wire read_register_MSR;
  wire read_register_MSR_1;
  wire read_register_PC;
  wire read_register_PC_1;
  (* DIRECT_RESET *) wire reset_bool_for_rst;
  wire running_clock;
  wire running_clock_synced;
  wire [0:9]sample_synced;
  wire saved_reset_mode_dbg_halt;
  wire saved_reset_mode_dbg_halt_i_1_n_0;
  wire saved_reset_mode_sleep;
  wire saved_reset_mode_sleep_i_1_n_0;
  wire [3:1]sel0;
  wire [0:0]sel0_2;
  wire single_Step_N;
  wire single_Step_N_i_1_n_0;
  wire single_Step_TClk;
  wire [0:1]single_step_count;
  wire \single_step_count[0]_i_1_n_0 ;
  wire \single_step_count[1]_i_1_n_0 ;
  wire sleep_reset_mode_i_1_n_0;
  wire sleep_synced;
  wire start_dbg_exec_reg_n_0;
  wire start_single_cmd;
  wire start_single_step_i_1_n_0;
  wire start_single_step_reg_n_0;
  wire step_continue_hold;
  wire sync;
  wire unchanged;
  wire wb_Halted;
  wire wb_brki_hit;
  wire wb_dbg_hit;
  wire wb_gpr_write_dbg;
  wire wb_pc_valid;
  wire wb_read_imm_reg;
  wire wb_read_imm_reg_1;
  wire wb_valid_reg;
  wire \NLW_Serial_Dbg_Intf.SRL16E_4_Q0_out_UNCONNECTED ;
  wire \NLW_Serial_Dbg_Intf.SRL16E_4_Q3_in_UNCONNECTED ;
  wire \NLW_Serial_Dbg_Intf.SRL16E_7_Dbg_Clk_UNCONNECTED ;
  wire \NLW_Serial_Dbg_Intf.SRL16E_7_tdo_config_word1_0_UNCONNECTED ;
  wire [6:0]\NLW_Serial_Dbg_Intf.SRL16E_7_Q_UNCONNECTED ;
  wire \NLW_Serial_Dbg_Intf.The_Cache_Addresses[2].SRL16E_Cache_I_Q11_in_UNCONNECTED ;
  wire \NLW_Serial_Dbg_Intf.The_Cache_Addresses[6].SRL16E_Cache_I_Q3_out_UNCONNECTED ;
  wire \NLW_Serial_Dbg_Intf.The_Cache_Addresses[6].SRL16E_Cache_I_Q4_out_UNCONNECTED ;
  wire \NLW_Serial_Dbg_Intf.sync_pause_Dbg_Clk_UNCONNECTED ;
  wire \NLW_Serial_Dbg_Intf.sync_pause_Pause_UNCONNECTED ;
  wire \NLW_Serial_Dbg_Intf.sync_pause_Scan_Reset_UNCONNECTED ;
  wire \NLW_Serial_Dbg_Intf.sync_pause_Scan_Reset_Sel_UNCONNECTED ;
  wire [0:0]\NLW_Serial_Dbg_Intf.sync_pause_D_UNCONNECTED ;
  wire \NLW_Serial_Dbg_Intf.sync_sample_Serial_Dbg_Intf.trig_ack_out_1_reg_UNCONNECTED ;
  wire \NLW_Serial_Dbg_Intf.sync_sample_Serial_Dbg_Intf.trig_in_1_reg_UNCONNECTED ;
  wire [0:0]\NLW_Serial_Dbg_Intf.sync_sample_Dbg_Trig_Ack_In_UNCONNECTED ;
  wire [0:0]\NLW_Serial_Dbg_Intf.sync_sample_Dbg_Trig_Ack_Out_UNCONNECTED ;
  wire [0:0]\NLW_Serial_Dbg_Intf.sync_sample_Dbg_Trig_In_UNCONNECTED ;
  wire [0:0]\NLW_Serial_Dbg_Intf.sync_sample_Dbg_Trig_Out_UNCONNECTED ;
  wire [1:0]\NLW_Serial_Dbg_Intf.sync_sample_Q_UNCONNECTED ;
  wire [0:0]\NLW_Serial_Dbg_Intf.sync_sample_Serial_Dbg_Intf.control_reg_reg[3]_UNCONNECTED ;
  wire [7:9]\NLW_Serial_Dbg_Intf.sync_sample_sample_synced_UNCONNECTED ;

  assign ex_piperun_for_ce = ex_branch_with_delayslot_reg;
  assign m3_piperun_for_ce = E[0];
  assign of_piperun_for_ce = of_pause_reg;
  assign reset_bool_for_rst = sync_reset;
  LUT5 #(
    .INIT(32'hFFFCCAAF)) 
    Dbg_TDO_INST_0_i_1
       (.I0(Dbg_TDO_INST_0_i_7_n_0),
        .I1(Dbg_TDO_INST_0_i_8_n_0),
        .I2(sel0_2),
        .I3(Dbg_TDO_INST_0_i_9_n_0),
        .I4(sel0[1]),
        .O(Dbg_TDO_INST_0_i_1_n_0));
  LUT5 #(
    .INIT(32'h00000001)) 
    Dbg_TDO_INST_0_i_11
       (.I0(sel0_2),
        .I1(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I2(A1),
        .I3(A2),
        .I4(A3),
        .O(Dbg_TDO_INST_0_i_11_n_0));
  LUT6 #(
    .INIT(64'h0504050505040404)) 
    Dbg_TDO_INST_0_i_15
       (.I0(\Use_Serial_Unified_Completion.completion_block_reg_0 ),
        .I1(Dbg_Reg_En[6]),
        .I2(Dbg_Reg_En[7]),
        .I3(instr_read_reg[1]),
        .I4(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I5(instr_read_reg[0]),
        .O(Dbg_TDO_INST_0_i_15_n_0));
  LUT5 #(
    .INIT(32'h00000004)) 
    Dbg_TDO_INST_0_i_16
       (.I0(A3),
        .I1(\Serial_Dbg_Intf.status_reg_reg_n_0_[0] ),
        .I2(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I3(A1),
        .I4(A2),
        .O(Dbg_TDO_INST_0_i_16_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    Dbg_TDO_INST_0_i_17
       (.I0(A1),
        .I1(A2),
        .O(Dbg_TDO_INST_0_i_17_n_0));
  LUT4 #(
    .INIT(16'hBE82)) 
    Dbg_TDO_INST_0_i_18
       (.I0(Dbg_TDO_INST_0_i_33_n_0),
        .I1(A1),
        .I2(A2),
        .I3(Dbg_TDO_INST_0_i_34_n_0),
        .O(Dbg_TDO_INST_0_i_18_n_0));
  LUT6 #(
    .INIT(64'h00FFFFE2000000E2)) 
    Dbg_TDO_INST_0_i_19
       (.I0(\Serial_Dbg_Intf.status_reg_reg_n_0_[16] ),
        .I1(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I2(\Serial_Dbg_Intf.status_reg_reg_n_0_[17] ),
        .I3(A1),
        .I4(A2),
        .I5(Dbg_TDO_INST_0_i_35_n_0),
        .O(Dbg_TDO_INST_0_i_19_n_0));
  LUT5 #(
    .INIT(32'h7F777777)) 
    Dbg_TDO_INST_0_i_2
       (.I0(\Use_Serial_Unified_Completion.completion_block_reg_1 ),
        .I1(\Use_Serial_Unified_Completion.completion_block_reg ),
        .I2(sel0[1]),
        .I3(Dbg_TDO_INST_0_i_11_n_0),
        .I4(data_read_reg[0]),
        .O(Dbg_TDO_INST_0_i_2_n_0));
  LUT6 #(
    .INIT(64'hFACF0ACFFAC00AC0)) 
    Dbg_TDO_INST_0_i_20
       (.I0(data_read_reg[1]),
        .I1(data_read_reg[2]),
        .I2(A1),
        .I3(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I4(data_read_reg[3]),
        .I5(data_read_reg[4]),
        .O(Dbg_TDO_INST_0_i_20_n_0));
  LUT6 #(
    .INIT(64'hFACF0ACFFAC00AC0)) 
    Dbg_TDO_INST_0_i_21
       (.I0(data_read_reg[5]),
        .I1(data_read_reg[6]),
        .I2(A1),
        .I3(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I4(data_read_reg[7]),
        .I5(data_read_reg[8]),
        .O(Dbg_TDO_INST_0_i_21_n_0));
  LUT4 #(
    .INIT(16'h5556)) 
    Dbg_TDO_INST_0_i_22
       (.I0(A3),
        .I1(A2),
        .I2(A1),
        .I3(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .O(Dbg_TDO_INST_0_i_22_n_0));
  LUT6 #(
    .INIT(64'hFACF0ACFFAC00AC0)) 
    Dbg_TDO_INST_0_i_23
       (.I0(data_read_reg[9]),
        .I1(data_read_reg[10]),
        .I2(A1),
        .I3(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I4(data_read_reg[11]),
        .I5(data_read_reg[12]),
        .O(Dbg_TDO_INST_0_i_23_n_0));
  LUT3 #(
    .INIT(8'h56)) 
    Dbg_TDO_INST_0_i_24
       (.I0(A2),
        .I1(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I2(A1),
        .O(Dbg_TDO_INST_0_i_24_n_0));
  LUT6 #(
    .INIT(64'hFACF0ACFFAC00AC0)) 
    Dbg_TDO_INST_0_i_25
       (.I0(data_read_reg[13]),
        .I1(data_read_reg[14]),
        .I2(A1),
        .I3(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I4(data_read_reg[15]),
        .I5(data_read_reg[16]),
        .O(Dbg_TDO_INST_0_i_25_n_0));
  LUT6 #(
    .INIT(64'hFACF0ACFFAC00AC0)) 
    Dbg_TDO_INST_0_i_26
       (.I0(data_read_reg[17]),
        .I1(data_read_reg[18]),
        .I2(A1),
        .I3(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I4(data_read_reg[19]),
        .I5(data_read_reg[20]),
        .O(Dbg_TDO_INST_0_i_26_n_0));
  LUT6 #(
    .INIT(64'hFACF0ACFFAC00AC0)) 
    Dbg_TDO_INST_0_i_27
       (.I0(data_read_reg[21]),
        .I1(data_read_reg[22]),
        .I2(A1),
        .I3(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I4(data_read_reg[23]),
        .I5(data_read_reg[24]),
        .O(Dbg_TDO_INST_0_i_27_n_0));
  LUT6 #(
    .INIT(64'hFACF0ACFFAC00AC0)) 
    Dbg_TDO_INST_0_i_28
       (.I0(data_read_reg[25]),
        .I1(data_read_reg[26]),
        .I2(A1),
        .I3(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I4(data_read_reg[27]),
        .I5(data_read_reg[28]),
        .O(Dbg_TDO_INST_0_i_28_n_0));
  LUT6 #(
    .INIT(64'hFACF0ACFFAC00AC0)) 
    Dbg_TDO_INST_0_i_29
       (.I0(data_read_reg[29]),
        .I1(data_read_reg[30]),
        .I2(A1),
        .I3(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I4(data_read_reg[31]),
        .I5(data_read_reg[32]),
        .O(Dbg_TDO_INST_0_i_29_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Dbg_TDO_INST_0_i_33
       (.I0(\Serial_Dbg_Intf.status_reg_reg_n_0_[23] ),
        .I1(\Serial_Dbg_Intf.status_reg_reg_n_0_[22] ),
        .I2(A1),
        .I3(\Serial_Dbg_Intf.status_reg_reg_n_0_[25] ),
        .I4(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I5(\Serial_Dbg_Intf.status_reg_reg_n_0_[24] ),
        .O(Dbg_TDO_INST_0_i_33_n_0));
  LUT4 #(
    .INIT(16'hB800)) 
    Dbg_TDO_INST_0_i_34
       (.I0(\Serial_Dbg_Intf.status_reg_reg_n_0_[27] ),
        .I1(A1),
        .I2(\Serial_Dbg_Intf.status_reg_reg_n_0_[29] ),
        .I3(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .O(Dbg_TDO_INST_0_i_34_n_0));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    Dbg_TDO_INST_0_i_35
       (.I0(\Serial_Dbg_Intf.status_reg_reg_n_0_[19] ),
        .I1(\Serial_Dbg_Intf.status_reg_reg_n_0_[18] ),
        .I2(A1),
        .I3(\Serial_Dbg_Intf.status_reg_reg_n_0_[20] ),
        .I4(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .O(Dbg_TDO_INST_0_i_35_n_0));
  LUT6 #(
    .INIT(64'hBEEEB22E8EE28222)) 
    Dbg_TDO_INST_0_i_5
       (.I0(Dbg_TDO_INST_0_i_16_n_0),
        .I1(sel0_2),
        .I2(Dbg_TDO_INST_0_i_17_n_0),
        .I3(A3),
        .I4(Dbg_TDO_INST_0_i_18_n_0),
        .I5(Dbg_TDO_INST_0_i_19_n_0),
        .O(Dbg_TDO_INST_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    Dbg_TDO_INST_0_i_7
       (.I0(Dbg_TDO_INST_0_i_20_n_0),
        .I1(Dbg_TDO_INST_0_i_21_n_0),
        .I2(Dbg_TDO_INST_0_i_22_n_0),
        .I3(Dbg_TDO_INST_0_i_23_n_0),
        .I4(Dbg_TDO_INST_0_i_24_n_0),
        .I5(Dbg_TDO_INST_0_i_25_n_0),
        .O(Dbg_TDO_INST_0_i_7_n_0));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    Dbg_TDO_INST_0_i_8
       (.I0(Dbg_TDO_INST_0_i_26_n_0),
        .I1(Dbg_TDO_INST_0_i_27_n_0),
        .I2(Dbg_TDO_INST_0_i_22_n_0),
        .I3(Dbg_TDO_INST_0_i_28_n_0),
        .I4(Dbg_TDO_INST_0_i_24_n_0),
        .I5(Dbg_TDO_INST_0_i_29_n_0),
        .O(Dbg_TDO_INST_0_i_8_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    Dbg_TDO_INST_0_i_9
       (.I0(A3),
        .I1(A2),
        .I2(A1),
        .I3(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .O(Dbg_TDO_INST_0_i_9_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Full_32_bit_1_reg
       (.C(Clk),
        .CE(wb_Halted),
        .D(wb_read_imm_reg_1),
        .Q(Full_32_bit_1),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    Full_32_bit_reg
       (.C(Clk),
        .CE(wb_Halted),
        .D(wb_read_imm_reg),
        .Q(Full_32_bit),
        .R(reset_bool_for_rst));
  LUT5 #(
    .INIT(32'h0000ABAA)) 
    \PC_Buffer_reg[3][0]_srl4_i_1 
       (.I0(LOCKSTEP_Master_Out[36]),
        .I1(\Performace_Debug_Control.dbg_freeze_nohalt_reg_0 ),
        .I2(wb_Halted),
        .I3(IReady),
        .I4(if_missed_fetch),
        .O(IReady_0));
  FDRE #(
    .INIT(1'b0)) 
    \Performace_Debug_Control.dbg_brki_hit_reg 
       (.C(Clk),
        .CE(wb_Halted),
        .D(wb_brki_hit),
        .Q(dbg_brki_hit),
        .R(reset_bool_for_rst));
  LUT6 #(
    .INIT(64'hAAAAAAABAAAAAAA8)) 
    \Performace_Debug_Control.dbg_freeze_nohalt_i_1 
       (.I0(dbg_freeze_nohalt0_in),
        .I1(dbg_halt_reset_mode_reg_1),
        .I2(\Serial_Dbg_Intf.continue_from_brk_reg_n_0 ),
        .I3(\Performace_Debug_Control.dbg_freeze_nohalt_i_2_n_0 ),
        .I4(\Serial_Dbg_Intf.new_dbg_instr_shifting_CLK_reg_n_0 ),
        .I5(\Performace_Debug_Control.dbg_freeze_nohalt_reg_0 ),
        .O(\Performace_Debug_Control.dbg_freeze_nohalt_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAAA8AAAA)) 
    \Performace_Debug_Control.dbg_freeze_nohalt_i_2 
       (.I0(\Performace_Debug_Control.dbg_state_nohalt_reg_0 ),
        .I1(reset_bool_for_rst),
        .I2(\Serial_Dbg_Intf.continue_from_brk_reg_n_0 ),
        .I3(start_single_step_reg_n_0),
        .I4(\Serial_Dbg_Intf.control_reg_reg_n_0_[0] ),
        .O(\Performace_Debug_Control.dbg_freeze_nohalt_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \Performace_Debug_Control.dbg_freeze_nohalt_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(\Performace_Debug_Control.dbg_freeze_nohalt_i_1_n_0 ),
        .Q(\Performace_Debug_Control.dbg_freeze_nohalt_reg_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \Performace_Debug_Control.dbg_hit_reg[0] 
       (.C(Clk),
        .CE(wb_Halted),
        .D(wb_dbg_hit),
        .Q(Raw),
        .R(reset_bool_for_rst));
  LUT6 #(
    .INIT(64'h0000AAAB0000AAA8)) 
    \Performace_Debug_Control.dbg_state_nohalt_i_1 
       (.I0(dbg_freeze_nohalt0_in),
        .I1(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_i_3_n_0 ),
        .I2(\Serial_Dbg_Intf.continue_from_brk_reg_n_0 ),
        .I3(dbg_halt_reset_mode_reg_1),
        .I4(\Performace_Debug_Control.dbg_state_nohalt_i_4_n_0 ),
        .I5(\Performace_Debug_Control.dbg_state_nohalt_reg_0 ),
        .O(\Performace_Debug_Control.dbg_state_nohalt_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0054)) 
    \Performace_Debug_Control.dbg_state_nohalt_i_2 
       (.I0(reset_bool_for_rst),
        .I1(\Performace_Debug_Control.dbg_stop_if_delay_i_reg_0 ),
        .I2(wb_Halted),
        .I3(\Serial_Dbg_Intf.continue_from_brk_reg_n_0 ),
        .O(dbg_freeze_nohalt0_in));
  LUT3 #(
    .INIT(8'h07)) 
    \Performace_Debug_Control.dbg_state_nohalt_i_4 
       (.I0(saved_reset_mode_dbg_halt),
        .I1(\Performace_Debug_Control.dbg_stop_if_delay_i_reg_0 ),
        .I2(\Serial_Dbg_Intf.control_reg_reg_n_0_[0] ),
        .O(\Performace_Debug_Control.dbg_state_nohalt_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \Performace_Debug_Control.dbg_state_nohalt_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(\Performace_Debug_Control.dbg_state_nohalt_i_1_n_0 ),
        .Q(\Performace_Debug_Control.dbg_state_nohalt_reg_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \Performace_Debug_Control.dbg_stop_i_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(\Performace_Debug_Control.dbg_stop_i_reg_n_0 ),
        .Q(\Performace_Debug_Control.dbg_stop_i_reg_n_0 ),
        .R(dbg_stop_i));
  LUT5 #(
    .INIT(32'h0000000E)) 
    \Performace_Debug_Control.dbg_stop_if_delay_i_i_1 
       (.I0(D[4]),
        .I1(\Single_Synchronize.use_async_reset.sync_reg ),
        .I2(reset_bool_for_rst),
        .I3(\Performace_Debug_Control.dbg_stop_if_delay_i_reg_0 ),
        .I4(saved_reset_mode_sleep),
        .O(\Performace_Debug_Control.dbg_stop_if_delay_i_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \Performace_Debug_Control.dbg_stop_if_delay_i_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(\Performace_Debug_Control.dbg_stop_if_delay_i_i_1_n_0 ),
        .Q(LOCKSTEP_Master_Out[32]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0000FE02)) 
    \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_i_1 
       (.I0(\Single_Synchronize.use_async_reset.sync_reg ),
        .I1(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_i_2_n_0 ),
        .I2(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_i_3_n_0 ),
        .I3(dbg_halt_reset_mode_reg_0),
        .I4(\Serial_Dbg_Intf.continue_from_brk_reg_n_0 ),
        .O(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFEFEFEFEFEFFFEFE)) 
    \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_i_2 
       (.I0(reset_bool_for_rst),
        .I1(wb_Halted),
        .I2(\Performace_Debug_Control.dbg_stop_if_delay_i_reg_0 ),
        .I3(Sleep_Out),
        .I4(saved_reset_mode_sleep),
        .I5(\Serial_Dbg_Intf.new_dbg_instr_shifting_CLK_reg_n_0 ),
        .O(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFD0000)) 
    \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_i_3 
       (.I0(\Serial_Dbg_Intf.control_reg_reg_n_0_[0] ),
        .I1(start_single_step_reg_n_0),
        .I2(\Serial_Dbg_Intf.continue_from_brk_reg_n_0 ),
        .I3(reset_bool_for_rst),
        .I4(\Performace_Debug_Control.dbg_state_nohalt_reg_0 ),
        .I5(\Serial_Dbg_Intf.new_dbg_instr_shifting_CLK_reg_n_0 ),
        .O(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_i_1_n_0 ),
        .Q(\Single_Synchronize.use_async_reset.sync_reg ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \Performace_Debug_Control.ex_brki_hit_reg 
       (.C(Clk),
        .CE(of_piperun_for_ce),
        .D(\Using_FPGA.Native_1 ),
        .Q(ex_brki_hit),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Performace_Debug_Control.ex_dbg_hit_reg[0] 
       (.C(Clk),
        .CE(of_piperun_for_ce),
        .D(\Using_PC_Breakpoints.All_PC_Brks[0].Serial_Interface_1.address_hit_I_n_0 ),
        .Q(ex_pc_brk),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Performace_Debug_Control.ex_dbg_pc_hit_i_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(\Using_PC_Breakpoints.All_PC_Brks[0].Serial_Interface_1.address_hit_I_n_2 ),
        .Q(LOCKSTEP_Master_Out[35]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(\Using_PC_Breakpoints.All_PC_Brks[0].Serial_Interface_1.address_hit_I_n_3 ),
        .Q(\Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg_n_0 ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Performace_Debug_Control.ex_step_continue_hold_reg 
       (.C(Clk),
        .CE(of_piperun_for_ce),
        .D(step_continue_hold),
        .Q(ex_step_continue_hold),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Performace_Debug_Control.force_stop_cmd_1_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(\Performace_Debug_Control.force_stop_cmd_1_reg_0 ),
        .Q(force_stop_cmd_1),
        .R(reset_bool_for_rst));
  LUT4 #(
    .INIT(16'hFF04)) 
    \Performace_Debug_Control.force_stop_i_i_1 
       (.I0(D[4]),
        .I1(force_stop_cmd_1),
        .I2(\Performace_Debug_Control.force_stop_cmd_1_reg_0 ),
        .I3(force_stop_i),
        .O(\Performace_Debug_Control.force_stop_i_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \Performace_Debug_Control.force_stop_i_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(\Performace_Debug_Control.force_stop_i_i_1_n_0 ),
        .Q(force_stop_i),
        .R(dbg_stop_i));
  FDRE #(
    .INIT(1'b0)) 
    \Performace_Debug_Control.m0_brki_hit_reg 
       (.C(Clk),
        .CE(ex_piperun_for_ce),
        .D(ex_brki_hit),
        .Q(m0_brki_hit),
        .R(reset_bool_for_rst));
  LUT3 #(
    .INIT(8'hBA)) 
    \Performace_Debug_Control.m0_dbg_hit[0]_i_1 
       (.I0(ex_pc_brk),
        .I1(ex_step_continue_hold),
        .I2(\Performace_Debug_Control.m0_dbg_hit_reg_n_0_[0] ),
        .O(\Performace_Debug_Control.m0_dbg_hit[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \Performace_Debug_Control.m0_dbg_hit_reg[0] 
       (.C(Clk),
        .CE(ex_piperun_for_ce),
        .D(\Performace_Debug_Control.m0_dbg_hit[0]_i_1_n_0 ),
        .Q(\Performace_Debug_Control.m0_dbg_hit_reg_n_0_[0] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Performace_Debug_Control.normal_stop_cmd_1_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(\Serial_Dbg_Intf.normal_stop_cmd_i_reg_n_0 ),
        .Q(normal_stop_cmd_1),
        .R(reset_bool_for_rst));
  LUT4 #(
    .INIT(16'hFF04)) 
    \Performace_Debug_Control.normal_stop_i_i_1 
       (.I0(D[4]),
        .I1(normal_stop_cmd_1),
        .I2(\Serial_Dbg_Intf.normal_stop_cmd_i_reg_n_0 ),
        .I3(normal_stop_i),
        .O(\Performace_Debug_Control.normal_stop_i_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \Performace_Debug_Control.normal_stop_i_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(\Performace_Debug_Control.normal_stop_i_i_1_n_0 ),
        .Q(normal_stop_i),
        .R(dbg_stop_i));
  LUT4 #(
    .INIT(16'h5554)) 
    \Performace_Debug_Control.step_continue_hold_i_1 
       (.I0(of_piperun_for_ce),
        .I1(\Serial_Dbg_Intf.continue_from_brk_reg_n_0 ),
        .I2(start_single_step_reg_n_0),
        .I3(step_continue_hold),
        .O(\Performace_Debug_Control.step_continue_hold_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \Performace_Debug_Control.step_continue_hold_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(\Performace_Debug_Control.step_continue_hold_i_1_n_0 ),
        .Q(step_continue_hold),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Performace_Debug_Control.wb_brki_hit_reg 
       (.C(Clk),
        .CE(m3_piperun_for_ce),
        .D(m0_brki_hit),
        .Q(wb_brki_hit),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Performace_Debug_Control.wb_dbg_hit_reg[0] 
       (.C(Clk),
        .CE(m3_piperun_for_ce),
        .D(\Performace_Debug_Control.m0_dbg_hit_reg_n_0_[0] ),
        .Q(wb_dbg_hit),
        .R(reset_bool_for_rst));
  LUT5 #(
    .INIT(32'h00000004)) 
    \Serial_Dbg_Intf.Instr_Insert_Reg_En_1_i_1 
       (.I0(Dbg_Reg_En[4]),
        .I1(Dbg_Reg_En[5]),
        .I2(Dbg_Reg_En[3]),
        .I3(Dbg_Reg_En[1]),
        .I4(\Using_PC_Breakpoints.All_PC_Brks[0].Serial_Interface_1.address_hit_I_n_1 ),
        .O(Instr_Insert_Reg_En));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.Instr_Insert_Reg_En_1_reg 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(Instr_Insert_Reg_En),
        .Q(Instr_Insert_Reg_En_1));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Dbg_Instr2_TCK_reg 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(New_Dbg_Instr_TCK),
        .Q(New_Dbg_Instr2_TCK));
  LUT6 #(
    .INIT(64'h0000000200000000)) 
    \Serial_Dbg_Intf.New_Dbg_Instr_TCK_i_1 
       (.I0(Instr_Insert_Reg_En),
        .I1(instr_read_reg[1]),
        .I2(instr_read_reg[0]),
        .I3(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I4(\Serial_Dbg_Intf.New_Dbg_Instr_TCK_i_2_n_0 ),
        .I5(sel0_2),
        .O(p_87_out));
  LUT3 #(
    .INIT(8'h7F)) 
    \Serial_Dbg_Intf.New_Dbg_Instr_TCK_i_2 
       (.I0(A3),
        .I1(A2),
        .I2(A1),
        .O(\Serial_Dbg_Intf.New_Dbg_Instr_TCK_i_2_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Dbg_Instr_TCK_reg 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(p_87_out),
        .Q(New_Dbg_Instr_TCK));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[0] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[1] ),
        .Q(LOCKSTEP_Master_Out[31]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[10] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[11] ),
        .Q(LOCKSTEP_Master_Out[21]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[11] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[12] ),
        .Q(LOCKSTEP_Master_Out[20]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[12] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[13] ),
        .Q(LOCKSTEP_Master_Out[19]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[13] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[14] ),
        .Q(LOCKSTEP_Master_Out[18]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[14] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[15] ),
        .Q(LOCKSTEP_Master_Out[17]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[15] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[16] ),
        .Q(LOCKSTEP_Master_Out[16]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[16] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[17] ),
        .Q(LOCKSTEP_Master_Out[15]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[17] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[18] ),
        .Q(LOCKSTEP_Master_Out[14]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[18] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[19] ),
        .Q(LOCKSTEP_Master_Out[13]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[19] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[20] ),
        .Q(LOCKSTEP_Master_Out[12]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[1] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[2] ),
        .Q(LOCKSTEP_Master_Out[30]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[20] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[21] ),
        .Q(LOCKSTEP_Master_Out[11]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[21] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[22] ),
        .Q(LOCKSTEP_Master_Out[10]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[22] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[23] ),
        .Q(LOCKSTEP_Master_Out[9]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[23] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[24] ),
        .Q(LOCKSTEP_Master_Out[8]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[24] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[25] ),
        .Q(LOCKSTEP_Master_Out[7]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[25] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[26] ),
        .Q(LOCKSTEP_Master_Out[6]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[26] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[27] ),
        .Q(LOCKSTEP_Master_Out[5]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[27] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[28] ),
        .Q(LOCKSTEP_Master_Out[4]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[28] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[29] ),
        .Q(LOCKSTEP_Master_Out[3]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[29] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[30] ),
        .Q(LOCKSTEP_Master_Out[2]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[2] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[3] ),
        .Q(LOCKSTEP_Master_Out[29]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[30] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[31] ),
        .Q(LOCKSTEP_Master_Out[1]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[31] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(Dbg_TDI),
        .Q(LOCKSTEP_Master_Out[0]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[3] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[4] ),
        .Q(LOCKSTEP_Master_Out[28]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[4] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[5] ),
        .Q(LOCKSTEP_Master_Out[27]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[5] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[6] ),
        .Q(LOCKSTEP_Master_Out[26]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[6] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[7] ),
        .Q(LOCKSTEP_Master_Out[25]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[7] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[8] ),
        .Q(LOCKSTEP_Master_Out[24]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[8] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[9] ),
        .Q(LOCKSTEP_Master_Out[23]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[9] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[10] ),
        .Q(LOCKSTEP_Master_Out[22]));
  microblaze_v10_0_3_MB_SRL16E \Serial_Dbg_Intf.SRL16E_1 
       (.Dbg_Clk(Dbg_Clk),
        .Q({A3,A2,A1,\Serial_Dbg_Intf.shift_count_reg_n_0_[0] }),
        .Q_0(Q_0));
  microblaze_v10_0_3_MB_SRL16E__parameterized3 \Serial_Dbg_Intf.SRL16E_3 
       (.Dbg_Clk(Dbg_Clk),
        .Q({A3,A2,A1,\Serial_Dbg_Intf.shift_count_reg_n_0_[0] }),
        .Q2_in(Q2_in));
  microblaze_v10_0_3_MB_SRL16E__parameterized4 \Serial_Dbg_Intf.SRL16E_4 
       (.Dbg_Clk(Dbg_Clk),
        .Dbg_Reg_En({Dbg_Reg_En[6],Dbg_Reg_En[7]}),
        .Dbg_TDO(Dbg_TDO),
        .Q({sel0,sel0_2,A3,A2,A1,\Serial_Dbg_Intf.shift_count_reg_n_0_[0] }),
        .Q0_out(\NLW_Serial_Dbg_Intf.SRL16E_4_Q0_out_UNCONNECTED ),
        .Q2_in(Q2_in),
        .Q3_in(\NLW_Serial_Dbg_Intf.SRL16E_4_Q3_in_UNCONNECTED ),
        .\Serial_Dbg_Intf.instr_read_reg_reg[1] (Dbg_TDO_INST_0_i_15_n_0),
        .\Serial_Dbg_Intf.shift_count_reg[4] (Dbg_TDO_INST_0_i_1_n_0),
        .\Serial_Dbg_Intf.shift_count_reg[4]_0 (Dbg_TDO_INST_0_i_5_n_0),
        .\Serial_Dbg_Intf.shift_count_reg[5] (Dbg_TDO_INST_0_i_2_n_0),
        .\Serial_Dbg_Intf.shift_count_reg[5]_0 (\Serial_Dbg_Intf.The_Cache_Addresses[6].SRL16E_Cache_I_n_0 ),
        .\Serial_Dbg_Intf.shift_count_reg[5]_1 (\Serial_Dbg_Intf.The_Cache_Addresses[2].SRL16E_Cache_I_n_0 ),
        .\Serial_Dbg_Intf.shift_count_reg[6] (\Serial_Dbg_Intf.SRL16E_7_n_0 ),
        .Status_Reg_En(Status_Reg_En),
        .\Use_Serial_Unified_Completion.completion_block_reg (\Use_Serial_Unified_Completion.completion_block_reg ),
        .\Use_Serial_Unified_Completion.completion_block_reg_0 (\Use_Serial_Unified_Completion.completion_block_reg_0 ));
  microblaze_v10_0_3_MB_SRL16E__parameterized0_18 \Serial_Dbg_Intf.SRL16E_7 
       (.Dbg_Clk(\NLW_Serial_Dbg_Intf.SRL16E_7_Dbg_Clk_UNCONNECTED ),
        .Q({sel0[3],\NLW_Serial_Dbg_Intf.SRL16E_7_Q_UNCONNECTED [6:0]}),
        .\Use_Serial_Unified_Completion.mb_data_overrun_reg (\Serial_Dbg_Intf.SRL16E_7_n_0 ),
        .tdo_config_word1_0(\NLW_Serial_Dbg_Intf.SRL16E_7_tdo_config_word1_0_UNCONNECTED ));
  microblaze_v10_0_3_MB_SRL16E__parameterized1 \Serial_Dbg_Intf.The_Cache_Addresses[1].SRL16E_Cache_I 
       (.Dbg_Clk(Dbg_Clk),
        .Q({A3,A2,A1,\Serial_Dbg_Intf.shift_count_reg_n_0_[0] }),
        .Q6_out(Q6_out));
  microblaze_v10_0_3_MB_SRL16E__parameterized2 \Serial_Dbg_Intf.The_Cache_Addresses[2].SRL16E_Cache_I 
       (.Dbg_Clk(Dbg_Clk),
        .Q({sel0[1],sel0_2,A3,A2,A1,\Serial_Dbg_Intf.shift_count_reg_n_0_[0] }),
        .Q11_in(\NLW_Serial_Dbg_Intf.The_Cache_Addresses[2].SRL16E_Cache_I_Q11_in_UNCONNECTED ),
        .Q6_out(Q6_out),
        .Q_0(Q_0),
        .\Use_Serial_Unified_Completion.mb_data_overrun_reg (\Serial_Dbg_Intf.The_Cache_Addresses[2].SRL16E_Cache_I_n_0 ));
  microblaze_v10_0_3_MB_SRL16E__parameterized1_22 \Serial_Dbg_Intf.The_Cache_Addresses[5].SRL16E_Cache_I 
       (.Dbg_Clk(Dbg_Clk),
        .Q({A3,A2,A1,\Serial_Dbg_Intf.shift_count_reg_n_0_[0] }),
        .Q2_out(Q2_out));
  microblaze_v10_0_3_MB_SRL16E__parameterized2_23 \Serial_Dbg_Intf.The_Cache_Addresses[6].SRL16E_Cache_I 
       (.Dbg_Clk(Dbg_Clk),
        .Q({sel0[1],sel0_2,A3,A2,A1,\Serial_Dbg_Intf.shift_count_reg_n_0_[0] }),
        .Q2_out(Q2_out),
        .Q3_out(\NLW_Serial_Dbg_Intf.The_Cache_Addresses[6].SRL16E_Cache_I_Q3_out_UNCONNECTED ),
        .Q4_out(\NLW_Serial_Dbg_Intf.The_Cache_Addresses[6].SRL16E_Cache_I_Q4_out_UNCONNECTED ),
        .\Use_Serial_Unified_Completion.mb_data_overrun_reg (\Serial_Dbg_Intf.The_Cache_Addresses[6].SRL16E_Cache_I_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.capture_1_reg 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(Dbg_Capture),
        .Q(capture_1));
  LUT5 #(
    .INIT(32'h00000004)) 
    \Serial_Dbg_Intf.command_reg[0]_i_1 
       (.I0(Dbg_Reg_En[7]),
        .I1(Dbg_Reg_En[6]),
        .I2(Dbg_Reg_En[2]),
        .I3(Dbg_Reg_En[0]),
        .I4(\Serial_Dbg_Intf.command_reg_reg[1]_0 ),
        .O(Command_Reg_En));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.command_reg_reg[0] 
       (.C(Dbg_Update),
        .CE(Command_Reg_En),
        .CLR(command_reg_clear),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[30] ),
        .Q(command_reg[0]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.command_reg_reg[1] 
       (.C(Dbg_Update),
        .CE(Command_Reg_En),
        .CLR(command_reg_clear),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[31] ),
        .Q(command_reg[1]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.continue_from_brk_TClk_reg 
       (.C(Dbg_Update),
        .CE(Control_Reg_En),
        .CLR(\Serial_Dbg_Intf.continue_from_brk_reg_n_0 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[24] ),
        .Q(continue_from_brk_TClk));
  FDRE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.continue_from_brk_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(p_10_out),
        .Q(\Serial_Dbg_Intf.continue_from_brk_reg_n_0 ),
        .R(reset_bool_for_rst));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.control_reg_reg[0] 
       (.C(Dbg_Update),
        .CE(Control_Reg_En),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[22] ),
        .Q(\Serial_Dbg_Intf.control_reg_reg_n_0_[0] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.control_reg_reg[4] 
       (.C(Dbg_Update),
        .CE(Control_Reg_En),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[26] ),
        .Q(\Serial_Dbg_Intf.control_reg_reg_n_0_[4] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.control_reg_reg[5] 
       (.C(Dbg_Update),
        .CE(Control_Reg_En),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[27] ),
        .Q(\Serial_Dbg_Intf.control_reg_reg_n_0_[5] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.control_reg_reg[8] 
       (.C(Dbg_Update),
        .CE(Control_Reg_En),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[30] ),
        .Q(Q));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[0] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(data_rd_reg[0]),
        .Q(data_read_reg[0]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[10] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(data_rd_reg[10]),
        .Q(data_read_reg[10]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[11] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(data_rd_reg[11]),
        .Q(data_read_reg[11]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[12] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(data_rd_reg[12]),
        .Q(data_read_reg[12]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[13] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(data_rd_reg[13]),
        .Q(data_read_reg[13]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[14] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(data_rd_reg[14]),
        .Q(data_read_reg[14]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[15] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(data_rd_reg[15]),
        .Q(data_read_reg[15]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[16] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(data_rd_reg[16]),
        .Q(data_read_reg[16]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[17] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(data_rd_reg[17]),
        .Q(data_read_reg[17]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[18] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(data_rd_reg[18]),
        .Q(data_read_reg[18]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[19] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(data_rd_reg[19]),
        .Q(data_read_reg[19]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[1] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(data_rd_reg[1]),
        .Q(data_read_reg[1]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[20] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(data_rd_reg[20]),
        .Q(data_read_reg[20]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[21] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(data_rd_reg[21]),
        .Q(data_read_reg[21]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[22] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(data_rd_reg[22]),
        .Q(data_read_reg[22]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[23] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(data_rd_reg[23]),
        .Q(data_read_reg[23]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[24] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(data_rd_reg[24]),
        .Q(data_read_reg[24]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[25] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(data_rd_reg[25]),
        .Q(data_read_reg[25]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[26] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(data_rd_reg[26]),
        .Q(data_read_reg[26]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[27] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(data_rd_reg[27]),
        .Q(data_read_reg[27]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[28] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(data_rd_reg[28]),
        .Q(data_read_reg[28]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[29] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(data_rd_reg[29]),
        .Q(data_read_reg[29]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[2] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(data_rd_reg[2]),
        .Q(data_read_reg[2]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[30] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(data_rd_reg[30]),
        .Q(data_read_reg[30]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[31] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(data_rd_reg[31]),
        .Q(data_read_reg[31]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[32] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(data_rd_reg[32]),
        .Q(data_read_reg[32]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[3] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(data_rd_reg[3]),
        .Q(data_read_reg[3]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[4] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(data_rd_reg[4]),
        .Q(data_read_reg[4]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[5] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(data_rd_reg[5]),
        .Q(data_read_reg[5]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[6] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(data_rd_reg[6]),
        .Q(data_read_reg[6]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[7] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(data_rd_reg[7]),
        .Q(data_read_reg[7]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[8] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(data_rd_reg[8]),
        .Q(data_read_reg[8]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[9] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(data_rd_reg[9]),
        .Q(data_read_reg[9]));
  LUT5 #(
    .INIT(32'h00000010)) 
    \Serial_Dbg_Intf.dbg_wakeup_i_i_1 
       (.I0(Dbg_Reg_En[2]),
        .I1(Dbg_Reg_En[0]),
        .I2(Dbg_Reg_En[7]),
        .I3(\Serial_Dbg_Intf.command_reg_reg[1]_0 ),
        .I4(Dbg_Reg_En[6]),
        .O(Control_Reg_En));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \Serial_Dbg_Intf.dbg_wakeup_i_i_3 
       (.I0(Dbg_Reg_En[1]),
        .I1(Dbg_Reg_En[3]),
        .I2(Dbg_Reg_En[4]),
        .I3(Dbg_Reg_En[5]),
        .O(\Serial_Dbg_Intf.command_reg_reg[1]_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.force_stop_TClk_reg 
       (.C(Dbg_Update),
        .CE(Control_Reg_En),
        .CLR(\Performace_Debug_Control.force_stop_cmd_1_reg_0 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[29] ),
        .Q(force_stop_TClk));
  FDRE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.force_stop_cmd_i_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(p_81_out),
        .Q(\Performace_Debug_Control.force_stop_cmd_1_reg_0 ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.if_debug_ready_i_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(p_65_out),
        .Q(LOCKSTEP_Master_Out[36]),
        .R(reset_bool_for_rst));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.instr_read_reg_reg[0] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(executing),
        .Q(instr_read_reg[0]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.instr_read_reg_reg[1] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(exception),
        .Q(instr_read_reg[1]));
  FDRE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.new_dbg_instr_shifting_CLK_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(Instr_Insert_Reg_En_1),
        .Q(\Serial_Dbg_Intf.new_dbg_instr_shifting_CLK_reg_n_0 ),
        .R(reset_bool_for_rst));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.normal_stop_TClk_reg 
       (.C(Dbg_Update),
        .CE(Control_Reg_En),
        .CLR(\Serial_Dbg_Intf.normal_stop_cmd_i_reg_n_0 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[28] ),
        .Q(normal_stop_TClk));
  FDRE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.normal_stop_cmd_i_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(p_84_out),
        .Q(\Serial_Dbg_Intf.normal_stop_cmd_i_reg_n_0 ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.read_register_MSR_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(p_75_out),
        .Q(read_register_MSR),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.read_register_PC_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(p_72_out),
        .Q(read_register_PC),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.sample_synced_1_reg[0] 
       (.C(Clk),
        .CE(1'b1),
        .D(sample_synced[0]),
        .Q(\Serial_Dbg_Intf.sample_synced_1_reg_n_0_[0] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.sample_synced_1_reg[1] 
       (.C(Clk),
        .CE(1'b1),
        .D(sample_synced[1]),
        .Q(\Serial_Dbg_Intf.sample_synced_1_reg_n_0_[1] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.sample_synced_1_reg[2] 
       (.C(Clk),
        .CE(1'b1),
        .D(sample_synced[2]),
        .Q(\Serial_Dbg_Intf.sample_synced_1_reg_n_0_[2] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.sample_synced_1_reg[3] 
       (.C(Clk),
        .CE(1'b1),
        .D(sample_synced[3]),
        .Q(\Serial_Dbg_Intf.sample_synced_1_reg_n_0_[3] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.sample_synced_1_reg[4] 
       (.C(Clk),
        .CE(1'b1),
        .D(sample_synced[4]),
        .Q(\Serial_Dbg_Intf.sample_synced_1_reg_n_0_[4] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.sample_synced_1_reg[5] 
       (.C(Clk),
        .CE(1'b1),
        .D(sample_synced[5]),
        .Q(p_0_in_1),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.sample_synced_1_reg[6] 
       (.C(Clk),
        .CE(1'b1),
        .D(sample_synced[6]),
        .Q(\Serial_Dbg_Intf.sample_synced_1_reg_n_0_[6] ),
        .R(reset_bool_for_rst));
  LUT2 #(
    .INIT(4'h2)) 
    \Serial_Dbg_Intf.shift_count[0]_i_1 
       (.I0(Dbg_Shift),
        .I1(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .O(p_0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT3 #(
    .INIT(8'h28)) 
    \Serial_Dbg_Intf.shift_count[1]_i_1 
       (.I0(Dbg_Shift),
        .I1(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I2(A1),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT4 #(
    .INIT(16'h2A80)) 
    \Serial_Dbg_Intf.shift_count[2]_i_1 
       (.I0(Dbg_Shift),
        .I1(A1),
        .I2(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I3(A2),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT5 #(
    .INIT(32'h2AAA8000)) 
    \Serial_Dbg_Intf.shift_count[3]_i_1 
       (.I0(Dbg_Shift),
        .I1(A2),
        .I2(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I3(A1),
        .I4(A3),
        .O(p_0_in[3]));
  LUT6 #(
    .INIT(64'h2AAAAAAA80000000)) 
    \Serial_Dbg_Intf.shift_count[4]_i_1 
       (.I0(Dbg_Shift),
        .I1(A1),
        .I2(A2),
        .I3(A3),
        .I4(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I5(sel0_2),
        .O(p_0_in[4]));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT3 #(
    .INIT(8'h82)) 
    \Serial_Dbg_Intf.shift_count[5]_i_1 
       (.I0(Dbg_Shift),
        .I1(\Serial_Dbg_Intf.shift_count[7]_i_2_n_0 ),
        .I2(sel0[1]),
        .O(p_0_in[5]));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT4 #(
    .INIT(16'h8A20)) 
    \Serial_Dbg_Intf.shift_count[6]_i_1 
       (.I0(Dbg_Shift),
        .I1(\Serial_Dbg_Intf.shift_count[7]_i_2_n_0 ),
        .I2(sel0[1]),
        .I3(sel0[2]),
        .O(p_0_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT5 #(
    .INIT(32'h8AAA2000)) 
    \Serial_Dbg_Intf.shift_count[7]_i_1 
       (.I0(Dbg_Shift),
        .I1(\Serial_Dbg_Intf.shift_count[7]_i_2_n_0 ),
        .I2(sel0[2]),
        .I3(sel0[1]),
        .I4(sel0[3]),
        .O(p_0_in[7]));
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \Serial_Dbg_Intf.shift_count[7]_i_2 
       (.I0(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I1(A3),
        .I2(A2),
        .I3(A1),
        .I4(sel0_2),
        .O(\Serial_Dbg_Intf.shift_count[7]_i_2_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_count_reg[0] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(p_0_in[0]),
        .Q(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_count_reg[1] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(p_0_in[1]),
        .Q(A1));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_count_reg[2] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(p_0_in[2]),
        .Q(A2));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_count_reg[3] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(p_0_in[3]),
        .Q(A3));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_count_reg[4] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(p_0_in[4]),
        .Q(sel0_2));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_count_reg[5] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(p_0_in[5]),
        .Q(sel0[1]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_count_reg[6] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(p_0_in[6]),
        .Q(sel0[2]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_count_reg[7] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(p_0_in[7]),
        .Q(sel0[3]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[10] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[11] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[10] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[11] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[12] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[11] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[12] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[13] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[12] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[13] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[14] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[13] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[14] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[15] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[14] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[15] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[16] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[15] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[16] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[17] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[16] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[17] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[18] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[17] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[18] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[19] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[18] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[19] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[20] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[19] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[1] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[2] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[1] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[20] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[21] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[20] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[21] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[22] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[21] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[22] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[23] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[22] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[23] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[24] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[23] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[24] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[25] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[24] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[25] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[26] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[25] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[26] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[27] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[26] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[27] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[28] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[27] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[28] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[29] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[28] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[29] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[30] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[29] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[2] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[3] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[2] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[30] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[31] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[30] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[31] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(Dbg_TDI),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[31] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[3] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[4] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[3] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[4] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[5] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[4] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[5] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[6] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[5] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[6] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[7] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[6] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[7] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[8] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[7] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[8] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[9] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[8] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[9] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[10] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[9] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.single_Step_TClk_reg 
       (.C(Dbg_Update),
        .CE(Control_Reg_En),
        .CLR(start_single_step_reg_n_0),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[23] ),
        .Q(single_Step_TClk));
  FDRE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.start_single_cmd_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(p_78_out),
        .Q(start_single_cmd),
        .R(reset_bool_for_rst));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.status_reg_reg[0] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(sync),
        .Q(\Serial_Dbg_Intf.status_reg_reg_n_0_[0] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.status_reg_reg[16] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.sync_stop_CPU_n_0 ),
        .Q(\Serial_Dbg_Intf.status_reg_reg_n_0_[16] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.status_reg_reg[17] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(reset_bool_for_rst),
        .Q(\Serial_Dbg_Intf.status_reg_reg_n_0_[17] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.status_reg_reg[18] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(Full_32_bit),
        .Q(\Serial_Dbg_Intf.status_reg_reg_n_0_[18] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.status_reg_reg[19] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(delay_slot_instr),
        .Q(\Serial_Dbg_Intf.status_reg_reg_n_0_[19] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.status_reg_reg[20] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(Full_32_bit_1),
        .Q(\Serial_Dbg_Intf.status_reg_reg_n_0_[20] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.status_reg_reg[22] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(MEM_DataBus_Access_reg),
        .Q(\Serial_Dbg_Intf.status_reg_reg_n_0_[22] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.status_reg_reg[23] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(dbg_brki_hit_synced),
        .Q(\Serial_Dbg_Intf.status_reg_reg_n_0_[23] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.status_reg_reg[24] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(running_clock_synced),
        .Q(\Serial_Dbg_Intf.status_reg_reg_n_0_[24] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.status_reg_reg[25] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(D[3]),
        .Q(\Serial_Dbg_Intf.status_reg_reg_n_0_[25] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.status_reg_reg[27] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(sleep_synced),
        .Q(\Serial_Dbg_Intf.status_reg_reg_n_0_[27] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.status_reg_reg[29] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(unchanged),
        .Q(\Serial_Dbg_Intf.status_reg_reg_n_0_[29] ));
  mb_sync_bit__parameterized2 \Serial_Dbg_Intf.sync_dbg_brk_hit 
       (.AR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(dbg_brki_hit_synced),
        .Dbg_Clk(Dbg_Clk),
        .dbg_brki_hit(dbg_brki_hit));
  mb_sync_vec \Serial_Dbg_Intf.sync_dbg_hit 
       (.AR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(sync),
        .Dbg_Clk(Dbg_Clk),
        .Raw(Raw));
  mb_sync_bit__parameterized2_26 \Serial_Dbg_Intf.sync_pause 
       (.AR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\NLW_Serial_Dbg_Intf.sync_pause_D_UNCONNECTED [0]),
        .Dbg_Clk(\NLW_Serial_Dbg_Intf.sync_pause_Dbg_Clk_UNCONNECTED ),
        .Pause(\NLW_Serial_Dbg_Intf.sync_pause_Pause_UNCONNECTED ),
        .Scan_Reset(\NLW_Serial_Dbg_Intf.sync_pause_Scan_Reset_UNCONNECTED ),
        .Scan_Reset_Sel(\NLW_Serial_Dbg_Intf.sync_pause_Scan_Reset_Sel_UNCONNECTED ));
  mb_sync_bit__parameterized2_27 \Serial_Dbg_Intf.sync_running_clock 
       (.AR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(running_clock_synced),
        .Dbg_Clk(Dbg_Clk),
        .running_clock(running_clock));
  mb_sync_vec__parameterized1 \Serial_Dbg_Intf.sync_sample 
       (.Clk(Clk),
        .D(normal_stop_TClk),
        .Dbg_Trig_Ack_In(\NLW_Serial_Dbg_Intf.sync_sample_Dbg_Trig_Ack_In_UNCONNECTED [0]),
        .Dbg_Trig_Ack_Out(\NLW_Serial_Dbg_Intf.sync_sample_Dbg_Trig_Ack_Out_UNCONNECTED [0]),
        .Dbg_Trig_In(\NLW_Serial_Dbg_Intf.sync_sample_Dbg_Trig_In_UNCONNECTED [0]),
        .Dbg_Trig_Out(\NLW_Serial_Dbg_Intf.sync_sample_Dbg_Trig_Out_UNCONNECTED [0]),
        .Q({\Serial_Dbg_Intf.sample_synced_1_reg_n_0_[0] ,\Serial_Dbg_Intf.sample_synced_1_reg_n_0_[1] ,\Serial_Dbg_Intf.sample_synced_1_reg_n_0_[2] ,\Serial_Dbg_Intf.sample_synced_1_reg_n_0_[3] ,\Serial_Dbg_Intf.sample_synced_1_reg_n_0_[4] ,p_0_in_1,\Serial_Dbg_Intf.sample_synced_1_reg_n_0_[6] ,\NLW_Serial_Dbg_Intf.sync_sample_Q_UNCONNECTED [1:0]}),
        .\Serial_Dbg_Intf.New_Dbg_Instr2_TCK_reg (New_Dbg_Instr2_TCK),
        .\Serial_Dbg_Intf.command_reg_reg[0] ({command_reg[0],command_reg[1]}),
        .\Serial_Dbg_Intf.continue_from_brk_TClk_reg (continue_from_brk_TClk),
        .\Serial_Dbg_Intf.control_reg_reg[3] (\NLW_Serial_Dbg_Intf.sync_sample_Serial_Dbg_Intf.control_reg_reg[3]_UNCONNECTED [0]),
        .\Serial_Dbg_Intf.force_stop_TClk_reg (force_stop_TClk),
        .\Serial_Dbg_Intf.single_Step_TClk_reg (single_Step_TClk),
        .\Serial_Dbg_Intf.trig_ack_out_1_reg (\NLW_Serial_Dbg_Intf.sync_sample_Serial_Dbg_Intf.trig_ack_out_1_reg_UNCONNECTED ),
        .\Serial_Dbg_Intf.trig_in_1_reg (\NLW_Serial_Dbg_Intf.sync_sample_Serial_Dbg_Intf.trig_in_1_reg_UNCONNECTED ),
        .p_10_out(p_10_out),
        .p_65_out(p_65_out),
        .p_72_out(p_72_out),
        .p_75_out(p_75_out),
        .p_78_out(p_78_out),
        .p_81_out(p_81_out),
        .p_84_out(p_84_out),
        .sample_synced({sample_synced[0:6],\NLW_Serial_Dbg_Intf.sync_sample_sample_synced_UNCONNECTED [7:9]}),
        .sync_reset(reset_bool_for_rst));
  mb_sync_bit__parameterized2_28 \Serial_Dbg_Intf.sync_sleep 
       (.AR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(sleep_synced),
        .Dbg_Clk(Dbg_Clk),
        .Sleep(Sleep));
  mb_sync_bit__parameterized2_29 \Serial_Dbg_Intf.sync_stop_CPU 
       (.AR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.sync_stop_CPU_n_0 ),
        .Dbg_Clk(Dbg_Clk),
        .\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg (\Single_Synchronize.use_async_reset.sync_reg ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00040000)) 
    \Serial_Dbg_Intf.unchanged_i_1 
       (.I0(\Serial_Dbg_Intf.command_reg_reg[1]_0 ),
        .I1(Dbg_Reg_En[6]),
        .I2(Dbg_Reg_En[2]),
        .I3(Dbg_Reg_En[0]),
        .I4(Dbg_Reg_En[7]),
        .I5(unchanged),
        .O(\Serial_Dbg_Intf.unchanged_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.unchanged_reg 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(\Serial_Dbg_Intf.sync_pause_n_1 ),
        .D(\Serial_Dbg_Intf.unchanged_i_1_n_0 ),
        .Q(unchanged));
  LUT2 #(
    .INIT(4'hB)) 
    \Using_FPGA.Native_i_1__118 
       (.I0(LOCKSTEP_Master_Out[32]),
        .I1(LOCKSTEP_Master_Out[35]),
        .O(\Using_FPGA.Native_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_1__119 
       (.I0(LOCKSTEP_Master_Out[35]),
        .I1(LOCKSTEP_Master_Out[32]),
        .O(ex_exception_no_load_store_mask));
  LUT1 #(
    .INIT(2'h1)) 
    \Using_FPGA.Native_i_1__135 
       (.I0(LOCKSTEP_Master_Out[32]),
        .O(\if_pc_reg[29] ));
  address_hit \Using_PC_Breakpoints.All_PC_Brks[0].Serial_Interface_1.address_hit_I 
       (.Address(Address),
        .Dbg_Clk(Dbg_Clk),
        .Dbg_Reg_En(Dbg_Reg_En),
        .Dbg_TDI(Dbg_TDI),
        .Hit(\Using_PC_Breakpoints.All_PC_Brks[0].Serial_Interface_1.address_hit_I_n_0 ),
        .\Performace_Debug_Control.dbg_stop_i_reg (\Performace_Debug_Control.dbg_stop_i_reg_n_0 ),
        .\Performace_Debug_Control.dbg_stop_if_delay_i_reg (mem_exception_from_ex_reg),
        .\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg (\Single_Synchronize.use_async_reset.sync_reg ),
        .\Performace_Debug_Control.ex_dbg_pc_hit_i_reg (\Using_PC_Breakpoints.All_PC_Brks[0].Serial_Interface_1.address_hit_I_n_2 ),
        .\Performace_Debug_Control.ex_dbg_pc_hit_i_reg_0 (LOCKSTEP_Master_Out[35]),
        .\Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg (\Using_PC_Breakpoints.All_PC_Brks[0].Serial_Interface_1.address_hit_I_n_3 ),
        .\Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg_0 (\Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg_n_0 ),
        .Q(\Serial_Dbg_Intf.control_reg_reg_n_0_[0] ),
        .\Serial_Dbg_Intf.Instr_Insert_Reg_En_1_reg (\Using_PC_Breakpoints.All_PC_Brks[0].Serial_Interface_1.address_hit_I_n_1 ),
        .\Using_FPGA.Native (\Using_FPGA.Native_1 ),
        .dbg_clean_stop(dbg_clean_stop),
        .ex_branch_with_delayslot_reg(ex_piperun_for_ce),
        .force_stop_i(force_stop_i),
        .mem_Exception_Taken(mem_Exception_Taken),
        .normal_stop_i(normal_stop_i),
        .of_pause_reg(of_piperun_for_ce),
        .single_Step_N(single_Step_N));
  LUT3 #(
    .INIT(8'h8A)) 
    Write_Strobe_INST_0_i_1
       (.I0(ex_valid),
        .I1(LOCKSTEP_Master_Out[32]),
        .I2(LOCKSTEP_Master_Out[35]),
        .O(\Using_FPGA.Native ));
  LUT2 #(
    .INIT(4'hE)) 
    command_reg_clear_i_1
       (.I0(read_register_PC_1),
        .I1(read_register_MSR_1),
        .O(command_reg_clear_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    command_reg_clear_reg
       (.C(Clk),
        .CE(1'b1),
        .D(command_reg_clear_i_1_n_0),
        .Q(command_reg_clear),
        .R(reset_bool_for_rst));
  LUT4 #(
    .INIT(16'hFFEA)) 
    \data_rd_reg[0]_i_1 
       (.I0(read_register_PC_1),
        .I1(\Single_Synchronize.use_async_reset.sync_reg ),
        .I2(wb_gpr_write_dbg),
        .I3(read_register_MSR_1),
        .O(\data_rd_reg[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hABBBA888)) 
    \data_rd_reg[32]_i_1 
       (.I0(\data_rd_reg[32]_i_2_n_0 ),
        .I1(\data_rd_reg[0]_i_1_n_0 ),
        .I2(LOCKSTEP_Master_Out[36]),
        .I3(\Single_Synchronize.use_async_reset.sync_reg ),
        .I4(data_rd_reg[32]),
        .O(\data_rd_reg[32]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFBFBFBFBFBFBF88)) 
    \data_rd_reg[32]_i_2 
       (.I0(wb_gpr_write_dbg),
        .I1(\Single_Synchronize.use_async_reset.sync_reg ),
        .I2(LOCKSTEP_Master_Out[36]),
        .I3(wb_pc_valid),
        .I4(read_register_MSR_1),
        .I5(\Performace_Debug_Control.dbg_freeze_nohalt_reg_0 ),
        .O(\data_rd_reg[32]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[0] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 [31]),
        .Q(data_rd_reg[0]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[10] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 [21]),
        .Q(data_rd_reg[10]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[11] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 [20]),
        .Q(data_rd_reg[11]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[12] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 [19]),
        .Q(data_rd_reg[12]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[13] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 [18]),
        .Q(data_rd_reg[13]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[14] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 [17]),
        .Q(data_rd_reg[14]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[15] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 [16]),
        .Q(data_rd_reg[15]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[16] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 [15]),
        .Q(data_rd_reg[16]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[17] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 [14]),
        .Q(data_rd_reg[17]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[18] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 [13]),
        .Q(data_rd_reg[18]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[19] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 [12]),
        .Q(data_rd_reg[19]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[1] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 [30]),
        .Q(data_rd_reg[1]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[20] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 [11]),
        .Q(data_rd_reg[20]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[21] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 [10]),
        .Q(data_rd_reg[21]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[22] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 [9]),
        .Q(data_rd_reg[22]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[23] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 [8]),
        .Q(data_rd_reg[23]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[24] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 [7]),
        .Q(data_rd_reg[24]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[25] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 [6]),
        .Q(data_rd_reg[25]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[26] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 [5]),
        .Q(data_rd_reg[26]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[27] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 [4]),
        .Q(data_rd_reg[27]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[28] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 [3]),
        .Q(data_rd_reg[28]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[29] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 [2]),
        .Q(data_rd_reg[29]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[2] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 [29]),
        .Q(data_rd_reg[2]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[30] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 [1]),
        .Q(data_rd_reg[30]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[31] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 [0]),
        .Q(data_rd_reg[31]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[32] 
       (.C(Clk),
        .CE(1'b1),
        .D(\data_rd_reg[32]_i_1_n_0 ),
        .Q(data_rd_reg[32]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[3] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 [28]),
        .Q(data_rd_reg[3]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[4] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 [27]),
        .Q(data_rd_reg[4]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[5] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 [26]),
        .Q(data_rd_reg[5]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[6] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 [25]),
        .Q(data_rd_reg[6]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[7] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 [24]),
        .Q(data_rd_reg[7]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[8] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 [23]),
        .Q(data_rd_reg[8]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[9] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 [22]),
        .Q(data_rd_reg[9]),
        .R(reset_bool_for_rst));
  LUT4 #(
    .INIT(16'h0040)) 
    dbg_halt_reset_mode_i_1
       (.I0(\Serial_Dbg_Intf.control_reg_reg_n_0_[0] ),
        .I1(\Performace_Debug_Control.dbg_stop_if_delay_i_reg_0 ),
        .I2(dbg_halt_reset_mode_i_2_n_0),
        .I3(reset_bool_for_rst),
        .O(dbg_halt_reset_mode_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT2 #(
    .INIT(4'h1)) 
    dbg_halt_reset_mode_i_2
       (.I0(start_single_step_reg_n_0),
        .I1(\Serial_Dbg_Intf.continue_from_brk_reg_n_0 ),
        .O(dbg_halt_reset_mode_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    dbg_halt_reset_mode_reg
       (.C(Clk),
        .CE(1'b1),
        .D(dbg_halt_reset_mode_i_1_n_0),
        .Q(\Performace_Debug_Control.dbg_stop_if_delay_i_reg_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    delay_slot_instr_reg
       (.C(Clk),
        .CE(wb_Halted),
        .D(D[0]),
        .Q(delay_slot_instr),
        .R(reset_bool_for_rst));
  LUT6 #(
    .INIT(64'h000000000000E222)) 
    exception_i_1
       (.I0(exception),
        .I1(D[2]),
        .I2(D[1]),
        .I3(\Single_Synchronize.use_async_reset.sync_reg ),
        .I4(exception_i_2_n_0),
        .I5(start_dbg_exec_reg_n_0),
        .O(exception_i_1_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    exception_i_2
       (.I0(reset_bool_for_rst),
        .I1(force_stop_i),
        .O(exception_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    exception_reg
       (.C(Clk),
        .CE(1'b1),
        .D(exception_i_1_n_0),
        .Q(exception),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h000000000000FFA2)) 
    executing_i_1
       (.I0(executing),
        .I1(wb_valid_reg),
        .I2(wb_Halted),
        .I3(start_dbg_exec_reg_n_0),
        .I4(force_stop_i),
        .I5(reset_bool_for_rst),
        .O(executing_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    executing_reg
       (.C(Clk),
        .CE(1'b1),
        .D(executing_i_1_n_0),
        .Q(executing),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h40)) 
    mem_exception_from_ex_i_1
       (.I0(LOCKSTEP_Master_Out[32]),
        .I1(LOCKSTEP_Master_Out[35]),
        .I2(ex_valid),
        .O(mem_exception_from_ex_reg));
  FDRE #(
    .INIT(1'b0)) 
    read_register_MSR_1_reg
       (.C(Clk),
        .CE(1'b1),
        .D(read_register_MSR),
        .Q(read_register_MSR_1),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    read_register_PC_1_reg
       (.C(Clk),
        .CE(1'b1),
        .D(read_register_PC),
        .Q(read_register_PC_1),
        .R(reset_bool_for_rst));
  FDCE #(
    .INIT(1'b0)) 
    running_clock_reg
       (.C(Clk),
        .CE(1'b1),
        .CLR(capture_1),
        .D(1'b1),
        .Q(running_clock));
  LUT2 #(
    .INIT(4'h4)) 
    saved_reset_mode_dbg_halt_i_1
       (.I0(reset_bool_for_rst),
        .I1(saved_reset_mode_dbg_halt),
        .O(saved_reset_mode_dbg_halt_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    saved_reset_mode_dbg_halt_reg
       (.C(Clk),
        .CE(1'b1),
        .D(saved_reset_mode_dbg_halt_i_1_n_0),
        .Q(saved_reset_mode_dbg_halt),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT2 #(
    .INIT(4'h4)) 
    saved_reset_mode_sleep_i_1
       (.I0(reset_bool_for_rst),
        .I1(Sleep_Out),
        .O(saved_reset_mode_sleep_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    saved_reset_mode_sleep_reg
       (.C(Clk),
        .CE(1'b1),
        .D(saved_reset_mode_sleep_i_1_n_0),
        .Q(saved_reset_mode_sleep),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hFD)) 
    single_Step_N_i_1
       (.I0(start_single_step_reg_n_0),
        .I1(single_step_count[0]),
        .I2(single_step_count[1]),
        .O(single_Step_N_i_1_n_0));
  FDSE #(
    .INIT(1'b1)) 
    single_Step_N_reg
       (.C(Clk),
        .CE(of_piperun_for_ce),
        .D(single_Step_N_i_1_n_0),
        .Q(single_Step_N),
        .S(reset_bool_for_rst));
  LUT5 #(
    .INIT(32'hACAF5C50)) 
    \single_step_count[0]_i_1 
       (.I0(single_step_count[1]),
        .I1(\Serial_Dbg_Intf.control_reg_reg_n_0_[4] ),
        .I2(of_piperun_for_ce),
        .I3(start_single_cmd),
        .I4(single_step_count[0]),
        .O(\single_step_count[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h23EC)) 
    \single_step_count[1]_i_1 
       (.I0(\Serial_Dbg_Intf.control_reg_reg_n_0_[5] ),
        .I1(of_piperun_for_ce),
        .I2(start_single_cmd),
        .I3(single_step_count[1]),
        .O(\single_step_count[1]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \single_step_count_reg[0] 
       (.C(Clk),
        .CE(1'b1),
        .D(\single_step_count[0]_i_1_n_0 ),
        .Q(single_step_count[0]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \single_step_count_reg[1] 
       (.C(Clk),
        .CE(1'b1),
        .D(\single_step_count[1]_i_1_n_0 ),
        .Q(single_step_count[1]),
        .R(reset_bool_for_rst));
  LUT2 #(
    .INIT(4'h4)) 
    sleep_reset_mode_i_1
       (.I0(reset_bool_for_rst),
        .I1(Sleep_Out),
        .O(sleep_reset_mode_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sleep_reset_mode_reg
       (.C(Clk),
        .CE(1'b1),
        .D(sleep_reset_mode_i_1_n_0),
        .Q(Sleep_Out),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    start_dbg_exec_reg
       (.C(Clk),
        .CE(1'b1),
        .D(LOCKSTEP_Master_Out[36]),
        .Q(start_dbg_exec_reg_n_0),
        .R(reset_bool_for_rst));
  LUT6 #(
    .INIT(64'h00000000FFF3AAAA)) 
    start_single_step_i_1
       (.I0(start_single_cmd),
        .I1(of_piperun_for_ce),
        .I2(single_step_count[1]),
        .I3(single_step_count[0]),
        .I4(start_single_step_reg_n_0),
        .I5(reset_bool_for_rst),
        .O(start_single_step_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    start_single_step_reg
       (.C(Clk),
        .CE(1'b1),
        .D(start_single_step_i_1_n_0),
        .Q(start_single_step_reg_n_0),
        .R(1'b0));
endmodule

module Decode_gti
   (use_Reg_Neg_S_reg,
    D,
    \Using_FPGA.Native ,
    of_gpr_op3_rd_addr,
    of_gpr_op1_rd_addr,
    of_imm_data,
    \Using_FPGA.Native_0 ,
    WB_Read_Imm_Reg_1_reg_0,
    ex_valid,
    ex_byte_access,
    ex_doublet_access,
    ex_reverse_mem_access,
    \Using_FPGA.Native_1 ,
    mem_databus_write,
    mb_halted_1_reg,
    MEM_DataBus_Read,
    ex_op1_cmp_equal,
    ex_op1_cmp_equal_n,
    mem_Exception_Taken,
    dbg_pause,
    Pause_Ack,
    wb_byte_access,
    mem_byte_access,
    mem_doublet_access,
    wb_piperun,
    ex_cmp_op,
    ex_unsigned_op,
    ex_use_carry,
    EX_Enable_ALU,
    EX_ALU_Sel_Logic,
    ex_swap_instr,
    ex_swap_byte_instr,
    ex_Enable_Sext_Shift,
    \Using_FPGA.Native_2 ,
    ex_load_shift_carry,
    ex_move_to_MSR_instr,
    ex_sel_alu,
    mem_sel_msr,
    wb_read_imm_reg,
    wb_read_imm_reg_1,
    wb_pc_valid,
    dbg_clean_stop,
    wb_gpr_write_dbg,
    mem_databus_access,
    if_missed_fetch,
    Hibernate,
    Suspend,
    Sleep_Decode,
    wb_valid_reg_0,
    dbg_stop_i,
    \EX_Op3_reg[0] ,
    \EX_Op3_reg[31] ,
    \EX_Op3_reg[31]_0 ,
    \EX_Branch_CMP_Op1_reg[0] ,
    \EX_Branch_CMP_Op1_reg[31] ,
    \EX_Branch_CMP_Op1_reg[30] ,
    \EX_Op2_reg[0] ,
    \data_rd_reg_reg[0] ,
    Q,
    EX_Fwd,
    \Using_FPGA.Native_3 ,
    wb_Halted,
    MEM_WB_Sel_Mem_PC,
    LOCKSTEP_Master_Out,
    \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ,
    \Performace_Debug_Control.dbg_state_nohalt_reg ,
    \EX_Op1_reg[31] ,
    \EX_Op1_reg[30] ,
    \EX_Op1_reg[29] ,
    \EX_Op1_reg[28] ,
    \EX_Op1_reg[27] ,
    \EX_Op1_reg[26] ,
    \EX_Op1_reg[25] ,
    \EX_Op1_reg[24] ,
    \EX_Op1_reg[23] ,
    \EX_Op1_reg[22] ,
    \EX_Op1_reg[21] ,
    \EX_Op1_reg[20] ,
    \EX_Op1_reg[19] ,
    \EX_Op1_reg[18] ,
    \EX_Op1_reg[17] ,
    \EX_Op1_reg[16] ,
    \EX_Op1_reg[15] ,
    \EX_Op1_reg[14] ,
    \EX_Op1_reg[13] ,
    \EX_Op1_reg[12] ,
    \EX_Op1_reg[11] ,
    \EX_Op1_reg[10] ,
    \EX_Op1_reg[9] ,
    \EX_Op1_reg[8] ,
    \EX_Op1_reg[7] ,
    \EX_Op1_reg[6] ,
    \EX_Op1_reg[5] ,
    \EX_Op1_reg[4] ,
    \EX_Op1_reg[3] ,
    \EX_Op1_reg[2] ,
    \EX_Op1_reg[1] ,
    I1,
    of_op1_sel_spr,
    E,
    \Using_FPGA.Native_4 ,
    SRI,
    \Using_FPGA.Native_5 ,
    \EX_Op3_reg[31]_1 ,
    \EX_Op3_reg[31]_2 ,
    \EX_Branch_CMP_Op1_reg[31]_0 ,
    \EX_Branch_CMP_Op1_reg[30]_0 ,
    \Performace_Debug_Control.ex_brki_hit_reg ,
    R,
    new_request,
    Sleep,
    I1_0,
    \Using_FPGA.Native_6 ,
    SR,
    M_AXI_DP_ARVALID_i_reg,
    M_AXI_DP_WVALID_i_reg,
    M_AXI_DP_AWVALID_i_reg,
    in0,
    \wb_read_lsb_sel_reg[0] ,
    \Using_FPGA.Native_7 ,
    \Using_FPGA.Native_8 ,
    \MEM_DataBus_Addr_reg[9]_0 ,
    sync_reset,
    Clk,
    IReady_1,
    I041_out,
    I139_out,
    ex_op1_zero,
    \Performace_Debug_Control.dbg_stop_if_delay_i_reg ,
    mem_databus_ready,
    \Performace_Debug_Control.dbg_stop_if_delay_i_reg_0 ,
    ex_exception_no_load_store_mask,
    \Performace_Debug_Control.dbg_stop_if_delay_i_reg_1 ,
    Pause,
    ex_databus_addr,
    \EX_Op2_reg[0]_0 ,
    \Performace_Debug_Control.dbg_stop_if_delay_i_reg_2 ,
    \Performace_Debug_Control.ex_dbg_pc_hit_i_reg ,
    GPR_Op3,
    GPR_Op1,
    mem_ex_result,
    \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ,
    DI,
    read_register_MSR_1,
    \Using_FPGA.Native_9 ,
    \WB_MEM_Result_reg[0] ,
    \wb_read_lsb_sel_reg[1] ,
    \Using_FPGA.Native_10 ,
    \Using_FPGA.Native_11 ,
    \wb_read_lsb_sel_reg[1]_0 ,
    \Using_FPGA.Native_12 ,
    \wb_read_lsb_sel_reg[1]_1 ,
    \Using_FPGA.Native_13 ,
    \wb_read_lsb_sel_reg[1]_2 ,
    \Using_FPGA.Native_14 ,
    \wb_read_lsb_sel_reg[1]_3 ,
    \Using_FPGA.Native_15 ,
    \wb_read_lsb_sel_reg[1]_4 ,
    \Using_FPGA.Native_16 ,
    \wb_read_lsb_sel_reg[1]_5 ,
    \Using_FPGA.Native_17 ,
    \wb_read_lsb_sel_reg[1]_6 ,
    ex_sel_alu_i_reg_0,
    ex_sel_alu_i_reg_1,
    \Using_FPGA.Native_18 ,
    \Use_DLMB.wb_dlmb_valid_read_data_reg[23] ,
    ex_sel_alu_i_reg_2,
    \Using_FPGA.Native_19 ,
    \Use_DLMB.wb_dlmb_valid_read_data_reg[22] ,
    ex_sel_alu_i_reg_3,
    \Using_FPGA.Native_20 ,
    \Use_DLMB.wb_dlmb_valid_read_data_reg[21] ,
    ex_sel_alu_i_reg_4,
    \Using_FPGA.Native_21 ,
    \Use_DLMB.wb_dlmb_valid_read_data_reg[20] ,
    ex_sel_alu_i_reg_5,
    \Using_FPGA.Native_22 ,
    \Use_DLMB.wb_dlmb_valid_read_data_reg[19] ,
    \Using_FPGA.Native_23 ,
    ex_sel_alu_i_reg_6,
    \Using_FPGA.Native_24 ,
    \Use_DLMB.wb_dlmb_valid_read_data_reg[18] ,
    ex_sel_alu_i_reg_7,
    \Using_FPGA.Native_25 ,
    \Use_DLMB.wb_dlmb_valid_read_data_reg[17] ,
    \Using_FPGA.Native_26 ,
    \Use_DLMB.wb_dlmb_valid_read_data_reg[16] ,
    ex_sel_alu_i_reg_8,
    \Using_FPGA.Native_27 ,
    \Use_DLMB.wb_dlmb_valid_read_data_reg[31] ,
    \Using_FPGA.Native_28 ,
    ex_sel_alu_i_reg_9,
    \Using_FPGA.Native_29 ,
    \Use_DLMB.wb_dlmb_valid_read_data_reg[30] ,
    ex_sel_alu_i_reg_10,
    \Using_FPGA.Native_30 ,
    \Use_DLMB.wb_dlmb_valid_read_data_reg[29] ,
    ex_sel_alu_i_reg_11,
    \Using_FPGA.Native_31 ,
    \Use_DLMB.wb_dlmb_valid_read_data_reg[28] ,
    \Using_FPGA.Native_32 ,
    ex_sel_alu_i_reg_12,
    \Using_FPGA.Native_33 ,
    \Use_DLMB.wb_dlmb_valid_read_data_reg[27] ,
    \Using_FPGA.Native_34 ,
    ex_sel_alu_i_reg_13,
    \Using_FPGA.Native_35 ,
    \Use_DLMB.wb_dlmb_valid_read_data_reg[26] ,
    ex_sel_alu_i_reg_14,
    \Using_FPGA.Native_36 ,
    \Use_DLMB.wb_dlmb_valid_read_data_reg[25] ,
    \Use_DLMB.wb_dlmb_valid_read_data_reg[24] ,
    Y,
    \Serial_Dbg_Intf.if_debug_ready_i_reg ,
    \Performace_Debug_Control.dbg_freeze_nohalt_reg ,
    IReady,
    \imm_reg_reg[0] ,
    GPR_Op2,
    \Performace_Debug_Control.dbg_state_nohalt_reg_0 ,
    dbg_halt_reset_mode_reg,
    Reset_Mode,
    ex_MSR,
    ex_valid_reg_0,
    ex_load_shift_carry_reg_0,
    \EX_Op1_reg[0] ,
    \Serial_Dbg_Intf.force_stop_cmd_i_reg ,
    \EX_Op2_reg[31] ,
    \Using_FPGA.Native_37 ,
    \EX_Op3_reg[1] ,
    DWait,
    active_access_d1,
    DReady,
    wakeup_i,
    Sleep_Out,
    \Serial_Dbg_Intf.control_reg_reg[8] ,
    \EX_Op1_reg[7]_0 ,
    mem_MSR,
    \EX_Op1_reg[6]_0 ,
    \EX_Op1_reg[5]_0 ,
    \EX_Op1_reg[4]_0 ,
    \EX_Op1_reg[3]_0 ,
    \EX_Op1_reg[2]_0 ,
    \EX_Op1_reg[1]_0 ,
    \EX_Op1_reg[0]_0 ,
    \EX_Op1_reg[24]_0 ,
    \EX_Op1_reg[9]_0 ,
    out,
    \EX_Op1_reg[10]_0 ,
    \EX_Op1_reg[11]_0 ,
    \EX_Op1_reg[12]_0 ,
    \EX_Op1_reg[13]_0 ,
    \EX_Op1_reg[14]_0 ,
    \EX_Op1_reg[15]_0 ,
    M_AXI_DP_AWVALID_i_reg_0,
    M_AXI_DP_ARREADY,
    M_AXI_DP_WREADY,
    M_AXI_DP_AWREADY,
    \EX_Branch_CMP_Op1_reg[0]_0 ,
    \mem_byte_selects_reg[0] ,
    mem_reverse_byteorder,
    in,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output use_Reg_Neg_S_reg;
  output [31:0]D;
  output [0:0]\Using_FPGA.Native ;
  output [0:4]of_gpr_op3_rd_addr;
  output [0:4]of_gpr_op1_rd_addr;
  output [0:15]of_imm_data;
  output [0:0]\Using_FPGA.Native_0 ;
  output WB_Read_Imm_Reg_1_reg_0;
  output ex_valid;
  output ex_byte_access;
  output ex_doublet_access;
  output ex_reverse_mem_access;
  output \Using_FPGA.Native_1 ;
  output mem_databus_write;
  output [152:0]mb_halted_1_reg;
  output MEM_DataBus_Read;
  output ex_op1_cmp_equal;
  output ex_op1_cmp_equal_n;
  output mem_Exception_Taken;
  output dbg_pause;
  output Pause_Ack;
  output wb_byte_access;
  output mem_byte_access;
  output mem_doublet_access;
  output wb_piperun;
  output ex_cmp_op;
  output ex_unsigned_op;
  output ex_use_carry;
  output EX_Enable_ALU;
  output EX_ALU_Sel_Logic;
  output ex_swap_instr;
  output ex_swap_byte_instr;
  output ex_Enable_Sext_Shift;
  output \Using_FPGA.Native_2 ;
  output ex_load_shift_carry;
  output ex_move_to_MSR_instr;
  output ex_sel_alu;
  output mem_sel_msr;
  output wb_read_imm_reg;
  output wb_read_imm_reg_1;
  output wb_pc_valid;
  output dbg_clean_stop;
  output wb_gpr_write_dbg;
  output mem_databus_access;
  output if_missed_fetch;
  output Hibernate;
  output Suspend;
  output Sleep_Decode;
  output wb_valid_reg_0;
  output dbg_stop_i;
  output [30:0]\EX_Op3_reg[0] ;
  output \EX_Op3_reg[31] ;
  output \EX_Op3_reg[31]_0 ;
  output [30:0]\EX_Branch_CMP_Op1_reg[0] ;
  output \EX_Branch_CMP_Op1_reg[31] ;
  output \EX_Branch_CMP_Op1_reg[30] ;
  output [31:0]\EX_Op2_reg[0] ;
  output [23:0]\data_rd_reg_reg[0] ;
  output [1:0]Q;
  output [15:0]EX_Fwd;
  output \Using_FPGA.Native_3 ;
  output wb_Halted;
  output MEM_WB_Sel_Mem_PC;
  output [2:0]LOCKSTEP_Master_Out;
  output \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  output \Performace_Debug_Control.dbg_state_nohalt_reg ;
  output \EX_Op1_reg[31] ;
  output \EX_Op1_reg[30] ;
  output \EX_Op1_reg[29] ;
  output \EX_Op1_reg[28] ;
  output \EX_Op1_reg[27] ;
  output \EX_Op1_reg[26] ;
  output \EX_Op1_reg[25] ;
  output \EX_Op1_reg[24] ;
  output \EX_Op1_reg[23] ;
  output \EX_Op1_reg[22] ;
  output \EX_Op1_reg[21] ;
  output \EX_Op1_reg[20] ;
  output \EX_Op1_reg[19] ;
  output \EX_Op1_reg[18] ;
  output \EX_Op1_reg[17] ;
  output \EX_Op1_reg[16] ;
  output \EX_Op1_reg[15] ;
  output \EX_Op1_reg[14] ;
  output \EX_Op1_reg[13] ;
  output \EX_Op1_reg[12] ;
  output \EX_Op1_reg[11] ;
  output \EX_Op1_reg[10] ;
  output \EX_Op1_reg[9] ;
  output \EX_Op1_reg[8] ;
  output \EX_Op1_reg[7] ;
  output \EX_Op1_reg[6] ;
  output \EX_Op1_reg[5] ;
  output \EX_Op1_reg[4] ;
  output \EX_Op1_reg[3] ;
  output \EX_Op1_reg[2] ;
  output \EX_Op1_reg[1] ;
  output I1;
  output of_op1_sel_spr;
  output [0:0]E;
  output \Using_FPGA.Native_4 ;
  output SRI;
  output \Using_FPGA.Native_5 ;
  output \EX_Op3_reg[31]_1 ;
  output \EX_Op3_reg[31]_2 ;
  output \EX_Branch_CMP_Op1_reg[31]_0 ;
  output \EX_Branch_CMP_Op1_reg[30]_0 ;
  output \Performace_Debug_Control.ex_brki_hit_reg ;
  output R;
  output new_request;
  output Sleep;
  output I1_0;
  output [1:0]\Using_FPGA.Native_6 ;
  output [0:0]SR;
  output M_AXI_DP_ARVALID_i_reg;
  output M_AXI_DP_WVALID_i_reg;
  output M_AXI_DP_AWVALID_i_reg;
  output in0;
  output [0:0]\wb_read_lsb_sel_reg[0] ;
  output [0:0]\Using_FPGA.Native_7 ;
  output [31:0]\Using_FPGA.Native_8 ;
  output [1:0]\MEM_DataBus_Addr_reg[9]_0 ;
  input sync_reset;
  input Clk;
  input IReady_1;
  input I041_out;
  input I139_out;
  input ex_op1_zero;
  input \Performace_Debug_Control.dbg_stop_if_delay_i_reg ;
  input mem_databus_ready;
  input \Performace_Debug_Control.dbg_stop_if_delay_i_reg_0 ;
  input ex_exception_no_load_store_mask;
  input \Performace_Debug_Control.dbg_stop_if_delay_i_reg_1 ;
  input Pause;
  input [1:0]ex_databus_addr;
  input [41:0]\EX_Op2_reg[0]_0 ;
  input \Performace_Debug_Control.dbg_stop_if_delay_i_reg_2 ;
  input \Performace_Debug_Control.ex_dbg_pc_hit_i_reg ;
  input [30:0]GPR_Op3;
  input [30:0]GPR_Op1;
  input [0:31]mem_ex_result;
  input \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ;
  input DI;
  input read_register_MSR_1;
  input [23:0]\Using_FPGA.Native_9 ;
  input [23:0]\WB_MEM_Result_reg[0] ;
  input \wb_read_lsb_sel_reg[1] ;
  input [3:0]\Using_FPGA.Native_10 ;
  input \Using_FPGA.Native_11 ;
  input \wb_read_lsb_sel_reg[1]_0 ;
  input \Using_FPGA.Native_12 ;
  input \wb_read_lsb_sel_reg[1]_1 ;
  input \Using_FPGA.Native_13 ;
  input \wb_read_lsb_sel_reg[1]_2 ;
  input \Using_FPGA.Native_14 ;
  input \wb_read_lsb_sel_reg[1]_3 ;
  input \Using_FPGA.Native_15 ;
  input \wb_read_lsb_sel_reg[1]_4 ;
  input \Using_FPGA.Native_16 ;
  input \wb_read_lsb_sel_reg[1]_5 ;
  input \Using_FPGA.Native_17 ;
  input \wb_read_lsb_sel_reg[1]_6 ;
  input ex_sel_alu_i_reg_0;
  input [15:0]ex_sel_alu_i_reg_1;
  input \Using_FPGA.Native_18 ;
  input \Use_DLMB.wb_dlmb_valid_read_data_reg[23] ;
  input ex_sel_alu_i_reg_2;
  input \Using_FPGA.Native_19 ;
  input \Use_DLMB.wb_dlmb_valid_read_data_reg[22] ;
  input ex_sel_alu_i_reg_3;
  input \Using_FPGA.Native_20 ;
  input \Use_DLMB.wb_dlmb_valid_read_data_reg[21] ;
  input ex_sel_alu_i_reg_4;
  input \Using_FPGA.Native_21 ;
  input \Use_DLMB.wb_dlmb_valid_read_data_reg[20] ;
  input ex_sel_alu_i_reg_5;
  input \Using_FPGA.Native_22 ;
  input \Use_DLMB.wb_dlmb_valid_read_data_reg[19] ;
  input \Using_FPGA.Native_23 ;
  input ex_sel_alu_i_reg_6;
  input \Using_FPGA.Native_24 ;
  input \Use_DLMB.wb_dlmb_valid_read_data_reg[18] ;
  input ex_sel_alu_i_reg_7;
  input \Using_FPGA.Native_25 ;
  input \Use_DLMB.wb_dlmb_valid_read_data_reg[17] ;
  input \Using_FPGA.Native_26 ;
  input \Use_DLMB.wb_dlmb_valid_read_data_reg[16] ;
  input ex_sel_alu_i_reg_8;
  input \Using_FPGA.Native_27 ;
  input \Use_DLMB.wb_dlmb_valid_read_data_reg[31] ;
  input \Using_FPGA.Native_28 ;
  input ex_sel_alu_i_reg_9;
  input \Using_FPGA.Native_29 ;
  input \Use_DLMB.wb_dlmb_valid_read_data_reg[30] ;
  input ex_sel_alu_i_reg_10;
  input \Using_FPGA.Native_30 ;
  input \Use_DLMB.wb_dlmb_valid_read_data_reg[29] ;
  input ex_sel_alu_i_reg_11;
  input \Using_FPGA.Native_31 ;
  input \Use_DLMB.wb_dlmb_valid_read_data_reg[28] ;
  input \Using_FPGA.Native_32 ;
  input ex_sel_alu_i_reg_12;
  input \Using_FPGA.Native_33 ;
  input \Use_DLMB.wb_dlmb_valid_read_data_reg[27] ;
  input \Using_FPGA.Native_34 ;
  input ex_sel_alu_i_reg_13;
  input \Using_FPGA.Native_35 ;
  input \Use_DLMB.wb_dlmb_valid_read_data_reg[26] ;
  input ex_sel_alu_i_reg_14;
  input \Using_FPGA.Native_36 ;
  input \Use_DLMB.wb_dlmb_valid_read_data_reg[25] ;
  input \Use_DLMB.wb_dlmb_valid_read_data_reg[24] ;
  input [0:31]Y;
  input \Serial_Dbg_Intf.if_debug_ready_i_reg ;
  input \Performace_Debug_Control.dbg_freeze_nohalt_reg ;
  input IReady;
  input [15:0]\imm_reg_reg[0] ;
  input [0:31]GPR_Op2;
  input \Performace_Debug_Control.dbg_state_nohalt_reg_0 ;
  input dbg_halt_reset_mode_reg;
  input [0:1]Reset_Mode;
  input [2:0]ex_MSR;
  input ex_valid_reg_0;
  input ex_load_shift_carry_reg_0;
  input [16:0]\EX_Op1_reg[0] ;
  input \Serial_Dbg_Intf.force_stop_cmd_i_reg ;
  input [0:0]\EX_Op2_reg[31] ;
  input \Using_FPGA.Native_37 ;
  input [15:0]\EX_Op3_reg[1] ;
  input DWait;
  input active_access_d1;
  input DReady;
  input [0:1]wakeup_i;
  input Sleep_Out;
  input [0:0]\Serial_Dbg_Intf.control_reg_reg[8] ;
  input \EX_Op1_reg[7]_0 ;
  input [2:0]mem_MSR;
  input \EX_Op1_reg[6]_0 ;
  input \EX_Op1_reg[5]_0 ;
  input \EX_Op1_reg[4]_0 ;
  input \EX_Op1_reg[3]_0 ;
  input \EX_Op1_reg[2]_0 ;
  input \EX_Op1_reg[1]_0 ;
  input \EX_Op1_reg[0]_0 ;
  input \EX_Op1_reg[24]_0 ;
  input \EX_Op1_reg[9]_0 ;
  input out;
  input \EX_Op1_reg[10]_0 ;
  input \EX_Op1_reg[11]_0 ;
  input \EX_Op1_reg[12]_0 ;
  input \EX_Op1_reg[13]_0 ;
  input \EX_Op1_reg[14]_0 ;
  input \EX_Op1_reg[15]_0 ;
  input [2:0]M_AXI_DP_AWVALID_i_reg_0;
  input M_AXI_DP_ARREADY;
  input M_AXI_DP_WREADY;
  input M_AXI_DP_AWREADY;
  input [0:0]\EX_Branch_CMP_Op1_reg[0]_0 ;
  input [0:0]\mem_byte_selects_reg[0] ;
  input mem_reverse_byteorder;
  input [0:0]in;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;
  output lopt_4;
  output lopt_5;
  input lopt_6;
  output lopt_7;
  output lopt_8;
  input lopt_9;
  output lopt_10;
  output lopt_11;

  wire A;
  wire Clk;
  wire [31:0]D;
  wire D222_out;
  wire D224_out;
  wire D225_out;
  wire D229_out;
  wire DI;
  wire DReady;
  wire Dbg_Clean_Stop0;
  wire [0:0]E;
  wire EX_ALU_Sel_Logic;
  wire [30:0]\EX_Branch_CMP_Op1_reg[0] ;
  wire [0:0]\EX_Branch_CMP_Op1_reg[0]_0 ;
  wire \EX_Branch_CMP_Op1_reg[30] ;
  wire \EX_Branch_CMP_Op1_reg[30]_0 ;
  wire \EX_Branch_CMP_Op1_reg[31] ;
  wire \EX_Branch_CMP_Op1_reg[31]_0 ;
  wire EX_CMP_Op106_out;
  wire EX_Enable_ALU;
  wire [15:0]EX_Fwd;
  wire EX_Is_Div_Instr;
  wire [16:0]\EX_Op1_reg[0] ;
  wire \EX_Op1_reg[0]_0 ;
  wire \EX_Op1_reg[10] ;
  wire \EX_Op1_reg[10]_0 ;
  wire \EX_Op1_reg[11] ;
  wire \EX_Op1_reg[11]_0 ;
  wire \EX_Op1_reg[12] ;
  wire \EX_Op1_reg[12]_0 ;
  wire \EX_Op1_reg[13] ;
  wire \EX_Op1_reg[13]_0 ;
  wire \EX_Op1_reg[14] ;
  wire \EX_Op1_reg[14]_0 ;
  wire \EX_Op1_reg[15] ;
  wire \EX_Op1_reg[15]_0 ;
  wire \EX_Op1_reg[16] ;
  wire \EX_Op1_reg[17] ;
  wire \EX_Op1_reg[18] ;
  wire \EX_Op1_reg[19] ;
  wire \EX_Op1_reg[1] ;
  wire \EX_Op1_reg[1]_0 ;
  wire \EX_Op1_reg[20] ;
  wire \EX_Op1_reg[21] ;
  wire \EX_Op1_reg[22] ;
  wire \EX_Op1_reg[23] ;
  wire \EX_Op1_reg[24] ;
  wire \EX_Op1_reg[24]_0 ;
  wire \EX_Op1_reg[25] ;
  wire \EX_Op1_reg[26] ;
  wire \EX_Op1_reg[27] ;
  wire \EX_Op1_reg[28] ;
  wire \EX_Op1_reg[29] ;
  wire \EX_Op1_reg[2] ;
  wire \EX_Op1_reg[2]_0 ;
  wire \EX_Op1_reg[30] ;
  wire \EX_Op1_reg[31] ;
  wire \EX_Op1_reg[3] ;
  wire \EX_Op1_reg[3]_0 ;
  wire \EX_Op1_reg[4] ;
  wire \EX_Op1_reg[4]_0 ;
  wire \EX_Op1_reg[5] ;
  wire \EX_Op1_reg[5]_0 ;
  wire \EX_Op1_reg[6] ;
  wire \EX_Op1_reg[6]_0 ;
  wire \EX_Op1_reg[7] ;
  wire \EX_Op1_reg[7]_0 ;
  wire \EX_Op1_reg[8] ;
  wire \EX_Op1_reg[9] ;
  wire \EX_Op1_reg[9]_0 ;
  wire \EX_Op2[0]_i_9_n_0 ;
  wire [31:0]\EX_Op2_reg[0] ;
  wire [41:0]\EX_Op2_reg[0]_0 ;
  wire [0:0]\EX_Op2_reg[31] ;
  wire [30:0]\EX_Op3_reg[0] ;
  wire [15:0]\EX_Op3_reg[1] ;
  wire \EX_Op3_reg[31] ;
  wire \EX_Op3_reg[31]_0 ;
  wire \EX_Op3_reg[31]_1 ;
  wire \EX_Op3_reg[31]_2 ;
  wire EX_SWAP_Instr;
  wire [0:1]EX_Sext_Op;
  wire EX_Unsigned_Op105_out;
  wire [30:0]GPR_Op1;
  wire [0:31]GPR_Op2;
  wire [30:0]GPR_Op3;
  wire I0;
  wire I041_out;
  wire I1;
  wire I139_out;
  wire I2;
  wire I4;
  wire I5;
  wire IF_PC_Write;
  wire IFetch_INST_0_i_2_n_0;
  wire IReady;
  wire IReady_1;
  wire [2:0]\^LOCKSTEP_Master_Out ;
  wire [1:0]\MEM_DataBus_Addr_reg[9]_0 ;
  wire MEM_Sel_MEM_Res;
  wire MEM_WB_Sel_Mem_PC;
  wire M_AXI_DP_ARREADY;
  wire M_AXI_DP_ARVALID_i_reg;
  wire M_AXI_DP_AWREADY;
  wire M_AXI_DP_AWVALID_i_reg;
  wire [2:0]M_AXI_DP_AWVALID_i_reg_0;
  wire M_AXI_DP_WREADY;
  wire M_AXI_DP_WVALID_i_reg;
  wire O31_out;
  wire O33_out;
  wire O35_out;
  wire O37_out;
  wire O39_out;
  wire O41_out;
  wire O43_out;
  wire O45_out;
  wire O47_out;
  wire O49_out;
  wire O51_out;
  wire O53_out;
  wire O55_out;
  wire O56_out;
  wire O57_out;
  wire O59_out;
  wire O61_out;
  wire O63_out;
  wire O65_out;
  wire O67_out;
  wire O69_out;
  wire O71_out;
  wire O73_out;
  wire O75_out;
  wire O77_out;
  wire O79_out;
  wire O81_out;
  wire O83_out;
  wire O85_out;
  wire O87_out;
  wire PC_Module_I_n_34;
  wire PC_Module_I_n_35;
  wire \Performace_Debug_Control.dbg_freeze_nohalt_reg ;
  wire \Performace_Debug_Control.dbg_state_nohalt_reg ;
  wire \Performace_Debug_Control.dbg_state_nohalt_reg_0 ;
  wire \Performace_Debug_Control.dbg_stop_if_delay_i_reg ;
  wire \Performace_Debug_Control.dbg_stop_if_delay_i_reg_0 ;
  wire \Performace_Debug_Control.dbg_stop_if_delay_i_reg_1 ;
  wire \Performace_Debug_Control.dbg_stop_if_delay_i_reg_2 ;
  wire \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  wire \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ;
  wire \Performace_Debug_Control.ex_brki_hit_reg ;
  wire \Performace_Debug_Control.ex_dbg_pc_hit_i_reg ;
  wire PreFetch_Buffer_I1_n_153;
  wire PreFetch_Buffer_I1_n_154;
  wire PreFetch_Buffer_I1_n_157;
  wire PreFetch_Buffer_I1_n_169;
  wire PreFetch_Buffer_I1_n_172;
  wire PreFetch_Buffer_I1_n_173;
  wire PreFetch_Buffer_I1_n_174;
  wire PreFetch_Buffer_I1_n_176;
  wire PreFetch_Buffer_I1_n_189;
  wire PreFetch_Buffer_I1_n_191;
  wire PreFetch_Buffer_I1_n_196;
  wire PreFetch_Buffer_I1_n_201;
  wire PreFetch_Buffer_I1_n_203;
  wire PreFetch_Buffer_I1_n_204;
  wire PreFetch_Buffer_I1_n_205;
  wire PreFetch_Buffer_I1_n_206;
  wire PreFetch_Buffer_I1_n_207;
  wire [1:0]\^Q ;
  wire R;
  wire [0:0]SR;
  wire SRI;
  wire [0:0]\Serial_Dbg_Intf.control_reg_reg[8] ;
  wire \Serial_Dbg_Intf.if_debug_ready_i_reg ;
  wire Sleep;
  wire \^Sleep_Decode ;
  wire Sleep_Out;
  wire \Use_DLMB.wb_dlmb_valid_read_data_reg[16] ;
  wire \Use_DLMB.wb_dlmb_valid_read_data_reg[17] ;
  wire \Use_DLMB.wb_dlmb_valid_read_data_reg[18] ;
  wire \Use_DLMB.wb_dlmb_valid_read_data_reg[19] ;
  wire \Use_DLMB.wb_dlmb_valid_read_data_reg[20] ;
  wire \Use_DLMB.wb_dlmb_valid_read_data_reg[21] ;
  wire \Use_DLMB.wb_dlmb_valid_read_data_reg[22] ;
  wire \Use_DLMB.wb_dlmb_valid_read_data_reg[23] ;
  wire \Use_DLMB.wb_dlmb_valid_read_data_reg[24] ;
  wire \Use_DLMB.wb_dlmb_valid_read_data_reg[25] ;
  wire \Use_DLMB.wb_dlmb_valid_read_data_reg[26] ;
  wire \Use_DLMB.wb_dlmb_valid_read_data_reg[27] ;
  wire \Use_DLMB.wb_dlmb_valid_read_data_reg[28] ;
  wire \Use_DLMB.wb_dlmb_valid_read_data_reg[29] ;
  wire \Use_DLMB.wb_dlmb_valid_read_data_reg[30] ;
  wire \Use_DLMB.wb_dlmb_valid_read_data_reg[31] ;
  wire \Use_MuxCy[11].OF_Piperun_Stage_n_3 ;
  wire \Use_MuxCy[11].OF_Piperun_Stage_n_4 ;
  wire \Use_MuxCy[11].OF_Piperun_Stage_n_5 ;
  wire \Use_MuxCy[2].OF_Piperun_Stage_n_1 ;
  wire \Use_MuxCy[3].OF_Piperun_Stage_n_1 ;
  wire \Use_MuxCy[3].OF_Piperun_Stage_n_2 ;
  wire \Use_MuxCy[3].OF_Piperun_Stage_n_3 ;
  wire [0:0]\Using_FPGA.Native ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [3:0]\Using_FPGA.Native_10 ;
  wire \Using_FPGA.Native_11 ;
  wire \Using_FPGA.Native_12 ;
  wire \Using_FPGA.Native_13 ;
  wire \Using_FPGA.Native_14 ;
  wire \Using_FPGA.Native_15 ;
  wire \Using_FPGA.Native_16 ;
  wire \Using_FPGA.Native_17 ;
  wire \Using_FPGA.Native_18 ;
  wire \Using_FPGA.Native_19 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_20 ;
  wire \Using_FPGA.Native_21 ;
  wire \Using_FPGA.Native_22 ;
  wire \Using_FPGA.Native_23 ;
  wire \Using_FPGA.Native_24 ;
  wire \Using_FPGA.Native_25 ;
  wire \Using_FPGA.Native_26 ;
  wire \Using_FPGA.Native_27 ;
  wire \Using_FPGA.Native_28 ;
  wire \Using_FPGA.Native_29 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_30 ;
  wire \Using_FPGA.Native_31 ;
  wire \Using_FPGA.Native_32 ;
  wire \Using_FPGA.Native_33 ;
  wire \Using_FPGA.Native_34 ;
  wire \Using_FPGA.Native_35 ;
  wire \Using_FPGA.Native_36 ;
  wire \Using_FPGA.Native_37 ;
  wire \Using_FPGA.Native_4 ;
  wire \Using_FPGA.Native_5 ;
  wire [1:0]\Using_FPGA.Native_6 ;
  wire [0:0]\Using_FPGA.Native_7 ;
  wire [31:0]\Using_FPGA.Native_8 ;
  wire [23:0]\Using_FPGA.Native_9 ;
  wire \Using_FPGA.Native_i_13_n_0 ;
  wire \Using_FPGA.Native_i_16_n_0 ;
  wire \Using_FPGA.Native_i_17_n_0 ;
  wire \Using_FPGA.Native_i_2__64_n_0 ;
  wire \Using_FPGA.Native_i_3__11_n_0 ;
  wire \Using_FPGA.Native_i_3__13_n_0 ;
  wire \Using_FPGA.Native_i_3__15_n_0 ;
  wire \Using_FPGA.Native_i_3__17_n_0 ;
  wire \Using_FPGA.Native_i_3__18_n_0 ;
  wire \Using_FPGA.Native_i_3__42_n_0 ;
  wire \Using_FPGA.Native_i_3__44_n_0 ;
  wire \Using_FPGA.Native_i_3__45_n_0 ;
  wire \Using_FPGA.Native_i_3__46_n_0 ;
  wire \Using_FPGA.Native_i_3__47_n_0 ;
  wire \Using_FPGA.Native_i_3__48_n_0 ;
  wire \Using_FPGA.Native_i_3__49_n_0 ;
  wire \Using_FPGA.Native_i_3__50_n_0 ;
  wire \Using_FPGA.Native_i_3__5_n_0 ;
  wire \Using_FPGA.Native_i_3__7_n_0 ;
  wire \Using_FPGA.Native_i_3__9_n_0 ;
  wire \Using_FPGA.Native_i_4__19_n_0 ;
  wire \Using_FPGA.Native_i_5__1_n_0 ;
  wire \Using_FPGA.Native_i_5_n_0 ;
  wire \Using_FPGA.Native_i_6__1_n_0 ;
  wire \Using_FPGA_2.ex_is_load_instr_Inst_n_3 ;
  wire \Using_FPGA_2.ex_is_lwx_instr_Inst_n_1 ;
  wire \Using_FPGA_2.ex_is_swx_instr_Inst_n_1 ;
  wire \Using_FPGA_2.ex_load_store_instr_Inst_n_2 ;
  wire \Using_FPGA_2.ex_load_store_instr_Inst_n_3 ;
  wire \Using_FPGA_3.of_clear_MSR_BIP_hold_Inst_n_0 ;
  wire \Using_FPGA_4.of_read_ex_write_op3_conflict_INST2_n_0 ;
  wire \Using_FPGA_4.of_read_mem_write_op1_conflict_INST1_n_0 ;
  wire \Using_FPGA_4.of_read_mem_write_op3_conflict_INST1_n_0 ;
  wire \Using_LWX_SWX_instr.ex_reservation_i_2_n_0 ;
  wire [23:0]\WB_MEM_Result_reg[0] ;
  wire WB_Read_Imm_Reg_1_reg_0;
  wire [0:31]Y;
  wire active_access_d1;
  wire [23:0]\data_rd_reg_reg[0] ;
  wire dbg_clean_stop;
  wire dbg_halt_reset_mode_reg;
  wire dbg_stop_i;
  wire ex_Enable_Sext_Shift;
  wire [2:0]ex_MSR;
  (* RTL_KEEP = "true" *) wire ex_Write_DCache_decode_cmb;
  wire ex_alu_sel_logic_i103_out;
  wire ex_branch_with_delayslot;
  wire ex_byte_access;
  wire ex_cmp_op;
  wire [1:0]ex_databus_addr;
  wire ex_delayslot_Instr;
  wire ex_delayslot_Instr0;
  wire ex_doublet_access;
  wire ex_enable_sext_shift_i0;
  wire ex_exception_no_load_store_mask;
  wire ex_first_cycle;
  wire \ex_gpr_write_addr_reg_n_0_[0] ;
  wire \ex_gpr_write_addr_reg_n_0_[4] ;
  wire ex_gpr_write_dbg;
  wire ex_gpr_write_reg_n_0;
  wire ex_is_load_instr_s;
  wire ex_is_lwx_instr_s;
  wire ex_is_multi_instr2;
  wire ex_is_multi_or_load_instr;
  wire ex_is_multi_or_load_instr0;
  wire ex_is_swx_instr_s;
  wire ex_jump;
  wire ex_jump_hold;
  wire ex_jump_nodelay;
  wire ex_load_alu_carry97_out;
  wire ex_load_shift_carry;
  wire ex_load_shift_carry0;
  wire ex_load_shift_carry_reg_0;
  wire ex_load_store_instr_s;
  wire ex_mbar_decode;
  (* RTL_KEEP = "true" *) wire ex_mbar_decode_cmb;
  wire ex_mbar_is_sleep;
  (* RTL_KEEP = "true" *) wire ex_mbar_is_sleep_cmb;
  wire ex_mbar_sleep;
  wire ex_mbar_sleep_i_1_n_0;
  wire ex_mbar_stall_no_sleep_1;
  wire ex_mbar_stall_no_sleep_10;
  wire ex_mfsmsr_i;
  wire ex_move_to_MSR_instr;
  wire ex_move_to_MSR_instr93_out;
  wire ex_op1_cmp_eq;
  wire ex_op1_cmp_eq1;
  wire ex_op1_cmp_eq_n5_out;
  wire ex_op1_cmp_equal;
  wire ex_op1_cmp_equal_n;
  wire [0:5]ex_opcode;
  wire ex_read_imm_reg;
  wire ex_read_imm_reg_1;
  wire ex_reservation;
  wire ex_reverse_mem_access;
  wire ex_sel_alu;
  wire ex_sel_alu_i0;
  wire ex_sel_alu_i_reg_0;
  wire [15:0]ex_sel_alu_i_reg_1;
  wire ex_sel_alu_i_reg_10;
  wire ex_sel_alu_i_reg_11;
  wire ex_sel_alu_i_reg_12;
  wire ex_sel_alu_i_reg_13;
  wire ex_sel_alu_i_reg_14;
  wire ex_sel_alu_i_reg_2;
  wire ex_sel_alu_i_reg_3;
  wire ex_sel_alu_i_reg_4;
  wire ex_sel_alu_i_reg_5;
  wire ex_sel_alu_i_reg_6;
  wire ex_sel_alu_i_reg_7;
  wire ex_sel_alu_i_reg_8;
  wire ex_sel_alu_i_reg_9;
  wire ex_set_bip;
  wire ex_set_bip_reg_n_0;
  wire [0:1]ex_shift_op;
  wire ex_sleep_i0;
  wire ex_sleep_i_i_1_n_0;
  wire ex_swap_byte_instr;
  wire ex_swap_instr;
  wire ex_unsigned_op;
  wire ex_use_carry;
  wire ex_valid;
  (* RTL_KEEP = "true" *) wire ex_valid_jump;
  wire ex_valid_reg_0;
  wire ex_write_dcache_instr;
  wire flush_pipe;
  wire force12_out;
  wire force_Val10_out;
  wire if_fetch_for_timing_optimization1;
  wire if_fetch_in_progress;
  (* RTL_KEEP = "true" *) wire if_fetch_without_full_or_jump;
  wire if_missed_fetch;
  wire if_missed_fetch_i_2_n_0;
  wire [1:1]if_pre_buffer_addr;
  wire [0:0]if_sel_input;
  wire [15:0]\imm_reg_reg[0] ;
  wire [0:0]in;
  wire in0;
  wire jump_logic_I1_n_39;
  wire jump_logic_I1_n_40;
  wire jump_logic_I1_n_41;
  wire jump_logic_I1_n_42;
  wire jump_logic_I1_n_43;
  wire jump_logic_I1_n_5;
  wire keep_jump_taken_with_ds;
  wire lopt;
  wire lopt_1;
  wire \^lopt_10 ;
  wire lopt_12;
  wire lopt_13;
  wire lopt_14;
  wire lopt_15;
  wire lopt_16;
  wire lopt_17;
  wire lopt_18;
  wire lopt_19;
  wire lopt_2;
  wire lopt_20;
  wire lopt_21;
  wire lopt_22;
  wire lopt_24;
  wire lopt_25;
  wire lopt_26;
  wire lopt_28;
  wire lopt_30;
  wire lopt_31;
  wire lopt_32;
  wire lopt_33;
  wire lopt_34;
  wire lopt_35;
  wire \^lopt_4 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [152:0]\^mb_halted_1_reg ;
  wire mem_Exception_Taken;
  wire [2:0]mem_MSR;
  wire mem_PipeRun_carry_and_n_3;
  wire mem_PipeRun_carry_and_n_4;
  wire mem_Write_DCache;
  wire mem_Write_DCache_i_1_n_0;
  wire mem_byte_access;
  wire [0:0]\mem_byte_selects_reg[0] ;
  wire mem_databus_access;
  wire \^mem_databus_write ;
  wire mem_delayslot_instr;
  wire mem_doublet_access;
  wire [0:31]mem_ex_result;
  wire mem_exception_from_ex;
  wire [28:31]mem_exception_kind;
  wire mem_gpr_write;
  wire [0:4]mem_gpr_write_addr;
  wire mem_gpr_write_dbg;
  wire mem_is_multi_or_load_instr;
  wire mem_is_multi_or_load_instr0;
  wire mem_load_store_access;
  wire mem_load_store_access0;
  wire mem_read_imm_reg;
  wire mem_read_imm_reg_1;
  wire mem_reverse_byteorder;
  wire mem_sel_msr;
  wire mem_valid_instr;
  wire new_request;
  wire of_PipeRun_carry_10;
  wire of_PipeRun_carry_2;
  wire of_PipeRun_carry_6;
  (* DIRECT_ENABLE *) wire of_PipeRun_for_ce;
  wire of_Sel_SPR_MSR1;
  wire of_Sel_SPR_MSR88_out;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [0:15]of_imm_data;
  wire [0:5]of_instr;
  wire of_op1_sel_spr;
  wire of_pipe_ctrl_reg0;
  wire [1:10]of_predecode;
  wire of_read_ex_write_op1_conflict_part2;
  wire of_read_ex_write_op2_conflict_part1;
  wire of_read_ex_write_op2_conflict_part2;
  wire of_read_ex_write_op3_conflict_part1;
  wire of_read_imm_reg;
  wire of_read_imm_reg_ii;
  wire of_read_imm_reg_ii_i_3_n_0;
  wire of_read_mem_write_op1_conflict_part2;
  wire of_read_mem_write_op2_conflict_part1;
  wire of_read_mem_write_op2_conflict_part2;
  wire of_read_mem_write_op3_conflict_part2;
  wire of_valid;
  wire out;
  wire p_0_in123_in;
  wire p_1_in3_in;
  wire p_2_in;
  wire read_register_MSR_1;
  (* DIRECT_RESET *) wire reset_bool_for_rst;
  wire use_Reg_Neg_DI1_out;
  wire use_Reg_Neg_S3_out;
  wire wb_Halted;
  wire wb_byte_access;
  wire wb_doublet_access;
  wire wb_exception;
  wire wb_gpr_write_dbg;
  wire wb_gpr_write_dbg0;
  wire wb_gpr_write_i;
  wire wb_gpr_write_i0;
  wire wb_pc_valid;
  wire wb_piperun;
  wire wb_read_imm_reg;
  wire wb_read_imm_reg_1;
  wire [0:0]\wb_read_lsb_sel_reg[0] ;
  wire \wb_read_lsb_sel_reg[1] ;
  wire \wb_read_lsb_sel_reg[1]_0 ;
  wire \wb_read_lsb_sel_reg[1]_1 ;
  wire \wb_read_lsb_sel_reg[1]_2 ;
  wire \wb_read_lsb_sel_reg[1]_3 ;
  wire \wb_read_lsb_sel_reg[1]_4 ;
  wire \wb_read_lsb_sel_reg[1]_5 ;
  wire \wb_read_lsb_sel_reg[1]_6 ;
  wire wb_reset;
  wire wb_valid_reg_0;
  wire NLW_PC_Module_I_CI_UNCONNECTED;
  wire \NLW_Use_MuxCy[10].OF_Piperun_Stage_of_PipeRun_carry_1_UNCONNECTED ;
  wire \NLW_Use_MuxCy[11].OF_Piperun_Stage_dbg_pause_UNCONNECTED ;
  wire \NLW_Use_MuxCy[11].OF_Piperun_Stage_ex_Write_ICache_i_UNCONNECTED ;
  wire \NLW_Use_MuxCy[11].OF_Piperun_Stage_in0_UNCONNECTED ;
  wire \NLW_Use_MuxCy[11].OF_Piperun_Stage_of_PipeRun_carry_1_UNCONNECTED ;
  wire \NLW_Use_MuxCy[1].OF_Piperun_Stage_mem_valid_reg_UNCONNECTED ;
  wire \NLW_Use_MuxCy[2].OF_Piperun_Stage_lopt_3_UNCONNECTED ;
  wire \NLW_Use_MuxCy[2].OF_Piperun_Stage_of_PipeRun_carry_9_UNCONNECTED ;
  wire \NLW_Use_MuxCy[3].OF_Piperun_Stage_of_PipeRun_carry_9_UNCONNECTED ;
  wire \NLW_Use_MuxCy[4].OF_Piperun_Stage_ex_branch_with_delayslot_reg_UNCONNECTED ;
  wire \NLW_Use_MuxCy[4].OF_Piperun_Stage_lopt_UNCONNECTED ;
  wire \NLW_Use_MuxCy[4].OF_Piperun_Stage_of_PipeRun_carry_7_UNCONNECTED ;
  wire \NLW_Use_MuxCy[4].OF_Piperun_Stage_of_pipe_ctrl_reg0_UNCONNECTED ;
  wire \NLW_Use_MuxCy[5].OF_Piperun_Stage_A_UNCONNECTED ;
  wire \NLW_Use_MuxCy[5].OF_Piperun_Stage_of_PipeRun_carry_7_UNCONNECTED ;
  wire \NLW_Use_MuxCy[6].OF_Piperun_Stage_lopt_UNCONNECTED ;
  wire \NLW_Use_MuxCy[6].OF_Piperun_Stage_lopt_3_UNCONNECTED ;
  wire \NLW_Use_MuxCy[6].OF_Piperun_Stage_of_PipeRun_carry_5_UNCONNECTED ;
  wire \NLW_Use_MuxCy[7].OF_Piperun_Stage_ex_is_multi_or_load_instr_reg_UNCONNECTED ;
  wire \NLW_Use_MuxCy[7].OF_Piperun_Stage_lopt_UNCONNECTED ;
  wire \NLW_Use_MuxCy[7].OF_Piperun_Stage_of_PipeRun_carry_4_UNCONNECTED ;
  wire \NLW_Use_MuxCy[7].OF_Piperun_Stage_of_PipeRun_carry_5_UNCONNECTED ;
  wire \NLW_Use_MuxCy[8].OF_Piperun_Stage_lopt_UNCONNECTED ;
  wire \NLW_Use_MuxCy[8].OF_Piperun_Stage_mem_is_multi_or_load_instr_reg_UNCONNECTED ;
  wire \NLW_Use_MuxCy[8].OF_Piperun_Stage_of_PipeRun_carry_3_UNCONNECTED ;
  wire \NLW_Use_MuxCy[8].OF_Piperun_Stage_of_PipeRun_carry_4_UNCONNECTED ;
  wire \NLW_Use_MuxCy[9].OF_Piperun_Stage_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Use_MuxCy[9].OF_Piperun_Stage_of_PipeRun_carry_3_UNCONNECTED ;
  wire \NLW_Using_FPGA_2.ex_is_load_instr_Inst_Performace_Debug_Control.dbg_stop_if_delay_i_reg_UNCONNECTED ;
  wire \NLW_Using_FPGA_2.ex_is_load_instr_Inst_Performace_Debug_Control.ex_dbg_pc_hit_i_reg_UNCONNECTED ;
  wire \NLW_Using_FPGA_2.ex_is_load_instr_Inst_ex_Sel_SPR_BTR_UNCONNECTED ;
  wire \NLW_Using_FPGA_2.ex_is_load_instr_Inst_ex_Sel_SPR_EAR_UNCONNECTED ;
  wire \NLW_Using_FPGA_2.ex_is_load_instr_Inst_ex_Sel_SPR_EDR_UNCONNECTED ;
  wire \NLW_Using_FPGA_2.ex_is_load_instr_Inst_ex_Sel_SPR_ESR_UNCONNECTED ;
  wire \NLW_Using_FPGA_2.ex_is_load_instr_Inst_ex_Sel_SPR_FSR_UNCONNECTED ;
  wire \NLW_Using_FPGA_2.ex_is_load_instr_Inst_ex_Sel_SPR_PVR_UNCONNECTED ;
  wire \NLW_Using_FPGA_2.ex_is_load_instr_Inst_ex_Sel_SPR_SHR_UNCONNECTED ;
  wire \NLW_Using_FPGA_2.ex_is_load_instr_Inst_ex_Sel_SPR_SLR_UNCONNECTED ;
  wire \NLW_Using_FPGA_2.ex_is_load_instr_Inst_ex_valid_reg_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA_2.ex_is_load_instr_Inst_MEM_DataBus_Read_reg_UNCONNECTED ;
  wire \NLW_Using_PC_Incr_Dbg_or_Prot.if_pc_incr_carry_and_1_Performace_Debug_Control.dbg_stop_if_delay_i_reg_UNCONNECTED ;
  wire \NLW_Using_PC_Incr_Dbg_or_Prot.if_pc_incr_carry_and_1_if_pc_incr_carry0_UNCONNECTED ;
  wire \NLW_Using_PC_Incr_Dbg_or_Prot.if_pc_incr_carry_and_1_if_pc_incr_carry1_UNCONNECTED ;
  wire \NLW_Using_PC_Incr_Dbg_or_Prot.if_pc_incr_carry_and_1_lopt_UNCONNECTED ;
  wire NLW_if_pc_incr_carry_and_0_if_pc_incr_carry0_UNCONNECTED;
  wire NLW_if_pc_incr_carry_and_0_lopt_UNCONNECTED;
  wire NLW_if_pc_incr_carry_and_0_lopt_3_UNCONNECTED;
  wire NLW_if_pc_incr_carry_and_3_CI_UNCONNECTED;
  wire NLW_if_pc_incr_carry_and_3_if_fetch_for_timing_optimization1_UNCONNECTED;
  wire NLW_if_pc_incr_carry_and_3_if_pc_incr_carry1_UNCONNECTED;
  wire NLW_if_pc_incr_carry_and_3_lopt_UNCONNECTED;
  wire NLW_jump_logic_I1_ex_op1_zero_UNCONNECTED;
  wire NLW_jump_logic_I1_mem_jump_taken_reg_UNCONNECTED;
  wire NLW_mem_PipeRun_carry_and_mem_wait_on_ready_N_UNCONNECTED;
  wire NLW_mem_wait_on_ready_N_carry_or_lopt_UNCONNECTED;
  wire NLW_mem_wait_on_ready_N_carry_or_mem_databus_ready_UNCONNECTED;
  wire NLW_mem_wait_on_ready_N_carry_or_mem_wait_on_ready_N_UNCONNECTED;

  assign I1_0 = \^Q [1];
  assign Q[1] = \^Q [1];
  assign lopt_10 = lopt_18;
  assign lopt_11 = lopt_19;
  assign lopt_14 = lopt_6;
  assign lopt_17 = lopt_9;
  assign lopt_4 = lopt_12;
  assign lopt_5 = lopt_13;
  assign lopt_7 = lopt_15;
  assign lopt_8 = lopt_16;
  assign mb_halted_1_reg[152:150] = \^mb_halted_1_reg [152:150];
  assign mb_halted_1_reg[131:120] = \^mb_halted_1_reg [131:120];
  assign mb_halted_1_reg[117:104] = \^mb_halted_1_reg [117:104];
  assign mb_halted_1_reg[102:82] = \^mb_halted_1_reg [102:82];
  assign mb_halted_1_reg[69:68] = \^mb_halted_1_reg [69:68];
  assign mb_halted_1_reg[33:2] = \^mb_halted_1_reg [33:2];
  assign mb_halted_1_reg[0] = \^mb_halted_1_reg [0];
  assign reset_bool_for_rst = sync_reset;
  assign use_Reg_Neg_S_reg = of_PipeRun_for_ce;
  FDRE #(
    .INIT(1'b0)) 
    Dbg_Clean_Stop_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(Dbg_Clean_Stop0),
        .Q(dbg_clean_stop),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \EX_ALU_Op_reg[0] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(PreFetch_Buffer_I1_n_173),
        .Q(\MEM_DataBus_Addr_reg[9]_0 [1]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \EX_ALU_Op_reg[1] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(PreFetch_Buffer_I1_n_174),
        .Q(\MEM_DataBus_Addr_reg[9]_0 [0]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    EX_CMP_Op_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(EX_CMP_Op106_out),
        .Q(ex_cmp_op),
        .R(reset_bool_for_rst));
  LUT5 #(
    .INIT(32'hFF80FFFF)) 
    \EX_Op2[0]_i_9 
       (.I0(wb_exception),
        .I1(\^Q [0]),
        .I2(\^Q [1]),
        .I3(\Performace_Debug_Control.dbg_freeze_nohalt_reg ),
        .I4(of_read_imm_reg_ii),
        .O(\EX_Op2[0]_i_9_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    EX_SWAP_BYTE_Instr_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(p_2_in),
        .Q(ex_swap_byte_instr),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    EX_SWAP_Instr_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(EX_SWAP_Instr),
        .Q(ex_swap_instr),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Sext_Op_reg[0] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(EX_Sext_Op[0]),
        .Q(\Using_FPGA.Native_6 [1]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Sext_Op_reg[1] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(EX_Sext_Op[1]),
        .Q(\Using_FPGA.Native_6 [0]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Shift_Op_reg[0] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_imm_data[9]),
        .Q(ex_shift_op[0]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Shift_Op_reg[1] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_imm_data[10]),
        .Q(ex_shift_op[1]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    EX_Unsigned_Op_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(EX_Unsigned_Op105_out),
        .Q(ex_unsigned_op),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    EX_Use_Carry_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(PreFetch_Buffer_I1_n_207),
        .Q(ex_use_carry),
        .R(reset_bool_for_rst));
  LUT5 #(
    .INIT(32'h00000001)) 
    IFetch_INST_0_i_1
       (.I0(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .I1(\^mb_halted_1_reg [152]),
        .I2(reset_bool_for_rst),
        .I3(IFetch_INST_0_i_2_n_0),
        .I4(ex_mbar_sleep),
        .O(if_fetch_without_full_or_jump));
  LUT5 #(
    .INIT(32'h20202000)) 
    IFetch_INST_0_i_2
       (.I0(ex_valid_reg_0),
        .I1(ex_jump_hold),
        .I2(ex_mbar_decode),
        .I3(ex_first_cycle),
        .I4(ex_mbar_stall_no_sleep_1),
        .O(IFetch_INST_0_i_2_n_0));
  LUT4 #(
    .INIT(16'hEAAA)) 
    \LOCKSTEP_Master_Out[7]_INST_0 
       (.I0(\Performace_Debug_Control.dbg_freeze_nohalt_reg ),
        .I1(\^Q [1]),
        .I2(\^Q [0]),
        .I3(wb_exception),
        .O(\^LOCKSTEP_Master_Out [0]));
  FDRE #(
    .INIT(1'b0)) 
    MEM_DataBus_Access_reg
       (.C(Clk),
        .CE(1'b1),
        .D(\Using_FPGA_2.ex_load_store_instr_Inst_n_3 ),
        .Q(mem_databus_access),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[0] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\EX_Op2_reg[0]_0 [41]),
        .Q(\^mb_halted_1_reg [97]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[10] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\EX_Op2_reg[0]_0 [31]),
        .Q(\^mb_halted_1_reg [87]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[11] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\EX_Op2_reg[0]_0 [30]),
        .Q(\^mb_halted_1_reg [86]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[12] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\EX_Op2_reg[0]_0 [29]),
        .Q(\^mb_halted_1_reg [85]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[13] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\EX_Op2_reg[0]_0 [28]),
        .Q(\^mb_halted_1_reg [84]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[14] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\EX_Op2_reg[0]_0 [27]),
        .Q(\^mb_halted_1_reg [83]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[15] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\EX_Op2_reg[0]_0 [26]),
        .Q(\^mb_halted_1_reg [82]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[1] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\EX_Op2_reg[0]_0 [40]),
        .Q(\^mb_halted_1_reg [96]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[28] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\EX_Op2_reg[0]_0 [13]),
        .Q(\^mb_halted_1_reg [69]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[29] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\EX_Op2_reg[0]_0 [12]),
        .Q(\^mb_halted_1_reg [68]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[2] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\EX_Op2_reg[0]_0 [39]),
        .Q(\^mb_halted_1_reg [95]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[3] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\EX_Op2_reg[0]_0 [38]),
        .Q(\^mb_halted_1_reg [94]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[4] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\EX_Op2_reg[0]_0 [37]),
        .Q(\^mb_halted_1_reg [93]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[5] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\EX_Op2_reg[0]_0 [36]),
        .Q(\^mb_halted_1_reg [92]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[6] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\EX_Op2_reg[0]_0 [35]),
        .Q(\^mb_halted_1_reg [91]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[7] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\EX_Op2_reg[0]_0 [34]),
        .Q(\^mb_halted_1_reg [90]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[8] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\EX_Op2_reg[0]_0 [33]),
        .Q(\^mb_halted_1_reg [89]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[9] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\EX_Op2_reg[0]_0 [32]),
        .Q(\^mb_halted_1_reg [88]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    MEM_DataBus_Write_reg
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\^mb_halted_1_reg [102]),
        .Q(\^mem_databus_write ),
        .R(reset_bool_for_rst));
  FDSE #(
    .INIT(1'b1)) 
    MEM_Sel_MEM_Res_I_reg
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\Using_FPGA_2.ex_is_load_instr_Inst_n_3 ),
        .Q(MEM_Sel_MEM_Res),
        .S(reset_bool_for_rst));
  LUT5 #(
    .INIT(32'h000002F2)) 
    M_AXI_DP_ARVALID_i_i_1
       (.I0(new_request),
        .I1(\^mem_databus_write ),
        .I2(M_AXI_DP_AWVALID_i_reg_0[0]),
        .I3(M_AXI_DP_ARREADY),
        .I4(reset_bool_for_rst),
        .O(M_AXI_DP_ARVALID_i_reg));
  LUT5 #(
    .INIT(32'h000008F8)) 
    M_AXI_DP_AWVALID_i_i_1
       (.I0(\^mem_databus_write ),
        .I1(new_request),
        .I2(M_AXI_DP_AWVALID_i_reg_0[2]),
        .I3(M_AXI_DP_AWREADY),
        .I4(reset_bool_for_rst),
        .O(M_AXI_DP_AWVALID_i_reg));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT3 #(
    .INIT(8'h02)) 
    M_AXI_DP_AWVALID_i_i_2
       (.I0(mem_databus_access),
        .I1(active_access_d1),
        .I2(DReady),
        .O(new_request));
  LUT5 #(
    .INIT(32'h000008F8)) 
    M_AXI_DP_WVALID_i_i_1
       (.I0(\^mem_databus_write ),
        .I1(new_request),
        .I2(M_AXI_DP_AWVALID_i_reg_0[1]),
        .I3(M_AXI_DP_WREADY),
        .I4(reset_bool_for_rst),
        .O(M_AXI_DP_WVALID_i_reg));
  PC_Module_gti PC_Module_I
       (.CI(NLW_PC_Module_I_CI_UNCONNECTED),
        .Clk(Clk),
        .D(D),
        .E(\Use_MuxCy[3].OF_Piperun_Stage_n_1 ),
        .\EX_Op1_reg[10] (\EX_Op1_reg[10] ),
        .\EX_Op1_reg[11] (\EX_Op1_reg[11] ),
        .\EX_Op1_reg[12] (\EX_Op1_reg[12] ),
        .\EX_Op1_reg[13] (\EX_Op1_reg[13] ),
        .\EX_Op1_reg[14] (\EX_Op1_reg[14] ),
        .\EX_Op1_reg[15] (\EX_Op1_reg[15] ),
        .\EX_Op1_reg[16] (\EX_Op1_reg[16] ),
        .\EX_Op1_reg[17] (\EX_Op1_reg[17] ),
        .\EX_Op1_reg[18] (\EX_Op1_reg[18] ),
        .\EX_Op1_reg[19] (\EX_Op1_reg[19] ),
        .\EX_Op1_reg[1] (\EX_Op1_reg[1] ),
        .\EX_Op1_reg[20] (\EX_Op1_reg[20] ),
        .\EX_Op1_reg[21] (\EX_Op1_reg[21] ),
        .\EX_Op1_reg[22] (\EX_Op1_reg[22] ),
        .\EX_Op1_reg[23] (\EX_Op1_reg[23] ),
        .\EX_Op1_reg[24] (\EX_Op1_reg[24] ),
        .\EX_Op1_reg[25] (\EX_Op1_reg[25] ),
        .\EX_Op1_reg[26] (\EX_Op1_reg[26] ),
        .\EX_Op1_reg[27] (\EX_Op1_reg[27] ),
        .\EX_Op1_reg[2] (\EX_Op1_reg[2] ),
        .\EX_Op1_reg[31] (\EX_Op1_reg[31] ),
        .\EX_Op1_reg[3] (\EX_Op1_reg[3] ),
        .\EX_Op1_reg[4] (\EX_Op1_reg[4] ),
        .\EX_Op1_reg[5] (\EX_Op1_reg[5] ),
        .\EX_Op1_reg[6] (\EX_Op1_reg[6] ),
        .\EX_Op1_reg[7] (\EX_Op1_reg[7] ),
        .\EX_Op1_reg[8] (\EX_Op1_reg[8] ),
        .\EX_Op1_reg[9] (\EX_Op1_reg[9] ),
        .IReady(IReady),
        .IReady_1(IReady_1),
        .O(O87_out),
        .O56_out(O56_out),
        .\Performace_Debug_Control.dbg_freeze_nohalt_reg (\Performace_Debug_Control.dbg_freeze_nohalt_reg ),
        .Q({p_1_in3_in,PC_Module_I_n_34}),
        .\Serial_Dbg_Intf.if_debug_ready_i_reg (\Serial_Dbg_Intf.if_debug_ready_i_reg ),
        .\Using_FPGA.Native (\Using_FPGA.Native_8 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_3 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_2 (PreFetch_Buffer_I1_n_157),
        .\Using_FPGA.Native_3 (IF_PC_Write),
        .if_missed_fetch_reg(PC_Module_I_n_35),
        .\if_pc_reg[0]_0 (\^mb_halted_1_reg [149:118]),
        .\if_pc_reg[10]_0 (O49_out),
        .\if_pc_reg[11]_0 (O51_out),
        .\if_pc_reg[12]_0 (O53_out),
        .\if_pc_reg[13]_0 (O55_out),
        .\if_pc_reg[14]_0 (O57_out),
        .\if_pc_reg[15]_0 (O59_out),
        .\if_pc_reg[16]_0 (O61_out),
        .\if_pc_reg[17]_0 (O63_out),
        .\if_pc_reg[18]_0 (O65_out),
        .\if_pc_reg[19]_0 (O67_out),
        .\if_pc_reg[1]_0 (O31_out),
        .\if_pc_reg[20]_0 (O69_out),
        .\if_pc_reg[21]_0 (O71_out),
        .\if_pc_reg[22]_0 (O73_out),
        .\if_pc_reg[23]_0 (O75_out),
        .\if_pc_reg[24]_0 (O77_out),
        .\if_pc_reg[25]_0 (O79_out),
        .\if_pc_reg[26]_0 (O81_out),
        .\if_pc_reg[27]_0 (O83_out),
        .\if_pc_reg[28]_0 (O85_out),
        .\if_pc_reg[2]_0 (O33_out),
        .\if_pc_reg[3]_0 (O35_out),
        .\if_pc_reg[4]_0 (O37_out),
        .\if_pc_reg[5]_0 (O39_out),
        .\if_pc_reg[6]_0 (O41_out),
        .\if_pc_reg[7]_0 (O43_out),
        .\if_pc_reg[8]_0 (O45_out),
        .\if_pc_reg[9]_0 (O47_out),
        .if_pre_buffer_addr(if_pre_buffer_addr),
        .if_sel_input(if_sel_input),
        .lopt(\^lopt_7 ),
        .lopt_1(\^lopt_8 ),
        .lopt_2(\^lopt_9 ),
        .lopt_3(\^lopt_10 ),
        .of_pause_reg(of_PipeRun_for_ce),
        .sync_reset(reset_bool_for_rst),
        .wb_exception(wb_exception),
        .\wb_exception_kind_i_reg[28] (\^Q ));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \Performace_Debug_Control.dbg_brki_hit_i_1 
       (.I0(wb_exception),
        .I1(\^Q [0]),
        .I2(\^Q [1]),
        .O(wb_Halted));
  LUT5 #(
    .INIT(32'hFFFFEAAA)) 
    \Performace_Debug_Control.dbg_state_nohalt_i_3 
       (.I0(dbg_halt_reset_mode_reg),
        .I1(wb_exception),
        .I2(\^Q [0]),
        .I3(\^Q [1]),
        .I4(reset_bool_for_rst),
        .O(\Performace_Debug_Control.dbg_state_nohalt_reg ));
  LUT4 #(
    .INIT(16'hEAAA)) 
    \Performace_Debug_Control.dbg_stop_i_i_1 
       (.I0(reset_bool_for_rst),
        .I1(\^Q [1]),
        .I2(\^Q [0]),
        .I3(wb_exception),
        .O(dbg_stop_i));
  LUT3 #(
    .INIT(8'h0E)) 
    \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_i_5 
       (.I0(wb_Halted),
        .I1(dbg_halt_reset_mode_reg),
        .I2(reset_bool_for_rst),
        .O(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ));
  PreFetch_Buffer_gti PreFetch_Buffer_I1
       (.Clk(Clk),
        .D({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1]}),
        .D222_out(D222_out),
        .D224_out(D224_out),
        .D225_out(D225_out),
        .D229_out(D229_out),
        .Dbg_Clean_Stop0(Dbg_Clean_Stop0),
        .E(E),
        .\EX_ALU_Op_reg[0] ({PreFetch_Buffer_I1_n_173,PreFetch_Buffer_I1_n_174}),
        .\EX_Branch_CMP_Op1_reg[0] (\EX_Branch_CMP_Op1_reg[0] ),
        .\EX_Branch_CMP_Op1_reg[30] (\EX_Branch_CMP_Op1_reg[30] ),
        .\EX_Branch_CMP_Op1_reg[30]_0 (\EX_Branch_CMP_Op1_reg[30]_0 ),
        .\EX_Branch_CMP_Op1_reg[31] (\EX_Branch_CMP_Op1_reg[31] ),
        .\EX_Branch_CMP_Op1_reg[31]_0 (\EX_Branch_CMP_Op1_reg[31]_0 ),
        .EX_CMP_Op106_out(EX_CMP_Op106_out),
        .EX_Is_Div_Instr(EX_Is_Div_Instr),
        .\EX_Op1_reg[0] (PreFetch_Buffer_I1_n_157),
        .\EX_Op1_reg[28] (\EX_Op1_reg[28] ),
        .\EX_Op1_reg[29] (\EX_Op1_reg[29] ),
        .\EX_Op1_reg[30] (\EX_Op1_reg[30] ),
        .\EX_Op2_reg[0] (\EX_Op2_reg[0] ),
        .\EX_Op3_reg[0] (\EX_Op3_reg[0] ),
        .\EX_Op3_reg[31] (\EX_Op3_reg[31] ),
        .\EX_Op3_reg[31]_0 (\EX_Op3_reg[31]_0 ),
        .\EX_Op3_reg[31]_1 (\EX_Op3_reg[31]_1 ),
        .\EX_Op3_reg[31]_2 (\EX_Op3_reg[31]_2 ),
        .EX_SWAP_Instr(EX_SWAP_Instr),
        .\EX_Sext_Op_reg[0] ({EX_Sext_Op[0],EX_Sext_Op[1]}),
        .EX_Unsigned_Op105_out(EX_Unsigned_Op105_out),
        .EX_Use_Carry_reg(PreFetch_Buffer_I1_n_207),
        .GPR_Op1(GPR_Op1),
        .GPR_Op2(GPR_Op2),
        .GPR_Op3(GPR_Op3),
        .I0(I0),
        .I041_out(I041_out),
        .I1(I1),
        .I139_out(I139_out),
        .I4(I4),
        .I5(I5),
        .IReady(IReady),
        .IReady_1(IReady_1),
        .\Performace_Debug_Control.dbg_freeze_nohalt_reg (\Performace_Debug_Control.dbg_freeze_nohalt_reg ),
        .\Performace_Debug_Control.dbg_state_nohalt_reg (\^mb_halted_1_reg [152]),
        .\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg (\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .\Performace_Debug_Control.ex_brki_hit_reg (\Performace_Debug_Control.ex_brki_hit_reg ),
        .Q(\^Q ),
        .\Serial_Dbg_Intf.control_reg_reg[8] (\Serial_Dbg_Intf.control_reg_reg[8] ),
        .\Serial_Dbg_Intf.if_debug_ready_i_reg (PC_Module_I_n_35),
        .\Serial_Dbg_Intf.if_debug_ready_i_reg_0 (\Serial_Dbg_Intf.if_debug_ready_i_reg ),
        .\Serial_Dbg_Intf.status_reg_reg[25] (\^mb_halted_1_reg [151:150]),
        .\Using_FPGA.Native (if_sel_input),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_10 (\Using_FPGA.Native_32 ),
        .\Using_FPGA.Native_11 (\Using_FPGA.Native_34 ),
        .\Using_FPGA.Native_12 ({D[31],D[3:1]}),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_3 ),
        .\Using_FPGA.Native_3 (PreFetch_Buffer_I1_n_176),
        .\Using_FPGA.Native_4 (PreFetch_Buffer_I1_n_191),
        .\Using_FPGA.Native_5 (PreFetch_Buffer_I1_n_201),
        .\Using_FPGA.Native_6 (\Using_FPGA.Native_7 ),
        .\Using_FPGA.Native_7 (\Using_FPGA.Native_10 ),
        .\Using_FPGA.Native_8 (\Using_FPGA.Native_23 ),
        .\Using_FPGA.Native_9 (\Using_FPGA.Native_28 ),
        .\WB_MEM_Result_reg[0] (\^mb_halted_1_reg [26]),
        .\WB_MEM_Result_reg[10] (\^mb_halted_1_reg [16]),
        .\WB_MEM_Result_reg[11] (\^mb_halted_1_reg [15]),
        .\WB_MEM_Result_reg[12] (\^mb_halted_1_reg [14]),
        .\WB_MEM_Result_reg[13] (\^mb_halted_1_reg [13]),
        .\WB_MEM_Result_reg[14] (\^mb_halted_1_reg [12]),
        .\WB_MEM_Result_reg[15] (\^mb_halted_1_reg [11]),
        .\WB_MEM_Result_reg[16] (\EX_Op2_reg[0]_0 [7:0]),
        .\WB_MEM_Result_reg[1] (\^mb_halted_1_reg [25]),
        .\WB_MEM_Result_reg[2] (\^mb_halted_1_reg [24]),
        .\WB_MEM_Result_reg[3] (\^mb_halted_1_reg [23]),
        .\WB_MEM_Result_reg[4] (\^mb_halted_1_reg [22]),
        .\WB_MEM_Result_reg[5] (\^mb_halted_1_reg [21]),
        .\WB_MEM_Result_reg[6] (\^mb_halted_1_reg [20]),
        .\WB_MEM_Result_reg[7] (\^mb_halted_1_reg [19]),
        .\WB_MEM_Result_reg[8] (\^mb_halted_1_reg [18]),
        .\WB_MEM_Result_reg[9] (\^mb_halted_1_reg [17]),
        .dbg_stop_i(dbg_stop_i),
        .ex_MSR(ex_MSR),
        .ex_alu_sel_logic_i103_out(ex_alu_sel_logic_i103_out),
        .ex_branch_with_delayslot_reg(PreFetch_Buffer_I1_n_169),
        .ex_branch_with_delayslot_reg_0(\Using_FPGA.Native_1 ),
        .ex_enable_alu_i_reg(PreFetch_Buffer_I1_n_196),
        .ex_enable_sext_shift_i0(ex_enable_sext_shift_i0),
        .\ex_gpr_write_addr_reg[0] ({\ex_gpr_write_addr_reg_n_0_[0] ,I2}),
        .\ex_gpr_write_addr_reg[2] (of_gpr_op3_rd_addr[2]),
        .\ex_gpr_write_addr_reg[3] (of_gpr_op3_rd_addr[3]),
        .\ex_gpr_write_addr_reg[4] (of_gpr_op3_rd_addr[4]),
        .\ex_gpr_write_addr_reg[4]_0 (\ex_gpr_write_addr_reg_n_0_[4] ),
        .ex_gpr_write_dbg(ex_gpr_write_dbg),
        .ex_gpr_write_dbg_reg(PreFetch_Buffer_I1_n_206),
        .ex_gpr_write_reg(PreFetch_Buffer_I1_n_204),
        .ex_gpr_write_reg_0(ex_gpr_write_reg_n_0),
        .\ex_instr_reg[11] ({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4],of_imm_data[0],of_imm_data[1],of_imm_data[2],of_imm_data[3],of_imm_data[4],of_imm_data[5],of_imm_data[6],of_imm_data[7],of_imm_data[8],of_imm_data[9],of_imm_data[10],of_imm_data[11],of_imm_data[12],of_imm_data[13],of_imm_data[14],of_imm_data[15]}),
        .ex_is_div_instr_I_reg(PreFetch_Buffer_I1_n_205),
        .ex_is_multi_or_load_instr(ex_is_multi_or_load_instr),
        .ex_is_multi_or_load_instr0(ex_is_multi_or_load_instr0),
        .ex_jump(ex_jump),
        .ex_jump_nodelay(ex_jump_nodelay),
        .ex_load_alu_carry97_out(ex_load_alu_carry97_out),
        .ex_load_shift_carry0(ex_load_shift_carry0),
        .ex_mbar_decode(ex_mbar_decode),
        .ex_mbar_decode_cmb(ex_mbar_decode_cmb),
        .ex_mbar_is_sleep(ex_mbar_is_sleep),
        .ex_mbar_is_sleep_cmb(ex_mbar_is_sleep_cmb),
        .ex_move_to_MSR_instr93_out(ex_move_to_MSR_instr93_out),
        .ex_op1_cmp_eq(ex_op1_cmp_eq),
        .ex_op1_cmp_eq1(ex_op1_cmp_eq1),
        .ex_op1_cmp_eq_n5_out(ex_op1_cmp_eq_n5_out),
        .ex_sel_alu_i0(ex_sel_alu_i0),
        .ex_sel_alu_i_reg(ex_sel_alu_i_reg_0),
        .ex_sel_alu_i_reg_0(ex_sel_alu_i_reg_1),
        .ex_sel_alu_i_reg_1(ex_sel_alu_i_reg_2),
        .ex_sel_alu_i_reg_10(ex_sel_alu_i_reg_11),
        .ex_sel_alu_i_reg_11(ex_sel_alu_i_reg_12),
        .ex_sel_alu_i_reg_12(ex_sel_alu_i_reg_13),
        .ex_sel_alu_i_reg_13(ex_sel_alu_i_reg_14),
        .ex_sel_alu_i_reg_14(EX_Fwd[15]),
        .ex_sel_alu_i_reg_15(EX_Fwd[14]),
        .ex_sel_alu_i_reg_16(EX_Fwd[13]),
        .ex_sel_alu_i_reg_17(EX_Fwd[12]),
        .ex_sel_alu_i_reg_18(EX_Fwd[11]),
        .ex_sel_alu_i_reg_19(EX_Fwd[10]),
        .ex_sel_alu_i_reg_2(ex_sel_alu_i_reg_3),
        .ex_sel_alu_i_reg_20(EX_Fwd[9]),
        .ex_sel_alu_i_reg_21(EX_Fwd[8]),
        .ex_sel_alu_i_reg_22(EX_Fwd[7]),
        .ex_sel_alu_i_reg_23(EX_Fwd[6]),
        .ex_sel_alu_i_reg_24(EX_Fwd[5]),
        .ex_sel_alu_i_reg_25(EX_Fwd[4]),
        .ex_sel_alu_i_reg_26(EX_Fwd[3]),
        .ex_sel_alu_i_reg_27(EX_Fwd[2]),
        .ex_sel_alu_i_reg_28(EX_Fwd[1]),
        .ex_sel_alu_i_reg_29(EX_Fwd[0]),
        .ex_sel_alu_i_reg_3(ex_sel_alu_i_reg_4),
        .ex_sel_alu_i_reg_4(ex_sel_alu_i_reg_5),
        .ex_sel_alu_i_reg_5(ex_sel_alu_i_reg_6),
        .ex_sel_alu_i_reg_6(ex_sel_alu_i_reg_7),
        .ex_sel_alu_i_reg_7(ex_sel_alu_i_reg_8),
        .ex_sel_alu_i_reg_8(ex_sel_alu_i_reg_9),
        .ex_sel_alu_i_reg_9(ex_sel_alu_i_reg_10),
        .ex_set_bip(ex_set_bip),
        .ex_valid_reg(ex_valid),
        .ex_valid_reg_0(\Using_FPGA.Native_i_13_n_0 ),
        .force12_out(force12_out),
        .force_Val10_out(force_Val10_out),
        .force_Val2_N_reg(PreFetch_Buffer_I1_n_172),
        .if_fetch_for_timing_optimization1(if_fetch_for_timing_optimization1),
        .if_fetch_in_progress(if_fetch_in_progress),
        .if_fetch_in_progress_reg(PreFetch_Buffer_I1_n_203),
        .if_missed_fetch_reg(if_missed_fetch),
        .if_pre_buffer_addr(if_pre_buffer_addr),
        .\imm_reg_reg[0] (\imm_reg_reg[0] ),
        .in({Y[0],Y[1],Y[2],Y[3],Y[4],Y[5],Y[6],Y[7],Y[8],Y[9],Y[10],Y[21],Y[22],Y[23],Y[24],Y[25],Y[26],Y[27],Y[28],Y[29],Y[30],Y[31],in,Y[11],Y[12],Y[13],Y[14],Y[15],Y[16],Y[17],Y[18],Y[19],Y[20]}),
        .in0(if_fetch_without_full_or_jump),
        .mem_MSR(mem_MSR),
        .mem_ex_result(mem_ex_result),
        .mem_gpr_write(mem_gpr_write),
        .\mem_gpr_write_addr_reg[0] ({mem_gpr_write_addr[0],mem_gpr_write_addr[1],mem_gpr_write_addr[2],mem_gpr_write_addr[3],mem_gpr_write_addr[4]}),
        .mem_is_msr_instr_reg(mem_sel_msr),
        .mem_is_multi_or_load_instr(mem_is_multi_or_load_instr),
        .mem_valid_instr(mem_valid_instr),
        .mem_valid_reg(\Using_FPGA.Native_i_16_n_0 ),
        .of_Sel_SPR_MSR1(of_Sel_SPR_MSR1),
        .of_Sel_SPR_MSR88_out(of_Sel_SPR_MSR88_out),
        .of_instr({of_instr[0],of_instr[1],of_instr[2],of_instr[3],of_instr[4],of_instr[5]}),
        .of_op1_sel_spr(of_op1_sel_spr),
        .of_pause_reg(of_PipeRun_for_ce),
        .of_pipe_ctrl_reg0(of_pipe_ctrl_reg0),
        .of_predecode({of_predecode[1],of_predecode[2],of_predecode[3],of_predecode[4],of_predecode[5],of_predecode[6],of_predecode[7],of_predecode[8],of_predecode[9],of_predecode[10]}),
        .of_read_ex_write_op2_conflict_part1(of_read_ex_write_op2_conflict_part1),
        .of_read_ex_write_op2_conflict_part2(of_read_ex_write_op2_conflict_part2),
        .of_read_imm_reg_ii_reg(PreFetch_Buffer_I1_n_189),
        .of_read_mem_write_op2_conflict_part1(of_read_mem_write_op2_conflict_part1),
        .of_read_mem_write_op2_conflict_part2(of_read_mem_write_op2_conflict_part2),
        .of_valid(of_valid),
        .out(if_fetch_without_full_or_jump),
        .p_2_in(p_2_in),
        .sync_reset(reset_bool_for_rst),
        .use_Reg_Neg_DI1_out(use_Reg_Neg_DI1_out),
        .use_Reg_Neg_S3_out(use_Reg_Neg_S3_out),
        .use_Reg_Neg_S_reg(PreFetch_Buffer_I1_n_153),
        .use_Reg_Neg_S_reg_0(PreFetch_Buffer_I1_n_154),
        .wb_Halted(wb_Halted),
        .wb_exception(wb_exception),
        .wb_exception_i_reg(\EX_Op2[0]_i_9_n_0 ),
        .\wb_exception_kind_i_reg[31] (\^mb_halted_1_reg [3]),
        .\wb_exception_kind_i_reg[31]_0 (\^mb_halted_1_reg [4]),
        .\wb_exception_kind_i_reg[31]_1 (\^mb_halted_1_reg [5]),
        .\wb_exception_kind_i_reg[31]_2 (\^mb_halted_1_reg [6]),
        .\wb_exception_kind_i_reg[31]_3 (\^mb_halted_1_reg [7]),
        .\wb_exception_kind_i_reg[31]_4 (\^mb_halted_1_reg [8]),
        .\wb_exception_kind_i_reg[31]_5 (\^mb_halted_1_reg [9]),
        .\wb_exception_kind_i_reg[31]_6 (\^mb_halted_1_reg [10]),
        .\wb_gpr_write_addr_reg[0] (\^mb_halted_1_reg [31:27]),
        .wb_reset_reg(\Using_FPGA.Native_i_17_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    Sleep_INST_0
       (.I0(\^Sleep_Decode ),
        .I1(Sleep_Out),
        .O(Sleep));
  LUT3 #(
    .INIT(8'h70)) 
    Trace_Exception_Taken_INST_0
       (.I0(\^Q [0]),
        .I1(\^Q [1]),
        .I2(wb_exception),
        .O(\^mb_halted_1_reg [2]));
  LUT4 #(
    .INIT(16'hEAAA)) 
    Trace_MB_Halted_INST_0
       (.I0(\Performace_Debug_Control.dbg_state_nohalt_reg_0 ),
        .I1(\^Q [1]),
        .I2(\^Q [0]),
        .I3(wb_exception),
        .O(\^mb_halted_1_reg [152]));
  LUT6 #(
    .INIT(64'hB8B8B8B8B8B8BBB8)) 
    \Trace_New_Reg_Value[0]_INST_0 
       (.I0(\Using_FPGA.Native_9 [23]),
        .I1(\^mb_halted_1_reg [2]),
        .I2(\WB_MEM_Result_reg[0] [23]),
        .I3(\Use_DLMB.wb_dlmb_valid_read_data_reg[24] ),
        .I4(wb_byte_access),
        .I5(wb_doublet_access),
        .O(\^mb_halted_1_reg [26]));
  LUT6 #(
    .INIT(64'hB8B8B8B8B8B8BBB8)) 
    \Trace_New_Reg_Value[10]_INST_0 
       (.I0(\Using_FPGA.Native_9 [13]),
        .I1(\^mb_halted_1_reg [2]),
        .I2(\WB_MEM_Result_reg[0] [13]),
        .I3(\Use_DLMB.wb_dlmb_valid_read_data_reg[18] ),
        .I4(wb_byte_access),
        .I5(wb_doublet_access),
        .O(\^mb_halted_1_reg [16]));
  LUT6 #(
    .INIT(64'hB8B8B8B8B8B8BBB8)) 
    \Trace_New_Reg_Value[11]_INST_0 
       (.I0(\Using_FPGA.Native_9 [12]),
        .I1(\^mb_halted_1_reg [2]),
        .I2(\WB_MEM_Result_reg[0] [12]),
        .I3(\Use_DLMB.wb_dlmb_valid_read_data_reg[19] ),
        .I4(wb_byte_access),
        .I5(wb_doublet_access),
        .O(\^mb_halted_1_reg [15]));
  LUT6 #(
    .INIT(64'hB8B8B8B8B8B8BBB8)) 
    \Trace_New_Reg_Value[12]_INST_0 
       (.I0(\Using_FPGA.Native_9 [11]),
        .I1(\^mb_halted_1_reg [2]),
        .I2(\WB_MEM_Result_reg[0] [11]),
        .I3(\Use_DLMB.wb_dlmb_valid_read_data_reg[20] ),
        .I4(wb_byte_access),
        .I5(wb_doublet_access),
        .O(\^mb_halted_1_reg [14]));
  LUT6 #(
    .INIT(64'hB8B8B8B8B8B8BBB8)) 
    \Trace_New_Reg_Value[13]_INST_0 
       (.I0(\Using_FPGA.Native_9 [10]),
        .I1(\^mb_halted_1_reg [2]),
        .I2(\WB_MEM_Result_reg[0] [10]),
        .I3(\Use_DLMB.wb_dlmb_valid_read_data_reg[21] ),
        .I4(wb_byte_access),
        .I5(wb_doublet_access),
        .O(\^mb_halted_1_reg [13]));
  LUT6 #(
    .INIT(64'hB8B8B8B8B8B8BBB8)) 
    \Trace_New_Reg_Value[14]_INST_0 
       (.I0(\Using_FPGA.Native_9 [9]),
        .I1(\^mb_halted_1_reg [2]),
        .I2(\WB_MEM_Result_reg[0] [9]),
        .I3(\Use_DLMB.wb_dlmb_valid_read_data_reg[22] ),
        .I4(wb_byte_access),
        .I5(wb_doublet_access),
        .O(\^mb_halted_1_reg [12]));
  LUT6 #(
    .INIT(64'hB8B8B8B8B8B8BBB8)) 
    \Trace_New_Reg_Value[15]_INST_0 
       (.I0(\Using_FPGA.Native_9 [8]),
        .I1(\^mb_halted_1_reg [2]),
        .I2(\WB_MEM_Result_reg[0] [8]),
        .I3(\Use_DLMB.wb_dlmb_valid_read_data_reg[23] ),
        .I4(wb_byte_access),
        .I5(wb_doublet_access),
        .O(\^mb_halted_1_reg [11]));
  LUT6 #(
    .INIT(64'hB8B8B8B8B8B8BBB8)) 
    \Trace_New_Reg_Value[1]_INST_0 
       (.I0(\Using_FPGA.Native_9 [22]),
        .I1(\^mb_halted_1_reg [2]),
        .I2(\WB_MEM_Result_reg[0] [22]),
        .I3(\Use_DLMB.wb_dlmb_valid_read_data_reg[25] ),
        .I4(wb_byte_access),
        .I5(wb_doublet_access),
        .O(\^mb_halted_1_reg [25]));
  LUT6 #(
    .INIT(64'hEAFFEAFFEAFF2A00)) 
    \Trace_New_Reg_Value[24]_INST_0 
       (.I0(\Using_FPGA.Native_9 [7]),
        .I1(\^Q [0]),
        .I2(\^Q [1]),
        .I3(wb_exception),
        .I4(\WB_MEM_Result_reg[0] [7]),
        .I5(\wb_read_lsb_sel_reg[1]_6 ),
        .O(\^mb_halted_1_reg [10]));
  LUT6 #(
    .INIT(64'hEAFFEAFFEAFF2A00)) 
    \Trace_New_Reg_Value[25]_INST_0 
       (.I0(\Using_FPGA.Native_9 [6]),
        .I1(\^Q [0]),
        .I2(\^Q [1]),
        .I3(wb_exception),
        .I4(\WB_MEM_Result_reg[0] [6]),
        .I5(\wb_read_lsb_sel_reg[1]_5 ),
        .O(\^mb_halted_1_reg [9]));
  LUT6 #(
    .INIT(64'hEAFFEAFFEAFF2A00)) 
    \Trace_New_Reg_Value[26]_INST_0 
       (.I0(\Using_FPGA.Native_9 [5]),
        .I1(\^Q [0]),
        .I2(\^Q [1]),
        .I3(wb_exception),
        .I4(\WB_MEM_Result_reg[0] [5]),
        .I5(\wb_read_lsb_sel_reg[1]_4 ),
        .O(\^mb_halted_1_reg [8]));
  LUT6 #(
    .INIT(64'hEAFFEAFFEAFF2A00)) 
    \Trace_New_Reg_Value[27]_INST_0 
       (.I0(\Using_FPGA.Native_9 [4]),
        .I1(\^Q [0]),
        .I2(\^Q [1]),
        .I3(wb_exception),
        .I4(\WB_MEM_Result_reg[0] [4]),
        .I5(\wb_read_lsb_sel_reg[1]_3 ),
        .O(\^mb_halted_1_reg [7]));
  LUT6 #(
    .INIT(64'hEAFFEAFFEAFF2A00)) 
    \Trace_New_Reg_Value[28]_INST_0 
       (.I0(\Using_FPGA.Native_9 [3]),
        .I1(\^Q [0]),
        .I2(\^Q [1]),
        .I3(wb_exception),
        .I4(\WB_MEM_Result_reg[0] [3]),
        .I5(\wb_read_lsb_sel_reg[1]_2 ),
        .O(\^mb_halted_1_reg [6]));
  LUT6 #(
    .INIT(64'hEAFFEAFFEAFF2A00)) 
    \Trace_New_Reg_Value[29]_INST_0 
       (.I0(\Using_FPGA.Native_9 [2]),
        .I1(\^Q [0]),
        .I2(\^Q [1]),
        .I3(wb_exception),
        .I4(\WB_MEM_Result_reg[0] [2]),
        .I5(\wb_read_lsb_sel_reg[1]_1 ),
        .O(\^mb_halted_1_reg [5]));
  LUT6 #(
    .INIT(64'hB8B8B8B8B8B8BBB8)) 
    \Trace_New_Reg_Value[2]_INST_0 
       (.I0(\Using_FPGA.Native_9 [21]),
        .I1(\^mb_halted_1_reg [2]),
        .I2(\WB_MEM_Result_reg[0] [21]),
        .I3(\Use_DLMB.wb_dlmb_valid_read_data_reg[26] ),
        .I4(wb_byte_access),
        .I5(wb_doublet_access),
        .O(\^mb_halted_1_reg [24]));
  LUT6 #(
    .INIT(64'hEAFFEAFFEAFF2A00)) 
    \Trace_New_Reg_Value[30]_INST_0 
       (.I0(\Using_FPGA.Native_9 [1]),
        .I1(\^Q [0]),
        .I2(\^Q [1]),
        .I3(wb_exception),
        .I4(\WB_MEM_Result_reg[0] [1]),
        .I5(\wb_read_lsb_sel_reg[1]_0 ),
        .O(\^mb_halted_1_reg [4]));
  LUT6 #(
    .INIT(64'hEAFFEAFFEAFF2A00)) 
    \Trace_New_Reg_Value[31]_INST_0 
       (.I0(\Using_FPGA.Native_9 [0]),
        .I1(\^Q [0]),
        .I2(\^Q [1]),
        .I3(wb_exception),
        .I4(\WB_MEM_Result_reg[0] [0]),
        .I5(\wb_read_lsb_sel_reg[1] ),
        .O(\^mb_halted_1_reg [3]));
  LUT6 #(
    .INIT(64'hB8B8B8B8B8B8BBB8)) 
    \Trace_New_Reg_Value[3]_INST_0 
       (.I0(\Using_FPGA.Native_9 [20]),
        .I1(\^mb_halted_1_reg [2]),
        .I2(\WB_MEM_Result_reg[0] [20]),
        .I3(\Use_DLMB.wb_dlmb_valid_read_data_reg[27] ),
        .I4(wb_byte_access),
        .I5(wb_doublet_access),
        .O(\^mb_halted_1_reg [23]));
  LUT6 #(
    .INIT(64'hB8B8B8B8B8B8BBB8)) 
    \Trace_New_Reg_Value[4]_INST_0 
       (.I0(\Using_FPGA.Native_9 [19]),
        .I1(\^mb_halted_1_reg [2]),
        .I2(\WB_MEM_Result_reg[0] [19]),
        .I3(\Use_DLMB.wb_dlmb_valid_read_data_reg[28] ),
        .I4(wb_byte_access),
        .I5(wb_doublet_access),
        .O(\^mb_halted_1_reg [22]));
  LUT6 #(
    .INIT(64'hB8B8B8B8B8B8BBB8)) 
    \Trace_New_Reg_Value[5]_INST_0 
       (.I0(\Using_FPGA.Native_9 [18]),
        .I1(\^mb_halted_1_reg [2]),
        .I2(\WB_MEM_Result_reg[0] [18]),
        .I3(\Use_DLMB.wb_dlmb_valid_read_data_reg[29] ),
        .I4(wb_byte_access),
        .I5(wb_doublet_access),
        .O(\^mb_halted_1_reg [21]));
  LUT6 #(
    .INIT(64'hB8B8B8B8B8B8BBB8)) 
    \Trace_New_Reg_Value[6]_INST_0 
       (.I0(\Using_FPGA.Native_9 [17]),
        .I1(\^mb_halted_1_reg [2]),
        .I2(\WB_MEM_Result_reg[0] [17]),
        .I3(\Use_DLMB.wb_dlmb_valid_read_data_reg[30] ),
        .I4(wb_byte_access),
        .I5(wb_doublet_access),
        .O(\^mb_halted_1_reg [20]));
  LUT6 #(
    .INIT(64'hB8B8B8B8B8B8BBB8)) 
    \Trace_New_Reg_Value[7]_INST_0 
       (.I0(\Using_FPGA.Native_9 [16]),
        .I1(\^mb_halted_1_reg [2]),
        .I2(\WB_MEM_Result_reg[0] [16]),
        .I3(\Use_DLMB.wb_dlmb_valid_read_data_reg[31] ),
        .I4(wb_byte_access),
        .I5(wb_doublet_access),
        .O(\^mb_halted_1_reg [19]));
  LUT6 #(
    .INIT(64'hB8B8B8B8B8B8BBB8)) 
    \Trace_New_Reg_Value[8]_INST_0 
       (.I0(\Using_FPGA.Native_9 [15]),
        .I1(\^mb_halted_1_reg [2]),
        .I2(\WB_MEM_Result_reg[0] [15]),
        .I3(\Use_DLMB.wb_dlmb_valid_read_data_reg[16] ),
        .I4(wb_byte_access),
        .I5(wb_doublet_access),
        .O(\^mb_halted_1_reg [18]));
  LUT6 #(
    .INIT(64'hB8B8B8B8B8B8BBB8)) 
    \Trace_New_Reg_Value[9]_INST_0 
       (.I0(\Using_FPGA.Native_9 [14]),
        .I1(\^mb_halted_1_reg [2]),
        .I2(\WB_MEM_Result_reg[0] [14]),
        .I3(\Use_DLMB.wb_dlmb_valid_read_data_reg[17] ),
        .I4(wb_byte_access),
        .I5(wb_doublet_access),
        .O(\^mb_halted_1_reg [17]));
  LUT4 #(
    .INIT(16'hFF40)) 
    Trace_Reg_Write_INST_0
       (.I0(wb_exception),
        .I1(wb_gpr_write_i),
        .I2(wb_valid_reg_0),
        .I3(wb_reset),
        .O(\^mb_halted_1_reg [32]));
  LUT4 #(
    .INIT(16'h2AAA)) 
    Trace_Valid_Instr_INST_0
       (.I0(wb_valid_reg_0),
        .I1(\^Q [1]),
        .I2(\^Q [0]),
        .I3(wb_exception),
        .O(\^mb_halted_1_reg [33]));
  microblaze_v10_0_3_carry_and \Use_MuxCy[10].OF_Piperun_Stage 
       (.\Using_FPGA.Native (\Using_FPGA_4.of_read_mem_write_op3_conflict_INST1_n_0 ),
        .lopt(lopt_33),
        .lopt_1(lopt_34),
        .lopt_2(lopt_35),
        .of_PipeRun_carry_1(\NLW_Use_MuxCy[10].OF_Piperun_Stage_of_PipeRun_carry_1_UNCONNECTED ),
        .of_PipeRun_carry_2(of_PipeRun_carry_2));
  microblaze_v10_0_3_carry_and_59 \Use_MuxCy[11].OF_Piperun_Stage 
       (.\Serial_Dbg_Intf.if_debug_ready_i_reg (PC_Module_I_n_35),
        .\Using_FPGA.Native (PreFetch_Buffer_I1_n_169),
        .\Using_FPGA.Native_0 (PreFetch_Buffer_I1_n_189),
        .dbg_pause(\NLW_Use_MuxCy[11].OF_Piperun_Stage_dbg_pause_UNCONNECTED ),
        .ex_Write_DCache_decode_cmb(ex_Write_DCache_decode_cmb),
        .ex_Write_ICache_i(\NLW_Use_MuxCy[11].OF_Piperun_Stage_ex_Write_ICache_i_UNCONNECTED ),
        .ex_branch_with_delayslot_reg(\Using_FPGA.Native_1 ),
        .ex_first_cycle_reg(\Use_MuxCy[11].OF_Piperun_Stage_n_5 ),
        .ex_jump(ex_jump),
        .ex_jump_nodelay(ex_jump_nodelay),
        .ex_jump_nodelay_reg(\Use_MuxCy[11].OF_Piperun_Stage_n_3 ),
        .ex_write_dcache_instr(ex_write_dcache_instr),
        .if_missed_fetch_reg(if_missed_fetch),
        .in0(\NLW_Use_MuxCy[11].OF_Piperun_Stage_in0_UNCONNECTED ),
        .lopt(lopt_33),
        .lopt_1(lopt_34),
        .lopt_2(lopt_35),
        .of_PipeRun_carry_1(\NLW_Use_MuxCy[11].OF_Piperun_Stage_of_PipeRun_carry_1_UNCONNECTED ),
        .of_PipeRun_for_ce(of_PipeRun_for_ce),
        .of_read_imm_reg_ii(of_read_imm_reg_ii),
        .of_read_imm_reg_ii_reg(\Use_MuxCy[11].OF_Piperun_Stage_n_4 ),
        .sync_reset(reset_bool_for_rst),
        .wb_exception(wb_exception),
        .wb_exception_i_reg(of_read_imm_reg_ii_i_3_n_0));
  microblaze_v10_0_3_carry_and_60 \Use_MuxCy[1].OF_Piperun_Stage 
       (.lopt(lopt_17),
        .lopt_1(lopt_18),
        .lopt_2(lopt_19),
        .mem_valid_reg(\NLW_Use_MuxCy[1].OF_Piperun_Stage_mem_valid_reg_UNCONNECTED ),
        .of_PipeRun_carry_10(of_PipeRun_carry_10));
  microblaze_v10_0_3_carry_and_61 \Use_MuxCy[2].OF_Piperun_Stage 
       (.\Using_FPGA.Native (\Use_MuxCy[2].OF_Piperun_Stage_n_1 ),
        .ex_branch_with_delayslot_reg(jump_logic_I1_n_5),
        .ex_first_cycle(ex_first_cycle),
        .ex_jump_hold(ex_jump_hold),
        .ex_mbar_decode(ex_mbar_decode),
        .ex_mbar_sleep(ex_mbar_sleep),
        .ex_mbar_stall_no_sleep_1(ex_mbar_stall_no_sleep_1),
        .lopt(lopt_20),
        .lopt_1(lopt_21),
        .lopt_2(lopt_22),
        .lopt_3(\NLW_Use_MuxCy[2].OF_Piperun_Stage_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_24),
        .lopt_5(of_pipe_ctrl_reg0),
        .lopt_6(lopt_25),
        .lopt_7(lopt_26),
        .lopt_8(A),
        .of_PipeRun_carry_10(of_PipeRun_carry_10),
        .of_PipeRun_carry_9(\NLW_Use_MuxCy[2].OF_Piperun_Stage_of_PipeRun_carry_9_UNCONNECTED ));
  microblaze_v10_0_3_carry_and_62 \Use_MuxCy[3].OF_Piperun_Stage 
       (.E(\Use_MuxCy[3].OF_Piperun_Stage_n_1 ),
        .\Performace_Debug_Control.dbg_freeze_nohalt_reg (\Performace_Debug_Control.dbg_freeze_nohalt_reg ),
        .Q(\^Q ),
        .\Using_FPGA.Native (\Using_FPGA.Native_1 ),
        .ex_gpr_write_dbg(ex_gpr_write_dbg),
        .ex_gpr_write_reg(ex_gpr_write_reg_n_0),
        .lopt(lopt_20),
        .lopt_1(lopt_21),
        .lopt_2(lopt_22),
        .mem_gpr_write(mem_gpr_write),
        .mem_gpr_write_dbg(mem_gpr_write_dbg),
        .mem_gpr_write_dbg_reg(\Use_MuxCy[3].OF_Piperun_Stage_n_2 ),
        .mem_gpr_write_reg(\Use_MuxCy[3].OF_Piperun_Stage_n_3 ),
        .of_PipeRun_carry_9(\NLW_Use_MuxCy[3].OF_Piperun_Stage_of_PipeRun_carry_9_UNCONNECTED ),
        .sync_reset(reset_bool_for_rst),
        .wb_exception(wb_exception));
  microblaze_v10_0_3_carry_and_63 \Use_MuxCy[4].OF_Piperun_Stage 
       (.ex_branch_with_delayslot_reg(\NLW_Use_MuxCy[4].OF_Piperun_Stage_ex_branch_with_delayslot_reg_UNCONNECTED ),
        .lopt(\NLW_Use_MuxCy[4].OF_Piperun_Stage_lopt_UNCONNECTED ),
        .lopt_1(lopt_24),
        .of_PipeRun_carry_7(\NLW_Use_MuxCy[4].OF_Piperun_Stage_of_PipeRun_carry_7_UNCONNECTED ),
        .of_pipe_ctrl_reg0(\NLW_Use_MuxCy[4].OF_Piperun_Stage_of_pipe_ctrl_reg0_UNCONNECTED ));
  microblaze_v10_0_3_carry_and_64 \Use_MuxCy[5].OF_Piperun_Stage 
       (.A(\NLW_Use_MuxCy[5].OF_Piperun_Stage_A_UNCONNECTED ),
        .lopt(lopt_25),
        .lopt_1(lopt_26),
        .of_PipeRun_carry_6(of_PipeRun_carry_6),
        .of_PipeRun_carry_7(\NLW_Use_MuxCy[5].OF_Piperun_Stage_of_PipeRun_carry_7_UNCONNECTED ));
  microblaze_v10_0_3_carry_and_65 \Use_MuxCy[6].OF_Piperun_Stage 
       (.lopt(\NLW_Use_MuxCy[6].OF_Piperun_Stage_lopt_UNCONNECTED ),
        .lopt_1(lopt_28),
        .lopt_2(PreFetch_Buffer_I1_n_153),
        .lopt_3(\NLW_Use_MuxCy[6].OF_Piperun_Stage_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_30),
        .lopt_5(PreFetch_Buffer_I1_n_154),
        .lopt_6(lopt_31),
        .lopt_7(lopt_32),
        .lopt_8(\Using_FPGA_4.of_read_ex_write_op3_conflict_INST2_n_0 ),
        .mem_is_multi_or_load_instr_reg(\Using_FPGA_4.of_read_mem_write_op1_conflict_INST1_n_0 ),
        .of_PipeRun_carry_5(\NLW_Use_MuxCy[6].OF_Piperun_Stage_of_PipeRun_carry_5_UNCONNECTED ),
        .of_PipeRun_carry_6(of_PipeRun_carry_6));
  microblaze_v10_0_3_carry_and_66 \Use_MuxCy[7].OF_Piperun_Stage 
       (.ex_is_multi_or_load_instr_reg(\NLW_Use_MuxCy[7].OF_Piperun_Stage_ex_is_multi_or_load_instr_reg_UNCONNECTED ),
        .lopt(\NLW_Use_MuxCy[7].OF_Piperun_Stage_lopt_UNCONNECTED ),
        .lopt_1(lopt_28),
        .of_PipeRun_carry_4(\NLW_Use_MuxCy[7].OF_Piperun_Stage_of_PipeRun_carry_4_UNCONNECTED ),
        .of_PipeRun_carry_5(\NLW_Use_MuxCy[7].OF_Piperun_Stage_of_PipeRun_carry_5_UNCONNECTED ));
  microblaze_v10_0_3_carry_and_67 \Use_MuxCy[8].OF_Piperun_Stage 
       (.lopt(\NLW_Use_MuxCy[8].OF_Piperun_Stage_lopt_UNCONNECTED ),
        .lopt_1(lopt_30),
        .mem_is_multi_or_load_instr_reg(\NLW_Use_MuxCy[8].OF_Piperun_Stage_mem_is_multi_or_load_instr_reg_UNCONNECTED ),
        .of_PipeRun_carry_3(\NLW_Use_MuxCy[8].OF_Piperun_Stage_of_PipeRun_carry_3_UNCONNECTED ),
        .of_PipeRun_carry_4(\NLW_Use_MuxCy[8].OF_Piperun_Stage_of_PipeRun_carry_4_UNCONNECTED ));
  microblaze_v10_0_3_carry_and_68 \Use_MuxCy[9].OF_Piperun_Stage 
       (.\Using_FPGA.Native (\NLW_Use_MuxCy[9].OF_Piperun_Stage_Using_FPGA.Native_UNCONNECTED ),
        .lopt(lopt_31),
        .lopt_1(lopt_32),
        .of_PipeRun_carry_2(of_PipeRun_carry_2),
        .of_PipeRun_carry_3(\NLW_Use_MuxCy[9].OF_Piperun_Stage_of_PipeRun_carry_3_UNCONNECTED ));
  microblaze_v10_0_3_MB_FDRE \Using_FPGA.Gen_Bits[28].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .D(mem_exception_kind[28]),
        .ex_branch_with_delayslot_reg(\Using_FPGA.Native_1 ),
        .ex_exception_no_load_store_mask(ex_exception_no_load_store_mask),
        .mem_exception_from_ex(mem_exception_from_ex),
        .sync_reset(reset_bool_for_rst));
  microblaze_v10_0_3_MB_FDRE_69 \Using_FPGA.Gen_Bits[31].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .D(mem_exception_kind[31]),
        .ex_branch_with_delayslot_reg(\Using_FPGA.Native_1 ),
        .ex_exception_no_load_store_mask(ex_exception_no_load_store_mask),
        .mem_exception_from_ex(mem_exception_from_ex),
        .sync_reset(reset_bool_for_rst));
  LUT2 #(
    .INIT(4'h8)) 
    \Using_FPGA.Native_i_13 
       (.I0(ex_valid),
        .I1(ex_gpr_write_reg_n_0),
        .O(\Using_FPGA.Native_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \Using_FPGA.Native_i_16 
       (.I0(mem_valid_instr),
        .I1(mem_gpr_write),
        .O(\Using_FPGA.Native_i_16_n_0 ));
  LUT4 #(
    .INIT(16'h5515)) 
    \Using_FPGA.Native_i_17 
       (.I0(wb_reset),
        .I1(wb_valid_reg_0),
        .I2(wb_gpr_write_i),
        .I3(wb_exception),
        .O(\Using_FPGA.Native_i_17_n_0 ));
  LUT4 #(
    .INIT(16'h007F)) 
    \Using_FPGA.Native_i_1__105 
       (.I0(wb_exception),
        .I1(\^Q [0]),
        .I2(\^Q [1]),
        .I3(\Performace_Debug_Control.dbg_freeze_nohalt_reg ),
        .O(MEM_WB_Sel_Mem_PC));
  LUT2 #(
    .INIT(4'hE)) 
    \Using_FPGA.Native_i_1__128 
       (.I0(reset_bool_for_rst),
        .I1(EX_Is_Div_Instr),
        .O(R));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \Using_FPGA.Native_i_1__141 
       (.I0(ex_databus_addr[0]),
        .I1(ex_sel_alu),
        .I2(\EX_Op1_reg[7]_0 ),
        .I3(ex_swap_instr),
        .I4(\Using_FPGA.Native_i_3__18_n_0 ),
        .O(EX_Fwd[0]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \Using_FPGA.Native_i_1__142 
       (.I0(ex_databus_addr[1]),
        .I1(ex_sel_alu),
        .I2(\EX_Op1_reg[6]_0 ),
        .I3(ex_swap_instr),
        .I4(\Using_FPGA.Native_i_3__5_n_0 ),
        .O(EX_Fwd[1]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \Using_FPGA.Native_i_1__143 
       (.I0(\EX_Op2_reg[0]_0 [12]),
        .I1(ex_sel_alu),
        .I2(\EX_Op1_reg[5]_0 ),
        .I3(ex_swap_instr),
        .I4(\Using_FPGA.Native_i_3__7_n_0 ),
        .O(EX_Fwd[2]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \Using_FPGA.Native_i_1__144 
       (.I0(\EX_Op2_reg[0]_0 [13]),
        .I1(ex_sel_alu),
        .I2(\EX_Op1_reg[4]_0 ),
        .I3(ex_swap_instr),
        .I4(\Using_FPGA.Native_i_3__9_n_0 ),
        .O(EX_Fwd[3]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \Using_FPGA.Native_i_1__145 
       (.I0(\EX_Op2_reg[0]_0 [14]),
        .I1(ex_sel_alu),
        .I2(\EX_Op1_reg[3]_0 ),
        .I3(ex_swap_instr),
        .I4(\Using_FPGA.Native_i_3__11_n_0 ),
        .O(EX_Fwd[4]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \Using_FPGA.Native_i_1__146 
       (.I0(\EX_Op2_reg[0]_0 [15]),
        .I1(ex_sel_alu),
        .I2(\EX_Op1_reg[2]_0 ),
        .I3(ex_swap_instr),
        .I4(\Using_FPGA.Native_i_3__13_n_0 ),
        .O(EX_Fwd[5]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \Using_FPGA.Native_i_1__147 
       (.I0(\EX_Op2_reg[0]_0 [16]),
        .I1(ex_sel_alu),
        .I2(\EX_Op1_reg[1]_0 ),
        .I3(ex_swap_instr),
        .I4(\Using_FPGA.Native_i_3__15_n_0 ),
        .O(EX_Fwd[6]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \Using_FPGA.Native_i_1__148 
       (.I0(\EX_Op2_reg[0]_0 [17]),
        .I1(ex_sel_alu),
        .I2(\EX_Op1_reg[0]_0 ),
        .I3(ex_swap_instr),
        .I4(\Using_FPGA.Native_i_3__17_n_0 ),
        .O(EX_Fwd[7]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \Using_FPGA.Native_i_1__165 
       (.I0(\EX_Op2_reg[0]_0 [24]),
        .I1(ex_sel_alu),
        .I2(\EX_Op1_reg[9]_0 ),
        .I3(ex_swap_instr),
        .I4(\Using_FPGA.Native_i_3__44_n_0 ),
        .O(EX_Fwd[14]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \Using_FPGA.Native_i_1__166 
       (.I0(\EX_Op2_reg[0]_0 [23]),
        .I1(ex_sel_alu),
        .I2(\EX_Op1_reg[10]_0 ),
        .I3(ex_swap_instr),
        .I4(\Using_FPGA.Native_i_3__45_n_0 ),
        .O(EX_Fwd[13]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \Using_FPGA.Native_i_1__167 
       (.I0(\EX_Op2_reg[0]_0 [22]),
        .I1(ex_sel_alu),
        .I2(\EX_Op1_reg[11]_0 ),
        .I3(ex_swap_instr),
        .I4(\Using_FPGA.Native_i_3__46_n_0 ),
        .O(EX_Fwd[12]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \Using_FPGA.Native_i_1__168 
       (.I0(\EX_Op2_reg[0]_0 [21]),
        .I1(ex_sel_alu),
        .I2(\EX_Op1_reg[12]_0 ),
        .I3(ex_swap_instr),
        .I4(\Using_FPGA.Native_i_3__47_n_0 ),
        .O(EX_Fwd[11]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \Using_FPGA.Native_i_1__169 
       (.I0(\EX_Op2_reg[0]_0 [20]),
        .I1(ex_sel_alu),
        .I2(\EX_Op1_reg[13]_0 ),
        .I3(ex_swap_instr),
        .I4(\Using_FPGA.Native_i_3__48_n_0 ),
        .O(EX_Fwd[10]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \Using_FPGA.Native_i_1__170 
       (.I0(\EX_Op2_reg[0]_0 [19]),
        .I1(ex_sel_alu),
        .I2(\EX_Op1_reg[14]_0 ),
        .I3(ex_swap_instr),
        .I4(\Using_FPGA.Native_i_3__49_n_0 ),
        .O(EX_Fwd[9]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \Using_FPGA.Native_i_1__171 
       (.I0(\EX_Op2_reg[0]_0 [18]),
        .I1(ex_sel_alu),
        .I2(\EX_Op1_reg[15]_0 ),
        .I3(ex_swap_instr),
        .I4(\Using_FPGA.Native_i_3__50_n_0 ),
        .O(EX_Fwd[8]));
  LUT6 #(
    .INIT(64'hD0DDD0D0D0DDD0DD)) 
    \Using_FPGA.Native_i_2__114 
       (.I0(ex_sel_alu),
        .I1(\EX_Op2_reg[0]_0 [41]),
        .I2(\Using_FPGA.Native_i_3__42_n_0 ),
        .I3(\Using_FPGA.Native_i_4__19_n_0 ),
        .I4(\Using_FPGA.Native_i_5__1_n_0 ),
        .I5(\Using_FPGA.Native_i_6__1_n_0 ),
        .O(EX_Fwd[15]));
  LUT5 #(
    .INIT(32'hC0CC8088)) 
    \Using_FPGA.Native_i_2__64 
       (.I0(\Using_FPGA.Native_2 ),
        .I1(ex_valid),
        .I2(\Performace_Debug_Control.dbg_stop_if_delay_i_reg_2 ),
        .I3(\Performace_Debug_Control.ex_dbg_pc_hit_i_reg ),
        .I4(ex_load_shift_carry),
        .O(\Using_FPGA.Native_i_2__64_n_0 ));
  LUT5 #(
    .INIT(32'hA8880888)) 
    \Using_FPGA.Native_i_3__11 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\EX_Op1_reg[0] [4]),
        .I2(\Using_FPGA.Native_6 [1]),
        .I3(\Using_FPGA.Native_6 [0]),
        .I4(\EX_Op1_reg[0] [5]),
        .O(\Using_FPGA.Native_i_3__11_n_0 ));
  LUT5 #(
    .INIT(32'hA8880888)) 
    \Using_FPGA.Native_i_3__13 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\EX_Op1_reg[0] [5]),
        .I2(\Using_FPGA.Native_6 [1]),
        .I3(\Using_FPGA.Native_6 [0]),
        .I4(\EX_Op1_reg[0] [6]),
        .O(\Using_FPGA.Native_i_3__13_n_0 ));
  LUT5 #(
    .INIT(32'hA8880888)) 
    \Using_FPGA.Native_i_3__15 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\EX_Op1_reg[0] [6]),
        .I2(\Using_FPGA.Native_6 [1]),
        .I3(\Using_FPGA.Native_6 [0]),
        .I4(\EX_Op1_reg[0] [7]),
        .O(\Using_FPGA.Native_i_3__15_n_0 ));
  LUT5 #(
    .INIT(32'hA8880888)) 
    \Using_FPGA.Native_i_3__17 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\EX_Op1_reg[0] [7]),
        .I2(\Using_FPGA.Native_6 [1]),
        .I3(\Using_FPGA.Native_6 [0]),
        .I4(\EX_Op1_reg[0] [8]),
        .O(\Using_FPGA.Native_i_3__17_n_0 ));
  LUT5 #(
    .INIT(32'hA8880888)) 
    \Using_FPGA.Native_i_3__18 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\EX_Op1_reg[0] [0]),
        .I2(\Using_FPGA.Native_6 [1]),
        .I3(\Using_FPGA.Native_6 [0]),
        .I4(\EX_Op1_reg[0] [1]),
        .O(\Using_FPGA.Native_i_3__18_n_0 ));
  LUT5 #(
    .INIT(32'hEAEEEAAA)) 
    \Using_FPGA.Native_i_3__42 
       (.I0(ex_sel_alu),
        .I1(ex_swap_instr),
        .I2(\EX_Op1_reg[0] [7]),
        .I3(ex_swap_byte_instr),
        .I4(\EX_Op1_reg[0] [15]),
        .O(\Using_FPGA.Native_i_3__42_n_0 ));
  LUT6 #(
    .INIT(64'hAAA0A8080A00A808)) 
    \Using_FPGA.Native_i_3__44 
       (.I0(ex_Enable_Sext_Shift),
        .I1(out),
        .I2(\Using_FPGA.Native_6 [0]),
        .I3(\EX_Op1_reg[0] [14]),
        .I4(\Using_FPGA.Native_6 [1]),
        .I5(\EX_Op1_reg[0] [15]),
        .O(\Using_FPGA.Native_i_3__44_n_0 ));
  LUT6 #(
    .INIT(64'hAAA0A8080A00A808)) 
    \Using_FPGA.Native_i_3__45 
       (.I0(ex_Enable_Sext_Shift),
        .I1(out),
        .I2(\Using_FPGA.Native_6 [0]),
        .I3(\EX_Op1_reg[0] [13]),
        .I4(\Using_FPGA.Native_6 [1]),
        .I5(\EX_Op1_reg[0] [14]),
        .O(\Using_FPGA.Native_i_3__45_n_0 ));
  LUT6 #(
    .INIT(64'hAAA0A8080A00A808)) 
    \Using_FPGA.Native_i_3__46 
       (.I0(ex_Enable_Sext_Shift),
        .I1(out),
        .I2(\Using_FPGA.Native_6 [0]),
        .I3(\EX_Op1_reg[0] [12]),
        .I4(\Using_FPGA.Native_6 [1]),
        .I5(\EX_Op1_reg[0] [13]),
        .O(\Using_FPGA.Native_i_3__46_n_0 ));
  LUT6 #(
    .INIT(64'hAAA0A8080A00A808)) 
    \Using_FPGA.Native_i_3__47 
       (.I0(ex_Enable_Sext_Shift),
        .I1(out),
        .I2(\Using_FPGA.Native_6 [0]),
        .I3(\EX_Op1_reg[0] [11]),
        .I4(\Using_FPGA.Native_6 [1]),
        .I5(\EX_Op1_reg[0] [12]),
        .O(\Using_FPGA.Native_i_3__47_n_0 ));
  LUT6 #(
    .INIT(64'hAAA0A8080A00A808)) 
    \Using_FPGA.Native_i_3__48 
       (.I0(ex_Enable_Sext_Shift),
        .I1(out),
        .I2(\Using_FPGA.Native_6 [0]),
        .I3(\EX_Op1_reg[0] [10]),
        .I4(\Using_FPGA.Native_6 [1]),
        .I5(\EX_Op1_reg[0] [11]),
        .O(\Using_FPGA.Native_i_3__48_n_0 ));
  LUT6 #(
    .INIT(64'hAAA0A8080A00A808)) 
    \Using_FPGA.Native_i_3__49 
       (.I0(ex_Enable_Sext_Shift),
        .I1(out),
        .I2(\Using_FPGA.Native_6 [0]),
        .I3(\EX_Op1_reg[0] [9]),
        .I4(\Using_FPGA.Native_6 [1]),
        .I5(\EX_Op1_reg[0] [10]),
        .O(\Using_FPGA.Native_i_3__49_n_0 ));
  LUT5 #(
    .INIT(32'hA8880888)) 
    \Using_FPGA.Native_i_3__5 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\EX_Op1_reg[0] [1]),
        .I2(\Using_FPGA.Native_6 [1]),
        .I3(\Using_FPGA.Native_6 [0]),
        .I4(\EX_Op1_reg[0] [2]),
        .O(\Using_FPGA.Native_i_3__5_n_0 ));
  LUT6 #(
    .INIT(64'hAAA0A8080A00A808)) 
    \Using_FPGA.Native_i_3__50 
       (.I0(ex_Enable_Sext_Shift),
        .I1(out),
        .I2(\Using_FPGA.Native_6 [0]),
        .I3(\EX_Op1_reg[0] [8]),
        .I4(\Using_FPGA.Native_6 [1]),
        .I5(\EX_Op1_reg[0] [9]),
        .O(\Using_FPGA.Native_i_3__50_n_0 ));
  LUT5 #(
    .INIT(32'hA8880888)) 
    \Using_FPGA.Native_i_3__7 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\EX_Op1_reg[0] [2]),
        .I2(\Using_FPGA.Native_6 [1]),
        .I3(\Using_FPGA.Native_6 [0]),
        .I4(\EX_Op1_reg[0] [3]),
        .O(\Using_FPGA.Native_i_3__7_n_0 ));
  LUT5 #(
    .INIT(32'hA8880888)) 
    \Using_FPGA.Native_i_3__9 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\EX_Op1_reg[0] [3]),
        .I2(\Using_FPGA.Native_6 [1]),
        .I3(\Using_FPGA.Native_6 [0]),
        .I4(\EX_Op1_reg[0] [4]),
        .O(\Using_FPGA.Native_i_3__9_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \Using_FPGA.Native_i_4__19 
       (.I0(ex_swap_instr),
        .I1(ex_Enable_Sext_Shift),
        .O(\Using_FPGA.Native_i_4__19_n_0 ));
  LUT6 #(
    .INIT(64'hEF00EE00EFFFFFFF)) 
    \Using_FPGA.Native_i_5 
       (.I0(ex_load_shift_carry),
        .I1(\Using_FPGA.Native_2 ),
        .I2(\EX_Op1_reg[0] [2]),
        .I3(ex_valid_reg_0),
        .I4(ex_move_to_MSR_instr),
        .I5(ex_MSR[1]),
        .O(\Using_FPGA.Native_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h2E222A2A00000000)) 
    \Using_FPGA.Native_i_5__1 
       (.I0(\EX_Op1_reg[0] [16]),
        .I1(\Using_FPGA.Native_6 [0]),
        .I2(ex_shift_op[0]),
        .I3(ex_MSR[1]),
        .I4(ex_shift_op[1]),
        .I5(\Using_FPGA.Native_6 [1]),
        .O(\Using_FPGA.Native_i_5__1_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \Using_FPGA.Native_i_6__1 
       (.I0(\Using_FPGA.Native_6 [1]),
        .I1(\EX_Op1_reg[24]_0 ),
        .O(\Using_FPGA.Native_i_6__1_n_0 ));
  microblaze_v10_0_3_MB_FDRE_70 \Using_FPGA_2.ex_byte_access_i_Inst 
       (.Clk(Clk),
        .\EX_Op3_reg[1] (\EX_Op3_reg[1] ),
        .\MEM_DataBus_Write_Data_reg[1] ({\^mb_halted_1_reg [117:112],\^mb_halted_1_reg [110:109],\^mb_halted_1_reg [107:104]}),
        .\Using_FPGA.Native_0 (PreFetch_Buffer_I1_n_201),
        .\Using_FPGA.Native_1 (ex_doublet_access),
        .\Using_FPGA.Native_2 (ex_reverse_mem_access),
        .mem_byte_access_reg(ex_byte_access),
        .of_pause_reg(of_PipeRun_for_ce),
        .sync_reset(reset_bool_for_rst));
  microblaze_v10_0_3_MB_FDRE_71 \Using_FPGA_2.ex_doublet_access_i_Inst 
       (.Clk(Clk),
        .\EX_Op3_reg[12] ({\EX_Op3_reg[1] [9:8],\EX_Op3_reg[1] [5:4],\EX_Op3_reg[1] [1:0]}),
        .\MEM_DataBus_Write_Data_reg[14] ({\^mb_halted_1_reg [111],\^mb_halted_1_reg [108]}),
        .\Using_FPGA.Native_0 (PreFetch_Buffer_I1_n_176),
        .\Using_FPGA.Native_1 (ex_byte_access),
        .\Using_FPGA.Native_2 (ex_reverse_mem_access),
        .mem_doublet_access_reg(ex_doublet_access),
        .of_pause_reg(of_PipeRun_for_ce),
        .sync_reset(reset_bool_for_rst));
  microblaze_v10_0_3_MB_FDRE_72 \Using_FPGA_2.ex_is_load_instr_Inst 
       (.Clk(Clk),
        .D222_out(D222_out),
        .MEM_DataBus_Read_reg(\NLW_Using_FPGA_2.ex_is_load_instr_Inst_MEM_DataBus_Read_reg_UNCONNECTED [0]),
        .MEM_Sel_MEM_Res_I_reg(\Using_FPGA_2.ex_is_load_instr_Inst_n_3 ),
        .\Performace_Debug_Control.dbg_stop_if_delay_i_reg (\NLW_Using_FPGA_2.ex_is_load_instr_Inst_Performace_Debug_Control.dbg_stop_if_delay_i_reg_UNCONNECTED ),
        .\Performace_Debug_Control.ex_dbg_pc_hit_i_reg (\NLW_Using_FPGA_2.ex_is_load_instr_Inst_Performace_Debug_Control.ex_dbg_pc_hit_i_reg_UNCONNECTED ),
        .ex_Sel_SPR_BTR(\NLW_Using_FPGA_2.ex_is_load_instr_Inst_ex_Sel_SPR_BTR_UNCONNECTED ),
        .ex_Sel_SPR_EAR(\NLW_Using_FPGA_2.ex_is_load_instr_Inst_ex_Sel_SPR_EAR_UNCONNECTED ),
        .ex_Sel_SPR_EDR(\NLW_Using_FPGA_2.ex_is_load_instr_Inst_ex_Sel_SPR_EDR_UNCONNECTED ),
        .ex_Sel_SPR_ESR(\NLW_Using_FPGA_2.ex_is_load_instr_Inst_ex_Sel_SPR_ESR_UNCONNECTED ),
        .ex_Sel_SPR_FSR(\NLW_Using_FPGA_2.ex_is_load_instr_Inst_ex_Sel_SPR_FSR_UNCONNECTED ),
        .ex_Sel_SPR_PVR(\NLW_Using_FPGA_2.ex_is_load_instr_Inst_ex_Sel_SPR_PVR_UNCONNECTED ),
        .ex_Sel_SPR_SHR(\NLW_Using_FPGA_2.ex_is_load_instr_Inst_ex_Sel_SPR_SHR_UNCONNECTED ),
        .ex_Sel_SPR_SLR(\NLW_Using_FPGA_2.ex_is_load_instr_Inst_ex_Sel_SPR_SLR_UNCONNECTED ),
        .ex_is_load_instr_s(ex_is_load_instr_s),
        .ex_is_multi_instr2(ex_is_multi_instr2),
        .ex_valid_reg(\NLW_Using_FPGA_2.ex_is_load_instr_Inst_ex_valid_reg_UNCONNECTED ),
        .mem_is_multi_or_load_instr0(mem_is_multi_or_load_instr0),
        .of_pause_reg(of_PipeRun_for_ce),
        .sync_reset(reset_bool_for_rst));
  microblaze_v10_0_3_MB_FDRE_73 \Using_FPGA_2.ex_is_lwx_instr_Inst 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (PreFetch_Buffer_I1_n_191),
        .\Using_LWX_SWX_instr.ex_reservation_reg (\Using_FPGA_2.ex_is_lwx_instr_Inst_n_1 ),
        .ex_branch_with_delayslot_reg(\Using_FPGA.Native_1 ),
        .ex_is_lwx_instr_s(ex_is_lwx_instr_s),
        .ex_is_swx_instr_s(ex_is_swx_instr_s),
        .ex_reservation(ex_reservation),
        .ex_valid_reg(\Using_LWX_SWX_instr.ex_reservation_i_2_n_0 ),
        .mem_valid_reg(\Using_FPGA_2.ex_load_store_instr_Inst_n_2 ),
        .of_pause_reg(of_PipeRun_for_ce),
        .sync_reset(reset_bool_for_rst));
  microblaze_v10_0_3_MB_FDRE_74 \Using_FPGA_2.ex_is_swx_instr_Inst 
       (.Clk(Clk),
        .D224_out(D224_out),
        .MEM_DataBus_Write_reg(\^mb_halted_1_reg [102]),
        .\Performace_Debug_Control.dbg_stop_if_delay_i_reg (\Performace_Debug_Control.dbg_stop_if_delay_i_reg_2 ),
        .\Performace_Debug_Control.ex_dbg_pc_hit_i_reg (\Performace_Debug_Control.ex_dbg_pc_hit_i_reg ),
        .SRI(SRI),
        .\Using_FPGA.Native_0 (\Using_FPGA_2.ex_is_swx_instr_Inst_n_1 ),
        .ex_is_load_instr_s(ex_is_load_instr_s),
        .ex_is_lwx_instr_s(ex_is_lwx_instr_s),
        .ex_is_swx_instr_s(ex_is_swx_instr_s),
        .ex_load_shift_carry_reg(\Using_FPGA.Native_i_5_n_0 ),
        .ex_load_shift_carry_reg_0(ex_load_shift_carry_reg_0),
        .ex_load_store_instr_s(ex_load_store_instr_s),
        .ex_reservation(ex_reservation),
        .ex_valid_reg(ex_valid_reg_0),
        .ex_valid_reg_0(ex_valid),
        .mem_load_store_access0(mem_load_store_access0),
        .mem_valid_reg(\Using_FPGA_2.ex_load_store_instr_Inst_n_2 ),
        .mem_valid_reg_0(mem_Exception_Taken),
        .of_pause_reg(of_PipeRun_for_ce),
        .sync_reset(reset_bool_for_rst),
        .wb_exception(wb_exception));
  microblaze_v10_0_3_MB_FDRE_75 \Using_FPGA_2.ex_load_store_instr_Inst 
       (.Clk(Clk),
        .D225_out(D225_out),
        .MEM_DataBus_Access_reg(\Using_FPGA_2.ex_load_store_instr_Inst_n_3 ),
        .MEM_DataBus_Access_reg_0(mem_databus_access),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_4 ),
        .\Using_FPGA.Native_1 (\Using_FPGA_2.ex_is_swx_instr_Inst_n_1 ),
        .\Using_LWX_SWX_instr.ex_reservation_reg (\Using_FPGA_2.ex_load_store_instr_Inst_n_2 ),
        .ex_MSR(ex_MSR[1]),
        .ex_branch_with_delayslot_reg(\Using_FPGA.Native_1 ),
        .ex_is_swx_instr_s(ex_is_swx_instr_s),
        .ex_load_alu_carry_reg(\Using_FPGA.Native_i_2__64_n_0 ),
        .ex_load_store_instr_s(ex_load_store_instr_s),
        .ex_reservation(ex_reservation),
        .ex_valid_reg(ex_valid_reg_0),
        .mem_exception_from_ex(mem_exception_from_ex),
        .mem_valid_instr(mem_valid_instr),
        .mem_valid_reg(mem_Exception_Taken),
        .mem_valid_reg_0(WB_Read_Imm_Reg_1_reg_0),
        .of_pause_reg(of_PipeRun_for_ce),
        .sync_reset(reset_bool_for_rst),
        .wb_exception(wb_exception));
  microblaze_v10_0_3_MB_FDRE_76 \Using_FPGA_2.ex_reverse_mem_access_inst 
       (.Clk(Clk),
        .D229_out(D229_out),
        .\EX_Op1_reg[31] (\EX_Op1_reg[0] [0]),
        .\EX_Op2_reg[31] (\EX_Op2_reg[31] ),
        .\MEM_DataBus_Byte_Enable_reg[0] (\^mb_halted_1_reg [101:98]),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_37 ),
        .\Using_FPGA.Native_1 (ex_byte_access),
        .\Using_FPGA.Native_2 (ex_doublet_access),
        .mem_reverse_byteorder_reg(ex_reverse_mem_access),
        .of_pause_reg(of_PipeRun_for_ce),
        .sync_reset(reset_bool_for_rst));
  microblaze_v10_0_3_MB_FDRE_77 \Using_FPGA_3.ex_clear_MSR_BIP_instr_Inst 
       (.Clk(Clk),
        .\EX_Op1_reg[28] (\EX_Op1_reg[0] [3]),
        .\Performace_Debug_Control.dbg_stop_if_delay_i_reg (\Performace_Debug_Control.dbg_stop_if_delay_i_reg_2 ),
        .\Performace_Debug_Control.ex_dbg_pc_hit_i_reg (\Performace_Debug_Control.ex_dbg_pc_hit_i_reg ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_5 ),
        .\Using_FPGA.Native_1 (\Using_FPGA_3.of_clear_MSR_BIP_hold_Inst_n_0 ),
        .ex_MSR(ex_MSR[2]),
        .ex_branch_with_delayslot_reg(\Using_FPGA.Native_1 ),
        .ex_move_to_MSR_instr_reg(ex_move_to_MSR_instr),
        .ex_set_bip_reg(ex_set_bip_reg_n_0),
        .ex_valid_reg(ex_valid_reg_0),
        .ex_valid_reg_0(ex_valid),
        .of_pause_reg(of_PipeRun_for_ce),
        .sync_reset(reset_bool_for_rst));
  MB_FDR \Using_FPGA_3.of_clear_MSR_BIP_hold_Inst 
       (.Clk(Clk),
        .I0(I0),
        .Q({ex_opcode[0],ex_opcode[1],ex_opcode[2],ex_opcode[3],ex_opcode[4],ex_opcode[5]}),
        .\Using_FPGA.Native_0 (\Using_FPGA_3.of_clear_MSR_BIP_hold_Inst_n_0 ),
        .ex_branch_with_delayslot_reg(\Using_FPGA.Native_1 ),
        .ex_valid_reg(ex_valid_reg_0),
        .of_pause_reg(of_PipeRun_for_ce),
        .sync_reset(reset_bool_for_rst));
  microblaze_v10_0_3_MB_LUT6__parameterized3 \Using_FPGA_4.of_read_ex_write_op1_conflict_INST1 
       (.A(A),
        .D({\ex_gpr_write_addr_reg_n_0_[0] ,I2,I4}),
        .ex_is_multi_or_load_instr(ex_is_multi_or_load_instr),
        .of_predecode({of_predecode[1],of_predecode[2],of_predecode[3]}),
        .of_read_ex_write_op1_conflict_part2(of_read_ex_write_op1_conflict_part2));
  microblaze_v10_0_3_MB_LUT6__parameterized4 \Using_FPGA_4.of_read_ex_write_op1_conflict_INST2 
       (.D(\ex_gpr_write_addr_reg_n_0_[4] ),
        .I0(I0),
        .ex_gpr_write_reg(ex_gpr_write_reg_n_0),
        .ex_valid_reg(ex_valid),
        .of_predecode({of_predecode[4],of_predecode[5]}),
        .of_read_ex_write_op1_conflict_part2(of_read_ex_write_op1_conflict_part2));
  microblaze_v10_0_3_MB_LUT6__parameterized3_78 \Using_FPGA_4.of_read_ex_write_op2_conflict_INST1 
       (.D({\ex_gpr_write_addr_reg_n_0_[0] ,I2,I4}),
        .of_predecode({of_predecode[6],of_predecode[7],of_predecode[8]}),
        .of_read_ex_write_op2_conflict_part1(of_read_ex_write_op2_conflict_part1));
  microblaze_v10_0_3_MB_LUT6__parameterized4_79 \Using_FPGA_4.of_read_ex_write_op2_conflict_INST2 
       (.D(\ex_gpr_write_addr_reg_n_0_[4] ),
        .I0(I0),
        .ex_gpr_write_reg(ex_gpr_write_reg_n_0),
        .ex_valid_reg(ex_valid),
        .of_predecode({of_predecode[9],of_predecode[10]}),
        .of_read_ex_write_op2_conflict_part2(of_read_ex_write_op2_conflict_part2));
  microblaze_v10_0_3_MB_LUT6__parameterized3_80 \Using_FPGA_4.of_read_ex_write_op3_conflict_INST1 
       (.D({\ex_gpr_write_addr_reg_n_0_[0] ,I2,I4}),
        .\Using_FPGA.Native_0 ({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1]}),
        .\Using_FPGA.Native_1 (of_gpr_op3_rd_addr[2]),
        .of_read_ex_write_op3_conflict_part1(of_read_ex_write_op3_conflict_part1));
  microblaze_v10_0_3_MB_LUT6__parameterized4_81 \Using_FPGA_4.of_read_ex_write_op3_conflict_INST2 
       (.D(\ex_gpr_write_addr_reg_n_0_[4] ),
        .I0(I0),
        .\Using_FPGA.Native_0 (of_gpr_op3_rd_addr[3]),
        .\Using_FPGA.Native_1 (of_gpr_op3_rd_addr[4]),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_0 ),
        .ex_gpr_write_reg(ex_gpr_write_reg_n_0),
        .ex_is_multi_or_load_instr(ex_is_multi_or_load_instr),
        .ex_valid_reg(ex_valid),
        .of_read_ex_write_op3_conflict_part1(of_read_ex_write_op3_conflict_part1),
        .use_Reg_Neg_S_reg(\Using_FPGA_4.of_read_ex_write_op3_conflict_INST2_n_0 ));
  microblaze_v10_0_3_MB_LUT6__parameterized3_82 \Using_FPGA_4.of_read_mem_write_op1_conflict_INST1 
       (.Q({mem_gpr_write_addr[0],mem_gpr_write_addr[1],mem_gpr_write_addr[2]}),
        .mem_is_multi_or_load_instr(mem_is_multi_or_load_instr),
        .of_predecode({of_predecode[1],of_predecode[2],of_predecode[3]}),
        .of_read_mem_write_op1_conflict_part2(of_read_mem_write_op1_conflict_part2),
        .use_Reg_Neg_S_reg(\Using_FPGA_4.of_read_mem_write_op1_conflict_INST1_n_0 ));
  microblaze_v10_0_3_MB_LUT6__parameterized4_83 \Using_FPGA_4.of_read_mem_write_op1_conflict_INST2 
       (.Q({mem_gpr_write_addr[3],mem_gpr_write_addr[4]}),
        .mem_gpr_write(mem_gpr_write),
        .mem_valid_instr(mem_valid_instr),
        .of_predecode({of_predecode[4],of_predecode[5]}),
        .of_read_mem_write_op1_conflict_part2(of_read_mem_write_op1_conflict_part2));
  microblaze_v10_0_3_MB_LUT6__parameterized3_84 \Using_FPGA_4.of_read_mem_write_op2_conflict_INST1 
       (.Q({mem_gpr_write_addr[0],mem_gpr_write_addr[1],mem_gpr_write_addr[2]}),
        .of_predecode({of_predecode[6],of_predecode[7],of_predecode[8]}),
        .of_read_mem_write_op2_conflict_part1(of_read_mem_write_op2_conflict_part1));
  microblaze_v10_0_3_MB_LUT6__parameterized4_85 \Using_FPGA_4.of_read_mem_write_op2_conflict_INST2 
       (.Q({mem_gpr_write_addr[3],mem_gpr_write_addr[4]}),
        .mem_gpr_write(mem_gpr_write),
        .mem_valid_instr(mem_valid_instr),
        .of_predecode({of_predecode[9],of_predecode[10]}),
        .of_read_mem_write_op2_conflict_part2(of_read_mem_write_op2_conflict_part2));
  microblaze_v10_0_3_MB_LUT6__parameterized3_86 \Using_FPGA_4.of_read_mem_write_op3_conflict_INST1 
       (.D({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1]}),
        .Q({mem_gpr_write_addr[0],mem_gpr_write_addr[1],mem_gpr_write_addr[2]}),
        .\Using_FPGA.Native_0 (of_gpr_op3_rd_addr[2]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ),
        .mem_is_multi_or_load_instr(mem_is_multi_or_load_instr),
        .of_read_mem_write_op3_conflict_part2(of_read_mem_write_op3_conflict_part2),
        .use_Reg_Neg_S_reg(\Using_FPGA_4.of_read_mem_write_op3_conflict_INST1_n_0 ));
  microblaze_v10_0_3_MB_LUT6__parameterized4_87 \Using_FPGA_4.of_read_mem_write_op3_conflict_INST2 
       (.Q({mem_gpr_write_addr[3],mem_gpr_write_addr[4]}),
        .\Using_FPGA.Native_0 (of_gpr_op3_rd_addr[3]),
        .\Using_FPGA.Native_1 (of_gpr_op3_rd_addr[4]),
        .mem_gpr_write(mem_gpr_write),
        .mem_valid_instr(mem_valid_instr),
        .of_read_mem_write_op3_conflict_part2(of_read_mem_write_op3_conflict_part2));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF8A00)) 
    \Using_LWX_SWX_instr.ex_reservation_i_2 
       (.I0(ex_valid),
        .I1(\Performace_Debug_Control.dbg_stop_if_delay_i_reg_2 ),
        .I2(\Performace_Debug_Control.ex_dbg_pc_hit_i_reg ),
        .I3(ex_set_bip_reg_n_0),
        .I4(\^mb_halted_1_reg [2]),
        .I5(reset_bool_for_rst),
        .O(\Using_LWX_SWX_instr.ex_reservation_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \Using_LWX_SWX_instr.ex_reservation_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(\Using_FPGA_2.ex_is_lwx_instr_Inst_n_1 ),
        .Q(ex_reservation),
        .R(1'b0));
  microblaze_v10_0_3_carry_and_88 \Using_PC_Incr_Dbg_or_Prot.if_pc_incr_carry_and_1 
       (.\Performace_Debug_Control.dbg_stop_if_delay_i_reg (\NLW_Using_PC_Incr_Dbg_or_Prot.if_pc_incr_carry_and_1_Performace_Debug_Control.dbg_stop_if_delay_i_reg_UNCONNECTED ),
        .if_pc_incr_carry0(\NLW_Using_PC_Incr_Dbg_or_Prot.if_pc_incr_carry_and_1_if_pc_incr_carry0_UNCONNECTED ),
        .if_pc_incr_carry1(\NLW_Using_PC_Incr_Dbg_or_Prot.if_pc_incr_carry_and_1_if_pc_incr_carry1_UNCONNECTED ),
        .lopt(\NLW_Using_PC_Incr_Dbg_or_Prot.if_pc_incr_carry_and_1_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_4 ));
  FDRE #(
    .INIT(1'b0)) 
    WB_Byte_Access_reg
       (.C(Clk),
        .CE(WB_Read_Imm_Reg_1_reg_0),
        .D(mem_byte_access),
        .Q(wb_byte_access),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    WB_DelaySlot_Instr_reg
       (.C(Clk),
        .CE(WB_Read_Imm_Reg_1_reg_0),
        .D(mem_delayslot_instr),
        .Q(\^mb_halted_1_reg [0]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    WB_Doublet_Access_reg
       (.C(Clk),
        .CE(WB_Read_Imm_Reg_1_reg_0),
        .D(mem_doublet_access),
        .Q(wb_doublet_access),
        .R(reset_bool_for_rst));
  LUT2 #(
    .INIT(4'hB)) 
    \WB_MEM_Result[0]_i_1 
       (.I0(reset_bool_for_rst),
        .I1(MEM_Sel_MEM_Res),
        .O(SR));
  FDRE #(
    .INIT(1'b0)) 
    WB_PC_Valid_reg
       (.C(Clk),
        .CE(WB_Read_Imm_Reg_1_reg_0),
        .D(mem_valid_instr),
        .Q(wb_pc_valid),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    WB_Read_Imm_Reg_1_reg
       (.C(Clk),
        .CE(WB_Read_Imm_Reg_1_reg_0),
        .D(mem_read_imm_reg_1),
        .Q(wb_read_imm_reg_1),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    WB_Read_Imm_Reg_reg
       (.C(Clk),
        .CE(WB_Read_Imm_Reg_1_reg_0),
        .D(mem_read_imm_reg),
        .Q(wb_read_imm_reg),
        .R(reset_bool_for_rst));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[0]_i_2 
       (.I0(\^mb_halted_1_reg [26]),
        .I1(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .I2(wb_gpr_write_dbg),
        .I3(\EX_Op2_reg[0]_0 [11]),
        .I4(read_register_MSR_1),
        .O(\data_rd_reg_reg[0] [23]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[10]_i_1 
       (.I0(\^mb_halted_1_reg [16]),
        .I1(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .I2(wb_gpr_write_dbg),
        .I3(\Using_FPGA.Native_24 ),
        .I4(read_register_MSR_1),
        .O(\data_rd_reg_reg[0] [13]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[11]_i_1 
       (.I0(\^mb_halted_1_reg [15]),
        .I1(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .I2(wb_gpr_write_dbg),
        .I3(\Using_FPGA.Native_22 ),
        .I4(read_register_MSR_1),
        .O(\data_rd_reg_reg[0] [12]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[12]_i_1 
       (.I0(\^mb_halted_1_reg [14]),
        .I1(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .I2(wb_gpr_write_dbg),
        .I3(\Using_FPGA.Native_21 ),
        .I4(read_register_MSR_1),
        .O(\data_rd_reg_reg[0] [11]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[13]_i_1 
       (.I0(\^mb_halted_1_reg [13]),
        .I1(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .I2(wb_gpr_write_dbg),
        .I3(\Using_FPGA.Native_20 ),
        .I4(read_register_MSR_1),
        .O(\data_rd_reg_reg[0] [10]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[14]_i_1 
       (.I0(\^mb_halted_1_reg [12]),
        .I1(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .I2(wb_gpr_write_dbg),
        .I3(\Using_FPGA.Native_19 ),
        .I4(read_register_MSR_1),
        .O(\data_rd_reg_reg[0] [9]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[15]_i_1 
       (.I0(\^mb_halted_1_reg [11]),
        .I1(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .I2(wb_gpr_write_dbg),
        .I3(\Using_FPGA.Native_18 ),
        .I4(read_register_MSR_1),
        .O(\data_rd_reg_reg[0] [8]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[1]_i_1 
       (.I0(\^mb_halted_1_reg [25]),
        .I1(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .I2(wb_gpr_write_dbg),
        .I3(\Using_FPGA.Native_36 ),
        .I4(read_register_MSR_1),
        .O(\data_rd_reg_reg[0] [22]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[24]_i_1 
       (.I0(\^mb_halted_1_reg [10]),
        .I1(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .I2(wb_gpr_write_dbg),
        .I3(\Using_FPGA.Native_17 ),
        .I4(read_register_MSR_1),
        .O(\data_rd_reg_reg[0] [7]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[25]_i_1 
       (.I0(\^mb_halted_1_reg [9]),
        .I1(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .I2(wb_gpr_write_dbg),
        .I3(\Using_FPGA.Native_16 ),
        .I4(read_register_MSR_1),
        .O(\data_rd_reg_reg[0] [6]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[26]_i_1 
       (.I0(\^mb_halted_1_reg [8]),
        .I1(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .I2(wb_gpr_write_dbg),
        .I3(\Using_FPGA.Native_15 ),
        .I4(read_register_MSR_1),
        .O(\data_rd_reg_reg[0] [5]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[27]_i_1 
       (.I0(\^mb_halted_1_reg [7]),
        .I1(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .I2(wb_gpr_write_dbg),
        .I3(\Using_FPGA.Native_14 ),
        .I4(read_register_MSR_1),
        .O(\data_rd_reg_reg[0] [4]));
  LUT6 #(
    .INIT(64'hBF80BFBFBF808080)) 
    \data_rd_reg[28]_i_1 
       (.I0(\^mb_halted_1_reg [6]),
        .I1(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .I2(wb_gpr_write_dbg),
        .I3(\EX_Op2_reg[0]_0 [10]),
        .I4(read_register_MSR_1),
        .I5(\Using_FPGA.Native_13 ),
        .O(\data_rd_reg_reg[0] [3]));
  LUT6 #(
    .INIT(64'hBF80BFBFBF808080)) 
    \data_rd_reg[29]_i_1 
       (.I0(\^mb_halted_1_reg [5]),
        .I1(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .I2(wb_gpr_write_dbg),
        .I3(\EX_Op2_reg[0]_0 [9]),
        .I4(read_register_MSR_1),
        .I5(\Using_FPGA.Native_12 ),
        .O(\data_rd_reg_reg[0] [2]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[2]_i_1 
       (.I0(\^mb_halted_1_reg [24]),
        .I1(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .I2(wb_gpr_write_dbg),
        .I3(\Using_FPGA.Native_35 ),
        .I4(read_register_MSR_1),
        .O(\data_rd_reg_reg[0] [21]));
  LUT6 #(
    .INIT(64'hBF80BFBFBF808080)) 
    \data_rd_reg[30]_i_1 
       (.I0(\^mb_halted_1_reg [4]),
        .I1(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .I2(wb_gpr_write_dbg),
        .I3(\EX_Op2_reg[0]_0 [8]),
        .I4(read_register_MSR_1),
        .I5(\Using_FPGA.Native_11 ),
        .O(\data_rd_reg_reg[0] [1]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[31]_i_1 
       (.I0(\^mb_halted_1_reg [3]),
        .I1(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .I2(wb_gpr_write_dbg),
        .I3(DI),
        .I4(read_register_MSR_1),
        .O(\data_rd_reg_reg[0] [0]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[3]_i_1 
       (.I0(\^mb_halted_1_reg [23]),
        .I1(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .I2(wb_gpr_write_dbg),
        .I3(\Using_FPGA.Native_33 ),
        .I4(read_register_MSR_1),
        .O(\data_rd_reg_reg[0] [20]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[4]_i_1 
       (.I0(\^mb_halted_1_reg [22]),
        .I1(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .I2(wb_gpr_write_dbg),
        .I3(\Using_FPGA.Native_31 ),
        .I4(read_register_MSR_1),
        .O(\data_rd_reg_reg[0] [19]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[5]_i_1 
       (.I0(\^mb_halted_1_reg [21]),
        .I1(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .I2(wb_gpr_write_dbg),
        .I3(\Using_FPGA.Native_30 ),
        .I4(read_register_MSR_1),
        .O(\data_rd_reg_reg[0] [18]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[6]_i_1 
       (.I0(\^mb_halted_1_reg [20]),
        .I1(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .I2(wb_gpr_write_dbg),
        .I3(\Using_FPGA.Native_29 ),
        .I4(read_register_MSR_1),
        .O(\data_rd_reg_reg[0] [17]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[7]_i_1 
       (.I0(\^mb_halted_1_reg [19]),
        .I1(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .I2(wb_gpr_write_dbg),
        .I3(\Using_FPGA.Native_27 ),
        .I4(read_register_MSR_1),
        .O(\data_rd_reg_reg[0] [16]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[8]_i_1 
       (.I0(\^mb_halted_1_reg [18]),
        .I1(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .I2(wb_gpr_write_dbg),
        .I3(\Using_FPGA.Native_26 ),
        .I4(read_register_MSR_1),
        .O(\data_rd_reg_reg[0] [15]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[9]_i_1 
       (.I0(\^mb_halted_1_reg [17]),
        .I1(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .I2(wb_gpr_write_dbg),
        .I3(\Using_FPGA.Native_25 ),
        .I4(read_register_MSR_1),
        .O(\data_rd_reg_reg[0] [14]));
  FDRE #(
    .INIT(1'b0)) 
    ex_Write_DCache_decode_reg
       (.C(Clk),
        .CE(1'b1),
        .D(ex_Write_DCache_decode_cmb),
        .Q(ex_write_dcache_instr),
        .R(reset_bool_for_rst));
  FDSE #(
    .INIT(1'b1)) 
    ex_alu_sel_logic_i_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(ex_alu_sel_logic_i103_out),
        .Q(EX_ALU_Sel_Logic),
        .S(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    ex_branch_with_delayslot_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(PreFetch_Buffer_I1_n_169),
        .Q(ex_branch_with_delayslot),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    ex_delayslot_Instr_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(ex_delayslot_Instr0),
        .Q(ex_delayslot_Instr),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    ex_enable_alu_i_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(PreFetch_Buffer_I1_n_196),
        .Q(EX_Enable_ALU),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    ex_enable_sext_shift_i_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(ex_enable_sext_shift_i0),
        .Q(ex_Enable_Sext_Shift),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    ex_first_cycle_reg
       (.C(Clk),
        .CE(1'b1),
        .D(\Use_MuxCy[11].OF_Piperun_Stage_n_5 ),
        .Q(ex_first_cycle),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ex_gpr_write_addr_reg[0] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_gpr_op3_rd_addr[0]),
        .Q(\ex_gpr_write_addr_reg_n_0_[0] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_gpr_write_addr_reg[1] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_gpr_op3_rd_addr[1]),
        .Q(I2),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_gpr_write_addr_reg[2] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_gpr_op3_rd_addr[2]),
        .Q(I4),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_gpr_write_addr_reg[3] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_gpr_op3_rd_addr[3]),
        .Q(I0),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_gpr_write_addr_reg[4] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_gpr_op3_rd_addr[4]),
        .Q(\ex_gpr_write_addr_reg_n_0_[4] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    ex_gpr_write_dbg_reg
       (.C(Clk),
        .CE(1'b1),
        .D(PreFetch_Buffer_I1_n_206),
        .Q(ex_gpr_write_dbg),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    ex_gpr_write_reg
       (.C(Clk),
        .CE(1'b1),
        .D(PreFetch_Buffer_I1_n_204),
        .Q(ex_gpr_write_reg_n_0),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAAAA02AAAAAAAAAA)) 
    ex_hibernate_i_i_2
       (.I0(ex_mbar_sleep),
        .I1(ex_mbar_stall_no_sleep_1),
        .I2(ex_first_cycle),
        .I3(ex_mbar_decode),
        .I4(ex_jump_hold),
        .I5(ex_valid_reg_0),
        .O(ex_sleep_i0));
  FDRE #(
    .INIT(1'b0)) 
    \ex_instr_reg[7] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_gpr_op3_rd_addr[1]),
        .Q(p_0_in123_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    ex_is_div_instr_I_reg
       (.C(Clk),
        .CE(1'b1),
        .D(PreFetch_Buffer_I1_n_205),
        .Q(EX_Is_Div_Instr),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    ex_is_multi_instr2_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_Sel_SPR_MSR1),
        .Q(ex_is_multi_instr2),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    ex_is_multi_or_load_instr_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(ex_is_multi_or_load_instr0),
        .Q(ex_is_multi_or_load_instr),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    ex_jump_hold_reg
       (.C(Clk),
        .CE(1'b1),
        .D(jump_logic_I1_n_39),
        .Q(ex_jump_hold),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    ex_jump_nodelay_reg
       (.C(Clk),
        .CE(1'b1),
        .D(\Use_MuxCy[11].OF_Piperun_Stage_n_3 ),
        .Q(ex_jump_nodelay),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    ex_load_alu_carry_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(ex_load_alu_carry97_out),
        .Q(\Using_FPGA.Native_2 ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    ex_load_shift_carry_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(ex_load_shift_carry0),
        .Q(ex_load_shift_carry),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    ex_mbar_decode_reg
       (.C(Clk),
        .CE(1'b1),
        .D(ex_mbar_decode_cmb),
        .Q(ex_mbar_decode),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    ex_mbar_is_sleep_reg
       (.C(Clk),
        .CE(1'b1),
        .D(ex_mbar_is_sleep_cmb),
        .Q(ex_mbar_is_sleep),
        .R(reset_bool_for_rst));
  LUT6 #(
    .INIT(64'h00000000EAAAAAAA)) 
    ex_mbar_sleep_i_1
       (.I0(ex_mbar_sleep),
        .I1(ex_valid_reg_0),
        .I2(ex_mbar_is_sleep),
        .I3(ex_mbar_decode),
        .I4(ex_first_cycle),
        .I5(reset_bool_for_rst),
        .O(ex_mbar_sleep_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    ex_mbar_sleep_reg
       (.C(Clk),
        .CE(1'b1),
        .D(ex_mbar_sleep_i_1_n_0),
        .Q(ex_mbar_sleep),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    ex_mbar_stall_no_sleep_1_i_1
       (.I0(I0),
        .I1(mem_valid_instr),
        .I2(\ex_gpr_write_addr_reg_n_0_[4] ),
        .I3(if_fetch_in_progress),
        .O(ex_mbar_stall_no_sleep_10));
  FDRE #(
    .INIT(1'b0)) 
    ex_mbar_stall_no_sleep_1_reg
       (.C(Clk),
        .CE(1'b1),
        .D(ex_mbar_stall_no_sleep_10),
        .Q(ex_mbar_stall_no_sleep_1),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    ex_mfsmsr_i_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_Sel_SPR_MSR88_out),
        .Q(ex_mfsmsr_i),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    ex_move_to_MSR_instr_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(ex_move_to_MSR_instr93_out),
        .Q(ex_move_to_MSR_instr),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_opcode_reg[0] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_instr[0]),
        .Q(ex_opcode[0]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_opcode_reg[1] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_instr[1]),
        .Q(ex_opcode[1]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_opcode_reg[2] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_instr[2]),
        .Q(ex_opcode[2]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_opcode_reg[3] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_instr[3]),
        .Q(ex_opcode[3]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_opcode_reg[4] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_instr[4]),
        .Q(ex_opcode[4]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_opcode_reg[5] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_instr[5]),
        .Q(ex_opcode[5]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    ex_read_imm_reg_1_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(ex_read_imm_reg),
        .Q(ex_read_imm_reg_1),
        .R(reset_bool_for_rst));
  LUT5 #(
    .INIT(32'h02222222)) 
    ex_read_imm_reg_i_1
       (.I0(of_read_imm_reg_ii),
        .I1(\Performace_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(\^Q [1]),
        .I3(\^Q [0]),
        .I4(wb_exception),
        .O(of_read_imm_reg));
  FDRE #(
    .INIT(1'b0)) 
    ex_read_imm_reg_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_read_imm_reg),
        .Q(ex_read_imm_reg),
        .R(reset_bool_for_rst));
  FDSE #(
    .INIT(1'b1)) 
    ex_sel_alu_i_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(ex_sel_alu_i0),
        .Q(ex_sel_alu),
        .S(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    ex_set_bip_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(ex_set_bip),
        .Q(ex_set_bip_reg_n_0),
        .R(reset_bool_for_rst));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT4 #(
    .INIT(16'h002E)) 
    ex_sleep_i_i_1
       (.I0(\^Sleep_Decode ),
        .I1(ex_sleep_i0),
        .I2(p_0_in123_in),
        .I3(reset_bool_for_rst),
        .O(ex_sleep_i_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    ex_sleep_i_reg
       (.C(Clk),
        .CE(1'b1),
        .D(ex_sleep_i_i_1_n_0),
        .Q(\^Sleep_Decode ),
        .R(1'b0));
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    ex_valid_jump_reg
       (.C(Clk),
        .CE(1'b1),
        .D(jump_logic_I1_n_43),
        .Q(ex_valid_jump),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    ex_valid_reg
       (.C(Clk),
        .CE(1'b1),
        .D(jump_logic_I1_n_42),
        .Q(ex_valid),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    if_fetch_in_progress_reg
       (.C(Clk),
        .CE(1'b1),
        .D(PreFetch_Buffer_I1_n_203),
        .Q(if_fetch_in_progress),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFEEEEEEE)) 
    if_missed_fetch_i_2
       (.I0(reset_bool_for_rst),
        .I1(\Performace_Debug_Control.dbg_state_nohalt_reg_0 ),
        .I2(\^Q [1]),
        .I3(\^Q [0]),
        .I4(wb_exception),
        .I5(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .O(if_missed_fetch_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    if_missed_fetch_reg
       (.C(Clk),
        .CE(1'b1),
        .D(jump_logic_I1_n_40),
        .Q(if_missed_fetch),
        .R(1'b0));
  microblaze_v10_0_3_carry_and_89 if_pc_incr_carry_and_0
       (.if_missed_fetch_reg(if_missed_fetch),
        .if_pc_incr_carry0(NLW_if_pc_incr_carry_and_0_if_pc_incr_carry0_UNCONNECTED),
        .lopt(NLW_if_pc_incr_carry_and_0_lopt_UNCONNECTED),
        .lopt_1(\^lopt_4 ),
        .lopt_2(\Performace_Debug_Control.dbg_stop_if_delay_i_reg_0 ),
        .lopt_3(NLW_if_pc_incr_carry_and_0_lopt_3_UNCONNECTED),
        .lopt_4(\^lopt_6 ),
        .lopt_5(if_fetch_for_timing_optimization1),
        .lopt_6(\^lopt_7 ),
        .lopt_7(\^lopt_8 ),
        .lopt_8(\^lopt_9 ),
        .lopt_9(\^lopt_10 ));
  microblaze_v10_0_3_carry_and_90 if_pc_incr_carry_and_3
       (.CI(NLW_if_pc_incr_carry_and_3_CI_UNCONNECTED),
        .if_fetch_for_timing_optimization1(NLW_if_pc_incr_carry_and_3_if_fetch_for_timing_optimization1_UNCONNECTED),
        .if_pc_incr_carry1(NLW_if_pc_incr_carry_and_3_if_pc_incr_carry1_UNCONNECTED),
        .lopt(NLW_if_pc_incr_carry_and_3_lopt_UNCONNECTED),
        .lopt_1(\^lopt_6 ));
  jump_logic jump_logic_I1
       (.Clk(Clk),
        .\EX_Branch_CMP_Op1_reg[0] (\EX_Branch_CMP_Op1_reg[0]_0 ),
        .\EX_Op2_reg[0] (\EX_Op2_reg[0]_0 [41:12]),
        .I5(I5),
        .O(O87_out),
        .O56_out(O56_out),
        .\Performace_Debug_Control.dbg_stop_if_delay_i_reg (\Performace_Debug_Control.dbg_stop_if_delay_i_reg ),
        .\Performace_Debug_Control.dbg_stop_if_delay_i_reg_0 (\Performace_Debug_Control.dbg_stop_if_delay_i_reg_1 ),
        .Q(\^Q ),
        .\Serial_Dbg_Intf.if_debug_ready_i_reg (PC_Module_I_n_35),
        .\Use_Async_Reset.sync_reset_reg (if_missed_fetch_i_2_n_0),
        .\Using_FPGA.Native (jump_logic_I1_n_5),
        .\Using_FPGA.Native_0 (PreFetch_Buffer_I1_n_172),
        .\Using_FPGA.Native_1 (\^mb_halted_1_reg [150]),
        .ex_branch_with_delayslot(ex_branch_with_delayslot),
        .ex_branch_with_delayslot_reg(\Using_FPGA.Native_1 ),
        .ex_databus_addr(ex_databus_addr),
        .ex_delayslot_Instr0(ex_delayslot_Instr0),
        .ex_first_cycle(ex_first_cycle),
        .ex_jump(ex_jump),
        .ex_jump_hold(ex_jump_hold),
        .ex_jump_hold_reg(jump_logic_I1_n_39),
        .ex_jump_nodelay(ex_jump_nodelay),
        .ex_mbar_decode(ex_mbar_decode),
        .ex_mbar_sleep(ex_mbar_sleep),
        .ex_mbar_sleep_reg(\Use_MuxCy[2].OF_Piperun_Stage_n_1 ),
        .ex_mbar_stall_no_sleep_1(ex_mbar_stall_no_sleep_1),
        .ex_op1_cmp_eq(ex_op1_cmp_eq),
        .ex_op1_cmp_eq1(ex_op1_cmp_eq1),
        .ex_op1_cmp_eq_n5_out(ex_op1_cmp_eq_n5_out),
        .ex_op1_cmp_equal(ex_op1_cmp_equal),
        .ex_op1_cmp_equal_n(ex_op1_cmp_equal_n),
        .ex_op1_zero(NLW_jump_logic_I1_ex_op1_zero_UNCONNECTED),
        .ex_valid_jump_reg(jump_logic_I1_n_43),
        .ex_valid_reg(jump_logic_I1_n_42),
        .ex_valid_reg_0(ex_valid),
        .force12_out(force12_out),
        .force_Val10_out(force_Val10_out),
        .if_missed_fetch_reg(jump_logic_I1_n_40),
        .if_missed_fetch_reg_0(if_missed_fetch),
        .\if_pc_reg[0] (IF_PC_Write),
        .\if_pc_reg[0]_0 (\^mb_halted_1_reg [149:118]),
        .\if_pc_reg[10] (O49_out),
        .\if_pc_reg[11] (O51_out),
        .\if_pc_reg[12] (O53_out),
        .\if_pc_reg[13] (O55_out),
        .\if_pc_reg[14] (O57_out),
        .\if_pc_reg[15] (O59_out),
        .\if_pc_reg[16] (O61_out),
        .\if_pc_reg[17] (O63_out),
        .\if_pc_reg[18] (O65_out),
        .\if_pc_reg[19] (O67_out),
        .\if_pc_reg[1] (O31_out),
        .\if_pc_reg[20] (O69_out),
        .\if_pc_reg[21] (O71_out),
        .\if_pc_reg[22] (O73_out),
        .\if_pc_reg[23] (O75_out),
        .\if_pc_reg[24] (O77_out),
        .\if_pc_reg[25] (O79_out),
        .\if_pc_reg[26] (O81_out),
        .\if_pc_reg[27] (O83_out),
        .\if_pc_reg[28] (O85_out),
        .\if_pc_reg[2] (O33_out),
        .\if_pc_reg[30] ({p_1_in3_in,PC_Module_I_n_34}),
        .\if_pc_reg[3] (O35_out),
        .\if_pc_reg[4] (O37_out),
        .\if_pc_reg[5] (O39_out),
        .\if_pc_reg[6] (O41_out),
        .\if_pc_reg[7] (O43_out),
        .\if_pc_reg[8] (O45_out),
        .\if_pc_reg[9] (O47_out),
        .keep_jump_taken_with_ds(keep_jump_taken_with_ds),
        .keep_jump_taken_with_ds_reg(jump_logic_I1_n_41),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .mem_exception_from_ex(mem_exception_from_ex),
        .mem_jump_taken_reg(NLW_jump_logic_I1_mem_jump_taken_reg_UNCONNECTED),
        .mem_valid_instr(mem_valid_instr),
        .of_pause_reg(of_PipeRun_for_ce),
        .of_valid(of_valid),
        .out(ex_valid_jump),
        .sync_reset(reset_bool_for_rst),
        .use_Reg_Neg_DI1_out(use_Reg_Neg_DI1_out),
        .use_Reg_Neg_S3_out(use_Reg_Neg_S3_out),
        .wb_exception(wb_exception));
  FDRE #(
    .INIT(1'b0)) 
    keep_jump_taken_with_ds_reg
       (.C(Clk),
        .CE(1'b1),
        .D(jump_logic_I1_n_41),
        .Q(keep_jump_taken_with_ds),
        .R(1'b0));
  microblaze_v10_0_3_carry_and_91 mem_PipeRun_carry_and
       (.WB_Read_Imm_Reg_1_reg(WB_Read_Imm_Reg_1_reg_0),
        .ex_branch_with_delayslot_reg(\Using_FPGA.Native_1 ),
        .ex_valid_reg(ex_valid),
        .flush_pipe(flush_pipe),
        .lopt(lopt_14),
        .lopt_1(lopt_15),
        .lopt_2(lopt_16),
        .mem_exception_from_ex(mem_exception_from_ex),
        .mem_gpr_write(mem_gpr_write),
        .mem_gpr_write_dbg(mem_gpr_write_dbg),
        .mem_valid_instr(mem_valid_instr),
        .mem_valid_reg(mem_PipeRun_carry_and_n_3),
        .mem_wait_on_ready_N(NLW_mem_PipeRun_carry_and_mem_wait_on_ready_N_UNCONNECTED),
        .sync_reset(reset_bool_for_rst),
        .wb_exception(wb_exception),
        .wb_gpr_write_dbg0(wb_gpr_write_dbg0),
        .wb_gpr_write_i0(wb_gpr_write_i0),
        .wb_piperun(wb_piperun),
        .wb_valid_reg(mem_PipeRun_carry_and_n_4),
        .wb_valid_reg_0(wb_valid_reg_0));
  LUT5 #(
    .INIT(32'h00080808)) 
    mem_Write_DCache_i_1
       (.I0(ex_valid_reg_0),
        .I1(ex_write_dcache_instr),
        .I2(wb_exception),
        .I3(mem_exception_from_ex),
        .I4(mem_valid_instr),
        .O(mem_Write_DCache_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    mem_Write_DCache_reg
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(mem_Write_DCache_i_1_n_0),
        .Q(mem_Write_DCache),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    mem_byte_access_reg
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(ex_byte_access),
        .Q(mem_byte_access),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    mem_delayslot_instr_reg
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(ex_delayslot_Instr),
        .Q(mem_delayslot_instr),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    mem_doublet_access_reg
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(ex_doublet_access),
        .Q(mem_doublet_access),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    mem_exception_from_ex_reg
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\Performace_Debug_Control.dbg_stop_if_delay_i_reg_1 ),
        .Q(mem_exception_from_ex),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \mem_gpr_write_addr_reg[0] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\ex_gpr_write_addr_reg_n_0_[0] ),
        .Q(mem_gpr_write_addr[0]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \mem_gpr_write_addr_reg[1] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(I2),
        .Q(mem_gpr_write_addr[1]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \mem_gpr_write_addr_reg[2] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(I4),
        .Q(mem_gpr_write_addr[2]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \mem_gpr_write_addr_reg[3] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(I0),
        .Q(mem_gpr_write_addr[3]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \mem_gpr_write_addr_reg[4] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\ex_gpr_write_addr_reg_n_0_[4] ),
        .Q(mem_gpr_write_addr[4]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    mem_gpr_write_dbg_reg
       (.C(Clk),
        .CE(1'b1),
        .D(\Use_MuxCy[3].OF_Piperun_Stage_n_2 ),
        .Q(mem_gpr_write_dbg),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    mem_gpr_write_reg
       (.C(Clk),
        .CE(1'b1),
        .D(\Use_MuxCy[3].OF_Piperun_Stage_n_3 ),
        .Q(mem_gpr_write),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    mem_is_msr_instr_reg
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(ex_mfsmsr_i),
        .Q(mem_sel_msr),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    mem_is_multi_or_load_instr_reg
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(mem_is_multi_or_load_instr0),
        .Q(mem_is_multi_or_load_instr),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    mem_load_store_access_reg
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(mem_load_store_access0),
        .Q(mem_load_store_access),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    mem_read_imm_reg_1_reg
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(ex_read_imm_reg_1),
        .Q(mem_read_imm_reg_1),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    mem_read_imm_reg_reg
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(ex_read_imm_reg),
        .Q(mem_read_imm_reg),
        .R(reset_bool_for_rst));
  LUT2 #(
    .INIT(4'hE)) 
    mem_valid_i_2
       (.I0(reset_bool_for_rst),
        .I1(wb_exception),
        .O(flush_pipe));
  FDRE #(
    .INIT(1'b0)) 
    mem_valid_reg
       (.C(Clk),
        .CE(1'b1),
        .D(mem_PipeRun_carry_and_n_3),
        .Q(mem_valid_instr),
        .R(1'b0));
  microblaze_v10_0_3_carry_or_92 mem_wait_on_ready_N_carry_or
       (.lopt(NLW_mem_wait_on_ready_N_carry_or_lopt_UNCONNECTED),
        .lopt_1(lopt_12),
        .lopt_2(lopt_13),
        .mem_Write_DCache(mem_Write_DCache),
        .mem_databus_ready(NLW_mem_wait_on_ready_N_carry_or_mem_databus_ready_UNCONNECTED),
        .mem_load_store_access(mem_load_store_access),
        .mem_valid_instr(mem_valid_instr),
        .mem_wait_on_ready_N(NLW_mem_wait_on_ready_N_carry_or_mem_wait_on_ready_N_UNCONNECTED));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFEFE)) 
    of_read_imm_reg_ii_i_3
       (.I0(\^LOCKSTEP_Master_Out [0]),
        .I1(wb_exception),
        .I2(reset_bool_for_rst),
        .I3(mem_exception_from_ex),
        .I4(mem_valid_instr),
        .I5(\Performace_Debug_Control.dbg_stop_if_delay_i_reg_1 ),
        .O(of_read_imm_reg_ii_i_3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    of_read_imm_reg_ii_reg
       (.C(Clk),
        .CE(1'b1),
        .D(\Use_MuxCy[11].OF_Piperun_Stage_n_4 ),
        .Q(of_read_imm_reg_ii),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h04)) 
    sign_16_23_inferred_i_1
       (.I0(\Using_FPGA.Native_6 [0]),
        .I1(\EX_Op1_reg[0] [7]),
        .I2(\Using_FPGA.Native_6 [1]),
        .O(in0));
  FDRE #(
    .INIT(1'b0)) 
    wb_PipeRun_i_reg
       (.C(Clk),
        .CE(1'b1),
        .D(WB_Read_Imm_Reg_1_reg_0),
        .Q(wb_piperun),
        .R(reset_bool_for_rst));
  LUT2 #(
    .INIT(4'h8)) 
    wb_exception_i_i_1
       (.I0(mem_valid_instr),
        .I1(mem_exception_from_ex),
        .O(mem_Exception_Taken));
  FDRE #(
    .INIT(1'b0)) 
    wb_exception_i_reg
       (.C(Clk),
        .CE(WB_Read_Imm_Reg_1_reg_0),
        .D(mem_Exception_Taken),
        .Q(wb_exception),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \wb_exception_kind_i_reg[28] 
       (.C(Clk),
        .CE(WB_Read_Imm_Reg_1_reg_0),
        .D(mem_exception_kind[28]),
        .Q(\^Q [1]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \wb_exception_kind_i_reg[31] 
       (.C(Clk),
        .CE(WB_Read_Imm_Reg_1_reg_0),
        .D(mem_exception_kind[31]),
        .Q(\^Q [0]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \wb_gpr_write_addr_reg[0] 
       (.C(Clk),
        .CE(WB_Read_Imm_Reg_1_reg_0),
        .D(mem_gpr_write_addr[0]),
        .Q(\^mb_halted_1_reg [31]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \wb_gpr_write_addr_reg[1] 
       (.C(Clk),
        .CE(WB_Read_Imm_Reg_1_reg_0),
        .D(mem_gpr_write_addr[1]),
        .Q(\^mb_halted_1_reg [30]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \wb_gpr_write_addr_reg[2] 
       (.C(Clk),
        .CE(WB_Read_Imm_Reg_1_reg_0),
        .D(mem_gpr_write_addr[2]),
        .Q(\^mb_halted_1_reg [29]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \wb_gpr_write_addr_reg[3] 
       (.C(Clk),
        .CE(WB_Read_Imm_Reg_1_reg_0),
        .D(mem_gpr_write_addr[3]),
        .Q(\^mb_halted_1_reg [28]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \wb_gpr_write_addr_reg[4] 
       (.C(Clk),
        .CE(WB_Read_Imm_Reg_1_reg_0),
        .D(mem_gpr_write_addr[4]),
        .Q(\^mb_halted_1_reg [27]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    wb_gpr_write_dbg_reg
       (.C(Clk),
        .CE(1'b1),
        .D(wb_gpr_write_dbg0),
        .Q(wb_gpr_write_dbg),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    wb_gpr_write_i_reg
       (.C(Clk),
        .CE(1'b1),
        .D(wb_gpr_write_i0),
        .Q(wb_gpr_write_i),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hC8CD)) 
    \wb_read_lsb_sel[0]_i_1 
       (.I0(mem_byte_access),
        .I1(\mem_byte_selects_reg[0] ),
        .I2(mem_doublet_access),
        .I3(mem_reverse_byteorder),
        .O(\wb_read_lsb_sel_reg[0] ));
  FDRE #(
    .INIT(1'b0)) 
    wb_reset_reg
       (.C(Clk),
        .CE(1'b1),
        .D(reset_bool_for_rst),
        .Q(wb_reset),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    wb_valid_reg
       (.C(Clk),
        .CE(1'b1),
        .D(mem_PipeRun_carry_and_n_4),
        .Q(wb_valid_reg_0),
        .R(1'b0));
endmodule

module MB_AND2B1L
   (D,
    E,
    SRI);
  output [0:0]D;
  input [0:0]E;
  input SRI;

  wire [0:0]D;
  wire [0:0]E;
  wire SRI;

  (* box_type = "PRIMITIVE" *) 
  AND2B1L #(
    .IS_SRI_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.DI(E),
        .O(D),
        .SRI(SRI));
endmodule

module MB_FDE
   (\LOCKSTEP_Out_reg[2914] ,
    mem_valid_reg,
    wb_PC_II_31,
    Clk);
  output [0:0]\LOCKSTEP_Out_reg[2914] ;
  input mem_valid_reg;
  input wb_PC_II_31;
  input Clk;

  wire Clk;
  wire [0:0]\LOCKSTEP_Out_reg[2914] ;
  wire mem_valid_reg;
  wire wb_PC_II_31;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(wb_PC_II_31),
        .Q(\LOCKSTEP_Out_reg[2914] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module MB_FDE_314
   (\LOCKSTEP_Out_reg[2924] ,
    mem_valid_reg,
    wb_PC_II_21,
    Clk);
  output \LOCKSTEP_Out_reg[2924] ;
  input mem_valid_reg;
  input wb_PC_II_21;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2924] ;
  wire mem_valid_reg;
  wire wb_PC_II_21;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(wb_PC_II_21),
        .Q(\LOCKSTEP_Out_reg[2924] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module MB_FDE_317
   (\LOCKSTEP_Out_reg[2925] ,
    mem_valid_reg,
    wb_PC_II_20,
    Clk);
  output \LOCKSTEP_Out_reg[2925] ;
  input mem_valid_reg;
  input wb_PC_II_20;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2925] ;
  wire mem_valid_reg;
  wire wb_PC_II_20;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(wb_PC_II_20),
        .Q(\LOCKSTEP_Out_reg[2925] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module MB_FDE_320
   (\LOCKSTEP_Out_reg[2926] ,
    mem_valid_reg,
    wb_PC_II_19,
    Clk);
  output \LOCKSTEP_Out_reg[2926] ;
  input mem_valid_reg;
  input wb_PC_II_19;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2926] ;
  wire mem_valid_reg;
  wire wb_PC_II_19;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(wb_PC_II_19),
        .Q(\LOCKSTEP_Out_reg[2926] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module MB_FDE_323
   (\LOCKSTEP_Out_reg[2927] ,
    mem_valid_reg,
    wb_PC_II_18,
    Clk);
  output \LOCKSTEP_Out_reg[2927] ;
  input mem_valid_reg;
  input wb_PC_II_18;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2927] ;
  wire mem_valid_reg;
  wire wb_PC_II_18;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(wb_PC_II_18),
        .Q(\LOCKSTEP_Out_reg[2927] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module MB_FDE_326
   (\LOCKSTEP_Out_reg[2928] ,
    mem_valid_reg,
    wb_PC_II_17,
    Clk);
  output \LOCKSTEP_Out_reg[2928] ;
  input mem_valid_reg;
  input wb_PC_II_17;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2928] ;
  wire mem_valid_reg;
  wire wb_PC_II_17;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(wb_PC_II_17),
        .Q(\LOCKSTEP_Out_reg[2928] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module MB_FDE_329
   (\LOCKSTEP_Out_reg[2929] ,
    mem_valid_reg,
    wb_PC_II_16,
    Clk);
  output \LOCKSTEP_Out_reg[2929] ;
  input mem_valid_reg;
  input wb_PC_II_16;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2929] ;
  wire mem_valid_reg;
  wire wb_PC_II_16;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(wb_PC_II_16),
        .Q(\LOCKSTEP_Out_reg[2929] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module MB_FDE_332
   (\LOCKSTEP_Out_reg[2930] ,
    mem_valid_reg,
    wb_PC_II_15,
    Clk);
  output \LOCKSTEP_Out_reg[2930] ;
  input mem_valid_reg;
  input wb_PC_II_15;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2930] ;
  wire mem_valid_reg;
  wire wb_PC_II_15;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(wb_PC_II_15),
        .Q(\LOCKSTEP_Out_reg[2930] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module MB_FDE_335
   (\LOCKSTEP_Out_reg[2931] ,
    mem_valid_reg,
    wb_PC_II_14,
    Clk);
  output \LOCKSTEP_Out_reg[2931] ;
  input mem_valid_reg;
  input wb_PC_II_14;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2931] ;
  wire mem_valid_reg;
  wire wb_PC_II_14;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(wb_PC_II_14),
        .Q(\LOCKSTEP_Out_reg[2931] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module MB_FDE_338
   (\LOCKSTEP_Out_reg[2932] ,
    mem_valid_reg,
    wb_PC_II_13,
    Clk);
  output \LOCKSTEP_Out_reg[2932] ;
  input mem_valid_reg;
  input wb_PC_II_13;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2932] ;
  wire mem_valid_reg;
  wire wb_PC_II_13;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(wb_PC_II_13),
        .Q(\LOCKSTEP_Out_reg[2932] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module MB_FDE_341
   (\LOCKSTEP_Out_reg[2933] ,
    mem_valid_reg,
    wb_PC_II_12,
    Clk);
  output \LOCKSTEP_Out_reg[2933] ;
  input mem_valid_reg;
  input wb_PC_II_12;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2933] ;
  wire mem_valid_reg;
  wire wb_PC_II_12;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(wb_PC_II_12),
        .Q(\LOCKSTEP_Out_reg[2933] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module MB_FDE_344
   (\LOCKSTEP_Out_reg[2915] ,
    mem_valid_reg,
    wb_PC_II_30,
    Clk);
  output \LOCKSTEP_Out_reg[2915] ;
  input mem_valid_reg;
  input wb_PC_II_30;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2915] ;
  wire mem_valid_reg;
  wire wb_PC_II_30;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(wb_PC_II_30),
        .Q(\LOCKSTEP_Out_reg[2915] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module MB_FDE_347
   (\LOCKSTEP_Out_reg[2934] ,
    mem_valid_reg,
    wb_PC_II_11,
    Clk);
  output \LOCKSTEP_Out_reg[2934] ;
  input mem_valid_reg;
  input wb_PC_II_11;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2934] ;
  wire mem_valid_reg;
  wire wb_PC_II_11;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(wb_PC_II_11),
        .Q(\LOCKSTEP_Out_reg[2934] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module MB_FDE_350
   (\LOCKSTEP_Out_reg[2935] ,
    mem_valid_reg,
    wb_PC_II_10,
    Clk);
  output \LOCKSTEP_Out_reg[2935] ;
  input mem_valid_reg;
  input wb_PC_II_10;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2935] ;
  wire mem_valid_reg;
  wire wb_PC_II_10;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(wb_PC_II_10),
        .Q(\LOCKSTEP_Out_reg[2935] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module MB_FDE_353
   (\LOCKSTEP_Out_reg[2936] ,
    mem_valid_reg,
    wb_PC_II_9,
    Clk);
  output \LOCKSTEP_Out_reg[2936] ;
  input mem_valid_reg;
  input wb_PC_II_9;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2936] ;
  wire mem_valid_reg;
  wire wb_PC_II_9;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(wb_PC_II_9),
        .Q(\LOCKSTEP_Out_reg[2936] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module MB_FDE_356
   (\LOCKSTEP_Out_reg[2937] ,
    mem_valid_reg,
    wb_PC_II_8,
    Clk);
  output \LOCKSTEP_Out_reg[2937] ;
  input mem_valid_reg;
  input wb_PC_II_8;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2937] ;
  wire mem_valid_reg;
  wire wb_PC_II_8;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(wb_PC_II_8),
        .Q(\LOCKSTEP_Out_reg[2937] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module MB_FDE_359
   (\LOCKSTEP_Out_reg[2938] ,
    mem_valid_reg,
    wb_PC_II_7,
    Clk);
  output \LOCKSTEP_Out_reg[2938] ;
  input mem_valid_reg;
  input wb_PC_II_7;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2938] ;
  wire mem_valid_reg;
  wire wb_PC_II_7;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(wb_PC_II_7),
        .Q(\LOCKSTEP_Out_reg[2938] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module MB_FDE_362
   (\LOCKSTEP_Out_reg[2939] ,
    mem_valid_reg,
    wb_PC_II_6,
    Clk);
  output \LOCKSTEP_Out_reg[2939] ;
  input mem_valid_reg;
  input wb_PC_II_6;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2939] ;
  wire mem_valid_reg;
  wire wb_PC_II_6;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(wb_PC_II_6),
        .Q(\LOCKSTEP_Out_reg[2939] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module MB_FDE_365
   (\LOCKSTEP_Out_reg[2940] ,
    mem_valid_reg,
    wb_PC_II_5,
    Clk);
  output \LOCKSTEP_Out_reg[2940] ;
  input mem_valid_reg;
  input wb_PC_II_5;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2940] ;
  wire mem_valid_reg;
  wire wb_PC_II_5;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(wb_PC_II_5),
        .Q(\LOCKSTEP_Out_reg[2940] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module MB_FDE_368
   (\LOCKSTEP_Out_reg[2941] ,
    mem_valid_reg,
    wb_PC_II_4,
    Clk);
  output \LOCKSTEP_Out_reg[2941] ;
  input mem_valid_reg;
  input wb_PC_II_4;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2941] ;
  wire mem_valid_reg;
  wire wb_PC_II_4;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(wb_PC_II_4),
        .Q(\LOCKSTEP_Out_reg[2941] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module MB_FDE_371
   (\LOCKSTEP_Out_reg[2942] ,
    mem_valid_reg,
    wb_PC_II_3,
    Clk);
  output \LOCKSTEP_Out_reg[2942] ;
  input mem_valid_reg;
  input wb_PC_II_3;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2942] ;
  wire mem_valid_reg;
  wire wb_PC_II_3;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(wb_PC_II_3),
        .Q(\LOCKSTEP_Out_reg[2942] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module MB_FDE_374
   (\LOCKSTEP_Out_reg[2943] ,
    mem_valid_reg,
    wb_PC_II_2,
    Clk);
  output \LOCKSTEP_Out_reg[2943] ;
  input mem_valid_reg;
  input wb_PC_II_2;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2943] ;
  wire mem_valid_reg;
  wire wb_PC_II_2;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(wb_PC_II_2),
        .Q(\LOCKSTEP_Out_reg[2943] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module MB_FDE_377
   (\LOCKSTEP_Out_reg[2916] ,
    mem_valid_reg,
    wb_PC_II_29,
    Clk);
  output \LOCKSTEP_Out_reg[2916] ;
  input mem_valid_reg;
  input wb_PC_II_29;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2916] ;
  wire mem_valid_reg;
  wire wb_PC_II_29;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(wb_PC_II_29),
        .Q(\LOCKSTEP_Out_reg[2916] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module MB_FDE_380
   (\LOCKSTEP_Out_reg[2944] ,
    mem_valid_reg,
    wb_PC_II_1,
    Clk);
  output \LOCKSTEP_Out_reg[2944] ;
  input mem_valid_reg;
  input wb_PC_II_1;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2944] ;
  wire mem_valid_reg;
  wire wb_PC_II_1;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(wb_PC_II_1),
        .Q(\LOCKSTEP_Out_reg[2944] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module MB_FDE_383
   (DI,
    mem_valid_reg,
    wb_PC_II_0,
    Clk);
  output DI;
  input mem_valid_reg;
  input wb_PC_II_0;
  input Clk;

  wire Clk;
  wire DI;
  wire mem_valid_reg;
  wire wb_PC_II_0;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(wb_PC_II_0),
        .Q(DI),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module MB_FDE_386
   (\LOCKSTEP_Out_reg[2917] ,
    mem_valid_reg,
    wb_PC_II_28,
    Clk);
  output \LOCKSTEP_Out_reg[2917] ;
  input mem_valid_reg;
  input wb_PC_II_28;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2917] ;
  wire mem_valid_reg;
  wire wb_PC_II_28;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(wb_PC_II_28),
        .Q(\LOCKSTEP_Out_reg[2917] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module MB_FDE_389
   (\LOCKSTEP_Out_reg[2918] ,
    mem_valid_reg,
    wb_PC_II_27,
    Clk);
  output \LOCKSTEP_Out_reg[2918] ;
  input mem_valid_reg;
  input wb_PC_II_27;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2918] ;
  wire mem_valid_reg;
  wire wb_PC_II_27;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(wb_PC_II_27),
        .Q(\LOCKSTEP_Out_reg[2918] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module MB_FDE_392
   (\LOCKSTEP_Out_reg[2919] ,
    mem_valid_reg,
    wb_PC_II_26,
    Clk);
  output \LOCKSTEP_Out_reg[2919] ;
  input mem_valid_reg;
  input wb_PC_II_26;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2919] ;
  wire mem_valid_reg;
  wire wb_PC_II_26;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(wb_PC_II_26),
        .Q(\LOCKSTEP_Out_reg[2919] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module MB_FDE_395
   (\LOCKSTEP_Out_reg[2920] ,
    mem_valid_reg,
    wb_PC_II_25,
    Clk);
  output \LOCKSTEP_Out_reg[2920] ;
  input mem_valid_reg;
  input wb_PC_II_25;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2920] ;
  wire mem_valid_reg;
  wire wb_PC_II_25;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(wb_PC_II_25),
        .Q(\LOCKSTEP_Out_reg[2920] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module MB_FDE_398
   (\LOCKSTEP_Out_reg[2921] ,
    mem_valid_reg,
    wb_PC_II_24,
    Clk);
  output \LOCKSTEP_Out_reg[2921] ;
  input mem_valid_reg;
  input wb_PC_II_24;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2921] ;
  wire mem_valid_reg;
  wire wb_PC_II_24;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(wb_PC_II_24),
        .Q(\LOCKSTEP_Out_reg[2921] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module MB_FDE_401
   (\LOCKSTEP_Out_reg[2922] ,
    mem_valid_reg,
    wb_PC_II_23,
    Clk);
  output \LOCKSTEP_Out_reg[2922] ;
  input mem_valid_reg;
  input wb_PC_II_23;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2922] ;
  wire mem_valid_reg;
  wire wb_PC_II_23;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(wb_PC_II_23),
        .Q(\LOCKSTEP_Out_reg[2922] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDE" *) 
module MB_FDE_404
   (\LOCKSTEP_Out_reg[2923] ,
    mem_valid_reg,
    wb_PC_II_22,
    Clk);
  output \LOCKSTEP_Out_reg[2923] ;
  input mem_valid_reg;
  input wb_PC_II_22;
  input Clk;

  wire Clk;
  wire \LOCKSTEP_Out_reg[2923] ;
  wire mem_valid_reg;
  wire wb_PC_II_22;

  (* XILINX_LEGACY_PRIM = "FDE" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(mem_valid_reg),
        .D(wb_PC_II_22),
        .Q(\LOCKSTEP_Out_reg[2923] ),
        .R(1'b0));
endmodule

module MB_FDR
   (\Using_FPGA.Native_0 ,
    sync_reset,
    Clk,
    ex_branch_with_delayslot_reg,
    of_pause_reg,
    Q,
    ex_valid_reg,
    I0);
  output \Using_FPGA.Native_0 ;
  input sync_reset;
  input Clk;
  input ex_branch_with_delayslot_reg;
  input of_pause_reg;
  input [5:0]Q;
  input ex_valid_reg;
  input I0;

  wire Clk;
  wire I0;
  wire [5:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_i_2__68_n_0 ;
  wire ex_branch_with_delayslot_reg;
  wire ex_valid_reg;
  wire of_clear_MSR_BIP_hold_cmb94_out;
  wire of_clear_MSR_BIP_hold_s;
  wire of_pause_reg;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_clear_MSR_BIP_hold_cmb94_out),
        .Q(of_clear_MSR_BIP_hold_s),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'h00A8)) 
    \Using_FPGA.Native_i_1__116 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(ex_branch_with_delayslot_reg),
        .I2(of_clear_MSR_BIP_hold_s),
        .I3(of_pause_reg),
        .O(of_clear_MSR_BIP_hold_cmb94_out));
  LUT6 #(
    .INIT(64'hAAAAAEAAAAAAAAAA)) 
    \Using_FPGA.Native_i_1__117 
       (.I0(of_clear_MSR_BIP_hold_s),
        .I1(Q[3]),
        .I2(Q[4]),
        .I3(Q[0]),
        .I4(\Using_FPGA.Native_i_2__68_n_0 ),
        .I5(ex_valid_reg),
        .O(\Using_FPGA.Native_0 ));
  LUT4 #(
    .INIT(16'hDFFF)) 
    \Using_FPGA.Native_i_2__68 
       (.I0(Q[5]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(I0),
        .O(\Using_FPGA.Native_i_2__68_n_0 ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_115
   (addr,
    if_fetch_for_timing_optimization1,
    if_fetch_in_progress_reg,
    sync_reset,
    sel_input_iii_3,
    Clk,
    out,
    if_sel_input,
    ex_jump,
    if_fetch_in_progress,
    \Serial_Dbg_Intf.if_debug_ready_i_reg ,
    \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ,
    \Performace_Debug_Control.dbg_state_nohalt_reg );
  output [0:0]addr;
  output if_fetch_for_timing_optimization1;
  output if_fetch_in_progress_reg;
  input sync_reset;
  input sel_input_iii_3;
  input Clk;
  input out;
  input [0:0]if_sel_input;
  input ex_jump;
  input if_fetch_in_progress;
  input \Serial_Dbg_Intf.if_debug_ready_i_reg ;
  input \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  input [0:0]\Performace_Debug_Control.dbg_state_nohalt_reg ;

  wire Clk;
  wire [0:0]\Performace_Debug_Control.dbg_state_nohalt_reg ;
  wire \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  wire \Serial_Dbg_Intf.if_debug_ready_i_reg ;
  wire [0:0]addr;
  wire ex_jump;
  wire if_fetch_for_timing_optimization1;
  wire if_fetch_in_progress;
  wire if_fetch_in_progress_i_2_n_0;
  wire if_fetch_in_progress_reg;
  wire [0:0]if_sel_input;
  wire out;
  wire sel_input_iii_3;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(sel_input_iii_3),
        .Q(addr),
        .R(sync_reset));
  LUT2 #(
    .INIT(4'h1)) 
    \Using_FPGA.Native_i_1__120 
       (.I0(addr),
        .I1(if_sel_input),
        .O(if_fetch_for_timing_optimization1));
  LUT6 #(
    .INIT(64'h00000000000000F8)) 
    if_fetch_in_progress_i_1
       (.I0(if_fetch_in_progress),
        .I1(\Serial_Dbg_Intf.if_debug_ready_i_reg ),
        .I2(if_fetch_in_progress_i_2_n_0),
        .I3(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .I4(\Performace_Debug_Control.dbg_state_nohalt_reg ),
        .I5(sync_reset),
        .O(if_fetch_in_progress_reg));
  LUT4 #(
    .INIT(16'hAA02)) 
    if_fetch_in_progress_i_2
       (.I0(out),
        .I1(addr),
        .I2(if_sel_input),
        .I3(ex_jump),
        .O(if_fetch_in_progress_i_2_n_0));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_116
   (if_sel_input,
    \Serial_Dbg_Intf.status_reg_reg[25] ,
    \Using_FPGA.Native_0 ,
    sync_reset,
    sel_input_iii_2,
    Clk,
    ex_jump,
    addr,
    out,
    \Serial_Dbg_Intf.if_debug_ready_i_reg ,
    if_fetch_in_progress,
    in0);
  output [0:0]if_sel_input;
  output [1:0]\Serial_Dbg_Intf.status_reg_reg[25] ;
  output [0:0]\Using_FPGA.Native_0 ;
  input sync_reset;
  input sel_input_iii_2;
  input Clk;
  input ex_jump;
  input [0:0]addr;
  input out;
  input \Serial_Dbg_Intf.if_debug_ready_i_reg ;
  input if_fetch_in_progress;
  input in0;

  wire Clk;
  wire \Serial_Dbg_Intf.if_debug_ready_i_reg ;
  wire [1:0]\Serial_Dbg_Intf.status_reg_reg[25] ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]addr;
  wire ex_jump;
  wire if_fetch_in_progress;
  wire [0:0]if_sel_input;
  wire in0;
  wire out;
  wire sel_input_iii_2;
  wire sync_reset;

  LUT5 #(
    .INIT(32'hEEEFAAAA)) 
    IFetch_INST_0
       (.I0(if_fetch_in_progress),
        .I1(ex_jump),
        .I2(if_sel_input),
        .I3(addr),
        .I4(in0),
        .O(\Serial_Dbg_Intf.status_reg_reg[25] [1]));
  LUT6 #(
    .INIT(64'h0000AB00AB00AB00)) 
    I_AS_INST_0
       (.I0(ex_jump),
        .I1(if_sel_input),
        .I2(addr),
        .I3(out),
        .I4(\Serial_Dbg_Intf.if_debug_ready_i_reg ),
        .I5(if_fetch_in_progress),
        .O(\Serial_Dbg_Intf.status_reg_reg[25] [0]));
  LUT2 #(
    .INIT(4'h2)) 
    \PC_Buffer_reg[3][0]_srl4_i_2 
       (.I0(if_sel_input),
        .I1(addr),
        .O(\Using_FPGA.Native_0 ));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(sel_input_iii_2),
        .Q(if_sel_input),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_118
   (if_sel_input,
    sync_reset,
    sel_input_iii_1,
    Clk);
  output [0:0]if_sel_input;
  input sync_reset;
  input sel_input_iii_1;
  input Clk;

  wire Clk;
  wire [0:0]if_sel_input;
  wire sel_input_iii_1;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(sel_input_iii_1),
        .Q(if_sel_input),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_120
   (\Using_FPGA.Native_0 ,
    I1_2,
    I13_out,
    I17_out,
    I111_out,
    I115_out,
    I119_out,
    I123_out,
    I127_out,
    I131_out,
    I135_out,
    I143_out,
    I147_out,
    I151_out,
    I155_out,
    I159_out,
    I163_out,
    I167_out,
    I171_out,
    I175_out,
    I179_out,
    I183_out,
    I187_out,
    I191_out,
    I195_out,
    I199_out,
    I1103_out,
    I1107_out,
    I1111_out,
    I1115_out,
    I1119_out,
    I1123_out,
    I1127_out,
    I1131_out,
    I1135_out,
    I1139_out,
    I1143_out,
    I1147_out,
    I1151_out,
    I1155_out,
    I1159_out,
    I1163_out,
    I1167_out,
    sync_reset,
    sel_input_i_1,
    Clk,
    in,
    out);
  output \Using_FPGA.Native_0 ;
  output I1_2;
  output I13_out;
  output I17_out;
  output I111_out;
  output I115_out;
  output I119_out;
  output I123_out;
  output I127_out;
  output I131_out;
  output I135_out;
  output I143_out;
  output I147_out;
  output I151_out;
  output I155_out;
  output I159_out;
  output I163_out;
  output I167_out;
  output I171_out;
  output I175_out;
  output I179_out;
  output I183_out;
  output I187_out;
  output I191_out;
  output I195_out;
  output I199_out;
  output I1103_out;
  output I1107_out;
  output I1111_out;
  output I1115_out;
  output I1119_out;
  output I1123_out;
  output I1127_out;
  output I1131_out;
  output I1135_out;
  output I1139_out;
  output I1143_out;
  output I1147_out;
  output I1151_out;
  output I1155_out;
  output I1159_out;
  output I1163_out;
  output I1167_out;
  input sync_reset;
  input sel_input_i_1;
  input Clk;
  input [31:0]in;
  input [41:0]out;

  wire Clk;
  wire I1103_out;
  wire I1107_out;
  wire I1111_out;
  wire I1115_out;
  wire I1119_out;
  wire I111_out;
  wire I1123_out;
  wire I1127_out;
  wire I1131_out;
  wire I1135_out;
  wire I1139_out;
  wire I1143_out;
  wire I1147_out;
  wire I1151_out;
  wire I1155_out;
  wire I1159_out;
  wire I115_out;
  wire I1163_out;
  wire I1167_out;
  wire I119_out;
  wire I123_out;
  wire I127_out;
  wire I131_out;
  wire I135_out;
  wire I13_out;
  wire I143_out;
  wire I147_out;
  wire I151_out;
  wire I155_out;
  wire I159_out;
  wire I163_out;
  wire I167_out;
  wire I171_out;
  wire I175_out;
  wire I179_out;
  wire I17_out;
  wire I183_out;
  wire I187_out;
  wire I191_out;
  wire I195_out;
  wire I199_out;
  wire I1_2;
  wire \Using_FPGA.Native_0 ;
  wire [31:0]in;
  wire [41:0]out;
  wire sel_input_i_1;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(sel_input_i_1),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__100 
       (.I0(in[9]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out[30]),
        .O(I1123_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__101 
       (.I0(in[21]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out[31]),
        .O(I1127_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__102 
       (.I0(in[22]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out[32]),
        .O(I1131_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__103 
       (.I0(in[23]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out[33]),
        .O(I1135_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__104 
       (.I0(in[24]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out[34]),
        .O(I1139_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__105 
       (.I0(in[25]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out[35]),
        .O(I1143_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__106 
       (.I0(in[26]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out[36]),
        .O(I1147_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__107 
       (.I0(in[27]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out[37]),
        .O(I1151_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__108 
       (.I0(in[28]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out[38]),
        .O(I1155_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__109 
       (.I0(in[29]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out[39]),
        .O(I1159_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__110 
       (.I0(in[30]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out[40]),
        .O(I1163_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__111 
       (.I0(in[31]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out[41]),
        .O(I1167_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__69 
       (.I0(in[0]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out[0]),
        .O(I1_2));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__70 
       (.I0(in[1]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out[1]),
        .O(I13_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__71 
       (.I0(in[2]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out[2]),
        .O(I17_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__72 
       (.I0(in[3]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out[3]),
        .O(I111_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__73 
       (.I0(in[4]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out[4]),
        .O(I115_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__74 
       (.I0(in[5]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out[5]),
        .O(I119_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__75 
       (.I0(in[6]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out[6]),
        .O(I123_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__76 
       (.I0(in[7]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out[7]),
        .O(I127_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__77 
       (.I0(in[8]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out[8]),
        .O(I131_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__78 
       (.I0(in[9]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out[9]),
        .O(I135_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__80 
       (.I0(in[10]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out[10]),
        .O(I143_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__81 
       (.I0(in[11]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out[11]),
        .O(I147_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__82 
       (.I0(in[12]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out[12]),
        .O(I151_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__83 
       (.I0(in[13]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out[13]),
        .O(I155_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__84 
       (.I0(in[14]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out[14]),
        .O(I159_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__85 
       (.I0(in[15]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out[15]),
        .O(I163_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__86 
       (.I0(in[16]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out[16]),
        .O(I167_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__87 
       (.I0(in[17]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out[17]),
        .O(I171_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__88 
       (.I0(in[18]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out[18]),
        .O(I175_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__89 
       (.I0(in[19]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out[19]),
        .O(I179_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__90 
       (.I0(in[20]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out[20]),
        .O(I183_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__91 
       (.I0(in[0]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out[21]),
        .O(I187_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__92 
       (.I0(in[1]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out[22]),
        .O(I191_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__93 
       (.I0(in[2]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out[23]),
        .O(I195_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__94 
       (.I0(in[3]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out[24]),
        .O(I199_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__95 
       (.I0(in[4]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out[25]),
        .O(I1103_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__96 
       (.I0(in[5]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out[26]),
        .O(I1107_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__97 
       (.I0(in[6]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out[27]),
        .O(I1111_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__98 
       (.I0(in[7]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out[28]),
        .O(I1115_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__99 
       (.I0(in[8]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out[29]),
        .O(I1119_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_122
   (\ex_opcode_reg[0] ,
    ex_is_multi_instr2_reg,
    sync_reset,
    of_instr_ii_42,
    Clk,
    \Using_FPGA.Native_0 );
  output \ex_opcode_reg[0] ;
  output ex_is_multi_instr2_reg;
  input sync_reset;
  input of_instr_ii_42;
  input Clk;
  input \Using_FPGA.Native_0 ;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire ex_is_multi_instr2_reg;
  wire \ex_opcode_reg[0] ;
  wire of_instr_ii_42;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_42),
        .Q(\ex_opcode_reg[0] ),
        .R(sync_reset));
  LUT2 #(
    .INIT(4'h8)) 
    \Using_FPGA.Native_i_4 
       (.I0(\ex_opcode_reg[0] ),
        .I1(\Using_FPGA.Native_0 ),
        .O(ex_is_multi_instr2_reg));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_124
   (\ex_gpr_write_addr_reg[4] ,
    \EX_Op3_reg[31] ,
    sync_reset,
    of_instr_ii_32,
    Clk,
    \mem_gpr_write_addr_reg[0] ,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 );
  output \ex_gpr_write_addr_reg[4] ;
  output \EX_Op3_reg[31] ;
  input sync_reset;
  input of_instr_ii_32;
  input Clk;
  input [2:0]\mem_gpr_write_addr_reg[0] ;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;

  wire Clk;
  wire \EX_Op3_reg[31] ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \ex_gpr_write_addr_reg[4] ;
  wire [2:0]\mem_gpr_write_addr_reg[0] ;
  wire of_instr_ii_32;
  wire sync_reset;

  LUT6 #(
    .INIT(64'h2FF22FF2FFFF2FF2)) 
    \EX_Op3[0]_i_16 
       (.I0(\mem_gpr_write_addr_reg[0] [0]),
        .I1(\ex_gpr_write_addr_reg[4] ),
        .I2(\mem_gpr_write_addr_reg[0] [1]),
        .I3(\Using_FPGA.Native_0 ),
        .I4(\Using_FPGA.Native_1 ),
        .I5(\mem_gpr_write_addr_reg[0] [2]),
        .O(\EX_Op3_reg[31] ));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_32),
        .Q(\ex_gpr_write_addr_reg[4] ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_126
   (\ex_instr_reg[11] ,
    Dbg_Clean_Stop0,
    ex_branch_with_delayslot_reg,
    ex_branch_with_delayslot_i_reg,
    sync_reset,
    of_instr_ii_31,
    Clk,
    ex_jump_nodelay,
    ex_jump,
    E,
    \Using_FPGA.Native_0 ,
    ex_enable_sext_shift_i0,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    of_pause_reg,
    ex_branch_with_delayslot_i);
  output \ex_instr_reg[11] ;
  output Dbg_Clean_Stop0;
  output ex_branch_with_delayslot_reg;
  output ex_branch_with_delayslot_i_reg;
  input sync_reset;
  input of_instr_ii_31;
  input Clk;
  input ex_jump_nodelay;
  input ex_jump;
  input [0:0]E;
  input \Using_FPGA.Native_0 ;
  input ex_enable_sext_shift_i0;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input \Using_FPGA.Native_3 ;
  input of_pause_reg;
  input ex_branch_with_delayslot_i;

  wire Clk;
  wire Dbg_Clean_Stop0;
  wire [0:0]E;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire ex_branch_with_delayslot_i;
  wire ex_branch_with_delayslot_i_reg;
  wire ex_branch_with_delayslot_reg;
  wire ex_enable_sext_shift_i0;
  wire \ex_instr_reg[11] ;
  wire ex_jump;
  wire ex_jump_nodelay;
  wire of_instr_ii_31;
  wire of_pause_reg;
  wire sync_reset;

  LUT4 #(
    .INIT(16'h888F)) 
    Dbg_Clean_Stop_i_1
       (.I0(ex_jump_nodelay),
        .I1(ex_jump),
        .I2(ex_branch_with_delayslot_reg),
        .I3(E),
        .O(Dbg_Clean_Stop0));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_31),
        .Q(\ex_instr_reg[11] ),
        .R(sync_reset));
  LUT6 #(
    .INIT(64'hC0A0F000C0A00000)) 
    ex_branch_with_delayslot_i_1
       (.I0(\ex_instr_reg[11] ),
        .I1(\Using_FPGA.Native_0 ),
        .I2(ex_enable_sext_shift_i0),
        .I3(\Using_FPGA.Native_1 ),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\Using_FPGA.Native_3 ),
        .O(ex_branch_with_delayslot_reg));
  LUT3 #(
    .INIT(8'hB8)) 
    ex_branch_with_delayslot_i_i_1
       (.I0(ex_branch_with_delayslot_reg),
        .I1(of_pause_reg),
        .I2(ex_branch_with_delayslot_i),
        .O(ex_branch_with_delayslot_i_reg));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_128
   (\ex_instr_reg[12] ,
    sync_reset,
    of_instr_ii_30,
    Clk);
  output \ex_instr_reg[12] ;
  input sync_reset;
  input of_instr_ii_30;
  input Clk;

  wire Clk;
  wire \ex_instr_reg[12] ;
  wire of_instr_ii_30;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_30),
        .Q(\ex_instr_reg[12] ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_130
   (\ex_instr_reg[13] ,
    \Performace_Debug_Control.ex_brki_hit_reg ,
    sync_reset,
    of_instr_ii_29,
    Clk,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 );
  output \ex_instr_reg[13] ;
  output \Performace_Debug_Control.ex_brki_hit_reg ;
  input sync_reset;
  input of_instr_ii_29;
  input Clk;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input \Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;

  wire Clk;
  wire \Performace_Debug_Control.ex_brki_hit_reg ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;
  wire \ex_instr_reg[13] ;
  wire of_instr_ii_29;
  wire sync_reset;

  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFF7)) 
    \Performace_Debug_Control.ex_brki_hit_i_3 
       (.I0(\ex_instr_reg[13] ),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\Using_FPGA.Native_2 ),
        .I4(\Using_FPGA.Native_3 ),
        .I5(\Using_FPGA.Native_4 ),
        .O(\Performace_Debug_Control.ex_brki_hit_reg ));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_29),
        .Q(\ex_instr_reg[13] ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_132
   (\ex_instr_reg[14] ,
    ex_mbar_decode_reg,
    sync_reset,
    of_instr_ii_28,
    Clk,
    ex_branch_with_delayslot_reg,
    ex_mbar_decode,
    of_pause_reg,
    \Using_FPGA.Native_0 );
  output [0:0]\ex_instr_reg[14] ;
  output ex_mbar_decode_reg;
  input sync_reset;
  input of_instr_ii_28;
  input Clk;
  input ex_branch_with_delayslot_reg;
  input ex_mbar_decode;
  input of_pause_reg;
  input \Using_FPGA.Native_0 ;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire ex_branch_with_delayslot_reg;
  wire [0:0]\ex_instr_reg[14] ;
  wire ex_mbar_decode;
  wire ex_mbar_decode_reg;
  wire of_instr_ii_28;
  wire of_pause_reg;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_28),
        .Q(\ex_instr_reg[14] ),
        .R(sync_reset));
  LUT5 #(
    .INIT(32'hF4040404)) 
    ex_mbar_decode_cmb_inferred_i_1
       (.I0(ex_branch_with_delayslot_reg),
        .I1(ex_mbar_decode),
        .I2(of_pause_reg),
        .I3(\ex_instr_reg[14] ),
        .I4(\Using_FPGA.Native_0 ),
        .O(ex_mbar_decode_reg));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_134
   (\ex_instr_reg[15] ,
    sync_reset,
    of_instr_ii_27,
    Clk);
  output [0:0]\ex_instr_reg[15] ;
  input sync_reset;
  input of_instr_ii_27;
  input Clk;

  wire Clk;
  wire [0:0]\ex_instr_reg[15] ;
  wire of_instr_ii_27;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_27),
        .Q(\ex_instr_reg[15] ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_136
   (\ex_instr_reg[16] ,
    \EX_Op2_reg[15] ,
    \EX_Op2_reg[14] ,
    \EX_Op2_reg[13] ,
    \EX_Op2_reg[12] ,
    \EX_Op2_reg[11] ,
    \EX_Op2_reg[10] ,
    \EX_Op2_reg[9] ,
    \EX_Op2_reg[8] ,
    \EX_Op2_reg[7] ,
    \EX_Op2_reg[6] ,
    \EX_Op2_reg[5] ,
    \EX_Op2_reg[4] ,
    \EX_Op2_reg[3] ,
    \EX_Op2_reg[2] ,
    \EX_Op2_reg[1] ,
    sync_reset,
    of_instr_ii_26,
    Clk,
    wb_exception_i_reg,
    \imm_reg_reg[1] ,
    \Using_FPGA.Native_0 ,
    GPR_Op2);
  output \ex_instr_reg[16] ;
  output \EX_Op2_reg[15] ;
  output \EX_Op2_reg[14] ;
  output \EX_Op2_reg[13] ;
  output \EX_Op2_reg[12] ;
  output \EX_Op2_reg[11] ;
  output \EX_Op2_reg[10] ;
  output \EX_Op2_reg[9] ;
  output \EX_Op2_reg[8] ;
  output \EX_Op2_reg[7] ;
  output \EX_Op2_reg[6] ;
  output \EX_Op2_reg[5] ;
  output \EX_Op2_reg[4] ;
  output \EX_Op2_reg[3] ;
  output \EX_Op2_reg[2] ;
  output \EX_Op2_reg[1] ;
  input sync_reset;
  input of_instr_ii_26;
  input Clk;
  input wb_exception_i_reg;
  input [14:0]\imm_reg_reg[1] ;
  input \Using_FPGA.Native_0 ;
  input [14:0]GPR_Op2;

  wire Clk;
  wire \EX_Op2_reg[10] ;
  wire \EX_Op2_reg[11] ;
  wire \EX_Op2_reg[12] ;
  wire \EX_Op2_reg[13] ;
  wire \EX_Op2_reg[14] ;
  wire \EX_Op2_reg[15] ;
  wire \EX_Op2_reg[1] ;
  wire \EX_Op2_reg[2] ;
  wire \EX_Op2_reg[3] ;
  wire \EX_Op2_reg[4] ;
  wire \EX_Op2_reg[5] ;
  wire \EX_Op2_reg[6] ;
  wire \EX_Op2_reg[7] ;
  wire \EX_Op2_reg[8] ;
  wire \EX_Op2_reg[9] ;
  wire [14:0]GPR_Op2;
  wire \Using_FPGA.Native_0 ;
  wire \ex_instr_reg[16] ;
  wire [14:0]\imm_reg_reg[1] ;
  wire of_instr_ii_26;
  wire sync_reset;
  wire wb_exception_i_reg;

  LUT5 #(
    .INIT(32'h0047FF47)) 
    \EX_Op2[10]_i_2 
       (.I0(\ex_instr_reg[16] ),
        .I1(wb_exception_i_reg),
        .I2(\imm_reg_reg[1] [5]),
        .I3(\Using_FPGA.Native_0 ),
        .I4(GPR_Op2[5]),
        .O(\EX_Op2_reg[10] ));
  LUT5 #(
    .INIT(32'h0047FF47)) 
    \EX_Op2[11]_i_2 
       (.I0(\ex_instr_reg[16] ),
        .I1(wb_exception_i_reg),
        .I2(\imm_reg_reg[1] [4]),
        .I3(\Using_FPGA.Native_0 ),
        .I4(GPR_Op2[4]),
        .O(\EX_Op2_reg[11] ));
  LUT5 #(
    .INIT(32'h0047FF47)) 
    \EX_Op2[12]_i_2 
       (.I0(\ex_instr_reg[16] ),
        .I1(wb_exception_i_reg),
        .I2(\imm_reg_reg[1] [3]),
        .I3(\Using_FPGA.Native_0 ),
        .I4(GPR_Op2[3]),
        .O(\EX_Op2_reg[12] ));
  LUT5 #(
    .INIT(32'h0047FF47)) 
    \EX_Op2[13]_i_2 
       (.I0(\ex_instr_reg[16] ),
        .I1(wb_exception_i_reg),
        .I2(\imm_reg_reg[1] [2]),
        .I3(\Using_FPGA.Native_0 ),
        .I4(GPR_Op2[2]),
        .O(\EX_Op2_reg[13] ));
  LUT5 #(
    .INIT(32'h0047FF47)) 
    \EX_Op2[14]_i_2 
       (.I0(\ex_instr_reg[16] ),
        .I1(wb_exception_i_reg),
        .I2(\imm_reg_reg[1] [1]),
        .I3(\Using_FPGA.Native_0 ),
        .I4(GPR_Op2[1]),
        .O(\EX_Op2_reg[14] ));
  LUT5 #(
    .INIT(32'h0047FF47)) 
    \EX_Op2[15]_i_2 
       (.I0(\ex_instr_reg[16] ),
        .I1(wb_exception_i_reg),
        .I2(\imm_reg_reg[1] [0]),
        .I3(\Using_FPGA.Native_0 ),
        .I4(GPR_Op2[0]),
        .O(\EX_Op2_reg[15] ));
  LUT5 #(
    .INIT(32'h0047FF47)) 
    \EX_Op2[1]_i_2 
       (.I0(\ex_instr_reg[16] ),
        .I1(wb_exception_i_reg),
        .I2(\imm_reg_reg[1] [14]),
        .I3(\Using_FPGA.Native_0 ),
        .I4(GPR_Op2[14]),
        .O(\EX_Op2_reg[1] ));
  LUT5 #(
    .INIT(32'h0047FF47)) 
    \EX_Op2[2]_i_2 
       (.I0(\ex_instr_reg[16] ),
        .I1(wb_exception_i_reg),
        .I2(\imm_reg_reg[1] [13]),
        .I3(\Using_FPGA.Native_0 ),
        .I4(GPR_Op2[13]),
        .O(\EX_Op2_reg[2] ));
  LUT5 #(
    .INIT(32'h0047FF47)) 
    \EX_Op2[3]_i_2 
       (.I0(\ex_instr_reg[16] ),
        .I1(wb_exception_i_reg),
        .I2(\imm_reg_reg[1] [12]),
        .I3(\Using_FPGA.Native_0 ),
        .I4(GPR_Op2[12]),
        .O(\EX_Op2_reg[3] ));
  LUT5 #(
    .INIT(32'h0047FF47)) 
    \EX_Op2[4]_i_2 
       (.I0(\ex_instr_reg[16] ),
        .I1(wb_exception_i_reg),
        .I2(\imm_reg_reg[1] [11]),
        .I3(\Using_FPGA.Native_0 ),
        .I4(GPR_Op2[11]),
        .O(\EX_Op2_reg[4] ));
  LUT5 #(
    .INIT(32'h0047FF47)) 
    \EX_Op2[5]_i_2 
       (.I0(\ex_instr_reg[16] ),
        .I1(wb_exception_i_reg),
        .I2(\imm_reg_reg[1] [10]),
        .I3(\Using_FPGA.Native_0 ),
        .I4(GPR_Op2[10]),
        .O(\EX_Op2_reg[5] ));
  LUT5 #(
    .INIT(32'h0047FF47)) 
    \EX_Op2[6]_i_2 
       (.I0(\ex_instr_reg[16] ),
        .I1(wb_exception_i_reg),
        .I2(\imm_reg_reg[1] [9]),
        .I3(\Using_FPGA.Native_0 ),
        .I4(GPR_Op2[9]),
        .O(\EX_Op2_reg[6] ));
  LUT5 #(
    .INIT(32'h0047FF47)) 
    \EX_Op2[7]_i_2 
       (.I0(\ex_instr_reg[16] ),
        .I1(wb_exception_i_reg),
        .I2(\imm_reg_reg[1] [8]),
        .I3(\Using_FPGA.Native_0 ),
        .I4(GPR_Op2[8]),
        .O(\EX_Op2_reg[7] ));
  LUT5 #(
    .INIT(32'h0047FF47)) 
    \EX_Op2[8]_i_2 
       (.I0(\ex_instr_reg[16] ),
        .I1(wb_exception_i_reg),
        .I2(\imm_reg_reg[1] [7]),
        .I3(\Using_FPGA.Native_0 ),
        .I4(GPR_Op2[7]),
        .O(\EX_Op2_reg[8] ));
  LUT5 #(
    .INIT(32'h0047FF47)) 
    \EX_Op2[9]_i_2 
       (.I0(\ex_instr_reg[16] ),
        .I1(wb_exception_i_reg),
        .I2(\imm_reg_reg[1] [6]),
        .I3(\Using_FPGA.Native_0 ),
        .I4(GPR_Op2[6]),
        .O(\EX_Op2_reg[9] ));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_26),
        .Q(\ex_instr_reg[16] ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_138
   (\ex_instr_reg[17] ,
    ex_is_multi_or_load_instr0,
    ex_gpr_write_dbg_reg,
    of_op1_sel_spr,
    sync_reset,
    of_instr_ii_25,
    Clk,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 );
  output \ex_instr_reg[17] ;
  output ex_is_multi_or_load_instr0;
  output ex_gpr_write_dbg_reg;
  output of_op1_sel_spr;
  input sync_reset;
  input of_instr_ii_25;
  input Clk;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input \Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;
  wire ex_gpr_write_dbg_reg;
  wire \ex_instr_reg[17] ;
  wire ex_is_multi_or_load_instr0;
  wire of_instr_ii_25;
  wire of_op1_sel_spr;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_25),
        .Q(\ex_instr_reg[17] ),
        .R(sync_reset));
  LUT6 #(
    .INIT(64'h0000FF1000000000)) 
    \Using_FPGA.Native_i_1__110 
       (.I0(\ex_instr_reg[17] ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(\Using_FPGA.Native_2 ),
        .I3(\Using_FPGA.Native_0 ),
        .I4(\Using_FPGA.Native_4 ),
        .I5(\Using_FPGA.Native_3 ),
        .O(of_op1_sel_spr));
  LUT6 #(
    .INIT(64'hF0010003FFFFFFFF)) 
    ex_gpr_write_i_4
       (.I0(\ex_instr_reg[17] ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(\Using_FPGA.Native_4 ),
        .I3(\Using_FPGA.Native_0 ),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\Using_FPGA.Native_3 ),
        .O(ex_gpr_write_dbg_reg));
  LUT6 #(
    .INIT(64'h0000FFFF01000000)) 
    ex_is_multi_or_load_instr_i_1
       (.I0(\ex_instr_reg[17] ),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\Using_FPGA.Native_2 ),
        .I4(\Using_FPGA.Native_3 ),
        .I5(\Using_FPGA.Native_4 ),
        .O(ex_is_multi_or_load_instr0));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_140
   (\ex_instr_reg[18] ,
    sync_reset,
    of_instr_ii_24,
    Clk);
  output \ex_instr_reg[18] ;
  input sync_reset;
  input of_instr_ii_24;
  input Clk;

  wire Clk;
  wire \ex_instr_reg[18] ;
  wire of_instr_ii_24;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_24),
        .Q(\ex_instr_reg[18] ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_142
   (\ex_instr_reg[19] ,
    sync_reset,
    of_instr_ii_23,
    Clk);
  output \ex_instr_reg[19] ;
  input sync_reset;
  input of_instr_ii_23;
  input Clk;

  wire Clk;
  wire \ex_instr_reg[19] ;
  wire of_instr_ii_23;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_23),
        .Q(\ex_instr_reg[19] ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_144
   (\ex_opcode_reg[1] ,
    ex_move_to_MSR_instr93_out,
    force_Val2_N_reg,
    \EX_ALU_Op_reg[0] ,
    \EX_ALU_Op_reg[1] ,
    \Performace_Debug_Control.ex_brki_hit_reg ,
    \imm_reg_reg[0] ,
    D225_out,
    ex_load_alu_carry97_out,
    ex_alu_sel_logic_i103_out,
    D222_out,
    \EX_Op2_reg[15] ,
    EX_Use_Carry_reg,
    sync_reset,
    of_instr_ii_41,
    Clk,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 ,
    \Using_FPGA.Native_5 ,
    \Using_FPGA.Native_6 ,
    \Using_FPGA.Native_7 ,
    \Using_FPGA.Native_8 ,
    \Using_FPGA.Native_9 ,
    \Using_FPGA.Native_10 ,
    \Using_FPGA.Native_11 ,
    ex_jump_nodelay,
    ex_jump);
  output \ex_opcode_reg[1] ;
  output ex_move_to_MSR_instr93_out;
  output force_Val2_N_reg;
  output [1:0]\EX_ALU_Op_reg[0] ;
  output \EX_ALU_Op_reg[1] ;
  output \Performace_Debug_Control.ex_brki_hit_reg ;
  output \imm_reg_reg[0] ;
  output D225_out;
  output ex_load_alu_carry97_out;
  output ex_alu_sel_logic_i103_out;
  output D222_out;
  output \EX_Op2_reg[15] ;
  output EX_Use_Carry_reg;
  input sync_reset;
  input of_instr_ii_41;
  input Clk;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input \Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;
  input \Using_FPGA.Native_5 ;
  input \Using_FPGA.Native_6 ;
  input \Using_FPGA.Native_7 ;
  input \Using_FPGA.Native_8 ;
  input \Using_FPGA.Native_9 ;
  input \Using_FPGA.Native_10 ;
  input \Using_FPGA.Native_11 ;
  input ex_jump_nodelay;
  input ex_jump;

  wire Clk;
  wire D222_out;
  wire D225_out;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire \EX_ALU_Op_reg[1] ;
  wire \EX_Op2_reg[15] ;
  wire EX_Use_Carry_reg;
  wire \Performace_Debug_Control.ex_brki_hit_reg ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_10 ;
  wire \Using_FPGA.Native_11 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;
  wire \Using_FPGA.Native_5 ;
  wire \Using_FPGA.Native_6 ;
  wire \Using_FPGA.Native_7 ;
  wire \Using_FPGA.Native_8 ;
  wire \Using_FPGA.Native_9 ;
  wire ex_alu_sel_logic_i103_out;
  wire ex_jump;
  wire ex_jump_nodelay;
  wire ex_load_alu_carry97_out;
  wire ex_move_to_MSR_instr93_out;
  wire ex_move_to_MSR_instr_i_2_n_0;
  wire \ex_opcode_reg[1] ;
  wire force_Val2_N_reg;
  wire \imm_reg_reg[0] ;
  wire of_instr_ii_41;
  wire sync_reset;

  LUT6 #(
    .INIT(64'h0000F9FFF9FFF9FF)) 
    \EX_ALU_Op[0]_i_1 
       (.I0(\Using_FPGA.Native_7 ),
        .I1(\ex_opcode_reg[1] ),
        .I2(\Using_FPGA.Native_5 ),
        .I3(\Using_FPGA.Native_11 ),
        .I4(\EX_ALU_Op_reg[1] ),
        .I5(\Using_FPGA.Native_10 ),
        .O(\EX_ALU_Op_reg[0] [1]));
  LUT5 #(
    .INIT(32'h00004000)) 
    \EX_ALU_Op[0]_i_3 
       (.I0(\ex_opcode_reg[1] ),
        .I1(\Using_FPGA.Native_7 ),
        .I2(\Using_FPGA.Native_8 ),
        .I3(\Using_FPGA.Native_5 ),
        .I4(\Using_FPGA.Native_9 ),
        .O(\EX_ALU_Op_reg[1] ));
  LUT6 #(
    .INIT(64'h8FFF8888888F8888)) 
    \EX_ALU_Op[1]_i_1 
       (.I0(\EX_ALU_Op_reg[1] ),
        .I1(\Using_FPGA.Native_10 ),
        .I2(\ex_opcode_reg[1] ),
        .I3(\Using_FPGA.Native_7 ),
        .I4(\Using_FPGA.Native_9 ),
        .I5(\Using_FPGA.Native_11 ),
        .O(\EX_ALU_Op_reg[0] [0]));
  LUT5 #(
    .INIT(32'hF1F0F0F0)) 
    \EX_Op2[0]_i_10 
       (.I0(\ex_opcode_reg[1] ),
        .I1(\Using_FPGA.Native_5 ),
        .I2(\Using_FPGA.Native_6 ),
        .I3(\Using_FPGA.Native_7 ),
        .I4(\Using_FPGA.Native_8 ),
        .O(\EX_Op2_reg[15] ));
  LUT3 #(
    .INIT(8'h10)) 
    EX_Use_Carry_i_1
       (.I0(\ex_opcode_reg[1] ),
        .I1(\Using_FPGA.Native_7 ),
        .I2(\Using_FPGA.Native_5 ),
        .O(EX_Use_Carry_reg));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_41),
        .Q(\ex_opcode_reg[1] ),
        .R(sync_reset));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT4 #(
    .INIT(16'h0888)) 
    \Using_FPGA.Native_i_1__124 
       (.I0(\ex_opcode_reg[1] ),
        .I1(\Using_FPGA.Native_7 ),
        .I2(ex_jump_nodelay),
        .I3(ex_jump),
        .O(D225_out));
  LUT3 #(
    .INIT(8'h08)) 
    \Using_FPGA.Native_i_1__125 
       (.I0(\ex_opcode_reg[1] ),
        .I1(\Using_FPGA.Native_7 ),
        .I2(\Using_FPGA.Native_8 ),
        .O(D222_out));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT3 #(
    .INIT(8'h06)) 
    ex_alu_sel_logic_i_i_1
       (.I0(\ex_opcode_reg[1] ),
        .I1(\Using_FPGA.Native_7 ),
        .I2(\Using_FPGA.Native_8 ),
        .O(ex_alu_sel_logic_i103_out));
  LUT3 #(
    .INIT(8'h01)) 
    ex_load_alu_carry_i_1
       (.I0(\ex_opcode_reg[1] ),
        .I1(\Using_FPGA.Native_7 ),
        .I2(\Using_FPGA.Native_8 ),
        .O(ex_load_alu_carry97_out));
  LUT6 #(
    .INIT(64'h0400000000000000)) 
    ex_mbar_decode_cmb_inferred_i_2
       (.I0(\ex_opcode_reg[1] ),
        .I1(\Using_FPGA.Native_5 ),
        .I2(\Using_FPGA.Native_9 ),
        .I3(\Using_FPGA.Native_7 ),
        .I4(\Using_FPGA.Native_6 ),
        .I5(\Using_FPGA.Native_8 ),
        .O(\Performace_Debug_Control.ex_brki_hit_reg ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    ex_move_to_MSR_instr_i_1
       (.I0(ex_move_to_MSR_instr_i_2_n_0),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\Using_FPGA.Native_2 ),
        .I4(\Using_FPGA.Native_3 ),
        .I5(\Using_FPGA.Native_4 ),
        .O(ex_move_to_MSR_instr93_out));
  LUT6 #(
    .INIT(64'h0100000000000000)) 
    ex_move_to_MSR_instr_i_2
       (.I0(\ex_opcode_reg[1] ),
        .I1(\Using_FPGA.Native_5 ),
        .I2(\Using_FPGA.Native_6 ),
        .I3(\Using_FPGA.Native_7 ),
        .I4(\Using_FPGA.Native_8 ),
        .I5(\Using_FPGA.Native_9 ),
        .O(ex_move_to_MSR_instr_i_2_n_0));
  LUT6 #(
    .INIT(64'hFFBFBFFFFFBFFFFF)) 
    force_Val2_N_i_1
       (.I0(\ex_opcode_reg[1] ),
        .I1(\Using_FPGA.Native_7 ),
        .I2(\Using_FPGA.Native_8 ),
        .I3(\Using_FPGA.Native_9 ),
        .I4(\Using_FPGA.Native_5 ),
        .I5(\Using_FPGA.Native_6 ),
        .O(force_Val2_N_reg));
  LUT2 #(
    .INIT(4'hE)) 
    \imm_reg[0]_i_2 
       (.I0(\ex_opcode_reg[1] ),
        .I1(\Using_FPGA.Native_5 ),
        .O(\imm_reg_reg[0] ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_146
   (\ex_instr_reg[20] ,
    \Performace_Debug_Control.ex_brki_hit_reg ,
    sync_reset,
    of_instr_ii_22,
    Clk,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 ,
    \Using_FPGA.Native_5 ,
    \Using_FPGA.Native_6 ,
    \Using_FPGA.Native_7 ,
    \Using_FPGA.Native_8 );
  output \ex_instr_reg[20] ;
  output \Performace_Debug_Control.ex_brki_hit_reg ;
  input sync_reset;
  input of_instr_ii_22;
  input Clk;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input \Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;
  input \Using_FPGA.Native_5 ;
  input \Using_FPGA.Native_6 ;
  input \Using_FPGA.Native_7 ;
  input \Using_FPGA.Native_8 ;

  wire Clk;
  wire \Performace_Debug_Control.ex_brki_hit_i_2_n_0 ;
  wire \Performace_Debug_Control.ex_brki_hit_reg ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;
  wire \Using_FPGA.Native_5 ;
  wire \Using_FPGA.Native_6 ;
  wire \Using_FPGA.Native_7 ;
  wire \Using_FPGA.Native_8 ;
  wire \ex_instr_reg[20] ;
  wire of_instr_ii_22;
  wire sync_reset;

  LUT5 #(
    .INIT(32'h00000004)) 
    \Performace_Debug_Control.ex_brki_hit_i_1 
       (.I0(\Performace_Debug_Control.ex_brki_hit_i_2_n_0 ),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\Using_FPGA.Native_2 ),
        .I4(\Using_FPGA.Native_3 ),
        .O(\Performace_Debug_Control.ex_brki_hit_reg ));
  LUT6 #(
    .INIT(64'hFFFFFFFEFFFFFFFF)) 
    \Performace_Debug_Control.ex_brki_hit_i_2 
       (.I0(\ex_instr_reg[20] ),
        .I1(\Using_FPGA.Native_4 ),
        .I2(\Using_FPGA.Native_5 ),
        .I3(\Using_FPGA.Native_6 ),
        .I4(\Using_FPGA.Native_7 ),
        .I5(\Using_FPGA.Native_8 ),
        .O(\Performace_Debug_Control.ex_brki_hit_i_2_n_0 ));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_22),
        .Q(\ex_instr_reg[20] ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_148
   (\ex_instr_reg[21] ,
    \Using_FPGA.Native_0 ,
    ex_sel_alu_i0,
    sync_reset,
    of_instr_ii_21,
    Clk,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 ,
    \Using_FPGA.Native_5 ,
    \Using_FPGA.Native_6 );
  output \ex_instr_reg[21] ;
  output \Using_FPGA.Native_0 ;
  output ex_sel_alu_i0;
  input sync_reset;
  input of_instr_ii_21;
  input Clk;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input \Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;
  input \Using_FPGA.Native_5 ;
  input \Using_FPGA.Native_6 ;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;
  wire \Using_FPGA.Native_5 ;
  wire \Using_FPGA.Native_6 ;
  wire \ex_instr_reg[21] ;
  wire ex_sel_alu_i0;
  wire of_instr_ii_21;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_21),
        .Q(\ex_instr_reg[21] ),
        .R(sync_reset));
  LUT5 #(
    .INIT(32'h00000080)) 
    \Using_FPGA.Native_i_1__123 
       (.I0(\ex_instr_reg[21] ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(\Using_FPGA.Native_2 ),
        .I3(\Using_FPGA.Native_3 ),
        .I4(\Using_FPGA.Native_4 ),
        .O(\Using_FPGA.Native_0 ));
  LUT4 #(
    .INIT(16'h0DFF)) 
    ex_sel_alu_i_i_1
       (.I0(\ex_instr_reg[21] ),
        .I1(\Using_FPGA.Native_5 ),
        .I2(\Using_FPGA.Native_3 ),
        .I3(\Using_FPGA.Native_6 ),
        .O(ex_sel_alu_i0));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_150
   (\ex_instr_reg[22] ,
    D229_out,
    sync_reset,
    of_instr_ii_20,
    Clk,
    \Using_FPGA.Native_0 );
  output \ex_instr_reg[22] ;
  output D229_out;
  input sync_reset;
  input of_instr_ii_20;
  input Clk;
  input \Using_FPGA.Native_0 ;

  wire Clk;
  wire D229_out;
  wire \Using_FPGA.Native_0 ;
  wire \ex_instr_reg[22] ;
  wire of_instr_ii_20;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_20),
        .Q(\ex_instr_reg[22] ),
        .R(sync_reset));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_1__127 
       (.I0(\ex_instr_reg[22] ),
        .I1(\Using_FPGA.Native_0 ),
        .O(D229_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_152
   (\ex_instr_reg[23] ,
    EX_SWAP_Instr,
    sync_reset,
    of_instr_ii_19,
    Clk,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 );
  output \ex_instr_reg[23] ;
  output EX_SWAP_Instr;
  input sync_reset;
  input of_instr_ii_19;
  input Clk;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;

  wire Clk;
  wire EX_SWAP_Instr;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \ex_instr_reg[23] ;
  wire of_instr_ii_19;
  wire sync_reset;

  LUT4 #(
    .INIT(16'h0080)) 
    EX_SWAP_Instr_i_1
       (.I0(\ex_instr_reg[23] ),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\Using_FPGA.Native_2 ),
        .O(EX_SWAP_Instr));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_19),
        .Q(\ex_instr_reg[23] ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_154
   (\ex_instr_reg[24] ,
    sync_reset,
    of_instr_ii_18,
    Clk);
  output \ex_instr_reg[24] ;
  input sync_reset;
  input of_instr_ii_18;
  input Clk;

  wire Clk;
  wire \ex_instr_reg[24] ;
  wire of_instr_ii_18;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_18),
        .Q(\ex_instr_reg[24] ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_156
   (\ex_instr_reg[25] ,
    ex_load_shift_carry0,
    sync_reset,
    of_instr_ii_17,
    Clk,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 );
  output \ex_instr_reg[25] ;
  output ex_load_shift_carry0;
  input sync_reset;
  input of_instr_ii_17;
  input Clk;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \ex_instr_reg[25] ;
  wire ex_load_shift_carry0;
  wire of_instr_ii_17;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_17),
        .Q(\ex_instr_reg[25] ),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'h07)) 
    ex_load_shift_carry_i_1
       (.I0(\ex_instr_reg[25] ),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_1 ),
        .O(ex_load_shift_carry0));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_158
   (\ex_instr_reg[26] ,
    \EX_Sext_Op_reg[1] ,
    sync_reset,
    of_instr_ii_16,
    Clk,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 );
  output \ex_instr_reg[26] ;
  output [0:0]\EX_Sext_Op_reg[1] ;
  input sync_reset;
  input of_instr_ii_16;
  input Clk;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;

  wire Clk;
  wire [0:0]\EX_Sext_Op_reg[1] ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \ex_instr_reg[26] ;
  wire of_instr_ii_16;
  wire sync_reset;

  LUT4 #(
    .INIT(16'h00F7)) 
    \EX_Sext_Op[1]_i_1 
       (.I0(\ex_instr_reg[26] ),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\Using_FPGA.Native_2 ),
        .O(\EX_Sext_Op_reg[1] ));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_16),
        .Q(\ex_instr_reg[26] ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_160
   (\ex_instr_reg[27] ,
    \Performace_Debug_Control.ex_brki_hit_reg ,
    sync_reset,
    of_instr_ii_15,
    Clk,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 );
  output \ex_instr_reg[27] ;
  output \Performace_Debug_Control.ex_brki_hit_reg ;
  input sync_reset;
  input of_instr_ii_15;
  input Clk;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;

  wire Clk;
  wire \Performace_Debug_Control.ex_brki_hit_reg ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \ex_instr_reg[27] ;
  wire of_instr_ii_15;
  wire sync_reset;

  LUT4 #(
    .INIT(16'hFFFD)) 
    \Performace_Debug_Control.ex_brki_hit_i_5 
       (.I0(\ex_instr_reg[27] ),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\Using_FPGA.Native_2 ),
        .O(\Performace_Debug_Control.ex_brki_hit_reg ));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_15),
        .Q(\ex_instr_reg[27] ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_162
   (\ex_instr_reg[28] ,
    sync_reset,
    of_instr_ii_14,
    Clk);
  output \ex_instr_reg[28] ;
  input sync_reset;
  input of_instr_ii_14;
  input Clk;

  wire Clk;
  wire \ex_instr_reg[28] ;
  wire of_instr_ii_14;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_14),
        .Q(\ex_instr_reg[28] ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_164
   (\ex_instr_reg[29] ,
    \Performace_Debug_Control.ex_brki_hit_reg ,
    sync_reset,
    of_instr_ii_13,
    Clk,
    \Using_FPGA.Native_0 ,
    \Serial_Dbg_Intf.control_reg_reg[8] ,
    \Using_FPGA.Native_1 );
  output \ex_instr_reg[29] ;
  output \Performace_Debug_Control.ex_brki_hit_reg ;
  input sync_reset;
  input of_instr_ii_13;
  input Clk;
  input \Using_FPGA.Native_0 ;
  input [0:0]\Serial_Dbg_Intf.control_reg_reg[8] ;
  input \Using_FPGA.Native_1 ;

  wire Clk;
  wire \Performace_Debug_Control.ex_brki_hit_reg ;
  wire [0:0]\Serial_Dbg_Intf.control_reg_reg[8] ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \ex_instr_reg[29] ;
  wire of_instr_ii_13;
  wire sync_reset;

  LUT4 #(
    .INIT(16'hFFEF)) 
    \Performace_Debug_Control.ex_brki_hit_i_4 
       (.I0(\ex_instr_reg[29] ),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Serial_Dbg_Intf.control_reg_reg[8] ),
        .I3(\Using_FPGA.Native_1 ),
        .O(\Performace_Debug_Control.ex_brki_hit_reg ));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_13),
        .Q(\ex_instr_reg[29] ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_166
   (\ex_opcode_reg[2] ,
    \Using_FPGA.Native_0 ,
    sync_reset,
    of_instr_ii_40,
    Clk,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 );
  output \ex_opcode_reg[2] ;
  output \Using_FPGA.Native_0 ;
  input sync_reset;
  input of_instr_ii_40;
  input Clk;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \ex_opcode_reg[2] ;
  wire of_instr_ii_40;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_40),
        .Q(\ex_opcode_reg[2] ),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hFB)) 
    \Using_FPGA.Native_i_2__67 
       (.I0(\ex_opcode_reg[2] ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(\Using_FPGA.Native_2 ),
        .O(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_168
   (\ex_instr_reg[30] ,
    EX_Unsigned_Op105_out,
    p_2_in,
    sync_reset,
    of_instr_ii_12,
    Clk,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 );
  output \ex_instr_reg[30] ;
  output EX_Unsigned_Op105_out;
  output p_2_in;
  input sync_reset;
  input of_instr_ii_12;
  input Clk;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;

  wire Clk;
  wire EX_Unsigned_Op105_out;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \ex_instr_reg[30] ;
  wire of_instr_ii_12;
  wire p_2_in;
  wire sync_reset;

  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT1 #(
    .INIT(2'h1)) 
    EX_SWAP_BYTE_Instr_i_1
       (.I0(\ex_instr_reg[30] ),
        .O(p_2_in));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT4 #(
    .INIT(16'h0002)) 
    EX_Unsigned_Op_i_1
       (.I0(\ex_instr_reg[30] ),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\Using_FPGA.Native_2 ),
        .O(EX_Unsigned_Op105_out));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_12),
        .Q(\ex_instr_reg[30] ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_170
   (\ex_instr_reg[31] ,
    EX_CMP_Op106_out,
    sync_reset,
    of_instr_ii_11,
    Clk,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 );
  output \ex_instr_reg[31] ;
  output EX_CMP_Op106_out;
  input sync_reset;
  input of_instr_ii_11;
  input Clk;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;

  wire Clk;
  wire EX_CMP_Op106_out;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \ex_instr_reg[31] ;
  wire of_instr_ii_11;
  wire sync_reset;

  LUT4 #(
    .INIT(16'h0002)) 
    EX_CMP_Op_i_1
       (.I0(\ex_instr_reg[31] ),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\Using_FPGA.Native_2 ),
        .O(EX_CMP_Op106_out));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_11),
        .Q(\ex_instr_reg[31] ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_172
   (\Using_FPGA.Native_0 ,
    sync_reset,
    of_instr_ii_10,
    Clk);
  output \Using_FPGA.Native_0 ;
  input sync_reset;
  input of_instr_ii_10;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_10;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_10),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_174
   (\Using_FPGA.Native_0 ,
    \EX_Branch_CMP_Op1_reg[0] ,
    \EX_Branch_CMP_Op1_reg[31] ,
    \EX_Branch_CMP_Op1_reg[31]_0 ,
    sync_reset,
    of_instr_ii_9,
    Clk,
    GPR_Op1,
    \Using_FPGA.Native_1 ,
    \wb_exception_kind_i_reg[31] ,
    \wb_gpr_write_addr_reg[3] ,
    \Using_FPGA.Native_2 ,
    \wb_exception_kind_i_reg[31]_0 ,
    \Using_FPGA.Native_3 ,
    \wb_exception_kind_i_reg[31]_1 ,
    \Using_FPGA.Native_4 ,
    \wb_exception_kind_i_reg[31]_2 ,
    \Using_FPGA.Native_5 ,
    \wb_exception_kind_i_reg[31]_3 ,
    \Using_FPGA.Native_6 ,
    \wb_exception_kind_i_reg[31]_4 ,
    \WB_MEM_Result_reg[17] ,
    \Using_FPGA.Native_7 ,
    ex_sel_alu_i_reg,
    \Using_FPGA.Native_8 ,
    \WB_MEM_Result_reg[15] ,
    ex_sel_alu_i_reg_0,
    \Using_FPGA.Native_9 ,
    \WB_MEM_Result_reg[12] ,
    ex_sel_alu_i_reg_1,
    \Using_FPGA.Native_10 ,
    \WB_MEM_Result_reg[11] ,
    \Using_FPGA.Native_11 ,
    ex_sel_alu_i_reg_2,
    \WB_MEM_Result_reg[10] ,
    ex_sel_alu_i_reg_3,
    \Using_FPGA.Native_12 ,
    \WB_MEM_Result_reg[7] ,
    \Using_FPGA.Native_13 ,
    \WB_MEM_Result_reg[6] ,
    ex_sel_alu_i_reg_4,
    ex_sel_alu_i_reg_5,
    \Using_FPGA.Native_14 ,
    \WB_MEM_Result_reg[5] ,
    \Using_FPGA.Native_15 ,
    ex_sel_alu_i_reg_6,
    \WB_MEM_Result_reg[4] ,
    ex_sel_alu_i_reg_7,
    \Using_FPGA.Native_16 ,
    \WB_MEM_Result_reg[3] ,
    \Using_FPGA.Native_17 ,
    \WB_MEM_Result_reg[0] ,
    \Using_FPGA.Native_18 ,
    \wb_gpr_write_addr_reg[3]_0 ,
    ex_sel_alu_i_reg_8,
    ex_sel_alu_i_reg_9,
    ex_sel_alu_i_reg_10,
    ex_sel_alu_i_reg_11,
    mem_ex_result,
    ex_sel_alu_i_reg_12,
    ex_sel_alu_i_reg_13,
    ex_sel_alu_i_reg_14,
    ex_sel_alu_i_reg_15,
    ex_sel_alu_i_reg_16,
    ex_sel_alu_i_reg_17,
    ex_sel_alu_i_reg_18,
    ex_valid_reg,
    \ex_gpr_write_addr_reg[0] ,
    \ex_gpr_write_addr_reg[4] ,
    \Using_FPGA.Native_19 );
  output \Using_FPGA.Native_0 ;
  output [22:0]\EX_Branch_CMP_Op1_reg[0] ;
  output \EX_Branch_CMP_Op1_reg[31] ;
  output \EX_Branch_CMP_Op1_reg[31]_0 ;
  input sync_reset;
  input of_instr_ii_9;
  input Clk;
  input [22:0]GPR_Op1;
  input \Using_FPGA.Native_1 ;
  input \wb_exception_kind_i_reg[31] ;
  input \wb_gpr_write_addr_reg[3] ;
  input \Using_FPGA.Native_2 ;
  input \wb_exception_kind_i_reg[31]_0 ;
  input \Using_FPGA.Native_3 ;
  input \wb_exception_kind_i_reg[31]_1 ;
  input \Using_FPGA.Native_4 ;
  input \wb_exception_kind_i_reg[31]_2 ;
  input \Using_FPGA.Native_5 ;
  input \wb_exception_kind_i_reg[31]_3 ;
  input \Using_FPGA.Native_6 ;
  input \wb_exception_kind_i_reg[31]_4 ;
  input [6:0]\WB_MEM_Result_reg[17] ;
  input \Using_FPGA.Native_7 ;
  input ex_sel_alu_i_reg;
  input \Using_FPGA.Native_8 ;
  input \WB_MEM_Result_reg[15] ;
  input ex_sel_alu_i_reg_0;
  input \Using_FPGA.Native_9 ;
  input \WB_MEM_Result_reg[12] ;
  input ex_sel_alu_i_reg_1;
  input \Using_FPGA.Native_10 ;
  input \WB_MEM_Result_reg[11] ;
  input \Using_FPGA.Native_11 ;
  input ex_sel_alu_i_reg_2;
  input \WB_MEM_Result_reg[10] ;
  input ex_sel_alu_i_reg_3;
  input \Using_FPGA.Native_12 ;
  input \WB_MEM_Result_reg[7] ;
  input \Using_FPGA.Native_13 ;
  input \WB_MEM_Result_reg[6] ;
  input ex_sel_alu_i_reg_4;
  input ex_sel_alu_i_reg_5;
  input \Using_FPGA.Native_14 ;
  input \WB_MEM_Result_reg[5] ;
  input \Using_FPGA.Native_15 ;
  input ex_sel_alu_i_reg_6;
  input \WB_MEM_Result_reg[4] ;
  input ex_sel_alu_i_reg_7;
  input \Using_FPGA.Native_16 ;
  input \WB_MEM_Result_reg[3] ;
  input \Using_FPGA.Native_17 ;
  input \WB_MEM_Result_reg[0] ;
  input \Using_FPGA.Native_18 ;
  input \wb_gpr_write_addr_reg[3]_0 ;
  input ex_sel_alu_i_reg_8;
  input ex_sel_alu_i_reg_9;
  input ex_sel_alu_i_reg_10;
  input ex_sel_alu_i_reg_11;
  input [5:0]mem_ex_result;
  input ex_sel_alu_i_reg_12;
  input ex_sel_alu_i_reg_13;
  input ex_sel_alu_i_reg_14;
  input ex_sel_alu_i_reg_15;
  input ex_sel_alu_i_reg_16;
  input ex_sel_alu_i_reg_17;
  input ex_sel_alu_i_reg_18;
  input ex_valid_reg;
  input [1:0]\ex_gpr_write_addr_reg[0] ;
  input \ex_gpr_write_addr_reg[4] ;
  input \Using_FPGA.Native_19 ;

  wire Clk;
  wire [22:0]\EX_Branch_CMP_Op1_reg[0] ;
  wire \EX_Branch_CMP_Op1_reg[31] ;
  wire \EX_Branch_CMP_Op1_reg[31]_0 ;
  wire [22:0]GPR_Op1;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_10 ;
  wire \Using_FPGA.Native_11 ;
  wire \Using_FPGA.Native_12 ;
  wire \Using_FPGA.Native_13 ;
  wire \Using_FPGA.Native_14 ;
  wire \Using_FPGA.Native_15 ;
  wire \Using_FPGA.Native_16 ;
  wire \Using_FPGA.Native_17 ;
  wire \Using_FPGA.Native_18 ;
  wire \Using_FPGA.Native_19 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;
  wire \Using_FPGA.Native_5 ;
  wire \Using_FPGA.Native_6 ;
  wire \Using_FPGA.Native_7 ;
  wire \Using_FPGA.Native_8 ;
  wire \Using_FPGA.Native_9 ;
  wire \Using_FPGA.Native_i_3__12_n_0 ;
  wire \Using_FPGA.Native_i_3__16_n_0 ;
  wire \Using_FPGA.Native_i_3__19_n_0 ;
  wire \Using_FPGA.Native_i_3__20_n_0 ;
  wire \Using_FPGA.Native_i_3__21_n_0 ;
  wire \Using_FPGA.Native_i_3__22_n_0 ;
  wire \Using_FPGA.Native_i_3__24_n_0 ;
  wire \Using_FPGA.Native_i_3__25_n_0 ;
  wire \Using_FPGA.Native_i_3__3_n_0 ;
  wire \Using_FPGA.Native_i_4__10_n_0 ;
  wire \Using_FPGA.Native_i_5__0_n_0 ;
  wire \WB_MEM_Result_reg[0] ;
  wire \WB_MEM_Result_reg[10] ;
  wire \WB_MEM_Result_reg[11] ;
  wire \WB_MEM_Result_reg[12] ;
  wire \WB_MEM_Result_reg[15] ;
  wire [6:0]\WB_MEM_Result_reg[17] ;
  wire \WB_MEM_Result_reg[3] ;
  wire \WB_MEM_Result_reg[4] ;
  wire \WB_MEM_Result_reg[5] ;
  wire \WB_MEM_Result_reg[6] ;
  wire \WB_MEM_Result_reg[7] ;
  wire [1:0]\ex_gpr_write_addr_reg[0] ;
  wire \ex_gpr_write_addr_reg[4] ;
  wire ex_sel_alu_i_reg;
  wire ex_sel_alu_i_reg_0;
  wire ex_sel_alu_i_reg_1;
  wire ex_sel_alu_i_reg_10;
  wire ex_sel_alu_i_reg_11;
  wire ex_sel_alu_i_reg_12;
  wire ex_sel_alu_i_reg_13;
  wire ex_sel_alu_i_reg_14;
  wire ex_sel_alu_i_reg_15;
  wire ex_sel_alu_i_reg_16;
  wire ex_sel_alu_i_reg_17;
  wire ex_sel_alu_i_reg_18;
  wire ex_sel_alu_i_reg_2;
  wire ex_sel_alu_i_reg_3;
  wire ex_sel_alu_i_reg_4;
  wire ex_sel_alu_i_reg_5;
  wire ex_sel_alu_i_reg_6;
  wire ex_sel_alu_i_reg_7;
  wire ex_sel_alu_i_reg_8;
  wire ex_sel_alu_i_reg_9;
  wire ex_valid_reg;
  wire [5:0]mem_ex_result;
  wire of_instr_ii_9;
  wire sync_reset;
  wire \wb_exception_kind_i_reg[31] ;
  wire \wb_exception_kind_i_reg[31]_0 ;
  wire \wb_exception_kind_i_reg[31]_1 ;
  wire \wb_exception_kind_i_reg[31]_2 ;
  wire \wb_exception_kind_i_reg[31]_3 ;
  wire \wb_exception_kind_i_reg[31]_4 ;
  wire \wb_gpr_write_addr_reg[3] ;
  wire \wb_gpr_write_addr_reg[3]_0 ;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_9),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
  LUT6 #(
    .INIT(64'hFFAEFFAEFFFFFFAE)) 
    \Using_FPGA.Native_i_1 
       (.I0(\Using_FPGA.Native_i_3__3_n_0 ),
        .I1(GPR_Op1[0]),
        .I2(\EX_Branch_CMP_Op1_reg[31] ),
        .I3(\Using_FPGA.Native_1 ),
        .I4(\wb_exception_kind_i_reg[31] ),
        .I5(\wb_gpr_write_addr_reg[3] ),
        .O(\EX_Branch_CMP_Op1_reg[0] [0]));
  LUT6 #(
    .INIT(64'hFF7DFFFFFFFFFF7D)) 
    \Using_FPGA.Native_i_10 
       (.I0(ex_valid_reg),
        .I1(\ex_gpr_write_addr_reg[0] [1]),
        .I2(\Using_FPGA.Native_0 ),
        .I3(\ex_gpr_write_addr_reg[4] ),
        .I4(\Using_FPGA.Native_19 ),
        .I5(\ex_gpr_write_addr_reg[0] [0]),
        .O(\EX_Branch_CMP_Op1_reg[31]_0 ));
  LUT5 #(
    .INIT(32'hF4F4FFF4)) 
    \Using_FPGA.Native_i_1__10 
       (.I0(\wb_gpr_write_addr_reg[3] ),
        .I1(\WB_MEM_Result_reg[17] [3]),
        .I2(\Using_FPGA.Native_i_3__22_n_0 ),
        .I3(GPR_Op1[9]),
        .I4(\EX_Branch_CMP_Op1_reg[31] ),
        .O(\EX_Branch_CMP_Op1_reg[0] [9]));
  LUT6 #(
    .INIT(64'hFFFFFFFFAEAEFFAE)) 
    \Using_FPGA.Native_i_1__11 
       (.I0(\Using_FPGA.Native_7 ),
        .I1(\WB_MEM_Result_reg[17] [4]),
        .I2(\wb_gpr_write_addr_reg[3] ),
        .I3(GPR_Op1[10]),
        .I4(\EX_Branch_CMP_Op1_reg[31] ),
        .I5(\Using_FPGA.Native_i_4__10_n_0 ),
        .O(\EX_Branch_CMP_Op1_reg[0] [10]));
  LUT5 #(
    .INIT(32'hF4F4FFF4)) 
    \Using_FPGA.Native_i_1__12 
       (.I0(\wb_gpr_write_addr_reg[3] ),
        .I1(\WB_MEM_Result_reg[17] [5]),
        .I2(\Using_FPGA.Native_i_3__24_n_0 ),
        .I3(GPR_Op1[11]),
        .I4(\EX_Branch_CMP_Op1_reg[31] ),
        .O(\EX_Branch_CMP_Op1_reg[0] [11]));
  LUT5 #(
    .INIT(32'hF4F4FFF4)) 
    \Using_FPGA.Native_i_1__13 
       (.I0(\wb_gpr_write_addr_reg[3] ),
        .I1(\WB_MEM_Result_reg[17] [6]),
        .I2(\Using_FPGA.Native_i_3__25_n_0 ),
        .I3(GPR_Op1[12]),
        .I4(\EX_Branch_CMP_Op1_reg[31] ),
        .O(\EX_Branch_CMP_Op1_reg[0] [12]));
  LUT6 #(
    .INIT(64'hFFF2FFF2FFFFFFF2)) 
    \Using_FPGA.Native_i_1__15 
       (.I0(GPR_Op1[13]),
        .I1(\EX_Branch_CMP_Op1_reg[31] ),
        .I2(ex_sel_alu_i_reg),
        .I3(\Using_FPGA.Native_8 ),
        .I4(\WB_MEM_Result_reg[15] ),
        .I5(\wb_gpr_write_addr_reg[3] ),
        .O(\EX_Branch_CMP_Op1_reg[0] [13]));
  LUT6 #(
    .INIT(64'hFFAEFFAEFFFFFFAE)) 
    \Using_FPGA.Native_i_1__18 
       (.I0(ex_sel_alu_i_reg_0),
        .I1(GPR_Op1[14]),
        .I2(\EX_Branch_CMP_Op1_reg[31] ),
        .I3(\Using_FPGA.Native_9 ),
        .I4(\WB_MEM_Result_reg[12] ),
        .I5(\wb_gpr_write_addr_reg[3] ),
        .O(\EX_Branch_CMP_Op1_reg[0] [14]));
  LUT6 #(
    .INIT(64'hFFF2FFF2FFFFFFF2)) 
    \Using_FPGA.Native_i_1__19 
       (.I0(GPR_Op1[15]),
        .I1(\EX_Branch_CMP_Op1_reg[31] ),
        .I2(ex_sel_alu_i_reg_1),
        .I3(\Using_FPGA.Native_10 ),
        .I4(\WB_MEM_Result_reg[11] ),
        .I5(\wb_gpr_write_addr_reg[3] ),
        .O(\EX_Branch_CMP_Op1_reg[0] [15]));
  LUT5 #(
    .INIT(32'hF4F4FFF4)) 
    \Using_FPGA.Native_i_1__2 
       (.I0(\EX_Branch_CMP_Op1_reg[31] ),
        .I1(GPR_Op1[1]),
        .I2(\Using_FPGA.Native_2 ),
        .I3(\wb_exception_kind_i_reg[31]_0 ),
        .I4(\wb_gpr_write_addr_reg[3] ),
        .O(\EX_Branch_CMP_Op1_reg[0] [1]));
  LUT6 #(
    .INIT(64'hFFF2FFF2FFFFFFF2)) 
    \Using_FPGA.Native_i_1__20 
       (.I0(GPR_Op1[16]),
        .I1(\EX_Branch_CMP_Op1_reg[31] ),
        .I2(\Using_FPGA.Native_11 ),
        .I3(ex_sel_alu_i_reg_2),
        .I4(\WB_MEM_Result_reg[10] ),
        .I5(\wb_gpr_write_addr_reg[3] ),
        .O(\EX_Branch_CMP_Op1_reg[0] [16]));
  LUT6 #(
    .INIT(64'hFFF2FFF2FFFFFFF2)) 
    \Using_FPGA.Native_i_1__23 
       (.I0(GPR_Op1[17]),
        .I1(\EX_Branch_CMP_Op1_reg[31] ),
        .I2(ex_sel_alu_i_reg_3),
        .I3(\Using_FPGA.Native_12 ),
        .I4(\WB_MEM_Result_reg[7] ),
        .I5(\wb_gpr_write_addr_reg[3] ),
        .O(\EX_Branch_CMP_Op1_reg[0] [17]));
  LUT6 #(
    .INIT(64'hFFFFFFFFF2F2FFF2)) 
    \Using_FPGA.Native_i_1__24 
       (.I0(GPR_Op1[18]),
        .I1(\EX_Branch_CMP_Op1_reg[31] ),
        .I2(\Using_FPGA.Native_13 ),
        .I3(\WB_MEM_Result_reg[6] ),
        .I4(\wb_gpr_write_addr_reg[3] ),
        .I5(ex_sel_alu_i_reg_4),
        .O(\EX_Branch_CMP_Op1_reg[0] [18]));
  LUT6 #(
    .INIT(64'hFFF2FFF2FFFFFFF2)) 
    \Using_FPGA.Native_i_1__25 
       (.I0(GPR_Op1[19]),
        .I1(\EX_Branch_CMP_Op1_reg[31] ),
        .I2(ex_sel_alu_i_reg_5),
        .I3(\Using_FPGA.Native_14 ),
        .I4(\WB_MEM_Result_reg[5] ),
        .I5(\wb_gpr_write_addr_reg[3] ),
        .O(\EX_Branch_CMP_Op1_reg[0] [19]));
  LUT6 #(
    .INIT(64'hFFF2FFF2FFFFFFF2)) 
    \Using_FPGA.Native_i_1__26 
       (.I0(GPR_Op1[20]),
        .I1(\EX_Branch_CMP_Op1_reg[31] ),
        .I2(\Using_FPGA.Native_15 ),
        .I3(ex_sel_alu_i_reg_6),
        .I4(\WB_MEM_Result_reg[4] ),
        .I5(\wb_gpr_write_addr_reg[3] ),
        .O(\EX_Branch_CMP_Op1_reg[0] [20]));
  LUT6 #(
    .INIT(64'hFFAEFFAEFFFFFFAE)) 
    \Using_FPGA.Native_i_1__27 
       (.I0(ex_sel_alu_i_reg_7),
        .I1(GPR_Op1[21]),
        .I2(\EX_Branch_CMP_Op1_reg[31] ),
        .I3(\Using_FPGA.Native_16 ),
        .I4(\WB_MEM_Result_reg[3] ),
        .I5(\wb_gpr_write_addr_reg[3] ),
        .O(\EX_Branch_CMP_Op1_reg[0] [21]));
  LUT5 #(
    .INIT(32'hF4F4FFF4)) 
    \Using_FPGA.Native_i_1__3 
       (.I0(\EX_Branch_CMP_Op1_reg[31] ),
        .I1(GPR_Op1[2]),
        .I2(\Using_FPGA.Native_3 ),
        .I3(\wb_exception_kind_i_reg[31]_1 ),
        .I4(\wb_gpr_write_addr_reg[3] ),
        .O(\EX_Branch_CMP_Op1_reg[0] [2]));
  LUT6 #(
    .INIT(64'hFFAEFFAEFFFFFFAE)) 
    \Using_FPGA.Native_i_1__4 
       (.I0(\Using_FPGA.Native_i_3__12_n_0 ),
        .I1(GPR_Op1[3]),
        .I2(\EX_Branch_CMP_Op1_reg[31] ),
        .I3(\Using_FPGA.Native_4 ),
        .I4(\wb_exception_kind_i_reg[31]_2 ),
        .I5(\wb_gpr_write_addr_reg[3] ),
        .O(\EX_Branch_CMP_Op1_reg[0] [3]));
  LUT5 #(
    .INIT(32'hF4F4FFF4)) 
    \Using_FPGA.Native_i_1__5 
       (.I0(\EX_Branch_CMP_Op1_reg[31] ),
        .I1(GPR_Op1[4]),
        .I2(\Using_FPGA.Native_5 ),
        .I3(\wb_exception_kind_i_reg[31]_3 ),
        .I4(\wb_gpr_write_addr_reg[3] ),
        .O(\EX_Branch_CMP_Op1_reg[0] [4]));
  LUT6 #(
    .INIT(64'hFFAEFFAEFFFFFFAE)) 
    \Using_FPGA.Native_i_1__6 
       (.I0(\Using_FPGA.Native_i_3__16_n_0 ),
        .I1(GPR_Op1[5]),
        .I2(\EX_Branch_CMP_Op1_reg[31] ),
        .I3(\Using_FPGA.Native_6 ),
        .I4(\wb_exception_kind_i_reg[31]_4 ),
        .I5(\wb_gpr_write_addr_reg[3] ),
        .O(\EX_Branch_CMP_Op1_reg[0] [5]));
  LUT5 #(
    .INIT(32'hF4F4FFF4)) 
    \Using_FPGA.Native_i_1__7 
       (.I0(\wb_gpr_write_addr_reg[3] ),
        .I1(\WB_MEM_Result_reg[17] [0]),
        .I2(\Using_FPGA.Native_i_3__19_n_0 ),
        .I3(GPR_Op1[6]),
        .I4(\EX_Branch_CMP_Op1_reg[31] ),
        .O(\EX_Branch_CMP_Op1_reg[0] [6]));
  LUT5 #(
    .INIT(32'hF4F4FFF4)) 
    \Using_FPGA.Native_i_1__8 
       (.I0(\wb_gpr_write_addr_reg[3] ),
        .I1(\WB_MEM_Result_reg[17] [1]),
        .I2(\Using_FPGA.Native_i_3__20_n_0 ),
        .I3(GPR_Op1[7]),
        .I4(\EX_Branch_CMP_Op1_reg[31] ),
        .O(\EX_Branch_CMP_Op1_reg[0] [7]));
  LUT5 #(
    .INIT(32'hF4F4FFF4)) 
    \Using_FPGA.Native_i_1__9 
       (.I0(\wb_gpr_write_addr_reg[3] ),
        .I1(\WB_MEM_Result_reg[17] [2]),
        .I2(\Using_FPGA.Native_i_3__21_n_0 ),
        .I3(GPR_Op1[8]),
        .I4(\EX_Branch_CMP_Op1_reg[31] ),
        .O(\EX_Branch_CMP_Op1_reg[0] [8]));
  LUT6 #(
    .INIT(64'hEFEEEFEEFFFFEFEE)) 
    \Using_FPGA.Native_i_2 
       (.I0(\Using_FPGA.Native_i_5__0_n_0 ),
        .I1(\Using_FPGA.Native_17 ),
        .I2(\wb_gpr_write_addr_reg[3] ),
        .I3(\WB_MEM_Result_reg[0] ),
        .I4(GPR_Op1[22]),
        .I5(\EX_Branch_CMP_Op1_reg[31] ),
        .O(\EX_Branch_CMP_Op1_reg[0] [22]));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_3__12 
       (.I0(ex_sel_alu_i_reg_9),
        .I1(\EX_Branch_CMP_Op1_reg[31]_0 ),
        .O(\Using_FPGA.Native_i_3__12_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_3__16 
       (.I0(ex_sel_alu_i_reg_10),
        .I1(\EX_Branch_CMP_Op1_reg[31]_0 ),
        .O(\Using_FPGA.Native_i_3__16_n_0 ));
  LUT4 #(
    .INIT(16'hE222)) 
    \Using_FPGA.Native_i_3__19 
       (.I0(ex_sel_alu_i_reg_11),
        .I1(\EX_Branch_CMP_Op1_reg[31]_0 ),
        .I2(\Using_FPGA.Native_18 ),
        .I3(mem_ex_result[0]),
        .O(\Using_FPGA.Native_i_3__19_n_0 ));
  LUT4 #(
    .INIT(16'hE222)) 
    \Using_FPGA.Native_i_3__20 
       (.I0(ex_sel_alu_i_reg_12),
        .I1(\EX_Branch_CMP_Op1_reg[31]_0 ),
        .I2(\Using_FPGA.Native_18 ),
        .I3(mem_ex_result[1]),
        .O(\Using_FPGA.Native_i_3__20_n_0 ));
  LUT4 #(
    .INIT(16'hE222)) 
    \Using_FPGA.Native_i_3__21 
       (.I0(ex_sel_alu_i_reg_13),
        .I1(\EX_Branch_CMP_Op1_reg[31]_0 ),
        .I2(\Using_FPGA.Native_18 ),
        .I3(mem_ex_result[2]),
        .O(\Using_FPGA.Native_i_3__21_n_0 ));
  LUT4 #(
    .INIT(16'hE222)) 
    \Using_FPGA.Native_i_3__22 
       (.I0(ex_sel_alu_i_reg_14),
        .I1(\EX_Branch_CMP_Op1_reg[31]_0 ),
        .I2(\Using_FPGA.Native_18 ),
        .I3(mem_ex_result[3]),
        .O(\Using_FPGA.Native_i_3__22_n_0 ));
  LUT4 #(
    .INIT(16'hE222)) 
    \Using_FPGA.Native_i_3__24 
       (.I0(ex_sel_alu_i_reg_15),
        .I1(\EX_Branch_CMP_Op1_reg[31]_0 ),
        .I2(\Using_FPGA.Native_18 ),
        .I3(mem_ex_result[4]),
        .O(\Using_FPGA.Native_i_3__24_n_0 ));
  LUT4 #(
    .INIT(16'hE222)) 
    \Using_FPGA.Native_i_3__25 
       (.I0(ex_sel_alu_i_reg_16),
        .I1(\EX_Branch_CMP_Op1_reg[31]_0 ),
        .I2(\Using_FPGA.Native_18 ),
        .I3(mem_ex_result[5]),
        .O(\Using_FPGA.Native_i_3__25_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_3__3 
       (.I0(ex_sel_alu_i_reg_8),
        .I1(\EX_Branch_CMP_Op1_reg[31]_0 ),
        .O(\Using_FPGA.Native_i_3__3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_4__10 
       (.I0(ex_sel_alu_i_reg_17),
        .I1(\EX_Branch_CMP_Op1_reg[31]_0 ),
        .O(\Using_FPGA.Native_i_4__10_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_5__0 
       (.I0(ex_sel_alu_i_reg_18),
        .I1(\EX_Branch_CMP_Op1_reg[31]_0 ),
        .O(\Using_FPGA.Native_i_5__0_n_0 ));
  LUT3 #(
    .INIT(8'hDF)) 
    \Using_FPGA.Native_i_8 
       (.I0(\EX_Branch_CMP_Op1_reg[31]_0 ),
        .I1(\Using_FPGA.Native_18 ),
        .I2(\wb_gpr_write_addr_reg[3]_0 ),
        .O(\EX_Branch_CMP_Op1_reg[31] ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_176
   (\Using_FPGA.Native_0 ,
    \EX_Branch_CMP_Op1_reg[8] ,
    \EX_Branch_CMP_Op1_reg[30] ,
    \EX_Branch_CMP_Op1_reg[30]_0 ,
    \EX_Branch_CMP_Op1_reg[29] ,
    \EX_Branch_CMP_Op1_reg[28] ,
    \EX_Branch_CMP_Op1_reg[27] ,
    \EX_Branch_CMP_Op1_reg[25] ,
    \EX_Branch_CMP_Op1_reg[31] ,
    \EX_Branch_CMP_Op1_reg[26] ,
    \EX_Branch_CMP_Op1_reg[24] ,
    \EX_Branch_CMP_Op1_reg[19] ,
    \EX_Branch_CMP_Op1_reg[15] ,
    \EX_Branch_CMP_Op1_reg[14] ,
    \EX_Branch_CMP_Op1_reg[13] ,
    \EX_Branch_CMP_Op1_reg[12] ,
    \EX_Branch_CMP_Op1_reg[11] ,
    \EX_Branch_CMP_Op1_reg[10] ,
    \EX_Branch_CMP_Op1_reg[9] ,
    \EX_Branch_CMP_Op1_reg[7] ,
    \EX_Branch_CMP_Op1_reg[6] ,
    \EX_Branch_CMP_Op1_reg[5] ,
    \EX_Branch_CMP_Op1_reg[4] ,
    \EX_Branch_CMP_Op1_reg[3] ,
    \EX_Branch_CMP_Op1_reg[2] ,
    \EX_Branch_CMP_Op1_reg[1] ,
    \EX_Branch_CMP_Op1_reg[0] ,
    \EX_Branch_CMP_Op1_reg[30]_1 ,
    sync_reset,
    of_instr_ii_8,
    Clk,
    GPR_Op1,
    \ex_gpr_write_addr_reg[0] ,
    \WB_MEM_Result_reg[8] ,
    \wb_gpr_write_addr_reg[3] ,
    mem_MSR,
    mem_is_msr_instr_reg,
    mem_ex_result,
    \ex_gpr_write_addr_reg[0]_0 ,
    ex_sel_alu_i_reg,
    ex_sel_alu_i_reg_0,
    ex_sel_alu_i_reg_1,
    ex_sel_alu_i_reg_2,
    ex_sel_alu_i_reg_3,
    ex_sel_alu_i_reg_4,
    \mem_gpr_write_addr_reg[0] ,
    \Using_FPGA.Native_1 ,
    \mem_gpr_write_addr_reg[4] ,
    mem_valid_reg,
    \wb_gpr_write_addr_reg[0] ,
    \Using_FPGA.Native_2 );
  output \Using_FPGA.Native_0 ;
  output [0:0]\EX_Branch_CMP_Op1_reg[8] ;
  output \EX_Branch_CMP_Op1_reg[30] ;
  output \EX_Branch_CMP_Op1_reg[30]_0 ;
  output \EX_Branch_CMP_Op1_reg[29] ;
  output \EX_Branch_CMP_Op1_reg[28] ;
  output \EX_Branch_CMP_Op1_reg[27] ;
  output \EX_Branch_CMP_Op1_reg[25] ;
  output \EX_Branch_CMP_Op1_reg[31] ;
  output \EX_Branch_CMP_Op1_reg[26] ;
  output \EX_Branch_CMP_Op1_reg[24] ;
  output \EX_Branch_CMP_Op1_reg[19] ;
  output \EX_Branch_CMP_Op1_reg[15] ;
  output \EX_Branch_CMP_Op1_reg[14] ;
  output \EX_Branch_CMP_Op1_reg[13] ;
  output \EX_Branch_CMP_Op1_reg[12] ;
  output \EX_Branch_CMP_Op1_reg[11] ;
  output \EX_Branch_CMP_Op1_reg[10] ;
  output \EX_Branch_CMP_Op1_reg[9] ;
  output \EX_Branch_CMP_Op1_reg[7] ;
  output \EX_Branch_CMP_Op1_reg[6] ;
  output \EX_Branch_CMP_Op1_reg[5] ;
  output \EX_Branch_CMP_Op1_reg[4] ;
  output \EX_Branch_CMP_Op1_reg[3] ;
  output \EX_Branch_CMP_Op1_reg[2] ;
  output \EX_Branch_CMP_Op1_reg[1] ;
  output \EX_Branch_CMP_Op1_reg[0] ;
  output \EX_Branch_CMP_Op1_reg[30]_1 ;
  input sync_reset;
  input of_instr_ii_8;
  input Clk;
  input [0:0]GPR_Op1;
  input \ex_gpr_write_addr_reg[0] ;
  input \WB_MEM_Result_reg[8] ;
  input \wb_gpr_write_addr_reg[3] ;
  input [2:0]mem_MSR;
  input mem_is_msr_instr_reg;
  input [24:0]mem_ex_result;
  input \ex_gpr_write_addr_reg[0]_0 ;
  input ex_sel_alu_i_reg;
  input ex_sel_alu_i_reg_0;
  input ex_sel_alu_i_reg_1;
  input ex_sel_alu_i_reg_2;
  input ex_sel_alu_i_reg_3;
  input [0:0]ex_sel_alu_i_reg_4;
  input [1:0]\mem_gpr_write_addr_reg[0] ;
  input \Using_FPGA.Native_1 ;
  input \mem_gpr_write_addr_reg[4] ;
  input mem_valid_reg;
  input [2:0]\wb_gpr_write_addr_reg[0] ;
  input \Using_FPGA.Native_2 ;

  wire Clk;
  wire \EX_Branch_CMP_Op1_reg[0] ;
  wire \EX_Branch_CMP_Op1_reg[10] ;
  wire \EX_Branch_CMP_Op1_reg[11] ;
  wire \EX_Branch_CMP_Op1_reg[12] ;
  wire \EX_Branch_CMP_Op1_reg[13] ;
  wire \EX_Branch_CMP_Op1_reg[14] ;
  wire \EX_Branch_CMP_Op1_reg[15] ;
  wire \EX_Branch_CMP_Op1_reg[19] ;
  wire \EX_Branch_CMP_Op1_reg[1] ;
  wire \EX_Branch_CMP_Op1_reg[24] ;
  wire \EX_Branch_CMP_Op1_reg[25] ;
  wire \EX_Branch_CMP_Op1_reg[26] ;
  wire \EX_Branch_CMP_Op1_reg[27] ;
  wire \EX_Branch_CMP_Op1_reg[28] ;
  wire \EX_Branch_CMP_Op1_reg[29] ;
  wire \EX_Branch_CMP_Op1_reg[2] ;
  wire \EX_Branch_CMP_Op1_reg[30] ;
  wire \EX_Branch_CMP_Op1_reg[30]_0 ;
  wire \EX_Branch_CMP_Op1_reg[30]_1 ;
  wire \EX_Branch_CMP_Op1_reg[31] ;
  wire \EX_Branch_CMP_Op1_reg[3] ;
  wire \EX_Branch_CMP_Op1_reg[4] ;
  wire \EX_Branch_CMP_Op1_reg[5] ;
  wire \EX_Branch_CMP_Op1_reg[6] ;
  wire \EX_Branch_CMP_Op1_reg[7] ;
  wire [0:0]\EX_Branch_CMP_Op1_reg[8] ;
  wire \EX_Branch_CMP_Op1_reg[9] ;
  wire [0:0]GPR_Op1;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_i_3__31_n_0 ;
  wire \WB_MEM_Result_reg[8] ;
  wire \ex_gpr_write_addr_reg[0] ;
  wire \ex_gpr_write_addr_reg[0]_0 ;
  wire ex_sel_alu_i_reg;
  wire ex_sel_alu_i_reg_0;
  wire ex_sel_alu_i_reg_1;
  wire ex_sel_alu_i_reg_2;
  wire ex_sel_alu_i_reg_3;
  wire [0:0]ex_sel_alu_i_reg_4;
  wire [2:0]mem_MSR;
  wire [24:0]mem_ex_result;
  wire [1:0]\mem_gpr_write_addr_reg[0] ;
  wire \mem_gpr_write_addr_reg[4] ;
  wire mem_is_msr_instr_reg;
  wire mem_valid_reg;
  wire of_instr_ii_8;
  wire sync_reset;
  wire [2:0]\wb_gpr_write_addr_reg[0] ;
  wire \wb_gpr_write_addr_reg[3] ;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_8),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
  LUT6 #(
    .INIT(64'h0000000000009009)) 
    \Using_FPGA.Native_i_11 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\mem_gpr_write_addr_reg[0] [0]),
        .I2(\mem_gpr_write_addr_reg[0] [1]),
        .I3(\Using_FPGA.Native_1 ),
        .I4(\mem_gpr_write_addr_reg[4] ),
        .I5(mem_valid_reg),
        .O(\EX_Branch_CMP_Op1_reg[30]_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \Using_FPGA.Native_i_18 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\wb_gpr_write_addr_reg[0] [1]),
        .I2(\Using_FPGA.Native_2 ),
        .I3(\wb_gpr_write_addr_reg[0] [0]),
        .I4(\wb_gpr_write_addr_reg[0] [2]),
        .I5(\Using_FPGA.Native_1 ),
        .O(\EX_Branch_CMP_Op1_reg[30]_1 ));
  LUT5 #(
    .INIT(32'hAEAEFFAE)) 
    \Using_FPGA.Native_i_1__22 
       (.I0(\Using_FPGA.Native_i_3__31_n_0 ),
        .I1(GPR_Op1),
        .I2(\ex_gpr_write_addr_reg[0] ),
        .I3(\WB_MEM_Result_reg[8] ),
        .I4(\wb_gpr_write_addr_reg[3] ),
        .O(\EX_Branch_CMP_Op1_reg[8] ));
  LUT4 #(
    .INIT(16'h8F80)) 
    \Using_FPGA.Native_i_3__10 
       (.I0(\EX_Branch_CMP_Op1_reg[30]_0 ),
        .I1(mem_ex_result[4]),
        .I2(\ex_gpr_write_addr_reg[0]_0 ),
        .I3(ex_sel_alu_i_reg_2),
        .O(\EX_Branch_CMP_Op1_reg[27] ));
  LUT4 #(
    .INIT(16'h8F80)) 
    \Using_FPGA.Native_i_3__14 
       (.I0(\EX_Branch_CMP_Op1_reg[30]_0 ),
        .I1(mem_ex_result[6]),
        .I2(\ex_gpr_write_addr_reg[0]_0 ),
        .I3(ex_sel_alu_i_reg_3),
        .O(\EX_Branch_CMP_Op1_reg[25] ));
  LUT3 #(
    .INIT(8'h80)) 
    \Using_FPGA.Native_i_3__23 
       (.I0(mem_ex_result[8]),
        .I1(\EX_Branch_CMP_Op1_reg[30]_0 ),
        .I2(\ex_gpr_write_addr_reg[0]_0 ),
        .O(\EX_Branch_CMP_Op1_reg[19] ));
  LUT3 #(
    .INIT(8'h80)) 
    \Using_FPGA.Native_i_3__27 
       (.I0(mem_ex_result[10]),
        .I1(\EX_Branch_CMP_Op1_reg[30]_0 ),
        .I2(\ex_gpr_write_addr_reg[0]_0 ),
        .O(\EX_Branch_CMP_Op1_reg[14] ));
  LUT3 #(
    .INIT(8'h80)) 
    \Using_FPGA.Native_i_3__28 
       (.I0(mem_ex_result[11]),
        .I1(\EX_Branch_CMP_Op1_reg[30]_0 ),
        .I2(\ex_gpr_write_addr_reg[0]_0 ),
        .O(\EX_Branch_CMP_Op1_reg[13] ));
  LUT3 #(
    .INIT(8'h80)) 
    \Using_FPGA.Native_i_3__29 
       (.I0(mem_ex_result[14]),
        .I1(\EX_Branch_CMP_Op1_reg[30]_0 ),
        .I2(\ex_gpr_write_addr_reg[0]_0 ),
        .O(\EX_Branch_CMP_Op1_reg[10] ));
  LUT3 #(
    .INIT(8'h80)) 
    \Using_FPGA.Native_i_3__30 
       (.I0(mem_ex_result[15]),
        .I1(\EX_Branch_CMP_Op1_reg[30]_0 ),
        .I2(\ex_gpr_write_addr_reg[0]_0 ),
        .O(\EX_Branch_CMP_Op1_reg[9] ));
  LUT4 #(
    .INIT(16'h8F80)) 
    \Using_FPGA.Native_i_3__31 
       (.I0(\EX_Branch_CMP_Op1_reg[30]_0 ),
        .I1(mem_ex_result[16]),
        .I2(\ex_gpr_write_addr_reg[0]_0 ),
        .I3(ex_sel_alu_i_reg_4),
        .O(\Using_FPGA.Native_i_3__31_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \Using_FPGA.Native_i_3__32 
       (.I0(mem_ex_result[18]),
        .I1(\EX_Branch_CMP_Op1_reg[30]_0 ),
        .I2(\ex_gpr_write_addr_reg[0]_0 ),
        .O(\EX_Branch_CMP_Op1_reg[6] ));
  LUT3 #(
    .INIT(8'h80)) 
    \Using_FPGA.Native_i_3__33 
       (.I0(mem_ex_result[20]),
        .I1(\EX_Branch_CMP_Op1_reg[30]_0 ),
        .I2(\ex_gpr_write_addr_reg[0]_0 ),
        .O(\EX_Branch_CMP_Op1_reg[4] ));
  LUT3 #(
    .INIT(8'h80)) 
    \Using_FPGA.Native_i_3__34 
       (.I0(mem_ex_result[22]),
        .I1(\EX_Branch_CMP_Op1_reg[30]_0 ),
        .I2(\ex_gpr_write_addr_reg[0]_0 ),
        .O(\EX_Branch_CMP_Op1_reg[2] ));
  LUT3 #(
    .INIT(8'h80)) 
    \Using_FPGA.Native_i_3__35 
       (.I0(mem_ex_result[23]),
        .I1(\EX_Branch_CMP_Op1_reg[30]_0 ),
        .I2(\ex_gpr_write_addr_reg[0]_0 ),
        .O(\EX_Branch_CMP_Op1_reg[1] ));
  LUT6 #(
    .INIT(64'h8A80FFFF8A800000)) 
    \Using_FPGA.Native_i_3__4 
       (.I0(\EX_Branch_CMP_Op1_reg[30]_0 ),
        .I1(mem_MSR[0]),
        .I2(mem_is_msr_instr_reg),
        .I3(mem_ex_result[1]),
        .I4(\ex_gpr_write_addr_reg[0]_0 ),
        .I5(ex_sel_alu_i_reg),
        .O(\EX_Branch_CMP_Op1_reg[30] ));
  LUT6 #(
    .INIT(64'h8A80FFFF8A800000)) 
    \Using_FPGA.Native_i_3__6 
       (.I0(\EX_Branch_CMP_Op1_reg[30]_0 ),
        .I1(mem_MSR[1]),
        .I2(mem_is_msr_instr_reg),
        .I3(mem_ex_result[2]),
        .I4(\ex_gpr_write_addr_reg[0]_0 ),
        .I5(ex_sel_alu_i_reg_0),
        .O(\EX_Branch_CMP_Op1_reg[29] ));
  LUT6 #(
    .INIT(64'h8A80FFFF8A800000)) 
    \Using_FPGA.Native_i_3__8 
       (.I0(\EX_Branch_CMP_Op1_reg[30]_0 ),
        .I1(mem_MSR[2]),
        .I2(mem_is_msr_instr_reg),
        .I3(mem_ex_result[3]),
        .I4(\ex_gpr_write_addr_reg[0]_0 ),
        .I5(ex_sel_alu_i_reg_1),
        .O(\EX_Branch_CMP_Op1_reg[28] ));
  LUT3 #(
    .INIT(8'h80)) 
    \Using_FPGA.Native_i_4__1 
       (.I0(mem_ex_result[0]),
        .I1(\EX_Branch_CMP_Op1_reg[30]_0 ),
        .I2(\ex_gpr_write_addr_reg[0]_0 ),
        .O(\EX_Branch_CMP_Op1_reg[31] ));
  LUT3 #(
    .INIT(8'h80)) 
    \Using_FPGA.Native_i_4__2 
       (.I0(mem_ex_result[5]),
        .I1(\EX_Branch_CMP_Op1_reg[30]_0 ),
        .I2(\ex_gpr_write_addr_reg[0]_0 ),
        .O(\EX_Branch_CMP_Op1_reg[26] ));
  LUT3 #(
    .INIT(8'h80)) 
    \Using_FPGA.Native_i_4__3 
       (.I0(mem_ex_result[7]),
        .I1(\EX_Branch_CMP_Op1_reg[30]_0 ),
        .I2(\ex_gpr_write_addr_reg[0]_0 ),
        .O(\EX_Branch_CMP_Op1_reg[24] ));
  LUT3 #(
    .INIT(8'h80)) 
    \Using_FPGA.Native_i_4__4 
       (.I0(mem_ex_result[9]),
        .I1(\EX_Branch_CMP_Op1_reg[30]_0 ),
        .I2(\ex_gpr_write_addr_reg[0]_0 ),
        .O(\EX_Branch_CMP_Op1_reg[15] ));
  LUT3 #(
    .INIT(8'h80)) 
    \Using_FPGA.Native_i_4__5 
       (.I0(mem_ex_result[12]),
        .I1(\EX_Branch_CMP_Op1_reg[30]_0 ),
        .I2(\ex_gpr_write_addr_reg[0]_0 ),
        .O(\EX_Branch_CMP_Op1_reg[12] ));
  LUT3 #(
    .INIT(8'h80)) 
    \Using_FPGA.Native_i_4__6 
       (.I0(mem_ex_result[13]),
        .I1(\EX_Branch_CMP_Op1_reg[30]_0 ),
        .I2(\ex_gpr_write_addr_reg[0]_0 ),
        .O(\EX_Branch_CMP_Op1_reg[11] ));
  LUT3 #(
    .INIT(8'h80)) 
    \Using_FPGA.Native_i_4__7 
       (.I0(mem_ex_result[17]),
        .I1(\EX_Branch_CMP_Op1_reg[30]_0 ),
        .I2(\ex_gpr_write_addr_reg[0]_0 ),
        .O(\EX_Branch_CMP_Op1_reg[7] ));
  LUT3 #(
    .INIT(8'h80)) 
    \Using_FPGA.Native_i_4__8 
       (.I0(mem_ex_result[19]),
        .I1(\EX_Branch_CMP_Op1_reg[30]_0 ),
        .I2(\ex_gpr_write_addr_reg[0]_0 ),
        .O(\EX_Branch_CMP_Op1_reg[5] ));
  LUT3 #(
    .INIT(8'h80)) 
    \Using_FPGA.Native_i_4__9 
       (.I0(mem_ex_result[21]),
        .I1(\EX_Branch_CMP_Op1_reg[30]_0 ),
        .I2(\ex_gpr_write_addr_reg[0]_0 ),
        .O(\EX_Branch_CMP_Op1_reg[3] ));
  LUT5 #(
    .INIT(32'hE2000000)) 
    \Using_FPGA.Native_i_6__0 
       (.I0(mem_ex_result[24]),
        .I1(mem_is_msr_instr_reg),
        .I2(mem_MSR[1]),
        .I3(\EX_Branch_CMP_Op1_reg[30]_0 ),
        .I4(\ex_gpr_write_addr_reg[0]_0 ),
        .O(\EX_Branch_CMP_Op1_reg[0] ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_178
   (\Using_FPGA.Native_0 ,
    sync_reset,
    of_instr_ii_7,
    Clk);
  output \Using_FPGA.Native_0 ;
  input sync_reset;
  input of_instr_ii_7;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_7;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_7),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_180
   (\Using_FPGA.Native_0 ,
    \EX_Branch_CMP_Op1_reg[1] ,
    \EX_Branch_CMP_Op1_reg[30] ,
    \EX_Branch_CMP_Op1_reg[30]_0 ,
    sync_reset,
    of_instr_ii_6,
    Clk,
    \wb_exception_kind_i_reg[31] ,
    \Using_FPGA.Native_1 ,
    GPR_Op1,
    \ex_gpr_write_addr_reg[0] ,
    \wb_exception_kind_i_reg[31]_0 ,
    \Using_FPGA.Native_2 ,
    \WB_MEM_Result_reg[14] ,
    \Using_FPGA.Native_3 ,
    ex_sel_alu_i_reg,
    \WB_MEM_Result_reg[13] ,
    \Using_FPGA.Native_4 ,
    ex_sel_alu_i_reg_0,
    \WB_MEM_Result_reg[9] ,
    \Using_FPGA.Native_5 ,
    ex_sel_alu_i_reg_1,
    \WB_MEM_Result_reg[2] ,
    \Using_FPGA.Native_6 ,
    ex_sel_alu_i_reg_2,
    \WB_MEM_Result_reg[1] ,
    \Using_FPGA.Native_7 ,
    ex_sel_alu_i_reg_3,
    \ex_gpr_write_addr_reg[0]_0 ,
    \Using_FPGA.Native_8 ,
    \wb_gpr_write_addr_reg[2] ,
    \Using_FPGA.Native_9 ,
    wb_reset_reg,
    \Using_FPGA.Native_10 );
  output \Using_FPGA.Native_0 ;
  output [6:0]\EX_Branch_CMP_Op1_reg[1] ;
  output \EX_Branch_CMP_Op1_reg[30] ;
  output \EX_Branch_CMP_Op1_reg[30]_0 ;
  input sync_reset;
  input of_instr_ii_6;
  input Clk;
  input \wb_exception_kind_i_reg[31] ;
  input \Using_FPGA.Native_1 ;
  input [6:0]GPR_Op1;
  input \ex_gpr_write_addr_reg[0] ;
  input \wb_exception_kind_i_reg[31]_0 ;
  input \Using_FPGA.Native_2 ;
  input \WB_MEM_Result_reg[14] ;
  input \Using_FPGA.Native_3 ;
  input ex_sel_alu_i_reg;
  input \WB_MEM_Result_reg[13] ;
  input \Using_FPGA.Native_4 ;
  input ex_sel_alu_i_reg_0;
  input \WB_MEM_Result_reg[9] ;
  input \Using_FPGA.Native_5 ;
  input ex_sel_alu_i_reg_1;
  input \WB_MEM_Result_reg[2] ;
  input \Using_FPGA.Native_6 ;
  input ex_sel_alu_i_reg_2;
  input \WB_MEM_Result_reg[1] ;
  input \Using_FPGA.Native_7 ;
  input ex_sel_alu_i_reg_3;
  input \ex_gpr_write_addr_reg[0]_0 ;
  input \Using_FPGA.Native_8 ;
  input [1:0]\wb_gpr_write_addr_reg[2] ;
  input \Using_FPGA.Native_9 ;
  input wb_reset_reg;
  input \Using_FPGA.Native_10 ;

  wire Clk;
  wire [6:0]\EX_Branch_CMP_Op1_reg[1] ;
  wire \EX_Branch_CMP_Op1_reg[30] ;
  wire \EX_Branch_CMP_Op1_reg[30]_0 ;
  wire [6:0]GPR_Op1;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_10 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;
  wire \Using_FPGA.Native_5 ;
  wire \Using_FPGA.Native_6 ;
  wire \Using_FPGA.Native_7 ;
  wire \Using_FPGA.Native_8 ;
  wire \Using_FPGA.Native_9 ;
  wire \WB_MEM_Result_reg[13] ;
  wire \WB_MEM_Result_reg[14] ;
  wire \WB_MEM_Result_reg[1] ;
  wire \WB_MEM_Result_reg[2] ;
  wire \WB_MEM_Result_reg[9] ;
  wire \ex_gpr_write_addr_reg[0] ;
  wire \ex_gpr_write_addr_reg[0]_0 ;
  wire ex_sel_alu_i_reg;
  wire ex_sel_alu_i_reg_0;
  wire ex_sel_alu_i_reg_1;
  wire ex_sel_alu_i_reg_2;
  wire ex_sel_alu_i_reg_3;
  wire of_instr_ii_6;
  wire sync_reset;
  wire \wb_exception_kind_i_reg[31] ;
  wire \wb_exception_kind_i_reg[31]_0 ;
  wire [1:0]\wb_gpr_write_addr_reg[2] ;
  wire wb_reset_reg;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_6),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
  LUT6 #(
    .INIT(64'hFFFF6FF6FFFFFFFF)) 
    \Using_FPGA.Native_i_12 
       (.I0(\wb_gpr_write_addr_reg[2] [0]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\wb_gpr_write_addr_reg[2] [1]),
        .I3(\Using_FPGA.Native_9 ),
        .I4(wb_reset_reg),
        .I5(\Using_FPGA.Native_10 ),
        .O(\EX_Branch_CMP_Op1_reg[30]_0 ));
  LUT5 #(
    .INIT(32'hF4F4FFF4)) 
    \Using_FPGA.Native_i_1__0 
       (.I0(\EX_Branch_CMP_Op1_reg[30] ),
        .I1(\wb_exception_kind_i_reg[31] ),
        .I2(\Using_FPGA.Native_1 ),
        .I3(GPR_Op1[0]),
        .I4(\ex_gpr_write_addr_reg[0] ),
        .O(\EX_Branch_CMP_Op1_reg[1] [0]));
  LUT5 #(
    .INIT(32'hF4F4FFF4)) 
    \Using_FPGA.Native_i_1__1 
       (.I0(\EX_Branch_CMP_Op1_reg[30] ),
        .I1(\wb_exception_kind_i_reg[31]_0 ),
        .I2(\Using_FPGA.Native_2 ),
        .I3(GPR_Op1[1]),
        .I4(\ex_gpr_write_addr_reg[0] ),
        .O(\EX_Branch_CMP_Op1_reg[1] [1]));
  LUT6 #(
    .INIT(64'hFFFFFFFFF2F2FFF2)) 
    \Using_FPGA.Native_i_1__16 
       (.I0(\WB_MEM_Result_reg[14] ),
        .I1(\EX_Branch_CMP_Op1_reg[30] ),
        .I2(\Using_FPGA.Native_3 ),
        .I3(GPR_Op1[2]),
        .I4(\ex_gpr_write_addr_reg[0] ),
        .I5(ex_sel_alu_i_reg),
        .O(\EX_Branch_CMP_Op1_reg[1] [2]));
  LUT6 #(
    .INIT(64'hFFFFFFFFF2F2FFF2)) 
    \Using_FPGA.Native_i_1__17 
       (.I0(\WB_MEM_Result_reg[13] ),
        .I1(\EX_Branch_CMP_Op1_reg[30] ),
        .I2(\Using_FPGA.Native_4 ),
        .I3(GPR_Op1[3]),
        .I4(\ex_gpr_write_addr_reg[0] ),
        .I5(ex_sel_alu_i_reg_0),
        .O(\EX_Branch_CMP_Op1_reg[1] [3]));
  LUT6 #(
    .INIT(64'hFFFFFFFFF2F2FFF2)) 
    \Using_FPGA.Native_i_1__21 
       (.I0(\WB_MEM_Result_reg[9] ),
        .I1(\EX_Branch_CMP_Op1_reg[30] ),
        .I2(\Using_FPGA.Native_5 ),
        .I3(GPR_Op1[4]),
        .I4(\ex_gpr_write_addr_reg[0] ),
        .I5(ex_sel_alu_i_reg_1),
        .O(\EX_Branch_CMP_Op1_reg[1] [4]));
  LUT6 #(
    .INIT(64'hFFFFFFFFF2F2FFF2)) 
    \Using_FPGA.Native_i_1__28 
       (.I0(\WB_MEM_Result_reg[2] ),
        .I1(\EX_Branch_CMP_Op1_reg[30] ),
        .I2(\Using_FPGA.Native_6 ),
        .I3(GPR_Op1[5]),
        .I4(\ex_gpr_write_addr_reg[0] ),
        .I5(ex_sel_alu_i_reg_2),
        .O(\EX_Branch_CMP_Op1_reg[1] [5]));
  LUT6 #(
    .INIT(64'hFFFFFFFFF2F2FFF2)) 
    \Using_FPGA.Native_i_1__29 
       (.I0(\WB_MEM_Result_reg[1] ),
        .I1(\EX_Branch_CMP_Op1_reg[30] ),
        .I2(\Using_FPGA.Native_7 ),
        .I3(GPR_Op1[6]),
        .I4(\ex_gpr_write_addr_reg[0] ),
        .I5(ex_sel_alu_i_reg_3),
        .O(\EX_Branch_CMP_Op1_reg[1] [6]));
  LUT3 #(
    .INIT(8'hFB)) 
    \Using_FPGA.Native_i_7 
       (.I0(\EX_Branch_CMP_Op1_reg[30]_0 ),
        .I1(\ex_gpr_write_addr_reg[0]_0 ),
        .I2(\Using_FPGA.Native_8 ),
        .O(\EX_Branch_CMP_Op1_reg[30] ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_182
   (\Using_FPGA.Native_0 ,
    \EX_Branch_CMP_Op1_reg[31] ,
    \EX_Branch_CMP_Op1_reg[30] ,
    sync_reset,
    of_instr_ii_5,
    Clk,
    \ex_gpr_write_addr_reg[4] ,
    I0,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    I4,
    \mem_gpr_write_addr_reg[2] );
  output \Using_FPGA.Native_0 ;
  output \EX_Branch_CMP_Op1_reg[31] ;
  output \EX_Branch_CMP_Op1_reg[30] ;
  input sync_reset;
  input of_instr_ii_5;
  input Clk;
  input \ex_gpr_write_addr_reg[4] ;
  input I0;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input I4;
  input [2:0]\mem_gpr_write_addr_reg[2] ;

  wire Clk;
  wire \EX_Branch_CMP_Op1_reg[30] ;
  wire \EX_Branch_CMP_Op1_reg[31] ;
  wire I0;
  wire I4;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \ex_gpr_write_addr_reg[4] ;
  wire [2:0]\mem_gpr_write_addr_reg[2] ;
  wire of_instr_ii_5;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_5),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    \Using_FPGA.Native_i_14 
       (.I0(\ex_gpr_write_addr_reg[4] ),
        .I1(\Using_FPGA.Native_0 ),
        .I2(I0),
        .I3(\Using_FPGA.Native_1 ),
        .I4(\Using_FPGA.Native_2 ),
        .I5(I4),
        .O(\EX_Branch_CMP_Op1_reg[31] ));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    \Using_FPGA.Native_i_15 
       (.I0(\mem_gpr_write_addr_reg[2] [0]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\mem_gpr_write_addr_reg[2] [1]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\mem_gpr_write_addr_reg[2] [2]),
        .O(\EX_Branch_CMP_Op1_reg[30] ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_184
   (\Using_FPGA.Native_0 ,
    \EX_Op2_reg[31] ,
    \EX_Op2_reg[16] ,
    sync_reset,
    of_instr_ii_4,
    Clk,
    ex_valid_reg,
    \ex_gpr_write_addr_reg[0] ,
    \ex_gpr_write_addr_reg[4] ,
    \Using_FPGA.Native_1 ,
    \wb_gpr_write_addr_reg[0] ,
    \Using_FPGA.Native_2 );
  output \Using_FPGA.Native_0 ;
  output \EX_Op2_reg[31] ;
  output \EX_Op2_reg[16] ;
  input sync_reset;
  input of_instr_ii_4;
  input Clk;
  input ex_valid_reg;
  input [1:0]\ex_gpr_write_addr_reg[0] ;
  input \ex_gpr_write_addr_reg[4] ;
  input \Using_FPGA.Native_1 ;
  input [2:0]\wb_gpr_write_addr_reg[0] ;
  input \Using_FPGA.Native_2 ;

  wire Clk;
  wire \EX_Op2_reg[16] ;
  wire \EX_Op2_reg[31] ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire [1:0]\ex_gpr_write_addr_reg[0] ;
  wire \ex_gpr_write_addr_reg[4] ;
  wire ex_valid_reg;
  wire of_instr_ii_4;
  wire sync_reset;
  wire [2:0]\wb_gpr_write_addr_reg[0] ;

  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \EX_Op2[0]_i_12 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\wb_gpr_write_addr_reg[0] [2]),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\wb_gpr_write_addr_reg[0] [1]),
        .I4(\wb_gpr_write_addr_reg[0] [0]),
        .I5(\Using_FPGA.Native_2 ),
        .O(\EX_Op2_reg[16] ));
  LUT6 #(
    .INIT(64'h0082000000000082)) 
    \EX_Op2[0]_i_6 
       (.I0(ex_valid_reg),
        .I1(\ex_gpr_write_addr_reg[0] [1]),
        .I2(\Using_FPGA.Native_0 ),
        .I3(\ex_gpr_write_addr_reg[4] ),
        .I4(\Using_FPGA.Native_1 ),
        .I5(\ex_gpr_write_addr_reg[0] [0]),
        .O(\EX_Op2_reg[31] ));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_4),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_186
   (\Using_FPGA.Native_0 ,
    \EX_Op2_reg[15] ,
    sync_reset,
    of_instr_ii_3,
    Clk,
    \mem_gpr_write_addr_reg[1] ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 );
  output \Using_FPGA.Native_0 ;
  output \EX_Op2_reg[15] ;
  input sync_reset;
  input of_instr_ii_3;
  input Clk;
  input [2:0]\mem_gpr_write_addr_reg[1] ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;

  wire Clk;
  wire \EX_Op2_reg[15] ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire [2:0]\mem_gpr_write_addr_reg[1] ;
  wire of_instr_ii_3;
  wire sync_reset;

  LUT6 #(
    .INIT(64'h66F666F6FFFF66F6)) 
    \EX_Op2[0]_i_14 
       (.I0(\mem_gpr_write_addr_reg[1] [2]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\mem_gpr_write_addr_reg[1] [1]),
        .I3(\Using_FPGA.Native_1 ),
        .I4(\mem_gpr_write_addr_reg[1] [0]),
        .I5(\Using_FPGA.Native_2 ),
        .O(\EX_Op2_reg[15] ));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_3),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_188
   (\ex_opcode_reg[3] ,
    \EX_Op1_reg[30] ,
    \EX_Op1_reg[0] ,
    \EX_Op1_reg[29] ,
    \EX_Op1_reg[28] ,
    I1,
    ex_enable_sext_shift_i0,
    ex_enable_alu_i_reg,
    ex_is_div_instr_I_reg,
    E,
    \EX_ALU_Op_reg[1] ,
    sync_reset,
    of_instr_ii_39,
    Clk,
    ex_MSR,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 ,
    of_op1_sel_spr,
    \Using_FPGA.Native_5 ,
    \Using_FPGA.Native_6 ,
    \Using_FPGA.Native_7 ,
    EX_Is_Div_Instr,
    ex_branch_with_delayslot_reg,
    of_pause_reg,
    \Using_FPGA.Native_8 ,
    of_valid);
  output \ex_opcode_reg[3] ;
  output \EX_Op1_reg[30] ;
  output \EX_Op1_reg[0] ;
  output \EX_Op1_reg[29] ;
  output \EX_Op1_reg[28] ;
  output I1;
  output ex_enable_sext_shift_i0;
  output ex_enable_alu_i_reg;
  output ex_is_div_instr_I_reg;
  output [0:0]E;
  output \EX_ALU_Op_reg[1] ;
  input sync_reset;
  input of_instr_ii_39;
  input Clk;
  input [2:0]ex_MSR;
  input [3:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input \Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;
  input of_op1_sel_spr;
  input \Using_FPGA.Native_5 ;
  input \Using_FPGA.Native_6 ;
  input \Using_FPGA.Native_7 ;
  input EX_Is_Div_Instr;
  input ex_branch_with_delayslot_reg;
  input of_pause_reg;
  input \Using_FPGA.Native_8 ;
  input of_valid;

  wire Clk;
  wire [0:0]E;
  wire \EX_ALU_Op_reg[1] ;
  wire EX_Is_Div_Instr;
  wire \EX_Op1_reg[0] ;
  wire \EX_Op1_reg[28] ;
  wire \EX_Op1_reg[29] ;
  wire \EX_Op1_reg[30] ;
  wire I1;
  wire [3:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;
  wire \Using_FPGA.Native_5 ;
  wire \Using_FPGA.Native_6 ;
  wire \Using_FPGA.Native_7 ;
  wire \Using_FPGA.Native_8 ;
  wire [2:0]ex_MSR;
  wire ex_branch_with_delayslot_reg;
  wire ex_enable_alu_i_reg;
  wire ex_enable_sext_shift_i0;
  wire ex_is_div_instr_I0;
  wire ex_is_div_instr_I_reg;
  wire \ex_opcode_reg[3] ;
  wire of_instr_ii_39;
  wire of_op1_sel_spr;
  wire of_pause_reg;
  wire of_valid;
  wire sync_reset;

  LUT3 #(
    .INIT(8'h45)) 
    \EX_ALU_Op[0]_i_2 
       (.I0(\ex_opcode_reg[3] ),
        .I1(\Using_FPGA.Native_6 ),
        .I2(\Using_FPGA.Native_7 ),
        .O(\EX_ALU_Op_reg[1] ));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_39),
        .Q(\ex_opcode_reg[3] ),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__34 
       (.I0(ex_MSR[0]),
        .I1(\EX_Op1_reg[0] ),
        .I2(\Using_FPGA.Native_0 [0]),
        .O(\EX_Op1_reg[30] ));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__35 
       (.I0(ex_MSR[1]),
        .I1(\EX_Op1_reg[0] ),
        .I2(\Using_FPGA.Native_0 [1]),
        .O(\EX_Op1_reg[29] ));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__36 
       (.I0(ex_MSR[2]),
        .I1(\EX_Op1_reg[0] ),
        .I2(\Using_FPGA.Native_0 [2]),
        .O(\EX_Op1_reg[28] ));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_3__0 
       (.I0(ex_MSR[1]),
        .I1(\EX_Op1_reg[0] ),
        .I2(\Using_FPGA.Native_0 [3]),
        .O(I1));
  LUT6 #(
    .INIT(64'hF7FF0000FFFFFFFF)) 
    \Using_FPGA.Native_i_9 
       (.I0(\ex_opcode_reg[3] ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(\Using_FPGA.Native_2 ),
        .I3(\Using_FPGA.Native_3 ),
        .I4(\Using_FPGA.Native_4 ),
        .I5(of_op1_sel_spr),
        .O(\EX_Op1_reg[0] ));
  LUT5 #(
    .INIT(32'hFFEBFFFF)) 
    ex_enable_alu_i_i_1
       (.I0(\ex_opcode_reg[3] ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(\Using_FPGA.Native_2 ),
        .I3(\Using_FPGA.Native_6 ),
        .I4(\Using_FPGA.Native_7 ),
        .O(ex_enable_alu_i_reg));
  LUT3 #(
    .INIT(8'h08)) 
    ex_enable_sext_shift_i_i_1
       (.I0(\ex_opcode_reg[3] ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(\Using_FPGA.Native_2 ),
        .O(ex_enable_sext_shift_i0));
  LUT5 #(
    .INIT(32'h0000CC0A)) 
    ex_is_div_instr_I_i_1
       (.I0(EX_Is_Div_Instr),
        .I1(ex_is_div_instr_I0),
        .I2(ex_branch_with_delayslot_reg),
        .I3(of_pause_reg),
        .I4(sync_reset),
        .O(ex_is_div_instr_I_reg));
  LUT5 #(
    .INIT(32'h00000400)) 
    ex_is_div_instr_I_i_2
       (.I0(\ex_opcode_reg[3] ),
        .I1(\Using_FPGA.Native_2 ),
        .I2(\Using_FPGA.Native_5 ),
        .I3(\Using_FPGA.Native_3 ),
        .I4(\Using_FPGA.Native_1 ),
        .O(ex_is_div_instr_I0));
  LUT6 #(
    .INIT(64'h0000008000000000)) 
    \imm_reg[0]_i_1 
       (.I0(\ex_opcode_reg[3] ),
        .I1(\Using_FPGA.Native_6 ),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\Using_FPGA.Native_5 ),
        .I4(\Using_FPGA.Native_8 ),
        .I5(of_valid),
        .O(E));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_190
   (\Using_FPGA.Native_0 ,
    sync_reset,
    of_instr_ii_2,
    Clk);
  output \Using_FPGA.Native_0 ;
  input sync_reset;
  input of_instr_ii_2;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_2;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_2),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_192
   (\Using_FPGA.Native_0 ,
    \EX_Op2_reg[15] ,
    sync_reset,
    of_instr_ii_1,
    Clk,
    \mem_gpr_write_addr_reg[2] ,
    \Using_FPGA.Native_1 );
  output \Using_FPGA.Native_0 ;
  output \EX_Op2_reg[15] ;
  input sync_reset;
  input of_instr_ii_1;
  input Clk;
  input [1:0]\mem_gpr_write_addr_reg[2] ;
  input \Using_FPGA.Native_1 ;

  wire Clk;
  wire \EX_Op2_reg[15] ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [1:0]\mem_gpr_write_addr_reg[2] ;
  wire of_instr_ii_1;
  wire sync_reset;

  LUT4 #(
    .INIT(16'h4F44)) 
    \EX_Op2[0]_i_15 
       (.I0(\mem_gpr_write_addr_reg[2] [0]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\mem_gpr_write_addr_reg[2] [1]),
        .I3(\Using_FPGA.Native_1 ),
        .O(\EX_Op2_reg[15] ));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_1),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_194
   (\Using_FPGA.Native_0 ,
    \EX_Op2_reg[1] ,
    \EX_Op2_reg[15] ,
    \EX_Op2_reg[15]_0 ,
    \EX_Op2_reg[0] ,
    \EX_Op2_reg[31] ,
    sync_reset,
    of_instr_ii_0,
    Clk,
    \wb_exception_kind_i_reg[31] ,
    mem_ex_result,
    \Using_FPGA.Native_1 ,
    \wb_exception_kind_i_reg[31]_0 ,
    \Using_FPGA.Native_2 ,
    \wb_exception_kind_i_reg[31]_1 ,
    \wb_exception_kind_i_reg[31]_2 ,
    \wb_exception_kind_i_reg[31]_3 ,
    \wb_exception_kind_i_reg[31]_4 ,
    \wb_exception_kind_i_reg[31]_5 ,
    \wb_exception_kind_i_reg[31]_6 ,
    \WB_MEM_Result_reg[16] ,
    ex_sel_alu_i_reg,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 ,
    \Using_FPGA.Native_5 ,
    \ex_gpr_write_addr_reg[0] ,
    \WB_MEM_Result_reg[15] ,
    \Using_FPGA.Native_6 ,
    \WB_MEM_Result_reg[14] ,
    \Using_FPGA.Native_7 ,
    \WB_MEM_Result_reg[13] ,
    \Using_FPGA.Native_8 ,
    \WB_MEM_Result_reg[12] ,
    \Using_FPGA.Native_9 ,
    \WB_MEM_Result_reg[11] ,
    \Using_FPGA.Native_10 ,
    \WB_MEM_Result_reg[10] ,
    \Using_FPGA.Native_11 ,
    \WB_MEM_Result_reg[9] ,
    \Using_FPGA.Native_12 ,
    \WB_MEM_Result_reg[8] ,
    \Using_FPGA.Native_13 ,
    \WB_MEM_Result_reg[7] ,
    \Using_FPGA.Native_14 ,
    \WB_MEM_Result_reg[6] ,
    \Using_FPGA.Native_15 ,
    \WB_MEM_Result_reg[5] ,
    \Using_FPGA.Native_16 ,
    \WB_MEM_Result_reg[4] ,
    \Using_FPGA.Native_17 ,
    \WB_MEM_Result_reg[3] ,
    \Using_FPGA.Native_18 ,
    \WB_MEM_Result_reg[2] ,
    \Using_FPGA.Native_19 ,
    \WB_MEM_Result_reg[1] ,
    \WB_MEM_Result_reg[0] ,
    \Using_FPGA.Native_20 ,
    \Using_FPGA.Native_21 ,
    ex_sel_alu_i_reg_0,
    \Using_FPGA.Native_22 ,
    ex_sel_alu_i_reg_1,
    ex_sel_alu_i_reg_2,
    \Using_FPGA.Native_23 ,
    \Using_FPGA.Native_24 ,
    ex_sel_alu_i_reg_3,
    ex_sel_alu_i_reg_4,
    \Using_FPGA.Native_25 ,
    ex_sel_alu_i_reg_5,
    \Using_FPGA.Native_26 ,
    \Using_FPGA.Native_27 ,
    ex_sel_alu_i_reg_6,
    \Using_FPGA.Native_28 ,
    ex_sel_alu_i_reg_7,
    ex_sel_alu_i_reg_8,
    \Using_FPGA.Native_29 ,
    \Using_FPGA.Native_30 ,
    ex_sel_alu_i_reg_9,
    \Using_FPGA.Native_31 ,
    ex_sel_alu_i_reg_10,
    \Using_FPGA.Native_32 ,
    ex_sel_alu_i_reg_11,
    \Using_FPGA.Native_33 ,
    ex_sel_alu_i_reg_12,
    ex_sel_alu_i_reg_13,
    \Using_FPGA.Native_34 ,
    \Using_FPGA.Native_35 ,
    ex_sel_alu_i_reg_14,
    \Using_FPGA.Native_36 ,
    \Using_FPGA.Native_37 ,
    \wb_gpr_write_addr_reg[3] ,
    \Using_FPGA.Native_38 ,
    wb_reset_reg,
    \Using_FPGA.Native_39 ,
    \mem_gpr_write_addr_reg[1] ,
    \mem_gpr_write_addr_reg[3] ,
    \mem_gpr_write_addr_reg[0] ,
    mem_valid_reg,
    of_predecode,
    \ex_gpr_write_addr_reg[4] ,
    I0,
    I4);
  output \Using_FPGA.Native_0 ;
  output [30:0]\EX_Op2_reg[1] ;
  output \EX_Op2_reg[15] ;
  output \EX_Op2_reg[15]_0 ;
  output \EX_Op2_reg[0] ;
  output \EX_Op2_reg[31] ;
  input sync_reset;
  input of_instr_ii_0;
  input Clk;
  input \wb_exception_kind_i_reg[31] ;
  input [27:0]mem_ex_result;
  input \Using_FPGA.Native_1 ;
  input \wb_exception_kind_i_reg[31]_0 ;
  input [3:0]\Using_FPGA.Native_2 ;
  input \wb_exception_kind_i_reg[31]_1 ;
  input \wb_exception_kind_i_reg[31]_2 ;
  input \wb_exception_kind_i_reg[31]_3 ;
  input \wb_exception_kind_i_reg[31]_4 ;
  input \wb_exception_kind_i_reg[31]_5 ;
  input \wb_exception_kind_i_reg[31]_6 ;
  input [7:0]\WB_MEM_Result_reg[16] ;
  input [15:0]ex_sel_alu_i_reg;
  input \Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;
  input \Using_FPGA.Native_5 ;
  input \ex_gpr_write_addr_reg[0] ;
  input \WB_MEM_Result_reg[15] ;
  input \Using_FPGA.Native_6 ;
  input \WB_MEM_Result_reg[14] ;
  input \Using_FPGA.Native_7 ;
  input \WB_MEM_Result_reg[13] ;
  input \Using_FPGA.Native_8 ;
  input \WB_MEM_Result_reg[12] ;
  input \Using_FPGA.Native_9 ;
  input \WB_MEM_Result_reg[11] ;
  input \Using_FPGA.Native_10 ;
  input \WB_MEM_Result_reg[10] ;
  input \Using_FPGA.Native_11 ;
  input \WB_MEM_Result_reg[9] ;
  input \Using_FPGA.Native_12 ;
  input \WB_MEM_Result_reg[8] ;
  input \Using_FPGA.Native_13 ;
  input \WB_MEM_Result_reg[7] ;
  input \Using_FPGA.Native_14 ;
  input \WB_MEM_Result_reg[6] ;
  input \Using_FPGA.Native_15 ;
  input \WB_MEM_Result_reg[5] ;
  input \Using_FPGA.Native_16 ;
  input \WB_MEM_Result_reg[4] ;
  input \Using_FPGA.Native_17 ;
  input \WB_MEM_Result_reg[3] ;
  input \Using_FPGA.Native_18 ;
  input \WB_MEM_Result_reg[2] ;
  input \Using_FPGA.Native_19 ;
  input \WB_MEM_Result_reg[1] ;
  input \WB_MEM_Result_reg[0] ;
  input \Using_FPGA.Native_20 ;
  input \Using_FPGA.Native_21 ;
  input ex_sel_alu_i_reg_0;
  input \Using_FPGA.Native_22 ;
  input ex_sel_alu_i_reg_1;
  input ex_sel_alu_i_reg_2;
  input \Using_FPGA.Native_23 ;
  input \Using_FPGA.Native_24 ;
  input ex_sel_alu_i_reg_3;
  input ex_sel_alu_i_reg_4;
  input \Using_FPGA.Native_25 ;
  input ex_sel_alu_i_reg_5;
  input \Using_FPGA.Native_26 ;
  input \Using_FPGA.Native_27 ;
  input ex_sel_alu_i_reg_6;
  input \Using_FPGA.Native_28 ;
  input ex_sel_alu_i_reg_7;
  input ex_sel_alu_i_reg_8;
  input \Using_FPGA.Native_29 ;
  input \Using_FPGA.Native_30 ;
  input ex_sel_alu_i_reg_9;
  input \Using_FPGA.Native_31 ;
  input ex_sel_alu_i_reg_10;
  input \Using_FPGA.Native_32 ;
  input ex_sel_alu_i_reg_11;
  input \Using_FPGA.Native_33 ;
  input ex_sel_alu_i_reg_12;
  input ex_sel_alu_i_reg_13;
  input \Using_FPGA.Native_34 ;
  input \Using_FPGA.Native_35 ;
  input ex_sel_alu_i_reg_14;
  input \Using_FPGA.Native_36 ;
  input \Using_FPGA.Native_37 ;
  input [1:0]\wb_gpr_write_addr_reg[3] ;
  input \Using_FPGA.Native_38 ;
  input wb_reset_reg;
  input \Using_FPGA.Native_39 ;
  input \mem_gpr_write_addr_reg[1] ;
  input \mem_gpr_write_addr_reg[3] ;
  input [1:0]\mem_gpr_write_addr_reg[0] ;
  input mem_valid_reg;
  input [1:0]of_predecode;
  input \ex_gpr_write_addr_reg[4] ;
  input I0;
  input I4;

  wire Clk;
  wire \EX_Op2[0]_i_13_n_0 ;
  wire \EX_Op2[0]_i_7_n_0 ;
  wire \EX_Op2[10]_i_3_n_0 ;
  wire \EX_Op2[11]_i_3_n_0 ;
  wire \EX_Op2[12]_i_3_n_0 ;
  wire \EX_Op2[13]_i_3_n_0 ;
  wire \EX_Op2[14]_i_3_n_0 ;
  wire \EX_Op2[15]_i_3_n_0 ;
  wire \EX_Op2[16]_i_2_n_0 ;
  wire \EX_Op2[16]_i_4_n_0 ;
  wire \EX_Op2[17]_i_2_n_0 ;
  wire \EX_Op2[18]_i_2_n_0 ;
  wire \EX_Op2[19]_i_2_n_0 ;
  wire \EX_Op2[1]_i_3_n_0 ;
  wire \EX_Op2[20]_i_2_n_0 ;
  wire \EX_Op2[21]_i_2_n_0 ;
  wire \EX_Op2[22]_i_2_n_0 ;
  wire \EX_Op2[23]_i_2_n_0 ;
  wire \EX_Op2[24]_i_2_n_0 ;
  wire \EX_Op2[25]_i_2_n_0 ;
  wire \EX_Op2[26]_i_2_n_0 ;
  wire \EX_Op2[27]_i_2_n_0 ;
  wire \EX_Op2[28]_i_2_n_0 ;
  wire \EX_Op2[29]_i_2_n_0 ;
  wire \EX_Op2[2]_i_3_n_0 ;
  wire \EX_Op2[30]_i_2_n_0 ;
  wire \EX_Op2[31]_i_2_n_0 ;
  wire \EX_Op2[3]_i_3_n_0 ;
  wire \EX_Op2[4]_i_3_n_0 ;
  wire \EX_Op2[5]_i_3_n_0 ;
  wire \EX_Op2[6]_i_3_n_0 ;
  wire \EX_Op2[7]_i_3_n_0 ;
  wire \EX_Op2[8]_i_3_n_0 ;
  wire \EX_Op2[9]_i_3_n_0 ;
  wire \EX_Op2_reg[0] ;
  wire \EX_Op2_reg[15] ;
  wire \EX_Op2_reg[15]_0 ;
  wire [30:0]\EX_Op2_reg[1] ;
  wire \EX_Op2_reg[31] ;
  wire I0;
  wire I4;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_10 ;
  wire \Using_FPGA.Native_11 ;
  wire \Using_FPGA.Native_12 ;
  wire \Using_FPGA.Native_13 ;
  wire \Using_FPGA.Native_14 ;
  wire \Using_FPGA.Native_15 ;
  wire \Using_FPGA.Native_16 ;
  wire \Using_FPGA.Native_17 ;
  wire \Using_FPGA.Native_18 ;
  wire \Using_FPGA.Native_19 ;
  wire [3:0]\Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_20 ;
  wire \Using_FPGA.Native_21 ;
  wire \Using_FPGA.Native_22 ;
  wire \Using_FPGA.Native_23 ;
  wire \Using_FPGA.Native_24 ;
  wire \Using_FPGA.Native_25 ;
  wire \Using_FPGA.Native_26 ;
  wire \Using_FPGA.Native_27 ;
  wire \Using_FPGA.Native_28 ;
  wire \Using_FPGA.Native_29 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_30 ;
  wire \Using_FPGA.Native_31 ;
  wire \Using_FPGA.Native_32 ;
  wire \Using_FPGA.Native_33 ;
  wire \Using_FPGA.Native_34 ;
  wire \Using_FPGA.Native_35 ;
  wire \Using_FPGA.Native_36 ;
  wire \Using_FPGA.Native_37 ;
  wire \Using_FPGA.Native_38 ;
  wire \Using_FPGA.Native_39 ;
  wire \Using_FPGA.Native_4 ;
  wire \Using_FPGA.Native_5 ;
  wire \Using_FPGA.Native_6 ;
  wire \Using_FPGA.Native_7 ;
  wire \Using_FPGA.Native_8 ;
  wire \Using_FPGA.Native_9 ;
  wire \WB_MEM_Result_reg[0] ;
  wire \WB_MEM_Result_reg[10] ;
  wire \WB_MEM_Result_reg[11] ;
  wire \WB_MEM_Result_reg[12] ;
  wire \WB_MEM_Result_reg[13] ;
  wire \WB_MEM_Result_reg[14] ;
  wire \WB_MEM_Result_reg[15] ;
  wire [7:0]\WB_MEM_Result_reg[16] ;
  wire \WB_MEM_Result_reg[1] ;
  wire \WB_MEM_Result_reg[2] ;
  wire \WB_MEM_Result_reg[3] ;
  wire \WB_MEM_Result_reg[4] ;
  wire \WB_MEM_Result_reg[5] ;
  wire \WB_MEM_Result_reg[6] ;
  wire \WB_MEM_Result_reg[7] ;
  wire \WB_MEM_Result_reg[8] ;
  wire \WB_MEM_Result_reg[9] ;
  wire \ex_gpr_write_addr_reg[0] ;
  wire \ex_gpr_write_addr_reg[4] ;
  wire [15:0]ex_sel_alu_i_reg;
  wire ex_sel_alu_i_reg_0;
  wire ex_sel_alu_i_reg_1;
  wire ex_sel_alu_i_reg_10;
  wire ex_sel_alu_i_reg_11;
  wire ex_sel_alu_i_reg_12;
  wire ex_sel_alu_i_reg_13;
  wire ex_sel_alu_i_reg_14;
  wire ex_sel_alu_i_reg_2;
  wire ex_sel_alu_i_reg_3;
  wire ex_sel_alu_i_reg_4;
  wire ex_sel_alu_i_reg_5;
  wire ex_sel_alu_i_reg_6;
  wire ex_sel_alu_i_reg_7;
  wire ex_sel_alu_i_reg_8;
  wire ex_sel_alu_i_reg_9;
  wire [27:0]mem_ex_result;
  wire [1:0]\mem_gpr_write_addr_reg[0] ;
  wire \mem_gpr_write_addr_reg[1] ;
  wire \mem_gpr_write_addr_reg[3] ;
  wire mem_valid_reg;
  wire of_instr_ii_0;
  wire [1:0]of_predecode;
  wire sync_reset;
  wire \wb_exception_kind_i_reg[31] ;
  wire \wb_exception_kind_i_reg[31]_0 ;
  wire \wb_exception_kind_i_reg[31]_1 ;
  wire \wb_exception_kind_i_reg[31]_2 ;
  wire \wb_exception_kind_i_reg[31]_3 ;
  wire \wb_exception_kind_i_reg[31]_4 ;
  wire \wb_exception_kind_i_reg[31]_5 ;
  wire \wb_exception_kind_i_reg[31]_6 ;
  wire [1:0]\wb_gpr_write_addr_reg[3] ;
  wire wb_reset_reg;

  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    \EX_Op2[0]_i_11 
       (.I0(\ex_gpr_write_addr_reg[4] ),
        .I1(\Using_FPGA.Native_0 ),
        .I2(I0),
        .I3(\Using_FPGA.Native_38 ),
        .I4(of_predecode[0]),
        .I5(I4),
        .O(\EX_Op2_reg[31] ));
  LUT4 #(
    .INIT(16'h2FF2)) 
    \EX_Op2[0]_i_13 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\mem_gpr_write_addr_reg[0] [0]),
        .I2(\mem_gpr_write_addr_reg[0] [1]),
        .I3(of_predecode[1]),
        .O(\EX_Op2[0]_i_13_n_0 ));
  LUT5 #(
    .INIT(32'h7777F777)) 
    \EX_Op2[0]_i_3 
       (.I0(\Using_FPGA.Native_36 ),
        .I1(\Using_FPGA.Native_37 ),
        .I2(\EX_Op2[0]_i_7_n_0 ),
        .I3(\EX_Op2_reg[15]_0 ),
        .I4(\ex_gpr_write_addr_reg[0] ),
        .O(\EX_Op2_reg[15] ));
  LUT6 #(
    .INIT(64'h0000032200000022)) 
    \EX_Op2[0]_i_5 
       (.I0(\Using_FPGA.Native_2 [3]),
        .I1(\Using_FPGA.Native_5 ),
        .I2(\EX_Op2[0]_i_7_n_0 ),
        .I3(\EX_Op2_reg[15]_0 ),
        .I4(\ex_gpr_write_addr_reg[0] ),
        .I5(\WB_MEM_Result_reg[0] ),
        .O(\EX_Op2_reg[0] ));
  LUT6 #(
    .INIT(64'hFFFF6FF6FFFFFFFF)) 
    \EX_Op2[0]_i_7 
       (.I0(\wb_gpr_write_addr_reg[3] [0]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\wb_gpr_write_addr_reg[3] [1]),
        .I3(\Using_FPGA.Native_38 ),
        .I4(wb_reset_reg),
        .I5(\Using_FPGA.Native_39 ),
        .O(\EX_Op2[0]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFEFEFFFE)) 
    \EX_Op2[0]_i_8 
       (.I0(\EX_Op2[0]_i_13_n_0 ),
        .I1(\mem_gpr_write_addr_reg[1] ),
        .I2(\mem_gpr_write_addr_reg[3] ),
        .I3(\mem_gpr_write_addr_reg[0] [0]),
        .I4(\Using_FPGA.Native_0 ),
        .I5(mem_valid_reg),
        .O(\EX_Op2_reg[15]_0 ));
  LUT5 #(
    .INIT(32'hFFFF22F2)) 
    \EX_Op2[10]_i_1 
       (.I0(ex_sel_alu_i_reg[6]),
        .I1(\Using_FPGA.Native_3 ),
        .I2(\EX_Op2_reg[15] ),
        .I3(\Using_FPGA.Native_10 ),
        .I4(\EX_Op2[10]_i_3_n_0 ),
        .O(\EX_Op2_reg[1] [21]));
  LUT6 #(
    .INIT(64'h0000032200000022)) 
    \EX_Op2[10]_i_3 
       (.I0(mem_ex_result[18]),
        .I1(\Using_FPGA.Native_5 ),
        .I2(\EX_Op2[0]_i_7_n_0 ),
        .I3(\EX_Op2_reg[15]_0 ),
        .I4(\ex_gpr_write_addr_reg[0] ),
        .I5(\WB_MEM_Result_reg[10] ),
        .O(\EX_Op2[10]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF22F2)) 
    \EX_Op2[11]_i_1 
       (.I0(ex_sel_alu_i_reg[5]),
        .I1(\Using_FPGA.Native_3 ),
        .I2(\EX_Op2_reg[15] ),
        .I3(\Using_FPGA.Native_9 ),
        .I4(\EX_Op2[11]_i_3_n_0 ),
        .O(\EX_Op2_reg[1] [20]));
  LUT6 #(
    .INIT(64'h0000032200000022)) 
    \EX_Op2[11]_i_3 
       (.I0(mem_ex_result[17]),
        .I1(\Using_FPGA.Native_5 ),
        .I2(\EX_Op2[0]_i_7_n_0 ),
        .I3(\EX_Op2_reg[15]_0 ),
        .I4(\ex_gpr_write_addr_reg[0] ),
        .I5(\WB_MEM_Result_reg[11] ),
        .O(\EX_Op2[11]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF22F2)) 
    \EX_Op2[12]_i_1 
       (.I0(ex_sel_alu_i_reg[4]),
        .I1(\Using_FPGA.Native_3 ),
        .I2(\EX_Op2_reg[15] ),
        .I3(\Using_FPGA.Native_8 ),
        .I4(\EX_Op2[12]_i_3_n_0 ),
        .O(\EX_Op2_reg[1] [19]));
  LUT6 #(
    .INIT(64'h0000032200000022)) 
    \EX_Op2[12]_i_3 
       (.I0(mem_ex_result[16]),
        .I1(\Using_FPGA.Native_5 ),
        .I2(\EX_Op2[0]_i_7_n_0 ),
        .I3(\EX_Op2_reg[15]_0 ),
        .I4(\ex_gpr_write_addr_reg[0] ),
        .I5(\WB_MEM_Result_reg[12] ),
        .O(\EX_Op2[12]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF22F2)) 
    \EX_Op2[13]_i_1 
       (.I0(ex_sel_alu_i_reg[3]),
        .I1(\Using_FPGA.Native_3 ),
        .I2(\EX_Op2_reg[15] ),
        .I3(\Using_FPGA.Native_7 ),
        .I4(\EX_Op2[13]_i_3_n_0 ),
        .O(\EX_Op2_reg[1] [18]));
  LUT6 #(
    .INIT(64'h0000032200000022)) 
    \EX_Op2[13]_i_3 
       (.I0(mem_ex_result[15]),
        .I1(\Using_FPGA.Native_5 ),
        .I2(\EX_Op2[0]_i_7_n_0 ),
        .I3(\EX_Op2_reg[15]_0 ),
        .I4(\ex_gpr_write_addr_reg[0] ),
        .I5(\WB_MEM_Result_reg[13] ),
        .O(\EX_Op2[13]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF22F2)) 
    \EX_Op2[14]_i_1 
       (.I0(ex_sel_alu_i_reg[2]),
        .I1(\Using_FPGA.Native_3 ),
        .I2(\EX_Op2_reg[15] ),
        .I3(\Using_FPGA.Native_6 ),
        .I4(\EX_Op2[14]_i_3_n_0 ),
        .O(\EX_Op2_reg[1] [17]));
  LUT6 #(
    .INIT(64'h0000032200000022)) 
    \EX_Op2[14]_i_3 
       (.I0(mem_ex_result[14]),
        .I1(\Using_FPGA.Native_5 ),
        .I2(\EX_Op2[0]_i_7_n_0 ),
        .I3(\EX_Op2_reg[15]_0 ),
        .I4(\ex_gpr_write_addr_reg[0] ),
        .I5(\WB_MEM_Result_reg[14] ),
        .O(\EX_Op2[14]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF22F2)) 
    \EX_Op2[15]_i_1 
       (.I0(ex_sel_alu_i_reg[1]),
        .I1(\Using_FPGA.Native_3 ),
        .I2(\EX_Op2_reg[15] ),
        .I3(\Using_FPGA.Native_4 ),
        .I4(\EX_Op2[15]_i_3_n_0 ),
        .O(\EX_Op2_reg[1] [16]));
  LUT6 #(
    .INIT(64'h0000032200000022)) 
    \EX_Op2[15]_i_3 
       (.I0(mem_ex_result[13]),
        .I1(\Using_FPGA.Native_5 ),
        .I2(\EX_Op2[0]_i_7_n_0 ),
        .I3(\EX_Op2_reg[15]_0 ),
        .I4(\ex_gpr_write_addr_reg[0] ),
        .I5(\WB_MEM_Result_reg[15] ),
        .O(\EX_Op2[15]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF22F2)) 
    \EX_Op2[16]_i_1 
       (.I0(\WB_MEM_Result_reg[16] [7]),
        .I1(\EX_Op2[16]_i_2_n_0 ),
        .I2(mem_ex_result[12]),
        .I3(\Using_FPGA.Native_1 ),
        .I4(\EX_Op2[16]_i_4_n_0 ),
        .O(\EX_Op2_reg[1] [15]));
  LUT5 #(
    .INIT(32'hFFFFF7FF)) 
    \EX_Op2[16]_i_2 
       (.I0(\Using_FPGA.Native_36 ),
        .I1(\Using_FPGA.Native_37 ),
        .I2(\EX_Op2[0]_i_7_n_0 ),
        .I3(\EX_Op2_reg[15]_0 ),
        .I4(\ex_gpr_write_addr_reg[0] ),
        .O(\EX_Op2[16]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBA8888888A888)) 
    \EX_Op2[16]_i_4 
       (.I0(\Using_FPGA.Native_20 ),
        .I1(\Using_FPGA.Native_5 ),
        .I2(\EX_Op2[0]_i_7_n_0 ),
        .I3(\EX_Op2_reg[15]_0 ),
        .I4(\ex_gpr_write_addr_reg[0] ),
        .I5(ex_sel_alu_i_reg[0]),
        .O(\EX_Op2[16]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF22F2)) 
    \EX_Op2[17]_i_1 
       (.I0(\WB_MEM_Result_reg[16] [6]),
        .I1(\EX_Op2[16]_i_2_n_0 ),
        .I2(mem_ex_result[11]),
        .I3(\Using_FPGA.Native_1 ),
        .I4(\EX_Op2[17]_i_2_n_0 ),
        .O(\EX_Op2_reg[1] [14]));
  LUT6 #(
    .INIT(64'hBBBBA8888888A888)) 
    \EX_Op2[17]_i_2 
       (.I0(\Using_FPGA.Native_21 ),
        .I1(\Using_FPGA.Native_5 ),
        .I2(\EX_Op2[0]_i_7_n_0 ),
        .I3(\EX_Op2_reg[15]_0 ),
        .I4(\ex_gpr_write_addr_reg[0] ),
        .I5(ex_sel_alu_i_reg_0),
        .O(\EX_Op2[17]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF22F2)) 
    \EX_Op2[18]_i_1 
       (.I0(\WB_MEM_Result_reg[16] [5]),
        .I1(\EX_Op2[16]_i_2_n_0 ),
        .I2(mem_ex_result[10]),
        .I3(\Using_FPGA.Native_1 ),
        .I4(\EX_Op2[18]_i_2_n_0 ),
        .O(\EX_Op2_reg[1] [13]));
  LUT6 #(
    .INIT(64'hBBBBA8888888A888)) 
    \EX_Op2[18]_i_2 
       (.I0(\Using_FPGA.Native_22 ),
        .I1(\Using_FPGA.Native_5 ),
        .I2(\EX_Op2[0]_i_7_n_0 ),
        .I3(\EX_Op2_reg[15]_0 ),
        .I4(\ex_gpr_write_addr_reg[0] ),
        .I5(ex_sel_alu_i_reg_1),
        .O(\EX_Op2[18]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF22F2)) 
    \EX_Op2[19]_i_1 
       (.I0(\WB_MEM_Result_reg[16] [4]),
        .I1(\EX_Op2[16]_i_2_n_0 ),
        .I2(mem_ex_result[9]),
        .I3(\Using_FPGA.Native_1 ),
        .I4(\EX_Op2[19]_i_2_n_0 ),
        .O(\EX_Op2_reg[1] [12]));
  LUT6 #(
    .INIT(64'hCACACACACCC0C0C0)) 
    \EX_Op2[19]_i_2 
       (.I0(ex_sel_alu_i_reg_2),
        .I1(\Using_FPGA.Native_23 ),
        .I2(\Using_FPGA.Native_5 ),
        .I3(\EX_Op2[0]_i_7_n_0 ),
        .I4(\EX_Op2_reg[15]_0 ),
        .I5(\ex_gpr_write_addr_reg[0] ),
        .O(\EX_Op2[19]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF22F2)) 
    \EX_Op2[1]_i_1 
       (.I0(ex_sel_alu_i_reg[15]),
        .I1(\Using_FPGA.Native_3 ),
        .I2(\EX_Op2_reg[15] ),
        .I3(\Using_FPGA.Native_19 ),
        .I4(\EX_Op2[1]_i_3_n_0 ),
        .O(\EX_Op2_reg[1] [30]));
  LUT6 #(
    .INIT(64'h0000032200000022)) 
    \EX_Op2[1]_i_3 
       (.I0(mem_ex_result[27]),
        .I1(\Using_FPGA.Native_5 ),
        .I2(\EX_Op2[0]_i_7_n_0 ),
        .I3(\EX_Op2_reg[15]_0 ),
        .I4(\ex_gpr_write_addr_reg[0] ),
        .I5(\WB_MEM_Result_reg[1] ),
        .O(\EX_Op2[1]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF22F2)) 
    \EX_Op2[20]_i_1 
       (.I0(\WB_MEM_Result_reg[16] [3]),
        .I1(\EX_Op2[16]_i_2_n_0 ),
        .I2(mem_ex_result[8]),
        .I3(\Using_FPGA.Native_1 ),
        .I4(\EX_Op2[20]_i_2_n_0 ),
        .O(\EX_Op2_reg[1] [11]));
  LUT6 #(
    .INIT(64'hBBBBA8888888A888)) 
    \EX_Op2[20]_i_2 
       (.I0(\Using_FPGA.Native_24 ),
        .I1(\Using_FPGA.Native_5 ),
        .I2(\EX_Op2[0]_i_7_n_0 ),
        .I3(\EX_Op2_reg[15]_0 ),
        .I4(\ex_gpr_write_addr_reg[0] ),
        .I5(ex_sel_alu_i_reg_3),
        .O(\EX_Op2[20]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF22F2)) 
    \EX_Op2[21]_i_1 
       (.I0(\WB_MEM_Result_reg[16] [2]),
        .I1(\EX_Op2[16]_i_2_n_0 ),
        .I2(mem_ex_result[7]),
        .I3(\Using_FPGA.Native_1 ),
        .I4(\EX_Op2[21]_i_2_n_0 ),
        .O(\EX_Op2_reg[1] [10]));
  LUT6 #(
    .INIT(64'hCACACACACCC0C0C0)) 
    \EX_Op2[21]_i_2 
       (.I0(ex_sel_alu_i_reg_4),
        .I1(\Using_FPGA.Native_25 ),
        .I2(\Using_FPGA.Native_5 ),
        .I3(\EX_Op2[0]_i_7_n_0 ),
        .I4(\EX_Op2_reg[15]_0 ),
        .I5(\ex_gpr_write_addr_reg[0] ),
        .O(\EX_Op2[21]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hAEAEFFAE)) 
    \EX_Op2[22]_i_1 
       (.I0(\EX_Op2[22]_i_2_n_0 ),
        .I1(\WB_MEM_Result_reg[16] [1]),
        .I2(\EX_Op2[16]_i_2_n_0 ),
        .I3(mem_ex_result[6]),
        .I4(\Using_FPGA.Native_1 ),
        .O(\EX_Op2_reg[1] [9]));
  LUT6 #(
    .INIT(64'hCACACACACCC0C0C0)) 
    \EX_Op2[22]_i_2 
       (.I0(ex_sel_alu_i_reg_5),
        .I1(\Using_FPGA.Native_26 ),
        .I2(\Using_FPGA.Native_5 ),
        .I3(\EX_Op2[0]_i_7_n_0 ),
        .I4(\EX_Op2_reg[15]_0 ),
        .I5(\ex_gpr_write_addr_reg[0] ),
        .O(\EX_Op2[22]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF22F2)) 
    \EX_Op2[23]_i_1 
       (.I0(\WB_MEM_Result_reg[16] [0]),
        .I1(\EX_Op2[16]_i_2_n_0 ),
        .I2(mem_ex_result[5]),
        .I3(\Using_FPGA.Native_1 ),
        .I4(\EX_Op2[23]_i_2_n_0 ),
        .O(\EX_Op2_reg[1] [8]));
  LUT6 #(
    .INIT(64'hBBBBA8888888A888)) 
    \EX_Op2[23]_i_2 
       (.I0(\Using_FPGA.Native_27 ),
        .I1(\Using_FPGA.Native_5 ),
        .I2(\EX_Op2[0]_i_7_n_0 ),
        .I3(\EX_Op2_reg[15]_0 ),
        .I4(\ex_gpr_write_addr_reg[0] ),
        .I5(ex_sel_alu_i_reg_6),
        .O(\EX_Op2[23]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hAEAEFFAE)) 
    \EX_Op2[24]_i_1 
       (.I0(\EX_Op2[24]_i_2_n_0 ),
        .I1(\wb_exception_kind_i_reg[31]_6 ),
        .I2(\EX_Op2[16]_i_2_n_0 ),
        .I3(mem_ex_result[4]),
        .I4(\Using_FPGA.Native_1 ),
        .O(\EX_Op2_reg[1] [7]));
  LUT6 #(
    .INIT(64'hBBBBA8888888A888)) 
    \EX_Op2[24]_i_2 
       (.I0(\Using_FPGA.Native_28 ),
        .I1(\Using_FPGA.Native_5 ),
        .I2(\EX_Op2[0]_i_7_n_0 ),
        .I3(\EX_Op2_reg[15]_0 ),
        .I4(\ex_gpr_write_addr_reg[0] ),
        .I5(ex_sel_alu_i_reg_7),
        .O(\EX_Op2[24]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hAEAEFFAE)) 
    \EX_Op2[25]_i_1 
       (.I0(\EX_Op2[25]_i_2_n_0 ),
        .I1(\wb_exception_kind_i_reg[31]_5 ),
        .I2(\EX_Op2[16]_i_2_n_0 ),
        .I3(mem_ex_result[3]),
        .I4(\Using_FPGA.Native_1 ),
        .O(\EX_Op2_reg[1] [6]));
  LUT6 #(
    .INIT(64'hCACACACACCC0C0C0)) 
    \EX_Op2[25]_i_2 
       (.I0(ex_sel_alu_i_reg_8),
        .I1(\Using_FPGA.Native_29 ),
        .I2(\Using_FPGA.Native_5 ),
        .I3(\EX_Op2[0]_i_7_n_0 ),
        .I4(\EX_Op2_reg[15]_0 ),
        .I5(\ex_gpr_write_addr_reg[0] ),
        .O(\EX_Op2[25]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hAEAEFFAE)) 
    \EX_Op2[26]_i_1 
       (.I0(\EX_Op2[26]_i_2_n_0 ),
        .I1(\wb_exception_kind_i_reg[31]_4 ),
        .I2(\EX_Op2[16]_i_2_n_0 ),
        .I3(mem_ex_result[2]),
        .I4(\Using_FPGA.Native_1 ),
        .O(\EX_Op2_reg[1] [5]));
  LUT6 #(
    .INIT(64'hBBBBA8888888A888)) 
    \EX_Op2[26]_i_2 
       (.I0(\Using_FPGA.Native_30 ),
        .I1(\Using_FPGA.Native_5 ),
        .I2(\EX_Op2[0]_i_7_n_0 ),
        .I3(\EX_Op2_reg[15]_0 ),
        .I4(\ex_gpr_write_addr_reg[0] ),
        .I5(ex_sel_alu_i_reg_9),
        .O(\EX_Op2[26]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hAEAEFFAE)) 
    \EX_Op2[27]_i_1 
       (.I0(\EX_Op2[27]_i_2_n_0 ),
        .I1(\wb_exception_kind_i_reg[31]_3 ),
        .I2(\EX_Op2[16]_i_2_n_0 ),
        .I3(mem_ex_result[1]),
        .I4(\Using_FPGA.Native_1 ),
        .O(\EX_Op2_reg[1] [4]));
  LUT6 #(
    .INIT(64'hBBBBA8888888A888)) 
    \EX_Op2[27]_i_2 
       (.I0(\Using_FPGA.Native_31 ),
        .I1(\Using_FPGA.Native_5 ),
        .I2(\EX_Op2[0]_i_7_n_0 ),
        .I3(\EX_Op2_reg[15]_0 ),
        .I4(\ex_gpr_write_addr_reg[0] ),
        .I5(ex_sel_alu_i_reg_10),
        .O(\EX_Op2[27]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hAEAEFFAE)) 
    \EX_Op2[28]_i_1 
       (.I0(\EX_Op2[28]_i_2_n_0 ),
        .I1(\wb_exception_kind_i_reg[31]_2 ),
        .I2(\EX_Op2[16]_i_2_n_0 ),
        .I3(\Using_FPGA.Native_2 [2]),
        .I4(\Using_FPGA.Native_1 ),
        .O(\EX_Op2_reg[1] [3]));
  LUT6 #(
    .INIT(64'hBBBBA8888888A888)) 
    \EX_Op2[28]_i_2 
       (.I0(\Using_FPGA.Native_32 ),
        .I1(\Using_FPGA.Native_5 ),
        .I2(\EX_Op2[0]_i_7_n_0 ),
        .I3(\EX_Op2_reg[15]_0 ),
        .I4(\ex_gpr_write_addr_reg[0] ),
        .I5(ex_sel_alu_i_reg_11),
        .O(\EX_Op2[28]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hAEAEFFAE)) 
    \EX_Op2[29]_i_1 
       (.I0(\EX_Op2[29]_i_2_n_0 ),
        .I1(\wb_exception_kind_i_reg[31]_1 ),
        .I2(\EX_Op2[16]_i_2_n_0 ),
        .I3(\Using_FPGA.Native_2 [1]),
        .I4(\Using_FPGA.Native_1 ),
        .O(\EX_Op2_reg[1] [2]));
  LUT6 #(
    .INIT(64'hBBBBA8888888A888)) 
    \EX_Op2[29]_i_2 
       (.I0(\Using_FPGA.Native_33 ),
        .I1(\Using_FPGA.Native_5 ),
        .I2(\EX_Op2[0]_i_7_n_0 ),
        .I3(\EX_Op2_reg[15]_0 ),
        .I4(\ex_gpr_write_addr_reg[0] ),
        .I5(ex_sel_alu_i_reg_12),
        .O(\EX_Op2[29]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF22F2)) 
    \EX_Op2[2]_i_1 
       (.I0(ex_sel_alu_i_reg[14]),
        .I1(\Using_FPGA.Native_3 ),
        .I2(\EX_Op2_reg[15] ),
        .I3(\Using_FPGA.Native_18 ),
        .I4(\EX_Op2[2]_i_3_n_0 ),
        .O(\EX_Op2_reg[1] [29]));
  LUT6 #(
    .INIT(64'h0000032200000022)) 
    \EX_Op2[2]_i_3 
       (.I0(mem_ex_result[26]),
        .I1(\Using_FPGA.Native_5 ),
        .I2(\EX_Op2[0]_i_7_n_0 ),
        .I3(\EX_Op2_reg[15]_0 ),
        .I4(\ex_gpr_write_addr_reg[0] ),
        .I5(\WB_MEM_Result_reg[2] ),
        .O(\EX_Op2[2]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hAEAEFFAE)) 
    \EX_Op2[30]_i_1 
       (.I0(\EX_Op2[30]_i_2_n_0 ),
        .I1(\wb_exception_kind_i_reg[31]_0 ),
        .I2(\EX_Op2[16]_i_2_n_0 ),
        .I3(\Using_FPGA.Native_2 [0]),
        .I4(\Using_FPGA.Native_1 ),
        .O(\EX_Op2_reg[1] [1]));
  LUT6 #(
    .INIT(64'hCACACACACCC0C0C0)) 
    \EX_Op2[30]_i_2 
       (.I0(ex_sel_alu_i_reg_13),
        .I1(\Using_FPGA.Native_34 ),
        .I2(\Using_FPGA.Native_5 ),
        .I3(\EX_Op2[0]_i_7_n_0 ),
        .I4(\EX_Op2_reg[15]_0 ),
        .I5(\ex_gpr_write_addr_reg[0] ),
        .O(\EX_Op2[30]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hAEAEFFAE)) 
    \EX_Op2[31]_i_1 
       (.I0(\EX_Op2[31]_i_2_n_0 ),
        .I1(\wb_exception_kind_i_reg[31] ),
        .I2(\EX_Op2[16]_i_2_n_0 ),
        .I3(mem_ex_result[0]),
        .I4(\Using_FPGA.Native_1 ),
        .O(\EX_Op2_reg[1] [0]));
  LUT6 #(
    .INIT(64'hBBBBA8888888A888)) 
    \EX_Op2[31]_i_2 
       (.I0(\Using_FPGA.Native_35 ),
        .I1(\Using_FPGA.Native_5 ),
        .I2(\EX_Op2[0]_i_7_n_0 ),
        .I3(\EX_Op2_reg[15]_0 ),
        .I4(\ex_gpr_write_addr_reg[0] ),
        .I5(ex_sel_alu_i_reg_14),
        .O(\EX_Op2[31]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF22F2)) 
    \EX_Op2[3]_i_1 
       (.I0(ex_sel_alu_i_reg[13]),
        .I1(\Using_FPGA.Native_3 ),
        .I2(\EX_Op2_reg[15] ),
        .I3(\Using_FPGA.Native_17 ),
        .I4(\EX_Op2[3]_i_3_n_0 ),
        .O(\EX_Op2_reg[1] [28]));
  LUT6 #(
    .INIT(64'h0000032200000022)) 
    \EX_Op2[3]_i_3 
       (.I0(mem_ex_result[25]),
        .I1(\Using_FPGA.Native_5 ),
        .I2(\EX_Op2[0]_i_7_n_0 ),
        .I3(\EX_Op2_reg[15]_0 ),
        .I4(\ex_gpr_write_addr_reg[0] ),
        .I5(\WB_MEM_Result_reg[3] ),
        .O(\EX_Op2[3]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF22F2)) 
    \EX_Op2[4]_i_1 
       (.I0(ex_sel_alu_i_reg[12]),
        .I1(\Using_FPGA.Native_3 ),
        .I2(\EX_Op2_reg[15] ),
        .I3(\Using_FPGA.Native_16 ),
        .I4(\EX_Op2[4]_i_3_n_0 ),
        .O(\EX_Op2_reg[1] [27]));
  LUT6 #(
    .INIT(64'h0000032200000022)) 
    \EX_Op2[4]_i_3 
       (.I0(mem_ex_result[24]),
        .I1(\Using_FPGA.Native_5 ),
        .I2(\EX_Op2[0]_i_7_n_0 ),
        .I3(\EX_Op2_reg[15]_0 ),
        .I4(\ex_gpr_write_addr_reg[0] ),
        .I5(\WB_MEM_Result_reg[4] ),
        .O(\EX_Op2[4]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF22F2)) 
    \EX_Op2[5]_i_1 
       (.I0(\EX_Op2_reg[15] ),
        .I1(\Using_FPGA.Native_15 ),
        .I2(ex_sel_alu_i_reg[11]),
        .I3(\Using_FPGA.Native_3 ),
        .I4(\EX_Op2[5]_i_3_n_0 ),
        .O(\EX_Op2_reg[1] [26]));
  LUT6 #(
    .INIT(64'h0000032200000022)) 
    \EX_Op2[5]_i_3 
       (.I0(mem_ex_result[23]),
        .I1(\Using_FPGA.Native_5 ),
        .I2(\EX_Op2[0]_i_7_n_0 ),
        .I3(\EX_Op2_reg[15]_0 ),
        .I4(\ex_gpr_write_addr_reg[0] ),
        .I5(\WB_MEM_Result_reg[5] ),
        .O(\EX_Op2[5]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF22F2)) 
    \EX_Op2[6]_i_1 
       (.I0(ex_sel_alu_i_reg[10]),
        .I1(\Using_FPGA.Native_3 ),
        .I2(\EX_Op2_reg[15] ),
        .I3(\Using_FPGA.Native_14 ),
        .I4(\EX_Op2[6]_i_3_n_0 ),
        .O(\EX_Op2_reg[1] [25]));
  LUT6 #(
    .INIT(64'h0000032200000022)) 
    \EX_Op2[6]_i_3 
       (.I0(mem_ex_result[22]),
        .I1(\Using_FPGA.Native_5 ),
        .I2(\EX_Op2[0]_i_7_n_0 ),
        .I3(\EX_Op2_reg[15]_0 ),
        .I4(\ex_gpr_write_addr_reg[0] ),
        .I5(\WB_MEM_Result_reg[6] ),
        .O(\EX_Op2[6]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF22F2)) 
    \EX_Op2[7]_i_1 
       (.I0(\EX_Op2_reg[15] ),
        .I1(\Using_FPGA.Native_13 ),
        .I2(ex_sel_alu_i_reg[9]),
        .I3(\Using_FPGA.Native_3 ),
        .I4(\EX_Op2[7]_i_3_n_0 ),
        .O(\EX_Op2_reg[1] [24]));
  LUT6 #(
    .INIT(64'h0000032200000022)) 
    \EX_Op2[7]_i_3 
       (.I0(mem_ex_result[21]),
        .I1(\Using_FPGA.Native_5 ),
        .I2(\EX_Op2[0]_i_7_n_0 ),
        .I3(\EX_Op2_reg[15]_0 ),
        .I4(\ex_gpr_write_addr_reg[0] ),
        .I5(\WB_MEM_Result_reg[7] ),
        .O(\EX_Op2[7]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF22F2)) 
    \EX_Op2[8]_i_1 
       (.I0(ex_sel_alu_i_reg[8]),
        .I1(\Using_FPGA.Native_3 ),
        .I2(\EX_Op2_reg[15] ),
        .I3(\Using_FPGA.Native_12 ),
        .I4(\EX_Op2[8]_i_3_n_0 ),
        .O(\EX_Op2_reg[1] [23]));
  LUT6 #(
    .INIT(64'h0000032200000022)) 
    \EX_Op2[8]_i_3 
       (.I0(mem_ex_result[20]),
        .I1(\Using_FPGA.Native_5 ),
        .I2(\EX_Op2[0]_i_7_n_0 ),
        .I3(\EX_Op2_reg[15]_0 ),
        .I4(\ex_gpr_write_addr_reg[0] ),
        .I5(\WB_MEM_Result_reg[8] ),
        .O(\EX_Op2[8]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF22F2)) 
    \EX_Op2[9]_i_1 
       (.I0(ex_sel_alu_i_reg[7]),
        .I1(\Using_FPGA.Native_3 ),
        .I2(\EX_Op2_reg[15] ),
        .I3(\Using_FPGA.Native_11 ),
        .I4(\EX_Op2[9]_i_3_n_0 ),
        .O(\EX_Op2_reg[1] [22]));
  LUT6 #(
    .INIT(64'h0000032200000022)) 
    \EX_Op2[9]_i_3 
       (.I0(mem_ex_result[19]),
        .I1(\Using_FPGA.Native_5 ),
        .I2(\EX_Op2[0]_i_7_n_0 ),
        .I3(\EX_Op2_reg[15]_0 ),
        .I4(\ex_gpr_write_addr_reg[0] ),
        .I5(\WB_MEM_Result_reg[9] ),
        .O(\EX_Op2[9]_i_3_n_0 ));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_0),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_196
   (\ex_opcode_reg[4] ,
    ex_op1_cmp_eq_n5_out,
    force2_reg,
    \EX_Sext_Op_reg[0] ,
    use_Reg_Neg_DI1_out,
    force_Val10_out,
    use_Reg_Neg_S3_out,
    force12_out,
    \EX_Sext_Op_reg[0]_0 ,
    of_read_imm_reg_ii_reg,
    ex_gpr_write_reg,
    ex_gpr_write_dbg_reg,
    sync_reset,
    of_instr_ii_38,
    Clk,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 ,
    \Using_FPGA.Native_5 ,
    \Using_FPGA.Native_6 ,
    \Using_FPGA.Native_7 ,
    \Using_FPGA.Native_8 ,
    \Using_FPGA.Native_9 ,
    \Using_FPGA.Native_10 ,
    \Using_FPGA.Native_11 ,
    \Using_FPGA.Native_12 ,
    \Using_FPGA.Native_13 ,
    \Using_FPGA.Native_14 ,
    ex_gpr_write_reg_0,
    of_pause_reg,
    \Using_FPGA.Native_15 ,
    wb_exception,
    ex_branch_with_delayslot_reg,
    ex_gpr_write_dbg);
  output \ex_opcode_reg[4] ;
  output ex_op1_cmp_eq_n5_out;
  output force2_reg;
  output \EX_Sext_Op_reg[0] ;
  output use_Reg_Neg_DI1_out;
  output force_Val10_out;
  output use_Reg_Neg_S3_out;
  output force12_out;
  output [0:0]\EX_Sext_Op_reg[0]_0 ;
  output of_read_imm_reg_ii_reg;
  output ex_gpr_write_reg;
  output ex_gpr_write_dbg_reg;
  input sync_reset;
  input of_instr_ii_38;
  input Clk;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input \Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;
  input \Using_FPGA.Native_5 ;
  input \Using_FPGA.Native_6 ;
  input \Using_FPGA.Native_7 ;
  input \Using_FPGA.Native_8 ;
  input \Using_FPGA.Native_9 ;
  input \Using_FPGA.Native_10 ;
  input \Using_FPGA.Native_11 ;
  input \Using_FPGA.Native_12 ;
  input \Using_FPGA.Native_13 ;
  input \Using_FPGA.Native_14 ;
  input ex_gpr_write_reg_0;
  input of_pause_reg;
  input \Using_FPGA.Native_15 ;
  input wb_exception;
  input ex_branch_with_delayslot_reg;
  input ex_gpr_write_dbg;

  wire Clk;
  wire \EX_Sext_Op_reg[0] ;
  wire [0:0]\EX_Sext_Op_reg[0]_0 ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_10 ;
  wire \Using_FPGA.Native_11 ;
  wire \Using_FPGA.Native_12 ;
  wire \Using_FPGA.Native_13 ;
  wire \Using_FPGA.Native_14 ;
  wire \Using_FPGA.Native_15 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;
  wire \Using_FPGA.Native_5 ;
  wire \Using_FPGA.Native_6 ;
  wire \Using_FPGA.Native_7 ;
  wire \Using_FPGA.Native_8 ;
  wire \Using_FPGA.Native_9 ;
  wire ex_branch_with_delayslot_reg;
  wire ex_gpr_write;
  wire ex_gpr_write_dbg;
  wire ex_gpr_write_dbg_reg;
  wire ex_gpr_write_reg;
  wire ex_gpr_write_reg_0;
  wire ex_op1_cmp_eq_n5_out;
  wire \ex_opcode_reg[4] ;
  wire force12_out;
  wire force2_reg;
  wire force_Val10_out;
  wire of_instr_ii_38;
  wire of_pause_reg;
  wire of_read_imm_reg_ii_reg;
  wire sync_reset;
  wire use_Reg_Neg_DI1_out;
  wire use_Reg_Neg_S3_out;
  wire wb_exception;

  LUT3 #(
    .INIT(8'hBF)) 
    \EX_Sext_Op[0]_i_1 
       (.I0(\EX_Sext_Op_reg[0] ),
        .I1(\Using_FPGA.Native_12 ),
        .I2(\Using_FPGA.Native_13 ),
        .O(\EX_Sext_Op_reg[0]_0 ));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_38),
        .Q(\ex_opcode_reg[4] ),
        .R(sync_reset));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEFFFFF)) 
    \Using_FPGA.Native_i_3__2 
       (.I0(\ex_opcode_reg[4] ),
        .I1(\Using_FPGA.Native_9 ),
        .I2(\Using_FPGA.Native_11 ),
        .I3(\Using_FPGA.Native_14 ),
        .I4(\Using_FPGA.Native_10 ),
        .I5(\Using_FPGA.Native_8 ),
        .O(\EX_Sext_Op_reg[0] ));
  LUT6 #(
    .INIT(64'h0200020302000200)) 
    ex_gpr_write_dbg_i_1
       (.I0(ex_gpr_write),
        .I1(wb_exception),
        .I2(sync_reset),
        .I3(of_pause_reg),
        .I4(ex_branch_with_delayslot_reg),
        .I5(ex_gpr_write_dbg),
        .O(ex_gpr_write_dbg_reg));
  LUT6 #(
    .INIT(64'h00000000000000E2)) 
    ex_gpr_write_i_1
       (.I0(ex_gpr_write_reg_0),
        .I1(of_pause_reg),
        .I2(ex_gpr_write),
        .I3(\Using_FPGA.Native_15 ),
        .I4(sync_reset),
        .I5(wb_exception),
        .O(ex_gpr_write_reg));
  LUT6 #(
    .INIT(64'hABABAB00AB00AB00)) 
    ex_gpr_write_i_2
       (.I0(\EX_Sext_Op_reg[0] ),
        .I1(\Using_FPGA.Native_3 ),
        .I2(\Using_FPGA.Native_4 ),
        .I3(\Using_FPGA.Native_5 ),
        .I4(\Using_FPGA.Native_6 ),
        .I5(\Using_FPGA.Native_7 ),
        .O(ex_gpr_write));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT4 #(
    .INIT(16'h0028)) 
    ex_op1_cmp_eq_n_i_1
       (.I0(force2_reg),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\Using_FPGA.Native_2 ),
        .O(ex_op1_cmp_eq_n5_out));
  LUT3 #(
    .INIT(8'h02)) 
    force1_i_1
       (.I0(force2_reg),
        .I1(\Using_FPGA.Native_2 ),
        .I2(\Using_FPGA.Native_0 ),
        .O(force12_out));
  LUT5 #(
    .INIT(32'h08000000)) 
    force2_i_1
       (.I0(\ex_opcode_reg[4] ),
        .I1(\Using_FPGA.Native_8 ),
        .I2(\Using_FPGA.Native_9 ),
        .I3(\Using_FPGA.Native_10 ),
        .I4(\Using_FPGA.Native_11 ),
        .O(force2_reg));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT3 #(
    .INIT(8'h08)) 
    force_Val1_i_1
       (.I0(force2_reg),
        .I1(\Using_FPGA.Native_2 ),
        .I2(\Using_FPGA.Native_0 ),
        .O(force_Val10_out));
  LUT6 #(
    .INIT(64'h0100000000000000)) 
    of_read_imm_reg_ii_i_2
       (.I0(\ex_opcode_reg[4] ),
        .I1(\Using_FPGA.Native_9 ),
        .I2(\Using_FPGA.Native_8 ),
        .I3(\Using_FPGA.Native_10 ),
        .I4(\Using_FPGA.Native_14 ),
        .I5(\Using_FPGA.Native_11 ),
        .O(of_read_imm_reg_ii_reg));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT4 #(
    .INIT(16'h2008)) 
    use_Reg_Neg_DI_i_1
       (.I0(force2_reg),
        .I1(\Using_FPGA.Native_2 ),
        .I2(\Using_FPGA.Native_0 ),
        .I3(\Using_FPGA.Native_1 ),
        .O(use_Reg_Neg_DI1_out));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT4 #(
    .INIT(16'h2008)) 
    use_Reg_Neg_S_i_1
       (.I0(force2_reg),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_2 ),
        .I3(\Using_FPGA.Native_1 ),
        .O(use_Reg_Neg_S3_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_198
   (\ex_opcode_reg[5] ,
    \EX_Op2_reg[0] ,
    \EX_Op2_reg[0]_0 ,
    \EX_Op2_reg[0]_1 ,
    use_Reg_Neg_S_reg,
    use_Reg_Neg_S_reg_0,
    \EX_Op2_reg[16] ,
    \EX_Op2_reg[17] ,
    \EX_Op2_reg[18] ,
    \EX_Op2_reg[19] ,
    \EX_Op2_reg[20] ,
    \EX_Op2_reg[21] ,
    \EX_Op2_reg[22] ,
    \EX_Op2_reg[23] ,
    \EX_Op2_reg[24] ,
    \EX_Op2_reg[25] ,
    \EX_Op2_reg[26] ,
    \EX_Op2_reg[27] ,
    \EX_Op2_reg[28] ,
    \EX_Op2_reg[29] ,
    \EX_Op2_reg[30] ,
    \EX_Op2_reg[31] ,
    of_Sel_SPR_MSR88_out,
    of_Sel_SPR_MSR1,
    ex_set_bip,
    \Using_FPGA.Native_0 ,
    D224_out,
    \Using_FPGA.Native_1 ,
    \EX_Op2_reg[31]_0 ,
    sync_reset,
    of_instr_ii_37,
    Clk,
    ex_sel_alu_i_reg,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    GPR_Op2,
    \Using_FPGA.Native_4 ,
    wb_exception_i_reg,
    \imm_reg_reg[0] ,
    \Using_FPGA.Native_5 ,
    ex_is_multi_or_load_instr,
    of_read_ex_write_op2_conflict_part2,
    of_read_ex_write_op2_conflict_part1,
    mem_is_multi_or_load_instr,
    of_read_mem_write_op2_conflict_part2,
    of_read_mem_write_op2_conflict_part1,
    \Using_FPGA.Native_6 ,
    \Using_FPGA.Native_7 ,
    \Using_FPGA.Native_8 ,
    \Using_FPGA.Native_9 ,
    \Using_FPGA.Native_10 ,
    \Using_FPGA.Native_11 ,
    \Using_FPGA.Native_12 ,
    \Using_FPGA.Native_13 ,
    ex_enable_sext_shift_i0,
    \mem_gpr_write_addr_reg[4] ,
    \ex_gpr_write_addr_reg[0] ,
    \Using_FPGA.Native_14 ,
    \Using_FPGA.Native_15 );
  output \ex_opcode_reg[5] ;
  output [0:0]\EX_Op2_reg[0] ;
  output \EX_Op2_reg[0]_0 ;
  output \EX_Op2_reg[0]_1 ;
  output use_Reg_Neg_S_reg;
  output use_Reg_Neg_S_reg_0;
  output \EX_Op2_reg[16] ;
  output \EX_Op2_reg[17] ;
  output \EX_Op2_reg[18] ;
  output \EX_Op2_reg[19] ;
  output \EX_Op2_reg[20] ;
  output \EX_Op2_reg[21] ;
  output \EX_Op2_reg[22] ;
  output \EX_Op2_reg[23] ;
  output \EX_Op2_reg[24] ;
  output \EX_Op2_reg[25] ;
  output \EX_Op2_reg[26] ;
  output \EX_Op2_reg[27] ;
  output \EX_Op2_reg[28] ;
  output \EX_Op2_reg[29] ;
  output \EX_Op2_reg[30] ;
  output \EX_Op2_reg[31] ;
  output of_Sel_SPR_MSR88_out;
  output of_Sel_SPR_MSR1;
  output ex_set_bip;
  output \Using_FPGA.Native_0 ;
  output D224_out;
  output \Using_FPGA.Native_1 ;
  output \EX_Op2_reg[31]_0 ;
  input sync_reset;
  input of_instr_ii_37;
  input Clk;
  input ex_sel_alu_i_reg;
  input \Using_FPGA.Native_2 ;
  input \Using_FPGA.Native_3 ;
  input [16:0]GPR_Op2;
  input \Using_FPGA.Native_4 ;
  input wb_exception_i_reg;
  input [0:0]\imm_reg_reg[0] ;
  input \Using_FPGA.Native_5 ;
  input ex_is_multi_or_load_instr;
  input of_read_ex_write_op2_conflict_part2;
  input of_read_ex_write_op2_conflict_part1;
  input mem_is_multi_or_load_instr;
  input of_read_mem_write_op2_conflict_part2;
  input of_read_mem_write_op2_conflict_part1;
  input \Using_FPGA.Native_6 ;
  input \Using_FPGA.Native_7 ;
  input \Using_FPGA.Native_8 ;
  input [14:0]\Using_FPGA.Native_9 ;
  input \Using_FPGA.Native_10 ;
  input \Using_FPGA.Native_11 ;
  input \Using_FPGA.Native_12 ;
  input \Using_FPGA.Native_13 ;
  input ex_enable_sext_shift_i0;
  input \mem_gpr_write_addr_reg[4] ;
  input \ex_gpr_write_addr_reg[0] ;
  input \Using_FPGA.Native_14 ;
  input \Using_FPGA.Native_15 ;

  wire Clk;
  wire D224_out;
  wire \EX_Op2[0]_i_4_n_0 ;
  wire [0:0]\EX_Op2_reg[0] ;
  wire \EX_Op2_reg[0]_0 ;
  wire \EX_Op2_reg[0]_1 ;
  wire \EX_Op2_reg[16] ;
  wire \EX_Op2_reg[17] ;
  wire \EX_Op2_reg[18] ;
  wire \EX_Op2_reg[19] ;
  wire \EX_Op2_reg[20] ;
  wire \EX_Op2_reg[21] ;
  wire \EX_Op2_reg[22] ;
  wire \EX_Op2_reg[23] ;
  wire \EX_Op2_reg[24] ;
  wire \EX_Op2_reg[25] ;
  wire \EX_Op2_reg[26] ;
  wire \EX_Op2_reg[27] ;
  wire \EX_Op2_reg[28] ;
  wire \EX_Op2_reg[29] ;
  wire \EX_Op2_reg[30] ;
  wire \EX_Op2_reg[31] ;
  wire \EX_Op2_reg[31]_0 ;
  wire [16:0]GPR_Op2;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_10 ;
  wire \Using_FPGA.Native_11 ;
  wire \Using_FPGA.Native_12 ;
  wire \Using_FPGA.Native_13 ;
  wire \Using_FPGA.Native_14 ;
  wire \Using_FPGA.Native_15 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;
  wire \Using_FPGA.Native_5 ;
  wire \Using_FPGA.Native_6 ;
  wire \Using_FPGA.Native_7 ;
  wire \Using_FPGA.Native_8 ;
  wire [14:0]\Using_FPGA.Native_9 ;
  wire \Using_FPGA.Native_i_2__146_n_0 ;
  wire ex_enable_sext_shift_i0;
  wire \ex_gpr_write_addr_reg[0] ;
  wire ex_is_multi_or_load_instr;
  wire \ex_opcode_reg[5] ;
  wire ex_sel_alu_i_reg;
  wire ex_set_bip;
  wire [0:0]\imm_reg_reg[0] ;
  wire \mem_gpr_write_addr_reg[4] ;
  wire mem_is_multi_or_load_instr;
  wire of_Sel_SPR_MSR1;
  wire of_Sel_SPR_MSR88_out;
  wire of_instr_ii_37;
  wire of_read_ex_write_op2_conflict_part1;
  wire of_read_ex_write_op2_conflict_part2;
  wire of_read_mem_write_op2_conflict_part1;
  wire of_read_mem_write_op2_conflict_part2;
  wire sync_reset;
  wire use_Reg_Neg_S_reg;
  wire use_Reg_Neg_S_reg_0;
  wire wb_exception_i_reg;

  LUT5 #(
    .INIT(32'hFFFFF222)) 
    \EX_Op2[0]_i_1 
       (.I0(ex_sel_alu_i_reg),
        .I1(\EX_Op2_reg[0]_0 ),
        .I2(\Using_FPGA.Native_2 ),
        .I3(\EX_Op2[0]_i_4_n_0 ),
        .I4(\Using_FPGA.Native_3 ),
        .O(\EX_Op2_reg[0] ));
  LUT3 #(
    .INIT(8'h7F)) 
    \EX_Op2[0]_i_2 
       (.I0(\EX_Op2_reg[0]_1 ),
        .I1(\Using_FPGA.Native_5 ),
        .I2(\ex_gpr_write_addr_reg[0] ),
        .O(\EX_Op2_reg[0]_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \EX_Op2[0]_i_4 
       (.I0(GPR_Op2[16]),
        .I1(\EX_Op2_reg[0]_1 ),
        .I2(\Using_FPGA.Native_4 ),
        .I3(wb_exception_i_reg),
        .I4(\imm_reg_reg[0] ),
        .O(\EX_Op2[0]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hFFF7)) 
    \EX_Op2[16]_i_3 
       (.I0(\EX_Op2_reg[0]_1 ),
        .I1(\Using_FPGA.Native_5 ),
        .I2(\mem_gpr_write_addr_reg[4] ),
        .I3(\ex_gpr_write_addr_reg[0] ),
        .O(\EX_Op2_reg[31]_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \EX_Op2[16]_i_5 
       (.I0(GPR_Op2[15]),
        .I1(\EX_Op2_reg[0]_1 ),
        .I2(\Using_FPGA.Native_4 ),
        .O(\EX_Op2_reg[16] ));
  LUT3 #(
    .INIT(8'hB8)) 
    \EX_Op2[17]_i_3 
       (.I0(GPR_Op2[14]),
        .I1(\EX_Op2_reg[0]_1 ),
        .I2(\Using_FPGA.Native_6 ),
        .O(\EX_Op2_reg[17] ));
  LUT3 #(
    .INIT(8'hB8)) 
    \EX_Op2[18]_i_3 
       (.I0(GPR_Op2[13]),
        .I1(\EX_Op2_reg[0]_1 ),
        .I2(\Using_FPGA.Native_7 ),
        .O(\EX_Op2_reg[18] ));
  LUT3 #(
    .INIT(8'hB8)) 
    \EX_Op2[19]_i_3 
       (.I0(GPR_Op2[12]),
        .I1(\EX_Op2_reg[0]_1 ),
        .I2(\Using_FPGA.Native_8 ),
        .O(\EX_Op2_reg[19] ));
  LUT3 #(
    .INIT(8'hB8)) 
    \EX_Op2[20]_i_3 
       (.I0(GPR_Op2[11]),
        .I1(\EX_Op2_reg[0]_1 ),
        .I2(\Using_FPGA.Native_9 [11]),
        .O(\EX_Op2_reg[20] ));
  LUT3 #(
    .INIT(8'hB8)) 
    \EX_Op2[21]_i_3 
       (.I0(GPR_Op2[10]),
        .I1(\EX_Op2_reg[0]_1 ),
        .I2(\Using_FPGA.Native_9 [10]),
        .O(\EX_Op2_reg[21] ));
  LUT3 #(
    .INIT(8'hB8)) 
    \EX_Op2[22]_i_3 
       (.I0(GPR_Op2[9]),
        .I1(\EX_Op2_reg[0]_1 ),
        .I2(\Using_FPGA.Native_9 [9]),
        .O(\EX_Op2_reg[22] ));
  LUT3 #(
    .INIT(8'hB8)) 
    \EX_Op2[23]_i_3 
       (.I0(GPR_Op2[8]),
        .I1(\EX_Op2_reg[0]_1 ),
        .I2(\Using_FPGA.Native_9 [8]),
        .O(\EX_Op2_reg[23] ));
  LUT3 #(
    .INIT(8'hB8)) 
    \EX_Op2[24]_i_3 
       (.I0(GPR_Op2[7]),
        .I1(\EX_Op2_reg[0]_1 ),
        .I2(\Using_FPGA.Native_9 [7]),
        .O(\EX_Op2_reg[24] ));
  LUT3 #(
    .INIT(8'hB8)) 
    \EX_Op2[25]_i_3 
       (.I0(GPR_Op2[6]),
        .I1(\EX_Op2_reg[0]_1 ),
        .I2(\Using_FPGA.Native_9 [6]),
        .O(\EX_Op2_reg[25] ));
  LUT3 #(
    .INIT(8'hB8)) 
    \EX_Op2[26]_i_3 
       (.I0(GPR_Op2[5]),
        .I1(\EX_Op2_reg[0]_1 ),
        .I2(\Using_FPGA.Native_9 [5]),
        .O(\EX_Op2_reg[26] ));
  LUT3 #(
    .INIT(8'hB8)) 
    \EX_Op2[27]_i_3 
       (.I0(GPR_Op2[4]),
        .I1(\EX_Op2_reg[0]_1 ),
        .I2(\Using_FPGA.Native_9 [4]),
        .O(\EX_Op2_reg[27] ));
  LUT3 #(
    .INIT(8'hB8)) 
    \EX_Op2[28]_i_3 
       (.I0(GPR_Op2[3]),
        .I1(\EX_Op2_reg[0]_1 ),
        .I2(\Using_FPGA.Native_9 [3]),
        .O(\EX_Op2_reg[28] ));
  LUT3 #(
    .INIT(8'hB8)) 
    \EX_Op2[29]_i_3 
       (.I0(GPR_Op2[2]),
        .I1(\EX_Op2_reg[0]_1 ),
        .I2(\Using_FPGA.Native_9 [2]),
        .O(\EX_Op2_reg[29] ));
  LUT3 #(
    .INIT(8'hB8)) 
    \EX_Op2[30]_i_3 
       (.I0(GPR_Op2[1]),
        .I1(\EX_Op2_reg[0]_1 ),
        .I2(\Using_FPGA.Native_9 [1]),
        .O(\EX_Op2_reg[30] ));
  LUT3 #(
    .INIT(8'hB8)) 
    \EX_Op2[31]_i_3 
       (.I0(GPR_Op2[0]),
        .I1(\EX_Op2_reg[0]_1 ),
        .I2(\Using_FPGA.Native_9 [0]),
        .O(\EX_Op2_reg[31] ));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_37),
        .Q(\ex_opcode_reg[5] ),
        .R(sync_reset));
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \Using_FPGA.Native_i_1__108 
       (.I0(\EX_Op2_reg[0]_1 ),
        .I1(\Using_FPGA.Native_5 ),
        .I2(ex_is_multi_or_load_instr),
        .I3(of_read_ex_write_op2_conflict_part2),
        .I4(of_read_ex_write_op2_conflict_part1),
        .O(use_Reg_Neg_S_reg));
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \Using_FPGA.Native_i_1__109 
       (.I0(\EX_Op2_reg[0]_1 ),
        .I1(\Using_FPGA.Native_5 ),
        .I2(mem_is_multi_or_load_instr),
        .I3(of_read_mem_write_op2_conflict_part2),
        .I4(of_read_mem_write_op2_conflict_part1),
        .O(use_Reg_Neg_S_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_1__111 
       (.I0(\ex_opcode_reg[5] ),
        .I1(\Using_FPGA.Native_12 ),
        .O(\Using_FPGA.Native_0 ));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT4 #(
    .INIT(16'h4000)) 
    \Using_FPGA.Native_i_1__122 
       (.I0(\Using_FPGA.Native_i_2__146_n_0 ),
        .I1(\Using_FPGA.Native_9 [10]),
        .I2(\Using_FPGA.Native_12 ),
        .I3(\Using_FPGA.Native_13 ),
        .O(D224_out));
  LUT2 #(
    .INIT(4'h1)) 
    \Using_FPGA.Native_i_1__131 
       (.I0(\ex_opcode_reg[5] ),
        .I1(\Using_FPGA.Native_12 ),
        .O(\Using_FPGA.Native_1 ));
  LUT6 #(
    .INIT(64'h00FF00FF00FF007F)) 
    \Using_FPGA.Native_i_2__145 
       (.I0(\ex_opcode_reg[5] ),
        .I1(\Using_FPGA.Native_14 ),
        .I2(\Using_FPGA.Native_15 ),
        .I3(\Using_FPGA.Native_11 ),
        .I4(\Using_FPGA.Native_12 ),
        .I5(\Using_FPGA.Native_13 ),
        .O(\EX_Op2_reg[0]_1 ));
  LUT4 #(
    .INIT(16'hFBFF)) 
    \Using_FPGA.Native_i_2__146 
       (.I0(\ex_opcode_reg[5] ),
        .I1(\Using_FPGA.Native_15 ),
        .I2(\Using_FPGA.Native_11 ),
        .I3(\Using_FPGA.Native_14 ),
        .O(\Using_FPGA.Native_i_2__146_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000008)) 
    ex_is_multi_instr2_i_1
       (.I0(\ex_opcode_reg[5] ),
        .I1(\Using_FPGA.Native_10 ),
        .I2(\Using_FPGA.Native_11 ),
        .I3(\Using_FPGA.Native_12 ),
        .I4(\Using_FPGA.Native_13 ),
        .I5(\Using_FPGA.Native_6 ),
        .O(of_Sel_SPR_MSR1));
  LUT5 #(
    .INIT(32'h00000008)) 
    ex_mfsmsr_i_i_1
       (.I0(of_Sel_SPR_MSR1),
        .I1(\Using_FPGA.Native_9 [0]),
        .I2(\Using_FPGA.Native_9 [1]),
        .I3(\Using_FPGA.Native_9 [2]),
        .I4(\Using_FPGA.Native_9 [3]),
        .O(of_Sel_SPR_MSR88_out));
  LUT6 #(
    .INIT(64'h0000000040000000)) 
    ex_set_bip_i_1
       (.I0(\ex_opcode_reg[5] ),
        .I1(\Using_FPGA.Native_12 ),
        .I2(ex_enable_sext_shift_i0),
        .I3(\Using_FPGA.Native_9 [12]),
        .I4(\Using_FPGA.Native_9 [13]),
        .I5(\Using_FPGA.Native_9 [14]),
        .O(ex_set_bip));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_200
   (\ex_gpr_write_addr_reg[0] ,
    ex_gpr_write_reg,
    ex_mbar_is_sleep_reg,
    sync_reset,
    of_instr_ii_36,
    Clk,
    \Using_FPGA.Native_0 ,
    of_pause_reg,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    ex_mbar_is_sleep);
  output \ex_gpr_write_addr_reg[0] ;
  output ex_gpr_write_reg;
  output ex_mbar_is_sleep_reg;
  input sync_reset;
  input of_instr_ii_36;
  input Clk;
  input \Using_FPGA.Native_0 ;
  input of_pause_reg;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input \Using_FPGA.Native_3 ;
  input ex_mbar_is_sleep;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire \ex_gpr_write_addr_reg[0] ;
  wire ex_gpr_write_reg;
  wire ex_mbar_is_sleep;
  wire ex_mbar_is_sleep_reg;
  wire of_instr_ii_36;
  wire of_pause_reg;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_36),
        .Q(\ex_gpr_write_addr_reg[0] ),
        .R(sync_reset));
  LUT6 #(
    .INIT(64'h0000000000000010)) 
    ex_gpr_write_i_3
       (.I0(\ex_gpr_write_addr_reg[0] ),
        .I1(\Using_FPGA.Native_0 ),
        .I2(of_pause_reg),
        .I3(\Using_FPGA.Native_1 ),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\Using_FPGA.Native_3 ),
        .O(ex_gpr_write_reg));
  LUT4 #(
    .INIT(16'hEFE0)) 
    ex_mbar_is_sleep_cmb_inferred_i_1
       (.I0(\ex_gpr_write_addr_reg[0] ),
        .I1(\Using_FPGA.Native_0 ),
        .I2(of_pause_reg),
        .I3(ex_mbar_is_sleep),
        .O(ex_mbar_is_sleep_reg));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_202
   (\ex_gpr_write_addr_reg[1] ,
    \EX_Op3_reg[0] ,
    \EX_Op3_reg[31] ,
    \EX_Op3_reg[31]_0 ,
    \EX_Op3_reg[31]_1 ,
    \EX_Op3_reg[31]_2 ,
    \EX_Op3_reg[31]_3 ,
    sync_reset,
    of_instr_ii_35,
    Clk,
    GPR_Op3,
    \wb_exception_kind_i_reg[31] ,
    \wb_exception_kind_i_reg[31]_0 ,
    \wb_exception_kind_i_reg[31]_1 ,
    \wb_exception_kind_i_reg[31]_2 ,
    \wb_exception_kind_i_reg[31]_3 ,
    \wb_exception_kind_i_reg[31]_4 ,
    \wb_exception_kind_i_reg[31]_5 ,
    \wb_exception_kind_i_reg[31]_6 ,
    \WB_MEM_Result_reg[17] ,
    \WB_MEM_Result_reg[15] ,
    \WB_MEM_Result_reg[14] ,
    \WB_MEM_Result_reg[13] ,
    \WB_MEM_Result_reg[12] ,
    \WB_MEM_Result_reg[11] ,
    \Using_FPGA.Native_0 ,
    \WB_MEM_Result_reg[10] ,
    \WB_MEM_Result_reg[9] ,
    \WB_MEM_Result_reg[8] ,
    \WB_MEM_Result_reg[7] ,
    \Using_FPGA.Native_1 ,
    \WB_MEM_Result_reg[6] ,
    \WB_MEM_Result_reg[5] ,
    \WB_MEM_Result_reg[4] ,
    \Using_FPGA.Native_2 ,
    \WB_MEM_Result_reg[3] ,
    \Using_FPGA.Native_3 ,
    \WB_MEM_Result_reg[2] ,
    \WB_MEM_Result_reg[1] ,
    \WB_MEM_Result_reg[0] ,
    \Using_FPGA.Native_4 ,
    ex_sel_alu_i_reg,
    mem_ex_result,
    ex_sel_alu_i_reg_0,
    mem_MSR,
    mem_is_msr_instr_reg,
    ex_sel_alu_i_reg_1,
    ex_sel_alu_i_reg_2,
    ex_sel_alu_i_reg_3,
    ex_sel_alu_i_reg_4,
    ex_sel_alu_i_reg_5,
    ex_sel_alu_i_reg_6,
    ex_sel_alu_i_reg_7,
    ex_sel_alu_i_reg_8,
    ex_sel_alu_i_reg_9,
    ex_sel_alu_i_reg_10,
    ex_sel_alu_i_reg_11,
    \mem_gpr_write_addr_reg[3] ,
    \mem_gpr_write_addr_reg[4] ,
    mem_valid_instr,
    mem_gpr_write,
    \mem_gpr_write_addr_reg[0] ,
    \Using_FPGA.Native_5 ,
    ex_sel_alu_i_reg_12,
    ex_sel_alu_i_reg_13,
    ex_sel_alu_i_reg_14,
    ex_sel_alu_i_reg_15,
    \Using_FPGA.Native_6 ,
    \ex_gpr_write_addr_reg[4] ,
    \Using_FPGA.Native_7 ,
    \Using_FPGA.Native_8 ,
    \ex_gpr_write_addr_reg[2] ,
    ex_valid_reg,
    ex_gpr_write_reg,
    \ex_gpr_write_addr_reg[1]_0 ,
    \wb_gpr_write_addr_reg[1] );
  output \ex_gpr_write_addr_reg[1] ;
  output [30:0]\EX_Op3_reg[0] ;
  output \EX_Op3_reg[31] ;
  output \EX_Op3_reg[31]_0 ;
  output \EX_Op3_reg[31]_1 ;
  output \EX_Op3_reg[31]_2 ;
  output \EX_Op3_reg[31]_3 ;
  input sync_reset;
  input of_instr_ii_35;
  input Clk;
  input [30:0]GPR_Op3;
  input \wb_exception_kind_i_reg[31] ;
  input \wb_exception_kind_i_reg[31]_0 ;
  input \wb_exception_kind_i_reg[31]_1 ;
  input \wb_exception_kind_i_reg[31]_2 ;
  input \wb_exception_kind_i_reg[31]_3 ;
  input \wb_exception_kind_i_reg[31]_4 ;
  input \wb_exception_kind_i_reg[31]_5 ;
  input \wb_exception_kind_i_reg[31]_6 ;
  input [6:0]\WB_MEM_Result_reg[17] ;
  input \WB_MEM_Result_reg[15] ;
  input \WB_MEM_Result_reg[14] ;
  input \WB_MEM_Result_reg[13] ;
  input \WB_MEM_Result_reg[12] ;
  input \WB_MEM_Result_reg[11] ;
  input \Using_FPGA.Native_0 ;
  input \WB_MEM_Result_reg[10] ;
  input \WB_MEM_Result_reg[9] ;
  input \WB_MEM_Result_reg[8] ;
  input \WB_MEM_Result_reg[7] ;
  input \Using_FPGA.Native_1 ;
  input \WB_MEM_Result_reg[6] ;
  input \WB_MEM_Result_reg[5] ;
  input \WB_MEM_Result_reg[4] ;
  input \Using_FPGA.Native_2 ;
  input \WB_MEM_Result_reg[3] ;
  input \Using_FPGA.Native_3 ;
  input \WB_MEM_Result_reg[2] ;
  input \WB_MEM_Result_reg[1] ;
  input \WB_MEM_Result_reg[0] ;
  input \Using_FPGA.Native_4 ;
  input ex_sel_alu_i_reg;
  input [26:0]mem_ex_result;
  input ex_sel_alu_i_reg_0;
  input [2:0]mem_MSR;
  input mem_is_msr_instr_reg;
  input ex_sel_alu_i_reg_1;
  input ex_sel_alu_i_reg_2;
  input ex_sel_alu_i_reg_3;
  input ex_sel_alu_i_reg_4;
  input ex_sel_alu_i_reg_5;
  input ex_sel_alu_i_reg_6;
  input ex_sel_alu_i_reg_7;
  input ex_sel_alu_i_reg_8;
  input ex_sel_alu_i_reg_9;
  input ex_sel_alu_i_reg_10;
  input ex_sel_alu_i_reg_11;
  input \mem_gpr_write_addr_reg[3] ;
  input \mem_gpr_write_addr_reg[4] ;
  input mem_valid_instr;
  input mem_gpr_write;
  input [1:0]\mem_gpr_write_addr_reg[0] ;
  input \Using_FPGA.Native_5 ;
  input ex_sel_alu_i_reg_12;
  input ex_sel_alu_i_reg_13;
  input [10:0]ex_sel_alu_i_reg_14;
  input ex_sel_alu_i_reg_15;
  input \Using_FPGA.Native_6 ;
  input \ex_gpr_write_addr_reg[4] ;
  input \Using_FPGA.Native_7 ;
  input \Using_FPGA.Native_8 ;
  input \ex_gpr_write_addr_reg[2] ;
  input ex_valid_reg;
  input ex_gpr_write_reg;
  input [0:0]\ex_gpr_write_addr_reg[1]_0 ;
  input [0:0]\wb_gpr_write_addr_reg[1] ;

  wire Clk;
  wire \EX_Op3[0]_i_14_n_0 ;
  wire \EX_Op3[0]_i_2_n_0 ;
  wire \EX_Op3[0]_i_4_n_0 ;
  wire \EX_Op3[0]_i_9_n_0 ;
  wire \EX_Op3[11]_i_2_n_0 ;
  wire \EX_Op3[11]_i_3_n_0 ;
  wire \EX_Op3[12]_i_2_n_0 ;
  wire \EX_Op3[12]_i_3_n_0 ;
  wire \EX_Op3[13]_i_2_n_0 ;
  wire \EX_Op3[13]_i_3_n_0 ;
  wire \EX_Op3[14]_i_2_n_0 ;
  wire \EX_Op3[14]_i_3_n_0 ;
  wire \EX_Op3[15]_i_2_n_0 ;
  wire \EX_Op3[15]_i_3_n_0 ;
  wire \EX_Op3[17]_i_2_n_0 ;
  wire \EX_Op3[18]_i_2_n_0 ;
  wire \EX_Op3[19]_i_2_n_0 ;
  wire \EX_Op3[1]_i_2_n_0 ;
  wire \EX_Op3[1]_i_3_n_0 ;
  wire \EX_Op3[20]_i_2_n_0 ;
  wire \EX_Op3[20]_i_3_n_0 ;
  wire \EX_Op3[21]_i_2_n_0 ;
  wire \EX_Op3[22]_i_2_n_0 ;
  wire \EX_Op3[22]_i_3_n_0 ;
  wire \EX_Op3[23]_i_2_n_0 ;
  wire \EX_Op3[24]_i_2_n_0 ;
  wire \EX_Op3[25]_i_2_n_0 ;
  wire \EX_Op3[26]_i_2_n_0 ;
  wire \EX_Op3[27]_i_2_n_0 ;
  wire \EX_Op3[28]_i_2_n_0 ;
  wire \EX_Op3[29]_i_2_n_0 ;
  wire \EX_Op3[30]_i_2_n_0 ;
  wire \EX_Op3[31]_i_2_n_0 ;
  wire \EX_Op3[4]_i_2_n_0 ;
  wire \EX_Op3[4]_i_3_n_0 ;
  wire \EX_Op3[5]_i_2_n_0 ;
  wire \EX_Op3[5]_i_3_n_0 ;
  wire \EX_Op3[7]_i_2_n_0 ;
  wire \EX_Op3[7]_i_3_n_0 ;
  wire \EX_Op3[8]_i_2_n_0 ;
  wire \EX_Op3[8]_i_3_n_0 ;
  wire \EX_Op3[9]_i_2_n_0 ;
  wire \EX_Op3[9]_i_3_n_0 ;
  wire [30:0]\EX_Op3_reg[0] ;
  wire \EX_Op3_reg[31] ;
  wire \EX_Op3_reg[31]_0 ;
  wire \EX_Op3_reg[31]_1 ;
  wire \EX_Op3_reg[31]_2 ;
  wire \EX_Op3_reg[31]_3 ;
  wire [30:0]GPR_Op3;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;
  wire \Using_FPGA.Native_5 ;
  wire \Using_FPGA.Native_6 ;
  wire \Using_FPGA.Native_7 ;
  wire \Using_FPGA.Native_8 ;
  wire \WB_MEM_Result_reg[0] ;
  wire \WB_MEM_Result_reg[10] ;
  wire \WB_MEM_Result_reg[11] ;
  wire \WB_MEM_Result_reg[12] ;
  wire \WB_MEM_Result_reg[13] ;
  wire \WB_MEM_Result_reg[14] ;
  wire \WB_MEM_Result_reg[15] ;
  wire [6:0]\WB_MEM_Result_reg[17] ;
  wire \WB_MEM_Result_reg[1] ;
  wire \WB_MEM_Result_reg[2] ;
  wire \WB_MEM_Result_reg[3] ;
  wire \WB_MEM_Result_reg[4] ;
  wire \WB_MEM_Result_reg[5] ;
  wire \WB_MEM_Result_reg[6] ;
  wire \WB_MEM_Result_reg[7] ;
  wire \WB_MEM_Result_reg[8] ;
  wire \WB_MEM_Result_reg[9] ;
  wire \ex_gpr_write_addr_reg[1] ;
  wire [0:0]\ex_gpr_write_addr_reg[1]_0 ;
  wire \ex_gpr_write_addr_reg[2] ;
  wire \ex_gpr_write_addr_reg[4] ;
  wire ex_gpr_write_reg;
  wire ex_sel_alu_i_reg;
  wire ex_sel_alu_i_reg_0;
  wire ex_sel_alu_i_reg_1;
  wire ex_sel_alu_i_reg_10;
  wire ex_sel_alu_i_reg_11;
  wire ex_sel_alu_i_reg_12;
  wire ex_sel_alu_i_reg_13;
  wire [10:0]ex_sel_alu_i_reg_14;
  wire ex_sel_alu_i_reg_15;
  wire ex_sel_alu_i_reg_2;
  wire ex_sel_alu_i_reg_3;
  wire ex_sel_alu_i_reg_4;
  wire ex_sel_alu_i_reg_5;
  wire ex_sel_alu_i_reg_6;
  wire ex_sel_alu_i_reg_7;
  wire ex_sel_alu_i_reg_8;
  wire ex_sel_alu_i_reg_9;
  wire ex_valid_reg;
  wire [2:0]mem_MSR;
  wire [26:0]mem_ex_result;
  wire mem_gpr_write;
  wire [1:0]\mem_gpr_write_addr_reg[0] ;
  wire \mem_gpr_write_addr_reg[3] ;
  wire \mem_gpr_write_addr_reg[4] ;
  wire mem_is_msr_instr_reg;
  wire mem_valid_instr;
  wire of_instr_ii_35;
  wire sync_reset;
  wire \wb_exception_kind_i_reg[31] ;
  wire \wb_exception_kind_i_reg[31]_0 ;
  wire \wb_exception_kind_i_reg[31]_1 ;
  wire \wb_exception_kind_i_reg[31]_2 ;
  wire \wb_exception_kind_i_reg[31]_3 ;
  wire \wb_exception_kind_i_reg[31]_4 ;
  wire \wb_exception_kind_i_reg[31]_5 ;
  wire \wb_exception_kind_i_reg[31]_6 ;
  wire [0:0]\wb_gpr_write_addr_reg[1] ;

  LUT6 #(
    .INIT(64'hFFBAFFBAFFFFFFBA)) 
    \EX_Op3[0]_i_1 
       (.I0(\EX_Op3[0]_i_2_n_0 ),
        .I1(\EX_Op3_reg[31]_0 ),
        .I2(\WB_MEM_Result_reg[0] ),
        .I3(\EX_Op3[0]_i_4_n_0 ),
        .I4(GPR_Op3[30]),
        .I5(\EX_Op3_reg[31] ),
        .O(\EX_Op3_reg[0] [30]));
  LUT2 #(
    .INIT(4'h6)) 
    \EX_Op3[0]_i_13 
       (.I0(\ex_gpr_write_addr_reg[1] ),
        .I1(\wb_gpr_write_addr_reg[1] ),
        .O(\EX_Op3_reg[31]_3 ));
  LUT6 #(
    .INIT(64'h7FF77FF7FFFF7FF7)) 
    \EX_Op3[0]_i_14 
       (.I0(mem_valid_instr),
        .I1(mem_gpr_write),
        .I2(\ex_gpr_write_addr_reg[1] ),
        .I3(\mem_gpr_write_addr_reg[0] [0]),
        .I4(\mem_gpr_write_addr_reg[0] [1]),
        .I5(\Using_FPGA.Native_5 ),
        .O(\EX_Op3[0]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \EX_Op3[0]_i_2 
       (.I0(\EX_Op3_reg[31]_2 ),
        .I1(ex_sel_alu_i_reg_15),
        .O(\EX_Op3[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hFB)) 
    \EX_Op3[0]_i_3 
       (.I0(\Using_FPGA.Native_4 ),
        .I1(\EX_Op3_reg[31]_1 ),
        .I2(\EX_Op3_reg[31]_2 ),
        .O(\EX_Op3_reg[31]_0 ));
  LUT5 #(
    .INIT(32'h000000E2)) 
    \EX_Op3[0]_i_4 
       (.I0(mem_ex_result[26]),
        .I1(mem_is_msr_instr_reg),
        .I2(mem_MSR[1]),
        .I3(\EX_Op3_reg[31]_1 ),
        .I4(\EX_Op3_reg[31]_2 ),
        .O(\EX_Op3[0]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hDF)) 
    \EX_Op3[0]_i_5 
       (.I0(\EX_Op3_reg[31]_1 ),
        .I1(\EX_Op3_reg[31]_2 ),
        .I2(\Using_FPGA.Native_4 ),
        .O(\EX_Op3_reg[31] ));
  LUT6 #(
    .INIT(64'h0000000000008808)) 
    \EX_Op3[0]_i_6 
       (.I0(\EX_Op3[0]_i_9_n_0 ),
        .I1(\Using_FPGA.Native_6 ),
        .I2(\ex_gpr_write_addr_reg[4] ),
        .I3(\Using_FPGA.Native_7 ),
        .I4(\Using_FPGA.Native_8 ),
        .I5(\ex_gpr_write_addr_reg[2] ),
        .O(\EX_Op3_reg[31]_2 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \EX_Op3[0]_i_8 
       (.I0(\EX_Op3[0]_i_14_n_0 ),
        .I1(\mem_gpr_write_addr_reg[3] ),
        .I2(\mem_gpr_write_addr_reg[4] ),
        .O(\EX_Op3_reg[31]_1 ));
  LUT6 #(
    .INIT(64'h8008800800008008)) 
    \EX_Op3[0]_i_9 
       (.I0(ex_valid_reg),
        .I1(ex_gpr_write_reg),
        .I2(\ex_gpr_write_addr_reg[1] ),
        .I3(\ex_gpr_write_addr_reg[1]_0 ),
        .I4(\Using_FPGA.Native_7 ),
        .I5(\ex_gpr_write_addr_reg[4] ),
        .O(\EX_Op3[0]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hAEAEFFAE)) 
    \EX_Op3[10]_i_1 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(GPR_Op3[20]),
        .I2(\EX_Op3_reg[31] ),
        .I3(\WB_MEM_Result_reg[10] ),
        .I4(\EX_Op3_reg[31]_0 ),
        .O(\EX_Op3_reg[0] [20]));
  LUT6 #(
    .INIT(64'hFFAEFFAEFFFFFFAE)) 
    \EX_Op3[11]_i_1 
       (.I0(\EX_Op3[11]_i_2_n_0 ),
        .I1(GPR_Op3[19]),
        .I2(\EX_Op3_reg[31] ),
        .I3(\EX_Op3[11]_i_3_n_0 ),
        .I4(\WB_MEM_Result_reg[11] ),
        .I5(\EX_Op3_reg[31]_0 ),
        .O(\EX_Op3_reg[0] [19]));
  LUT3 #(
    .INIT(8'h02)) 
    \EX_Op3[11]_i_2 
       (.I0(mem_ex_result[19]),
        .I1(\EX_Op3_reg[31]_1 ),
        .I2(\EX_Op3_reg[31]_2 ),
        .O(\EX_Op3[11]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \EX_Op3[11]_i_3 
       (.I0(\EX_Op3_reg[31]_2 ),
        .I1(ex_sel_alu_i_reg_14[4]),
        .O(\EX_Op3[11]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFAEFFAEFFFFFFAE)) 
    \EX_Op3[12]_i_1 
       (.I0(\EX_Op3[12]_i_2_n_0 ),
        .I1(GPR_Op3[18]),
        .I2(\EX_Op3_reg[31] ),
        .I3(\EX_Op3[12]_i_3_n_0 ),
        .I4(\WB_MEM_Result_reg[12] ),
        .I5(\EX_Op3_reg[31]_0 ),
        .O(\EX_Op3_reg[0] [18]));
  LUT2 #(
    .INIT(4'h8)) 
    \EX_Op3[12]_i_2 
       (.I0(\EX_Op3_reg[31]_2 ),
        .I1(ex_sel_alu_i_reg_14[3]),
        .O(\EX_Op3[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \EX_Op3[12]_i_3 
       (.I0(mem_ex_result[18]),
        .I1(\EX_Op3_reg[31]_1 ),
        .I2(\EX_Op3_reg[31]_2 ),
        .O(\EX_Op3[12]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFF2FFF2FFFFFFF2)) 
    \EX_Op3[13]_i_1 
       (.I0(GPR_Op3[17]),
        .I1(\EX_Op3_reg[31] ),
        .I2(\EX_Op3[13]_i_2_n_0 ),
        .I3(\EX_Op3[13]_i_3_n_0 ),
        .I4(\WB_MEM_Result_reg[13] ),
        .I5(\EX_Op3_reg[31]_0 ),
        .O(\EX_Op3_reg[0] [17]));
  LUT2 #(
    .INIT(4'h8)) 
    \EX_Op3[13]_i_2 
       (.I0(\EX_Op3_reg[31]_2 ),
        .I1(ex_sel_alu_i_reg_14[2]),
        .O(\EX_Op3[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \EX_Op3[13]_i_3 
       (.I0(mem_ex_result[17]),
        .I1(\EX_Op3_reg[31]_1 ),
        .I2(\EX_Op3_reg[31]_2 ),
        .O(\EX_Op3[13]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFF2FFF2FFFFFFF2)) 
    \EX_Op3[14]_i_1 
       (.I0(GPR_Op3[16]),
        .I1(\EX_Op3_reg[31] ),
        .I2(\EX_Op3[14]_i_2_n_0 ),
        .I3(\EX_Op3[14]_i_3_n_0 ),
        .I4(\WB_MEM_Result_reg[14] ),
        .I5(\EX_Op3_reg[31]_0 ),
        .O(\EX_Op3_reg[0] [16]));
  LUT2 #(
    .INIT(4'h8)) 
    \EX_Op3[14]_i_2 
       (.I0(\EX_Op3_reg[31]_2 ),
        .I1(ex_sel_alu_i_reg_14[1]),
        .O(\EX_Op3[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \EX_Op3[14]_i_3 
       (.I0(mem_ex_result[16]),
        .I1(\EX_Op3_reg[31]_1 ),
        .I2(\EX_Op3_reg[31]_2 ),
        .O(\EX_Op3[14]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFF2FFF2FFFFFFF2)) 
    \EX_Op3[15]_i_1 
       (.I0(GPR_Op3[15]),
        .I1(\EX_Op3_reg[31] ),
        .I2(\EX_Op3[15]_i_2_n_0 ),
        .I3(\EX_Op3[15]_i_3_n_0 ),
        .I4(\WB_MEM_Result_reg[15] ),
        .I5(\EX_Op3_reg[31]_0 ),
        .O(\EX_Op3_reg[0] [15]));
  LUT2 #(
    .INIT(4'h8)) 
    \EX_Op3[15]_i_2 
       (.I0(\EX_Op3_reg[31]_2 ),
        .I1(ex_sel_alu_i_reg_14[0]),
        .O(\EX_Op3[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \EX_Op3[15]_i_3 
       (.I0(mem_ex_result[15]),
        .I1(\EX_Op3_reg[31]_1 ),
        .I2(\EX_Op3_reg[31]_2 ),
        .O(\EX_Op3[15]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hF4F4FFF4)) 
    \EX_Op3[17]_i_1 
       (.I0(\EX_Op3_reg[31]_0 ),
        .I1(\WB_MEM_Result_reg[17] [6]),
        .I2(\EX_Op3[17]_i_2_n_0 ),
        .I3(GPR_Op3[14]),
        .I4(\EX_Op3_reg[31] ),
        .O(\EX_Op3_reg[0] [14]));
  LUT4 #(
    .INIT(16'h8B88)) 
    \EX_Op3[17]_i_2 
       (.I0(ex_sel_alu_i_reg_11),
        .I1(\EX_Op3_reg[31]_2 ),
        .I2(\EX_Op3_reg[31]_1 ),
        .I3(mem_ex_result[14]),
        .O(\EX_Op3[17]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF4F4FFF4)) 
    \EX_Op3[18]_i_1 
       (.I0(\EX_Op3_reg[31]_0 ),
        .I1(\WB_MEM_Result_reg[17] [5]),
        .I2(\EX_Op3[18]_i_2_n_0 ),
        .I3(GPR_Op3[13]),
        .I4(\EX_Op3_reg[31] ),
        .O(\EX_Op3_reg[0] [13]));
  LUT4 #(
    .INIT(16'h8B88)) 
    \EX_Op3[18]_i_2 
       (.I0(ex_sel_alu_i_reg_10),
        .I1(\EX_Op3_reg[31]_2 ),
        .I2(\EX_Op3_reg[31]_1 ),
        .I3(mem_ex_result[13]),
        .O(\EX_Op3[18]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF4F4FFF4)) 
    \EX_Op3[19]_i_1 
       (.I0(\EX_Op3_reg[31]_0 ),
        .I1(\WB_MEM_Result_reg[17] [4]),
        .I2(\EX_Op3[19]_i_2_n_0 ),
        .I3(GPR_Op3[12]),
        .I4(\EX_Op3_reg[31] ),
        .O(\EX_Op3_reg[0] [12]));
  LUT4 #(
    .INIT(16'h8B88)) 
    \EX_Op3[19]_i_2 
       (.I0(ex_sel_alu_i_reg_9),
        .I1(\EX_Op3_reg[31]_2 ),
        .I2(\EX_Op3_reg[31]_1 ),
        .I3(mem_ex_result[12]),
        .O(\EX_Op3[19]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFAEFFAEFFFFFFAE)) 
    \EX_Op3[1]_i_1 
       (.I0(\EX_Op3[1]_i_2_n_0 ),
        .I1(GPR_Op3[29]),
        .I2(\EX_Op3_reg[31] ),
        .I3(\EX_Op3[1]_i_3_n_0 ),
        .I4(\WB_MEM_Result_reg[1] ),
        .I5(\EX_Op3_reg[31]_0 ),
        .O(\EX_Op3_reg[0] [29]));
  LUT2 #(
    .INIT(4'h8)) 
    \EX_Op3[1]_i_2 
       (.I0(\EX_Op3_reg[31]_2 ),
        .I1(ex_sel_alu_i_reg_14[10]),
        .O(\EX_Op3[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \EX_Op3[1]_i_3 
       (.I0(mem_ex_result[25]),
        .I1(\EX_Op3_reg[31]_1 ),
        .I2(\EX_Op3_reg[31]_2 ),
        .O(\EX_Op3[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF4F44)) 
    \EX_Op3[20]_i_1 
       (.I0(\EX_Op3_reg[31]_0 ),
        .I1(\WB_MEM_Result_reg[17] [3]),
        .I2(\EX_Op3_reg[31] ),
        .I3(GPR_Op3[11]),
        .I4(\EX_Op3[20]_i_2_n_0 ),
        .I5(\EX_Op3[20]_i_3_n_0 ),
        .O(\EX_Op3_reg[0] [11]));
  LUT3 #(
    .INIT(8'h02)) 
    \EX_Op3[20]_i_2 
       (.I0(mem_ex_result[11]),
        .I1(\EX_Op3_reg[31]_1 ),
        .I2(\EX_Op3_reg[31]_2 ),
        .O(\EX_Op3[20]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \EX_Op3[20]_i_3 
       (.I0(\EX_Op3_reg[31]_2 ),
        .I1(ex_sel_alu_i_reg_13),
        .O(\EX_Op3[20]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hF4F4FFF4)) 
    \EX_Op3[21]_i_1 
       (.I0(\EX_Op3_reg[31]_0 ),
        .I1(\WB_MEM_Result_reg[17] [2]),
        .I2(\EX_Op3[21]_i_2_n_0 ),
        .I3(GPR_Op3[10]),
        .I4(\EX_Op3_reg[31] ),
        .O(\EX_Op3_reg[0] [10]));
  LUT4 #(
    .INIT(16'h8B88)) 
    \EX_Op3[21]_i_2 
       (.I0(ex_sel_alu_i_reg_8),
        .I1(\EX_Op3_reg[31]_2 ),
        .I2(\EX_Op3_reg[31]_1 ),
        .I3(mem_ex_result[10]),
        .O(\EX_Op3[21]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF4F44)) 
    \EX_Op3[22]_i_1 
       (.I0(\EX_Op3_reg[31]_0 ),
        .I1(\WB_MEM_Result_reg[17] [1]),
        .I2(\EX_Op3_reg[31] ),
        .I3(GPR_Op3[9]),
        .I4(\EX_Op3[22]_i_2_n_0 ),
        .I5(\EX_Op3[22]_i_3_n_0 ),
        .O(\EX_Op3_reg[0] [9]));
  LUT3 #(
    .INIT(8'h02)) 
    \EX_Op3[22]_i_2 
       (.I0(mem_ex_result[9]),
        .I1(\EX_Op3_reg[31]_1 ),
        .I2(\EX_Op3_reg[31]_2 ),
        .O(\EX_Op3[22]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \EX_Op3[22]_i_3 
       (.I0(\EX_Op3_reg[31]_2 ),
        .I1(ex_sel_alu_i_reg_12),
        .O(\EX_Op3[22]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hF4F4FFF4)) 
    \EX_Op3[23]_i_1 
       (.I0(\EX_Op3_reg[31]_0 ),
        .I1(\WB_MEM_Result_reg[17] [0]),
        .I2(\EX_Op3[23]_i_2_n_0 ),
        .I3(GPR_Op3[8]),
        .I4(\EX_Op3_reg[31] ),
        .O(\EX_Op3_reg[0] [8]));
  LUT4 #(
    .INIT(16'h8B88)) 
    \EX_Op3[23]_i_2 
       (.I0(ex_sel_alu_i_reg_7),
        .I1(\EX_Op3_reg[31]_2 ),
        .I2(\EX_Op3_reg[31]_1 ),
        .I3(mem_ex_result[8]),
        .O(\EX_Op3[23]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF4F4FFF4)) 
    \EX_Op3[24]_i_1 
       (.I0(\EX_Op3_reg[31] ),
        .I1(GPR_Op3[7]),
        .I2(\EX_Op3[24]_i_2_n_0 ),
        .I3(\wb_exception_kind_i_reg[31]_6 ),
        .I4(\EX_Op3_reg[31]_0 ),
        .O(\EX_Op3_reg[0] [7]));
  LUT4 #(
    .INIT(16'h8B88)) 
    \EX_Op3[24]_i_2 
       (.I0(ex_sel_alu_i_reg_6),
        .I1(\EX_Op3_reg[31]_2 ),
        .I2(\EX_Op3_reg[31]_1 ),
        .I3(mem_ex_result[7]),
        .O(\EX_Op3[24]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF4F4FFF4)) 
    \EX_Op3[25]_i_1 
       (.I0(\EX_Op3_reg[31] ),
        .I1(GPR_Op3[6]),
        .I2(\EX_Op3[25]_i_2_n_0 ),
        .I3(\wb_exception_kind_i_reg[31]_5 ),
        .I4(\EX_Op3_reg[31]_0 ),
        .O(\EX_Op3_reg[0] [6]));
  LUT4 #(
    .INIT(16'h8B88)) 
    \EX_Op3[25]_i_2 
       (.I0(ex_sel_alu_i_reg_5),
        .I1(\EX_Op3_reg[31]_2 ),
        .I2(\EX_Op3_reg[31]_1 ),
        .I3(mem_ex_result[6]),
        .O(\EX_Op3[25]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF4F4FFF4)) 
    \EX_Op3[26]_i_1 
       (.I0(\EX_Op3_reg[31] ),
        .I1(GPR_Op3[5]),
        .I2(\EX_Op3[26]_i_2_n_0 ),
        .I3(\wb_exception_kind_i_reg[31]_4 ),
        .I4(\EX_Op3_reg[31]_0 ),
        .O(\EX_Op3_reg[0] [5]));
  LUT4 #(
    .INIT(16'h8B88)) 
    \EX_Op3[26]_i_2 
       (.I0(ex_sel_alu_i_reg_4),
        .I1(\EX_Op3_reg[31]_2 ),
        .I2(\EX_Op3_reg[31]_1 ),
        .I3(mem_ex_result[5]),
        .O(\EX_Op3[26]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF4F4FFF4)) 
    \EX_Op3[27]_i_1 
       (.I0(\EX_Op3_reg[31] ),
        .I1(GPR_Op3[4]),
        .I2(\EX_Op3[27]_i_2_n_0 ),
        .I3(\wb_exception_kind_i_reg[31]_3 ),
        .I4(\EX_Op3_reg[31]_0 ),
        .O(\EX_Op3_reg[0] [4]));
  LUT4 #(
    .INIT(16'h8B88)) 
    \EX_Op3[27]_i_2 
       (.I0(ex_sel_alu_i_reg_3),
        .I1(\EX_Op3_reg[31]_2 ),
        .I2(\EX_Op3_reg[31]_1 ),
        .I3(mem_ex_result[4]),
        .O(\EX_Op3[27]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF4F4FFF4)) 
    \EX_Op3[28]_i_1 
       (.I0(\EX_Op3_reg[31] ),
        .I1(GPR_Op3[3]),
        .I2(\EX_Op3[28]_i_2_n_0 ),
        .I3(\wb_exception_kind_i_reg[31]_2 ),
        .I4(\EX_Op3_reg[31]_0 ),
        .O(\EX_Op3_reg[0] [3]));
  LUT6 #(
    .INIT(64'h8B888B8B8B888888)) 
    \EX_Op3[28]_i_2 
       (.I0(ex_sel_alu_i_reg_2),
        .I1(\EX_Op3_reg[31]_2 ),
        .I2(\EX_Op3_reg[31]_1 ),
        .I3(mem_MSR[2]),
        .I4(mem_is_msr_instr_reg),
        .I5(mem_ex_result[3]),
        .O(\EX_Op3[28]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF4F4FFF4)) 
    \EX_Op3[29]_i_1 
       (.I0(\EX_Op3_reg[31] ),
        .I1(GPR_Op3[2]),
        .I2(\EX_Op3[29]_i_2_n_0 ),
        .I3(\wb_exception_kind_i_reg[31]_1 ),
        .I4(\EX_Op3_reg[31]_0 ),
        .O(\EX_Op3_reg[0] [2]));
  LUT6 #(
    .INIT(64'h8B888B8B8B888888)) 
    \EX_Op3[29]_i_2 
       (.I0(ex_sel_alu_i_reg_1),
        .I1(\EX_Op3_reg[31]_2 ),
        .I2(\EX_Op3_reg[31]_1 ),
        .I3(mem_MSR[1]),
        .I4(mem_is_msr_instr_reg),
        .I5(mem_ex_result[2]),
        .O(\EX_Op3[29]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hAEAEFFAE)) 
    \EX_Op3[2]_i_1 
       (.I0(\Using_FPGA.Native_3 ),
        .I1(GPR_Op3[28]),
        .I2(\EX_Op3_reg[31] ),
        .I3(\WB_MEM_Result_reg[2] ),
        .I4(\EX_Op3_reg[31]_0 ),
        .O(\EX_Op3_reg[0] [28]));
  LUT5 #(
    .INIT(32'hF4F4FFF4)) 
    \EX_Op3[30]_i_1 
       (.I0(\EX_Op3_reg[31] ),
        .I1(GPR_Op3[1]),
        .I2(\EX_Op3[30]_i_2_n_0 ),
        .I3(\wb_exception_kind_i_reg[31]_0 ),
        .I4(\EX_Op3_reg[31]_0 ),
        .O(\EX_Op3_reg[0] [1]));
  LUT6 #(
    .INIT(64'h8B888B8B8B888888)) 
    \EX_Op3[30]_i_2 
       (.I0(ex_sel_alu_i_reg_0),
        .I1(\EX_Op3_reg[31]_2 ),
        .I2(\EX_Op3_reg[31]_1 ),
        .I3(mem_MSR[0]),
        .I4(mem_is_msr_instr_reg),
        .I5(mem_ex_result[1]),
        .O(\EX_Op3[30]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF4F4FFF4)) 
    \EX_Op3[31]_i_1 
       (.I0(\EX_Op3_reg[31] ),
        .I1(GPR_Op3[0]),
        .I2(\EX_Op3[31]_i_2_n_0 ),
        .I3(\wb_exception_kind_i_reg[31] ),
        .I4(\EX_Op3_reg[31]_0 ),
        .O(\EX_Op3_reg[0] [0]));
  LUT4 #(
    .INIT(16'h8B88)) 
    \EX_Op3[31]_i_2 
       (.I0(ex_sel_alu_i_reg),
        .I1(\EX_Op3_reg[31]_2 ),
        .I2(\EX_Op3_reg[31]_1 ),
        .I3(mem_ex_result[0]),
        .O(\EX_Op3[31]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hAEAEFFAE)) 
    \EX_Op3[3]_i_1 
       (.I0(\Using_FPGA.Native_2 ),
        .I1(GPR_Op3[27]),
        .I2(\EX_Op3_reg[31] ),
        .I3(\WB_MEM_Result_reg[3] ),
        .I4(\EX_Op3_reg[31]_0 ),
        .O(\EX_Op3_reg[0] [27]));
  LUT6 #(
    .INIT(64'hFFF2FFF2FFFFFFF2)) 
    \EX_Op3[4]_i_1 
       (.I0(GPR_Op3[26]),
        .I1(\EX_Op3_reg[31] ),
        .I2(\EX_Op3[4]_i_2_n_0 ),
        .I3(\EX_Op3[4]_i_3_n_0 ),
        .I4(\WB_MEM_Result_reg[4] ),
        .I5(\EX_Op3_reg[31]_0 ),
        .O(\EX_Op3_reg[0] [26]));
  LUT2 #(
    .INIT(4'h8)) 
    \EX_Op3[4]_i_2 
       (.I0(\EX_Op3_reg[31]_2 ),
        .I1(ex_sel_alu_i_reg_14[9]),
        .O(\EX_Op3[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \EX_Op3[4]_i_3 
       (.I0(mem_ex_result[24]),
        .I1(\EX_Op3_reg[31]_1 ),
        .I2(\EX_Op3_reg[31]_2 ),
        .O(\EX_Op3[4]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFAEFFAEFFFFFFAE)) 
    \EX_Op3[5]_i_1 
       (.I0(\EX_Op3[5]_i_2_n_0 ),
        .I1(GPR_Op3[25]),
        .I2(\EX_Op3_reg[31] ),
        .I3(\EX_Op3[5]_i_3_n_0 ),
        .I4(\WB_MEM_Result_reg[5] ),
        .I5(\EX_Op3_reg[31]_0 ),
        .O(\EX_Op3_reg[0] [25]));
  LUT3 #(
    .INIT(8'h02)) 
    \EX_Op3[5]_i_2 
       (.I0(mem_ex_result[23]),
        .I1(\EX_Op3_reg[31]_1 ),
        .I2(\EX_Op3_reg[31]_2 ),
        .O(\EX_Op3[5]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \EX_Op3[5]_i_3 
       (.I0(\EX_Op3_reg[31]_2 ),
        .I1(ex_sel_alu_i_reg_14[8]),
        .O(\EX_Op3[5]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hAEAEFFAE)) 
    \EX_Op3[6]_i_1 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(GPR_Op3[24]),
        .I2(\EX_Op3_reg[31] ),
        .I3(\WB_MEM_Result_reg[6] ),
        .I4(\EX_Op3_reg[31]_0 ),
        .O(\EX_Op3_reg[0] [24]));
  LUT6 #(
    .INIT(64'hFFF2FFF2FFFFFFF2)) 
    \EX_Op3[7]_i_1 
       (.I0(GPR_Op3[23]),
        .I1(\EX_Op3_reg[31] ),
        .I2(\EX_Op3[7]_i_2_n_0 ),
        .I3(\EX_Op3[7]_i_3_n_0 ),
        .I4(\WB_MEM_Result_reg[7] ),
        .I5(\EX_Op3_reg[31]_0 ),
        .O(\EX_Op3_reg[0] [23]));
  LUT2 #(
    .INIT(4'h8)) 
    \EX_Op3[7]_i_2 
       (.I0(\EX_Op3_reg[31]_2 ),
        .I1(ex_sel_alu_i_reg_14[7]),
        .O(\EX_Op3[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \EX_Op3[7]_i_3 
       (.I0(mem_ex_result[22]),
        .I1(\EX_Op3_reg[31]_1 ),
        .I2(\EX_Op3_reg[31]_2 ),
        .O(\EX_Op3[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFF2FFF2FFFFFFF2)) 
    \EX_Op3[8]_i_1 
       (.I0(GPR_Op3[22]),
        .I1(\EX_Op3_reg[31] ),
        .I2(\EX_Op3[8]_i_2_n_0 ),
        .I3(\EX_Op3[8]_i_3_n_0 ),
        .I4(\WB_MEM_Result_reg[8] ),
        .I5(\EX_Op3_reg[31]_0 ),
        .O(\EX_Op3_reg[0] [22]));
  LUT2 #(
    .INIT(4'h8)) 
    \EX_Op3[8]_i_2 
       (.I0(\EX_Op3_reg[31]_2 ),
        .I1(ex_sel_alu_i_reg_14[6]),
        .O(\EX_Op3[8]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \EX_Op3[8]_i_3 
       (.I0(mem_ex_result[21]),
        .I1(\EX_Op3_reg[31]_1 ),
        .I2(\EX_Op3_reg[31]_2 ),
        .O(\EX_Op3[8]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFF2FFF2FFFFFFF2)) 
    \EX_Op3[9]_i_1 
       (.I0(GPR_Op3[21]),
        .I1(\EX_Op3_reg[31] ),
        .I2(\EX_Op3[9]_i_2_n_0 ),
        .I3(\EX_Op3[9]_i_3_n_0 ),
        .I4(\WB_MEM_Result_reg[9] ),
        .I5(\EX_Op3_reg[31]_0 ),
        .O(\EX_Op3_reg[0] [21]));
  LUT2 #(
    .INIT(4'h8)) 
    \EX_Op3[9]_i_2 
       (.I0(\EX_Op3_reg[31]_2 ),
        .I1(ex_sel_alu_i_reg_14[5]),
        .O(\EX_Op3[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \EX_Op3[9]_i_3 
       (.I0(mem_ex_result[20]),
        .I1(\EX_Op3_reg[31]_1 ),
        .I2(\EX_Op3_reg[31]_2 ),
        .O(\EX_Op3[9]_i_3_n_0 ));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_35),
        .Q(\ex_gpr_write_addr_reg[1] ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_204
   (\ex_gpr_write_addr_reg[2] ,
    \EX_Op3_reg[31] ,
    \EX_Op3_reg[31]_0 ,
    sync_reset,
    of_instr_ii_34,
    Clk,
    I4,
    \Using_FPGA.Native_0 ,
    \ex_gpr_write_addr_reg[0] ,
    \Using_FPGA.Native_1 ,
    I0,
    \wb_gpr_write_addr_reg[0] ,
    \Using_FPGA.Native_2 ,
    wb_reset_reg,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 );
  output \ex_gpr_write_addr_reg[2] ;
  output \EX_Op3_reg[31] ;
  output \EX_Op3_reg[31]_0 ;
  input sync_reset;
  input of_instr_ii_34;
  input Clk;
  input I4;
  input \Using_FPGA.Native_0 ;
  input [0:0]\ex_gpr_write_addr_reg[0] ;
  input \Using_FPGA.Native_1 ;
  input I0;
  input [3:0]\wb_gpr_write_addr_reg[0] ;
  input \Using_FPGA.Native_2 ;
  input wb_reset_reg;
  input \Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;

  wire Clk;
  wire \EX_Op3[0]_i_12_n_0 ;
  wire \EX_Op3_reg[31] ;
  wire \EX_Op3_reg[31]_0 ;
  wire I0;
  wire I4;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;
  wire [0:0]\ex_gpr_write_addr_reg[0] ;
  wire \ex_gpr_write_addr_reg[2] ;
  wire of_instr_ii_34;
  wire sync_reset;
  wire [3:0]\wb_gpr_write_addr_reg[0] ;
  wire wb_reset_reg;

  LUT6 #(
    .INIT(64'h66F666F6FFFF66F6)) 
    \EX_Op3[0]_i_11 
       (.I0(I4),
        .I1(\ex_gpr_write_addr_reg[2] ),
        .I2(\Using_FPGA.Native_0 ),
        .I3(\ex_gpr_write_addr_reg[0] ),
        .I4(\Using_FPGA.Native_1 ),
        .I5(I0),
        .O(\EX_Op3_reg[31] ));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    \EX_Op3[0]_i_12 
       (.I0(\wb_gpr_write_addr_reg[0] [2]),
        .I1(\ex_gpr_write_addr_reg[2] ),
        .I2(\Using_FPGA.Native_0 ),
        .I3(\wb_gpr_write_addr_reg[0] [3]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\wb_gpr_write_addr_reg[0] [0]),
        .O(\EX_Op3[0]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFEFFEFFFFFFFF)) 
    \EX_Op3[0]_i_7 
       (.I0(wb_reset_reg),
        .I1(\EX_Op3[0]_i_12_n_0 ),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\wb_gpr_write_addr_reg[0] [1]),
        .I4(\Using_FPGA.Native_3 ),
        .I5(\Using_FPGA.Native_4 ),
        .O(\EX_Op3_reg[31]_0 ));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_34),
        .Q(\ex_gpr_write_addr_reg[2] ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_206
   (\ex_gpr_write_addr_reg[3] ,
    ex_op1_cmp_eq,
    \EX_Op3_reg[31] ,
    \EX_Op3_reg[31]_0 ,
    sync_reset,
    of_instr_ii_33,
    Clk,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    ex_op1_cmp_eq1,
    \mem_gpr_write_addr_reg[3] ,
    \Using_FPGA.Native_2 ,
    I0,
    \Using_FPGA.Native_3 ,
    \ex_gpr_write_addr_reg[0] );
  output \ex_gpr_write_addr_reg[3] ;
  output ex_op1_cmp_eq;
  output \EX_Op3_reg[31] ;
  output \EX_Op3_reg[31]_0 ;
  input sync_reset;
  input of_instr_ii_33;
  input Clk;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input ex_op1_cmp_eq1;
  input [1:0]\mem_gpr_write_addr_reg[3] ;
  input \Using_FPGA.Native_2 ;
  input I0;
  input \Using_FPGA.Native_3 ;
  input [0:0]\ex_gpr_write_addr_reg[0] ;

  wire Clk;
  wire \EX_Op3_reg[31] ;
  wire \EX_Op3_reg[31]_0 ;
  wire I0;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire [0:0]\ex_gpr_write_addr_reg[0] ;
  wire \ex_gpr_write_addr_reg[3] ;
  wire ex_op1_cmp_eq;
  wire ex_op1_cmp_eq1;
  wire [1:0]\mem_gpr_write_addr_reg[3] ;
  wire of_instr_ii_33;
  wire sync_reset;

  LUT4 #(
    .INIT(16'h4F44)) 
    \EX_Op3[0]_i_10 
       (.I0(\ex_gpr_write_addr_reg[3] ),
        .I1(I0),
        .I2(\Using_FPGA.Native_3 ),
        .I3(\ex_gpr_write_addr_reg[0] ),
        .O(\EX_Op3_reg[31]_0 ));
  LUT5 #(
    .INIT(32'h6F6FFF6F)) 
    \EX_Op3[0]_i_15 
       (.I0(\mem_gpr_write_addr_reg[3] [1]),
        .I1(\ex_gpr_write_addr_reg[3] ),
        .I2(\Using_FPGA.Native_2 ),
        .I3(\Using_FPGA.Native_0 ),
        .I4(\mem_gpr_write_addr_reg[3] [0]),
        .O(\EX_Op3_reg[31] ));
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_33),
        .Q(\ex_gpr_write_addr_reg[3] ),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hEBFF)) 
    ex_op1_cmp_eq_i_1
       (.I0(\ex_gpr_write_addr_reg[3] ),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_1 ),
        .I3(ex_op1_cmp_eq1),
        .O(ex_op1_cmp_eq));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_208
   (of_valid,
    of_pipe_ctrl_reg0,
    sync_reset,
    of_Valid_II,
    Clk,
    Q,
    wb_exception);
  output of_valid;
  output of_pipe_ctrl_reg0;
  input sync_reset;
  input of_Valid_II;
  input Clk;
  input [1:0]Q;
  input wb_exception;

  wire Clk;
  wire [1:0]Q;
  wire of_Valid_II;
  wire of_pipe_ctrl_reg0;
  wire of_valid;
  wire sync_reset;
  wire wb_exception;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_Valid_II),
        .Q(of_valid),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'h2AAA)) 
    \Using_FPGA.Native_i_1__107 
       (.I0(of_valid),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(wb_exception),
        .O(of_pipe_ctrl_reg0));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_209
   (D,
    I0125_out,
    sync_reset,
    of_pc_ii_31,
    Clk,
    Q,
    \Using_FPGA.Native_0 );
  output [0:0]D;
  output I0125_out;
  input sync_reset;
  input of_pc_ii_31;
  input Clk;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;

  wire Clk;
  wire [0:0]D;
  wire I0125_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pc_ii_31;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_31),
        .Q(D),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__73 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .O(I0125_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_211
   (D,
    I085_out,
    \EX_Op1_reg[10] ,
    sync_reset,
    of_pc_ii_21,
    Clk,
    Q,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 );
  output [0:0]D;
  output I085_out;
  output \EX_Op1_reg[10] ;
  input sync_reset;
  input of_pc_ii_21;
  input Clk;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;

  wire Clk;
  wire [0:0]D;
  wire \EX_Op1_reg[10] ;
  wire I085_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_21;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_21),
        .Q(D),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__83 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .O(I085_out));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_2__54 
       (.I0(D),
        .I1(\Using_FPGA.Native_1 ),
        .O(\EX_Op1_reg[10] ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_213
   (D,
    I081_out,
    \EX_Op1_reg[11] ,
    sync_reset,
    of_pc_ii_20,
    Clk,
    Q,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 );
  output [0:0]D;
  output I081_out;
  output \EX_Op1_reg[11] ;
  input sync_reset;
  input of_pc_ii_20;
  input Clk;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;

  wire Clk;
  wire [0:0]D;
  wire \EX_Op1_reg[11] ;
  wire I081_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_20;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_20),
        .Q(D),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__84 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .O(I081_out));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_2__53 
       (.I0(D),
        .I1(\Using_FPGA.Native_1 ),
        .O(\EX_Op1_reg[11] ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_215
   (D,
    I077_out,
    \EX_Op1_reg[12] ,
    sync_reset,
    of_pc_ii_19,
    Clk,
    Q,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 );
  output [0:0]D;
  output I077_out;
  output \EX_Op1_reg[12] ;
  input sync_reset;
  input of_pc_ii_19;
  input Clk;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;

  wire Clk;
  wire [0:0]D;
  wire \EX_Op1_reg[12] ;
  wire I077_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_19;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_19),
        .Q(D),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__85 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .O(I077_out));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_2__52 
       (.I0(D),
        .I1(\Using_FPGA.Native_1 ),
        .O(\EX_Op1_reg[12] ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_217
   (D,
    I073_out,
    \EX_Op1_reg[13] ,
    sync_reset,
    of_pc_ii_18,
    Clk,
    Q,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 );
  output [0:0]D;
  output I073_out;
  output \EX_Op1_reg[13] ;
  input sync_reset;
  input of_pc_ii_18;
  input Clk;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;

  wire Clk;
  wire [0:0]D;
  wire \EX_Op1_reg[13] ;
  wire I073_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_18;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_18),
        .Q(D),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__86 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .O(I073_out));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_2__51 
       (.I0(D),
        .I1(\Using_FPGA.Native_1 ),
        .O(\EX_Op1_reg[13] ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_219
   (D,
    I069_out,
    \EX_Op1_reg[14] ,
    sync_reset,
    of_pc_ii_17,
    Clk,
    Q,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 );
  output [0:0]D;
  output I069_out;
  output \EX_Op1_reg[14] ;
  input sync_reset;
  input of_pc_ii_17;
  input Clk;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;

  wire Clk;
  wire [0:0]D;
  wire \EX_Op1_reg[14] ;
  wire I069_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_17;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_17),
        .Q(D),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__87 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .O(I069_out));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_2__50 
       (.I0(D),
        .I1(\Using_FPGA.Native_1 ),
        .O(\EX_Op1_reg[14] ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_221
   (D,
    I065_out,
    \EX_Op1_reg[15] ,
    sync_reset,
    of_pc_ii_16,
    Clk,
    Q,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 );
  output [0:0]D;
  output I065_out;
  output \EX_Op1_reg[15] ;
  input sync_reset;
  input of_pc_ii_16;
  input Clk;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;

  wire Clk;
  wire [0:0]D;
  wire \EX_Op1_reg[15] ;
  wire I065_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_16;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_16),
        .Q(D),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__88 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .O(I065_out));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_2__49 
       (.I0(D),
        .I1(\Using_FPGA.Native_1 ),
        .O(\EX_Op1_reg[15] ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_223
   (D,
    I061_out,
    \EX_Op1_reg[16] ,
    sync_reset,
    of_pc_ii_15,
    Clk,
    Q,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 );
  output [0:0]D;
  output I061_out;
  output \EX_Op1_reg[16] ;
  input sync_reset;
  input of_pc_ii_15;
  input Clk;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;

  wire Clk;
  wire [0:0]D;
  wire \EX_Op1_reg[16] ;
  wire I061_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_15;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_15),
        .Q(D),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__89 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .O(I061_out));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_2__48 
       (.I0(D),
        .I1(\Using_FPGA.Native_1 ),
        .O(\EX_Op1_reg[16] ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_225
   (D,
    I057_out,
    \EX_Op1_reg[17] ,
    sync_reset,
    of_pc_ii_14,
    Clk,
    Q,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 );
  output [0:0]D;
  output I057_out;
  output \EX_Op1_reg[17] ;
  input sync_reset;
  input of_pc_ii_14;
  input Clk;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;

  wire Clk;
  wire [0:0]D;
  wire \EX_Op1_reg[17] ;
  wire I057_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_14;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_14),
        .Q(D),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__90 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .O(I057_out));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_2__47 
       (.I0(D),
        .I1(\Using_FPGA.Native_1 ),
        .O(\EX_Op1_reg[17] ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_227
   (D,
    I053_out,
    \EX_Op1_reg[18] ,
    sync_reset,
    of_pc_ii_13,
    Clk,
    Q,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 );
  output [0:0]D;
  output I053_out;
  output \EX_Op1_reg[18] ;
  input sync_reset;
  input of_pc_ii_13;
  input Clk;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;

  wire Clk;
  wire [0:0]D;
  wire \EX_Op1_reg[18] ;
  wire I053_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_13;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_13),
        .Q(D),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__91 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .O(I053_out));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_2__46 
       (.I0(D),
        .I1(\Using_FPGA.Native_1 ),
        .O(\EX_Op1_reg[18] ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_229
   (D,
    I049_out,
    \EX_Op1_reg[19] ,
    sync_reset,
    of_pc_ii_12,
    Clk,
    Q,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 );
  output [0:0]D;
  output I049_out;
  output \EX_Op1_reg[19] ;
  input sync_reset;
  input of_pc_ii_12;
  input Clk;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;

  wire Clk;
  wire [0:0]D;
  wire \EX_Op1_reg[19] ;
  wire I049_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_12;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_12),
        .Q(D),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__92 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .O(I049_out));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_2__45 
       (.I0(D),
        .I1(\Using_FPGA.Native_1 ),
        .O(\EX_Op1_reg[19] ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_231
   (D,
    I0121_out,
    \EX_Op1_reg[1] ,
    sync_reset,
    of_pc_ii_30,
    Clk,
    Q,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 );
  output [0:0]D;
  output I0121_out;
  output \EX_Op1_reg[1] ;
  input sync_reset;
  input of_pc_ii_30;
  input Clk;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;

  wire Clk;
  wire [0:0]D;
  wire \EX_Op1_reg[1] ;
  wire I0121_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_30;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_30),
        .Q(D),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__74 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .O(I0121_out));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_2__63 
       (.I0(D),
        .I1(\Using_FPGA.Native_1 ),
        .O(\EX_Op1_reg[1] ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_233
   (D,
    I045_out,
    \EX_Op1_reg[20] ,
    sync_reset,
    of_pc_ii_11,
    Clk,
    Q,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 );
  output [0:0]D;
  output I045_out;
  output \EX_Op1_reg[20] ;
  input sync_reset;
  input of_pc_ii_11;
  input Clk;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;

  wire Clk;
  wire [0:0]D;
  wire \EX_Op1_reg[20] ;
  wire I045_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_11;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_11),
        .Q(D),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__93 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .O(I045_out));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_2__44 
       (.I0(D),
        .I1(\Using_FPGA.Native_1 ),
        .O(\EX_Op1_reg[20] ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_235
   (D,
    I041_out,
    \EX_Op1_reg[21] ,
    sync_reset,
    of_pc_ii_10,
    Clk,
    Q,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 );
  output [0:0]D;
  output I041_out;
  output \EX_Op1_reg[21] ;
  input sync_reset;
  input of_pc_ii_10;
  input Clk;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;

  wire Clk;
  wire [0:0]D;
  wire \EX_Op1_reg[21] ;
  wire I041_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_10;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_10),
        .Q(D),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__94 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .O(I041_out));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_2__43 
       (.I0(D),
        .I1(\Using_FPGA.Native_1 ),
        .O(\EX_Op1_reg[21] ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_237
   (D,
    I037_out,
    \EX_Op1_reg[22] ,
    sync_reset,
    of_pc_ii_9,
    Clk,
    Q,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 );
  output [0:0]D;
  output I037_out;
  output \EX_Op1_reg[22] ;
  input sync_reset;
  input of_pc_ii_9;
  input Clk;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;

  wire Clk;
  wire [0:0]D;
  wire \EX_Op1_reg[22] ;
  wire I037_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_9;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_9),
        .Q(D),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__95 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .O(I037_out));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_2__42 
       (.I0(D),
        .I1(\Using_FPGA.Native_1 ),
        .O(\EX_Op1_reg[22] ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_239
   (D,
    I033_out,
    \EX_Op1_reg[23] ,
    sync_reset,
    of_pc_ii_8,
    Clk,
    Q,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 );
  output [0:0]D;
  output I033_out;
  output \EX_Op1_reg[23] ;
  input sync_reset;
  input of_pc_ii_8;
  input Clk;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;

  wire Clk;
  wire [0:0]D;
  wire \EX_Op1_reg[23] ;
  wire I033_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_8;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_8),
        .Q(D),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__96 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .O(I033_out));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_2__41 
       (.I0(D),
        .I1(\Using_FPGA.Native_1 ),
        .O(\EX_Op1_reg[23] ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_241
   (D,
    I029_out,
    \EX_Op1_reg[24] ,
    sync_reset,
    of_pc_ii_7,
    Clk,
    Q,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 );
  output [0:0]D;
  output I029_out;
  output \EX_Op1_reg[24] ;
  input sync_reset;
  input of_pc_ii_7;
  input Clk;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;

  wire Clk;
  wire [0:0]D;
  wire \EX_Op1_reg[24] ;
  wire I029_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_7;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_7),
        .Q(D),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__97 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .O(I029_out));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_2__40 
       (.I0(D),
        .I1(\Using_FPGA.Native_1 ),
        .O(\EX_Op1_reg[24] ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_243
   (D,
    I025_out,
    \EX_Op1_reg[25] ,
    sync_reset,
    of_pc_ii_6,
    Clk,
    Q,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 );
  output [0:0]D;
  output I025_out;
  output \EX_Op1_reg[25] ;
  input sync_reset;
  input of_pc_ii_6;
  input Clk;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;

  wire Clk;
  wire [0:0]D;
  wire \EX_Op1_reg[25] ;
  wire I025_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_6;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_6),
        .Q(D),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__98 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .O(I025_out));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_2__39 
       (.I0(D),
        .I1(\Using_FPGA.Native_1 ),
        .O(\EX_Op1_reg[25] ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_245
   (D,
    I021_out,
    \EX_Op1_reg[26] ,
    sync_reset,
    of_pc_ii_5,
    Clk,
    Q,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 );
  output [0:0]D;
  output I021_out;
  output \EX_Op1_reg[26] ;
  input sync_reset;
  input of_pc_ii_5;
  input Clk;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;

  wire Clk;
  wire [0:0]D;
  wire \EX_Op1_reg[26] ;
  wire I021_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_5;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_5),
        .Q(D),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__99 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .O(I021_out));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_2__38 
       (.I0(D),
        .I1(\Using_FPGA.Native_1 ),
        .O(\EX_Op1_reg[26] ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_247
   (D,
    I017_out,
    \EX_Op1_reg[27] ,
    sync_reset,
    of_pc_ii_4,
    Clk,
    Q,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 );
  output [0:0]D;
  output I017_out;
  output \EX_Op1_reg[27] ;
  input sync_reset;
  input of_pc_ii_4;
  input Clk;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;

  wire Clk;
  wire [0:0]D;
  wire \EX_Op1_reg[27] ;
  wire I017_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_4;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_4),
        .Q(D),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__100 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .O(I017_out));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_2__37 
       (.I0(D),
        .I1(\Using_FPGA.Native_1 ),
        .O(\EX_Op1_reg[27] ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_249
   (D,
    I013_out,
    sync_reset,
    of_pc_ii_3,
    Clk,
    Q,
    \Using_FPGA.Native_0 );
  output [0:0]D;
  output I013_out;
  input sync_reset;
  input of_pc_ii_3;
  input Clk;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;

  wire Clk;
  wire [0:0]D;
  wire I013_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pc_ii_3;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_3),
        .Q(D),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__101 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .O(I013_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_251
   (D,
    I09_out,
    sync_reset,
    of_pc_ii_2,
    Clk,
    Q,
    \Using_FPGA.Native_0 );
  output [0:0]D;
  output I09_out;
  input sync_reset;
  input of_pc_ii_2;
  input Clk;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;

  wire Clk;
  wire [0:0]D;
  wire I09_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pc_ii_2;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_2),
        .Q(D),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__102 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .O(I09_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_253
   (D,
    I0117_out,
    \EX_Op1_reg[2] ,
    sync_reset,
    of_pc_ii_29,
    Clk,
    Q,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 );
  output [0:0]D;
  output I0117_out;
  output \EX_Op1_reg[2] ;
  input sync_reset;
  input of_pc_ii_29;
  input Clk;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;

  wire Clk;
  wire [0:0]D;
  wire \EX_Op1_reg[2] ;
  wire I0117_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_29;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_29),
        .Q(D),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__75 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .O(I0117_out));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_2__62 
       (.I0(D),
        .I1(\Using_FPGA.Native_1 ),
        .O(\EX_Op1_reg[2] ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_255
   (D,
    I05_out,
    sync_reset,
    of_pc_ii_1,
    Clk,
    Q,
    \Using_FPGA.Native_0 );
  output [0:0]D;
  output I05_out;
  input sync_reset;
  input of_pc_ii_1;
  input Clk;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;

  wire Clk;
  wire [0:0]D;
  wire I05_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pc_ii_1;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_1),
        .Q(D),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__103 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .O(I05_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_257
   (D,
    I0,
    \EX_Op1_reg[31] ,
    sync_reset,
    of_pc_ii_0,
    Clk,
    Q,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 );
  output [0:0]D;
  output I0;
  output \EX_Op1_reg[31] ;
  input sync_reset;
  input of_pc_ii_0;
  input Clk;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;

  wire Clk;
  wire [0:0]D;
  wire \EX_Op1_reg[31] ;
  wire I0;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_0;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_0),
        .Q(D),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__104 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .O(I0));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_2__33 
       (.I0(D),
        .I1(\Using_FPGA.Native_1 ),
        .O(\EX_Op1_reg[31] ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_259
   (D,
    I0113_out,
    \EX_Op1_reg[3] ,
    sync_reset,
    of_pc_ii_28,
    Clk,
    Q,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 );
  output [0:0]D;
  output I0113_out;
  output \EX_Op1_reg[3] ;
  input sync_reset;
  input of_pc_ii_28;
  input Clk;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;

  wire Clk;
  wire [0:0]D;
  wire \EX_Op1_reg[3] ;
  wire I0113_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_28;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_28),
        .Q(D),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__76 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .O(I0113_out));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_2__61 
       (.I0(D),
        .I1(\Using_FPGA.Native_1 ),
        .O(\EX_Op1_reg[3] ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_261
   (D,
    I0109_out,
    \EX_Op1_reg[4] ,
    sync_reset,
    of_pc_ii_27,
    Clk,
    Q,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 );
  output [0:0]D;
  output I0109_out;
  output \EX_Op1_reg[4] ;
  input sync_reset;
  input of_pc_ii_27;
  input Clk;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;

  wire Clk;
  wire [0:0]D;
  wire \EX_Op1_reg[4] ;
  wire I0109_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_27;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_27),
        .Q(D),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__77 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .O(I0109_out));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_2__60 
       (.I0(D),
        .I1(\Using_FPGA.Native_1 ),
        .O(\EX_Op1_reg[4] ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_263
   (D,
    I0105_out,
    \EX_Op1_reg[5] ,
    sync_reset,
    of_pc_ii_26,
    Clk,
    Q,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 );
  output [0:0]D;
  output I0105_out;
  output \EX_Op1_reg[5] ;
  input sync_reset;
  input of_pc_ii_26;
  input Clk;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;

  wire Clk;
  wire [0:0]D;
  wire \EX_Op1_reg[5] ;
  wire I0105_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_26;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_26),
        .Q(D),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__78 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .O(I0105_out));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_2__59 
       (.I0(D),
        .I1(\Using_FPGA.Native_1 ),
        .O(\EX_Op1_reg[5] ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_265
   (D,
    I0101_out,
    \EX_Op1_reg[6] ,
    sync_reset,
    of_pc_ii_25,
    Clk,
    Q,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 );
  output [0:0]D;
  output I0101_out;
  output \EX_Op1_reg[6] ;
  input sync_reset;
  input of_pc_ii_25;
  input Clk;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;

  wire Clk;
  wire [0:0]D;
  wire \EX_Op1_reg[6] ;
  wire I0101_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_25;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_25),
        .Q(D),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__79 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .O(I0101_out));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_2__58 
       (.I0(D),
        .I1(\Using_FPGA.Native_1 ),
        .O(\EX_Op1_reg[6] ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_267
   (D,
    I097_out,
    \EX_Op1_reg[7] ,
    sync_reset,
    of_pc_ii_24,
    Clk,
    Q,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 );
  output [0:0]D;
  output I097_out;
  output \EX_Op1_reg[7] ;
  input sync_reset;
  input of_pc_ii_24;
  input Clk;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;

  wire Clk;
  wire [0:0]D;
  wire \EX_Op1_reg[7] ;
  wire I097_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_24;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_24),
        .Q(D),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__80 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .O(I097_out));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_2__57 
       (.I0(D),
        .I1(\Using_FPGA.Native_1 ),
        .O(\EX_Op1_reg[7] ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_269
   (D,
    I093_out,
    \EX_Op1_reg[8] ,
    sync_reset,
    of_pc_ii_23,
    Clk,
    Q,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 );
  output [0:0]D;
  output I093_out;
  output \EX_Op1_reg[8] ;
  input sync_reset;
  input of_pc_ii_23;
  input Clk;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;

  wire Clk;
  wire [0:0]D;
  wire \EX_Op1_reg[8] ;
  wire I093_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_23;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_23),
        .Q(D),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__81 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .O(I093_out));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_2__56 
       (.I0(D),
        .I1(\Using_FPGA.Native_1 ),
        .O(\EX_Op1_reg[8] ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_271
   (D,
    I089_out,
    \EX_Op1_reg[9] ,
    sync_reset,
    of_pc_ii_22,
    Clk,
    Q,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 );
  output [0:0]D;
  output I089_out;
  output \EX_Op1_reg[9] ;
  input sync_reset;
  input of_pc_ii_22;
  input Clk;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;

  wire Clk;
  wire [0:0]D;
  wire \EX_Op1_reg[9] ;
  wire I089_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_22;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_22),
        .Q(D),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__82 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .O(I089_out));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_2__55 
       (.I0(D),
        .I1(\Using_FPGA.Native_1 ),
        .O(\EX_Op1_reg[9] ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_304
   (\wb_MSR_i_reg[28] ,
    \WB_MEM_Result_reg[28] ,
    \wb_MSR_i_reg[28]_0 ,
    sync_reset,
    \Using_FPGA.Native_0 ,
    Clk,
    mem_sel_msr,
    mem_ex_result,
    wb_piperun,
    \wb_MSR_i_reg[28]_1 );
  output \wb_MSR_i_reg[28] ;
  output [0:0]\WB_MEM_Result_reg[28] ;
  output \wb_MSR_i_reg[28]_0 ;
  input sync_reset;
  input \Using_FPGA.Native_0 ;
  input Clk;
  input mem_sel_msr;
  input [0:0]mem_ex_result;
  input wb_piperun;
  input [0:0]\wb_MSR_i_reg[28]_1 ;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\WB_MEM_Result_reg[28] ;
  wire [0:0]mem_ex_result;
  wire mem_sel_msr;
  wire sync_reset;
  wire \wb_MSR_i_reg[28] ;
  wire \wb_MSR_i_reg[28]_0 ;
  wire [0:0]\wb_MSR_i_reg[28]_1 ;
  wire wb_piperun;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(\Using_FPGA.Native_0 ),
        .Q(\wb_MSR_i_reg[28] ),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \WB_MEM_Result[28]_i_1 
       (.I0(\wb_MSR_i_reg[28] ),
        .I1(mem_sel_msr),
        .I2(mem_ex_result),
        .O(\WB_MEM_Result_reg[28] ));
  LUT3 #(
    .INIT(8'hB8)) 
    \wb_MSR_i[28]_i_1 
       (.I0(\wb_MSR_i_reg[28] ),
        .I1(wb_piperun),
        .I2(\wb_MSR_i_reg[28]_1 ),
        .O(\wb_MSR_i_reg[28]_0 ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_305
   (\wb_MSR_i_reg[29] ,
    \WB_MEM_Result_reg[0] ,
    \wb_MSR_i_reg[29]_0 ,
    sync_reset,
    \Using_FPGA.Native_0 ,
    Clk,
    mem_sel_msr,
    mem_ex_result,
    wb_piperun,
    \wb_MSR_i_reg[29]_1 );
  output \wb_MSR_i_reg[29] ;
  output [1:0]\WB_MEM_Result_reg[0] ;
  output \wb_MSR_i_reg[29]_0 ;
  input sync_reset;
  input \Using_FPGA.Native_0 ;
  input Clk;
  input mem_sel_msr;
  input [1:0]mem_ex_result;
  input wb_piperun;
  input [0:0]\wb_MSR_i_reg[29]_1 ;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire [1:0]\WB_MEM_Result_reg[0] ;
  wire [1:0]mem_ex_result;
  wire mem_sel_msr;
  wire sync_reset;
  wire \wb_MSR_i_reg[29] ;
  wire \wb_MSR_i_reg[29]_0 ;
  wire [0:0]\wb_MSR_i_reg[29]_1 ;
  wire wb_piperun;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(\Using_FPGA.Native_0 ),
        .Q(\wb_MSR_i_reg[29] ),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \WB_MEM_Result[0]_i_2 
       (.I0(\wb_MSR_i_reg[29] ),
        .I1(mem_sel_msr),
        .I2(mem_ex_result[1]),
        .O(\WB_MEM_Result_reg[0] [1]));
  LUT3 #(
    .INIT(8'hB8)) 
    \WB_MEM_Result[29]_i_1 
       (.I0(\wb_MSR_i_reg[29] ),
        .I1(mem_sel_msr),
        .I2(mem_ex_result[0]),
        .O(\WB_MEM_Result_reg[0] [0]));
  LUT3 #(
    .INIT(8'hB8)) 
    \wb_MSR_i[29]_i_1 
       (.I0(\wb_MSR_i_reg[29] ),
        .I1(wb_piperun),
        .I2(\wb_MSR_i_reg[29]_1 ),
        .O(\wb_MSR_i_reg[29]_0 ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_306
   (\wb_MSR_i_reg[30] ,
    \WB_MEM_Result_reg[30] ,
    \wb_MSR_i_reg[30]_0 ,
    sync_reset,
    \Using_FPGA.Native_0 ,
    Clk,
    mem_sel_msr,
    mem_ex_result,
    wb_piperun,
    \wb_MSR_i_reg[30]_1 );
  output \wb_MSR_i_reg[30] ;
  output [0:0]\WB_MEM_Result_reg[30] ;
  output \wb_MSR_i_reg[30]_0 ;
  input sync_reset;
  input \Using_FPGA.Native_0 ;
  input Clk;
  input mem_sel_msr;
  input [0:0]mem_ex_result;
  input wb_piperun;
  input [0:0]\wb_MSR_i_reg[30]_1 ;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\WB_MEM_Result_reg[30] ;
  wire [0:0]mem_ex_result;
  wire mem_sel_msr;
  wire sync_reset;
  wire \wb_MSR_i_reg[30] ;
  wire \wb_MSR_i_reg[30]_0 ;
  wire [0:0]\wb_MSR_i_reg[30]_1 ;
  wire wb_piperun;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(\Using_FPGA.Native_0 ),
        .Q(\wb_MSR_i_reg[30] ),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \WB_MEM_Result[30]_i_1 
       (.I0(\wb_MSR_i_reg[30] ),
        .I1(mem_sel_msr),
        .I2(mem_ex_result),
        .O(\WB_MEM_Result_reg[30] ));
  LUT3 #(
    .INIT(8'hB8)) 
    \wb_MSR_i[30]_i_1 
       (.I0(\wb_MSR_i_reg[30] ),
        .I1(wb_piperun),
        .I2(\wb_MSR_i_reg[30]_1 ),
        .O(\wb_MSR_i_reg[30]_0 ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_307
   (ex_MSR,
    \Using_FPGA.Native_0 ,
    sync_reset,
    ex_move_to_MSR_instr_reg,
    Clk,
    mem_valid_reg,
    \Using_FPGA.Native_1 );
  output [0:0]ex_MSR;
  output \Using_FPGA.Native_0 ;
  input sync_reset;
  input ex_move_to_MSR_instr_reg;
  input Clk;
  input mem_valid_reg;
  input \Using_FPGA.Native_1 ;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]ex_MSR;
  wire ex_move_to_MSR_instr_reg;
  wire mem_valid_reg;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(ex_move_to_MSR_instr_reg),
        .Q(ex_MSR),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__173 
       (.I0(ex_MSR),
        .I1(mem_valid_reg),
        .I2(\Using_FPGA.Native_1 ),
        .O(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_308
   (ex_MSR,
    \Using_FPGA.Native_0 ,
    sync_reset,
    \Using_LWX_SWX_instr.ex_reservation_reg ,
    Clk,
    mem_valid_reg,
    \Using_FPGA.Native_1 );
  output [0:0]ex_MSR;
  output \Using_FPGA.Native_0 ;
  input sync_reset;
  input \Using_LWX_SWX_instr.ex_reservation_reg ;
  input Clk;
  input mem_valid_reg;
  input \Using_FPGA.Native_1 ;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_LWX_SWX_instr.ex_reservation_reg ;
  wire [0:0]ex_MSR;
  wire mem_valid_reg;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(\Using_LWX_SWX_instr.ex_reservation_reg ),
        .Q(ex_MSR),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__174 
       (.I0(ex_MSR),
        .I1(mem_valid_reg),
        .I2(\Using_FPGA.Native_1 ),
        .O(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module MB_FDR_309
   (ex_MSR,
    \Using_FPGA.Native_0 ,
    sync_reset,
    \EX_Op1_reg[30] ,
    Clk,
    mem_valid_reg,
    \Using_FPGA.Native_1 );
  output [0:0]ex_MSR;
  output \Using_FPGA.Native_0 ;
  input sync_reset;
  input \EX_Op1_reg[30] ;
  input Clk;
  input mem_valid_reg;
  input \Using_FPGA.Native_1 ;

  wire Clk;
  wire \EX_Op1_reg[30] ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]ex_MSR;
  wire mem_valid_reg;
  wire sync_reset;

  (* XILINX_LEGACY_PRIM = "FDR" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(\EX_Op1_reg[30] ),
        .Q(ex_MSR),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__175 
       (.I0(ex_MSR),
        .I1(mem_valid_reg),
        .I2(\Using_FPGA.Native_1 ),
        .O(\Using_FPGA.Native_0 ));
endmodule

module MB_FDS
   (if_sel_input,
    I0169_out,
    \Using_FPGA.Native_0 ,
    I0165_out,
    I0161_out,
    I0157_out,
    I0153_out,
    I0149_out,
    I0145_out,
    I0141_out,
    I0137_out,
    I0133_out,
    I0129_out,
    I0125_out,
    I0121_out,
    I0117_out,
    I0113_out,
    I0109_out,
    I0105_out,
    I0101_out,
    I097_out,
    I093_out,
    I089_out,
    I085_out,
    I081_out,
    I077_out,
    I073_out,
    I069_out,
    I065_out,
    I061_out,
    I057_out,
    I053_out,
    I049_out,
    I045_out,
    I037_out,
    I033_out,
    I029_out,
    I025_out,
    I021_out,
    I017_out,
    I013_out,
    I09_out,
    I05_out,
    I0_0,
    sync_reset,
    sel_input_i_0,
    Clk,
    in,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 ,
    \Using_FPGA.Native_5 ,
    \Using_FPGA.Native_6 ,
    \Using_FPGA.Native_7 ,
    D,
    \Using_FPGA.Native_8 ,
    \Using_FPGA.Native_9 ,
    \Using_FPGA.Native_10 ,
    \Using_FPGA.Native_11 ,
    \Using_FPGA.Native_12 ,
    of_predecode,
    \Serial_Dbg_Intf.if_debug_ready_i_reg ,
    \Performace_Debug_Control.dbg_freeze_nohalt_reg ,
    wb_Halted,
    IReady,
    if_missed_fetch_reg);
  output [0:0]if_sel_input;
  output I0169_out;
  output \Using_FPGA.Native_0 ;
  output I0165_out;
  output I0161_out;
  output I0157_out;
  output I0153_out;
  output I0149_out;
  output I0145_out;
  output I0141_out;
  output I0137_out;
  output I0133_out;
  output I0129_out;
  output I0125_out;
  output I0121_out;
  output I0117_out;
  output I0113_out;
  output I0109_out;
  output I0105_out;
  output I0101_out;
  output I097_out;
  output I093_out;
  output I089_out;
  output I085_out;
  output I081_out;
  output I077_out;
  output I073_out;
  output I069_out;
  output I065_out;
  output I061_out;
  output I057_out;
  output I053_out;
  output I049_out;
  output I045_out;
  output I037_out;
  output I033_out;
  output I029_out;
  output I025_out;
  output I021_out;
  output I017_out;
  output I013_out;
  output I09_out;
  output I05_out;
  output I0_0;
  input sync_reset;
  input sel_input_i_0;
  input Clk;
  input [31:0]in;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input \Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;
  input \Using_FPGA.Native_5 ;
  input \Using_FPGA.Native_6 ;
  input \Using_FPGA.Native_7 ;
  input [0:0]D;
  input \Using_FPGA.Native_8 ;
  input \Using_FPGA.Native_9 ;
  input \Using_FPGA.Native_10 ;
  input [14:0]\Using_FPGA.Native_11 ;
  input [5:0]\Using_FPGA.Native_12 ;
  input [9:0]of_predecode;
  input \Serial_Dbg_Intf.if_debug_ready_i_reg ;
  input \Performace_Debug_Control.dbg_freeze_nohalt_reg ;
  input wb_Halted;
  input IReady;
  input if_missed_fetch_reg;

  wire Clk;
  wire [0:0]D;
  wire I0101_out;
  wire I0105_out;
  wire I0109_out;
  wire I0113_out;
  wire I0117_out;
  wire I0121_out;
  wire I0125_out;
  wire I0129_out;
  wire I0133_out;
  wire I0137_out;
  wire I013_out;
  wire I0141_out;
  wire I0145_out;
  wire I0149_out;
  wire I0153_out;
  wire I0157_out;
  wire I0161_out;
  wire I0165_out;
  wire I0169_out;
  wire I017_out;
  wire I021_out;
  wire I025_out;
  wire I029_out;
  wire I033_out;
  wire I037_out;
  wire I045_out;
  wire I049_out;
  wire I053_out;
  wire I057_out;
  wire I05_out;
  wire I061_out;
  wire I065_out;
  wire I069_out;
  wire I073_out;
  wire I077_out;
  wire I081_out;
  wire I085_out;
  wire I089_out;
  wire I093_out;
  wire I097_out;
  wire I09_out;
  wire I0_0;
  wire IReady;
  wire \Performace_Debug_Control.dbg_freeze_nohalt_reg ;
  wire \Serial_Dbg_Intf.if_debug_ready_i_reg ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_10 ;
  wire [14:0]\Using_FPGA.Native_11 ;
  wire [5:0]\Using_FPGA.Native_12 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;
  wire \Using_FPGA.Native_5 ;
  wire \Using_FPGA.Native_6 ;
  wire \Using_FPGA.Native_7 ;
  wire \Using_FPGA.Native_8 ;
  wire \Using_FPGA.Native_9 ;
  wire if_missed_fetch_reg;
  wire [0:0]if_sel_input;
  wire [31:0]in;
  wire [9:0]of_predecode;
  wire sel_input_i_0;
  wire sync_reset;
  wire wb_Halted;

  (* XILINX_LEGACY_PRIM = "FDS" *) 
  (* box_type = "PRIMITIVE" *) 
  FDSE #(
    .INIT(1'b1)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(sel_input_i_0),
        .Q(if_sel_input),
        .S(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__30 
       (.I0(in[31]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_1 ),
        .O(I0169_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__31 
       (.I0(in[30]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_2 ),
        .O(I0165_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__32 
       (.I0(in[29]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_3 ),
        .O(I0161_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__33 
       (.I0(in[28]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_4 ),
        .O(I0157_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__34 
       (.I0(in[27]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_5 ),
        .O(I0153_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__35 
       (.I0(in[26]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_6 ),
        .O(I0149_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__36 
       (.I0(in[25]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_7 ),
        .O(I0145_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__37 
       (.I0(in[24]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .O(I0141_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__38 
       (.I0(in[23]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_8 ),
        .O(I0137_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__39 
       (.I0(in[22]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_9 ),
        .O(I0133_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__40 
       (.I0(in[21]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_10 ),
        .O(I0129_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__41 
       (.I0(in[9]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_11 [14]),
        .O(I0125_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__42 
       (.I0(in[8]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_11 [13]),
        .O(I0121_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__43 
       (.I0(in[7]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_11 [12]),
        .O(I0117_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__44 
       (.I0(in[6]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_12 [5]),
        .O(I0113_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__45 
       (.I0(in[5]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_12 [4]),
        .O(I0109_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__46 
       (.I0(in[4]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_12 [3]),
        .O(I0105_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__47 
       (.I0(in[3]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_12 [2]),
        .O(I0101_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__48 
       (.I0(in[2]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_12 [1]),
        .O(I097_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__49 
       (.I0(in[1]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_12 [0]),
        .O(I093_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__50 
       (.I0(in[0]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_11 [11]),
        .O(I089_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__51 
       (.I0(in[20]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_11 [10]),
        .O(I085_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__52 
       (.I0(in[19]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_11 [9]),
        .O(I081_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__53 
       (.I0(in[18]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_11 [8]),
        .O(I077_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__54 
       (.I0(in[17]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_11 [7]),
        .O(I073_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__55 
       (.I0(in[16]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_11 [6]),
        .O(I069_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__56 
       (.I0(in[15]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_11 [5]),
        .O(I065_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__57 
       (.I0(in[14]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_11 [4]),
        .O(I061_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__58 
       (.I0(in[13]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_11 [3]),
        .O(I057_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__59 
       (.I0(in[12]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_11 [2]),
        .O(I053_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__60 
       (.I0(in[11]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_11 [1]),
        .O(I049_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__61 
       (.I0(in[10]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_11 [0]),
        .O(I045_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__63 
       (.I0(in[9]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(of_predecode[9]),
        .O(I037_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__64 
       (.I0(in[8]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(of_predecode[8]),
        .O(I033_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__65 
       (.I0(in[7]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(of_predecode[7]),
        .O(I029_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__66 
       (.I0(in[6]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(of_predecode[6]),
        .O(I025_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__67 
       (.I0(in[5]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(of_predecode[5]),
        .O(I021_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__68 
       (.I0(in[4]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(of_predecode[4]),
        .O(I017_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__69 
       (.I0(in[3]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(of_predecode[3]),
        .O(I013_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__70 
       (.I0(in[2]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(of_predecode[2]),
        .O(I09_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__71 
       (.I0(in[1]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(of_predecode[1]),
        .O(I05_out));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__72 
       (.I0(in[0]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(of_predecode[0]),
        .O(I0_0));
  LUT6 #(
    .INIT(64'h00000000888A8888)) 
    \Using_FPGA.Native_i_3 
       (.I0(if_sel_input),
        .I1(\Serial_Dbg_Intf.if_debug_ready_i_reg ),
        .I2(\Performace_Debug_Control.dbg_freeze_nohalt_reg ),
        .I3(wb_Halted),
        .I4(IReady),
        .I5(if_missed_fetch_reg),
        .O(\Using_FPGA.Native_0 ));
endmodule

module MB_LUT4
   (S,
    Q,
    \EX_ALU_Op_reg[0] ,
    EX_CMP_Op_reg,
    alu_AddSub_1);
  output S;
  input [0:0]Q;
  input [0:0]\EX_ALU_Op_reg[0] ;
  input EX_CMP_Op_reg;
  input alu_AddSub_1;

  wire EX_CMP_Op_reg;
  wire [0:0]Q;
  wire S;
  wire alu_AddSub_1;

  (* box_type = "PRIMITIVE" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native 
       (.I0(Q),
        .I1(EX_CMP_Op_reg),
        .I2(alu_AddSub_1),
        .O(S));
endmodule

module MB_LUT6_2
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[9] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[9] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[9] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD525 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[9] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2_523
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[8] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[8] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[8] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD524 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[8] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2_525
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[7] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[7] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[7] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD523 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[7] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2_527
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[6] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[6] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[6] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD522 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[6] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2_529
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[5] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[5] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[5] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD521 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[5] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2_531
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[4] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[4] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[4] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD520 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[4] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2_533
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[3] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[3] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[3] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD519 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[3] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2_535
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[31] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[31] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[31] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD518 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[31] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2_537
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[30] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[30] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[30] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD517 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[30] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2_539
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[2] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[2] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[2] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD516 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[2] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2_541
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[29] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[29] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[29] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD515 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[29] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2_543
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[28] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[28] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[28] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD514 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[28] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2_545
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[27] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[27] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[27] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD513 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[27] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2_547
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[26] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[26] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[26] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD512 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[26] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2_549
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[25] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[25] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[25] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD511 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[25] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2_551
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[24] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[24] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[24] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD510 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[24] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2_553
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[23] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[23] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[23] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD509 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[23] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2_555
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[22] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[22] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[22] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD508 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[22] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2_557
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[21] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[21] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[21] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD507 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[21] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2_559
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[20] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[20] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[20] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD506 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[20] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2_561
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[1] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[1] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[1] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD505 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[1] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2_563
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[19] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[19] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[19] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD504 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[19] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2_565
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[18] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[18] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[18] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD503 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[18] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2_567
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[17] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[17] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[17] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD502 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[17] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2_569
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[16] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[16] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[16] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD501 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[16] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2_571
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[15] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[15] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[15] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD500 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[15] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2_573
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[14] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[14] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[14] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD499 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[14] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2_575
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[13] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[13] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[13] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD498 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[13] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2_577
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[12] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[12] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[12] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD497 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[12] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2_579
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[11] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[11] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[11] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD496 \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[11] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2_581
   (DI,
    S,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[10] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[10] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[10] ;
  wire [0:0]Q;
  wire S;

  (* INIT = "64'h607AA67800008888" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_UNIQ_BASE_ \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[10] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2__parameterized1
   (muxcy_di,
    muxcy_sel);
  output muxcy_di;
  output muxcy_sel;

  wire \<const0> ;
  wire \<const1> ;

  assign muxcy_di = \<const0> ;
  assign muxcy_sel = \<const1> ;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2__parameterized3
   (\Using_FPGA.Native_0 ,
    Y,
    I041_out,
    I139_out,
    in,
    Instr,
    LOCKSTEP_Master_Out,
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram ,
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 );
  output \Using_FPGA.Native_0 ;
  output [0:0]Y;
  output I041_out;
  output I139_out;
  output [0:0]in;
  input [1:0]Instr;
  input [2:0]LOCKSTEP_Master_Out;
  input \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram ;
  input \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0 ;
  input \Using_FPGA.Native_1 ;
  input [0:0]\Using_FPGA.Native_2 ;
  input [0:0]\Using_FPGA.Native_3 ;
  input [0:0]\Using_FPGA.Native_4 ;

  wire \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram ;
  wire \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0 ;
  wire I041_out;
  wire I139_out;
  wire [1:0]Instr;
  wire [2:0]LOCKSTEP_Master_Out;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]\Using_FPGA.Native_2 ;
  wire [0:0]\Using_FPGA.Native_3 ;
  wire [0:0]\Using_FPGA.Native_4 ;
  wire [0:0]Y;
  wire [0:0]in;

  (* INIT = "64'hFF00F0F0CCCCAAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD573 \Using_FPGA.Native 
       (.I0(Instr[1]),
        .I1(LOCKSTEP_Master_Out[1]),
        .I2(Instr[0]),
        .I3(LOCKSTEP_Master_Out[0]),
        .I4(LOCKSTEP_Master_Out[2]),
        .I5(1'b1),
        .O5(\Using_FPGA.Native_0 ),
        .O6(Y));
  LUT5 #(
    .INIT(32'h80FF8000)) 
    \Using_FPGA.Native_i_1__62 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram ),
        .I2(\DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0 ),
        .I3(\Using_FPGA.Native_1 ),
        .I4(\Using_FPGA.Native_2 ),
        .O(I041_out));
  LUT5 #(
    .INIT(32'h80FF8000)) 
    \Using_FPGA.Native_i_2__79 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram ),
        .I2(\DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0 ),
        .I3(\Using_FPGA.Native_3 ),
        .I4(\Using_FPGA.Native_4 ),
        .O(I139_out));
  LUT3 #(
    .INIT(8'h80)) 
    \ibuffer_reg[3][10]_srl4_i_1 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram ),
        .I2(\DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0 ),
        .O(in));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2__parameterized3_10
   (Y,
    Instr,
    LOCKSTEP_Master_Out);
  output [1:0]Y;
  input [1:0]Instr;
  input [2:0]LOCKSTEP_Master_Out;

  wire [1:0]Instr;
  wire [2:0]LOCKSTEP_Master_Out;
  wire [1:0]Y;

  (* INIT = "64'hFF00F0F0CCCCAAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD581 \Using_FPGA.Native 
       (.I0(Instr[1]),
        .I1(LOCKSTEP_Master_Out[1]),
        .I2(Instr[0]),
        .I3(LOCKSTEP_Master_Out[0]),
        .I4(LOCKSTEP_Master_Out[2]),
        .I5(1'b1),
        .O5(Y[1]),
        .O6(Y[0]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2__parameterized3_11
   (Y,
    Instr,
    LOCKSTEP_Master_Out);
  output [1:0]Y;
  input [1:0]Instr;
  input [2:0]LOCKSTEP_Master_Out;

  wire [1:0]Instr;
  wire [2:0]LOCKSTEP_Master_Out;
  wire [1:0]Y;

  (* INIT = "64'hFF00F0F0CCCCAAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD582 \Using_FPGA.Native 
       (.I0(Instr[1]),
        .I1(LOCKSTEP_Master_Out[1]),
        .I2(Instr[0]),
        .I3(LOCKSTEP_Master_Out[0]),
        .I4(LOCKSTEP_Master_Out[2]),
        .I5(1'b1),
        .O5(Y[1]),
        .O6(Y[0]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2__parameterized3_12
   (Y,
    Instr,
    LOCKSTEP_Master_Out);
  output [1:0]Y;
  input [1:0]Instr;
  input [2:0]LOCKSTEP_Master_Out;

  wire [1:0]Instr;
  wire [2:0]LOCKSTEP_Master_Out;
  wire [1:0]Y;

  (* INIT = "64'hFF00F0F0CCCCAAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD583 \Using_FPGA.Native 
       (.I0(Instr[1]),
        .I1(LOCKSTEP_Master_Out[1]),
        .I2(Instr[0]),
        .I3(LOCKSTEP_Master_Out[0]),
        .I4(LOCKSTEP_Master_Out[2]),
        .I5(1'b1),
        .O5(Y[1]),
        .O6(Y[0]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2__parameterized3_13
   (Y,
    Instr,
    LOCKSTEP_Master_Out);
  output [1:0]Y;
  input [1:0]Instr;
  input [2:0]LOCKSTEP_Master_Out;

  wire [1:0]Instr;
  wire [2:0]LOCKSTEP_Master_Out;
  wire [1:0]Y;

  (* INIT = "64'hFF00F0F0CCCCAAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD584 \Using_FPGA.Native 
       (.I0(Instr[1]),
        .I1(LOCKSTEP_Master_Out[1]),
        .I2(Instr[0]),
        .I3(LOCKSTEP_Master_Out[0]),
        .I4(LOCKSTEP_Master_Out[2]),
        .I5(1'b1),
        .O5(Y[1]),
        .O6(Y[0]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2__parameterized3_14
   (Y,
    Instr,
    LOCKSTEP_Master_Out);
  output [1:0]Y;
  input [1:0]Instr;
  input [2:0]LOCKSTEP_Master_Out;

  wire [1:0]Instr;
  wire [2:0]LOCKSTEP_Master_Out;
  wire [1:0]Y;

  (* INIT = "64'hFF00F0F0CCCCAAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD585 \Using_FPGA.Native 
       (.I0(Instr[1]),
        .I1(LOCKSTEP_Master_Out[1]),
        .I2(Instr[0]),
        .I3(LOCKSTEP_Master_Out[0]),
        .I4(LOCKSTEP_Master_Out[2]),
        .I5(1'b1),
        .O5(Y[1]),
        .O6(Y[0]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2__parameterized3_15
   (Y,
    Instr,
    LOCKSTEP_Master_Out);
  output [1:0]Y;
  input [1:0]Instr;
  input [2:0]LOCKSTEP_Master_Out;

  wire [1:0]Instr;
  wire [2:0]LOCKSTEP_Master_Out;
  wire [1:0]Y;

  (* INIT = "64'hFF00F0F0CCCCAAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD586 \Using_FPGA.Native 
       (.I0(Instr[1]),
        .I1(LOCKSTEP_Master_Out[1]),
        .I2(Instr[0]),
        .I3(LOCKSTEP_Master_Out[0]),
        .I4(LOCKSTEP_Master_Out[2]),
        .I5(1'b1),
        .O5(Y[1]),
        .O6(Y[0]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2__parameterized3_16
   (Y,
    Instr,
    LOCKSTEP_Master_Out);
  output [1:0]Y;
  input [1:0]Instr;
  input [2:0]LOCKSTEP_Master_Out;

  wire [1:0]Instr;
  wire [2:0]LOCKSTEP_Master_Out;
  wire [1:0]Y;

  (* INIT = "64'hFF00F0F0CCCCAAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD587 \Using_FPGA.Native 
       (.I0(Instr[1]),
        .I1(LOCKSTEP_Master_Out[1]),
        .I2(Instr[0]),
        .I3(LOCKSTEP_Master_Out[0]),
        .I4(LOCKSTEP_Master_Out[2]),
        .I5(1'b1),
        .O5(Y[1]),
        .O6(Y[0]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2__parameterized3_17
   (Y,
    Instr,
    LOCKSTEP_Master_Out);
  output [1:0]Y;
  input [1:0]Instr;
  input [2:0]LOCKSTEP_Master_Out;

  wire [1:0]Instr;
  wire [2:0]LOCKSTEP_Master_Out;
  wire [1:0]Y;

  (* INIT = "64'hFF00F0F0CCCCAAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD588 \Using_FPGA.Native 
       (.I0(Instr[1]),
        .I1(LOCKSTEP_Master_Out[1]),
        .I2(Instr[0]),
        .I3(LOCKSTEP_Master_Out[0]),
        .I4(LOCKSTEP_Master_Out[2]),
        .I5(1'b1),
        .O5(Y[1]),
        .O6(Y[0]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2__parameterized3_3
   (Y,
    Instr,
    LOCKSTEP_Master_Out);
  output [1:0]Y;
  input [1:0]Instr;
  input [2:0]LOCKSTEP_Master_Out;

  wire [1:0]Instr;
  wire [2:0]LOCKSTEP_Master_Out;
  wire [1:0]Y;

  (* INIT = "64'hFF00F0F0CCCCAAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD574 \Using_FPGA.Native 
       (.I0(Instr[1]),
        .I1(LOCKSTEP_Master_Out[1]),
        .I2(Instr[0]),
        .I3(LOCKSTEP_Master_Out[0]),
        .I4(LOCKSTEP_Master_Out[2]),
        .I5(1'b1),
        .O5(Y[1]),
        .O6(Y[0]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2__parameterized3_4
   (Y,
    Instr,
    LOCKSTEP_Master_Out);
  output [1:0]Y;
  input [1:0]Instr;
  input [2:0]LOCKSTEP_Master_Out;

  wire [1:0]Instr;
  wire [2:0]LOCKSTEP_Master_Out;
  wire [1:0]Y;

  (* INIT = "64'hFF00F0F0CCCCAAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD575 \Using_FPGA.Native 
       (.I0(Instr[1]),
        .I1(LOCKSTEP_Master_Out[1]),
        .I2(Instr[0]),
        .I3(LOCKSTEP_Master_Out[0]),
        .I4(LOCKSTEP_Master_Out[2]),
        .I5(1'b1),
        .O5(Y[1]),
        .O6(Y[0]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2__parameterized3_5
   (Y,
    Instr,
    LOCKSTEP_Master_Out);
  output [1:0]Y;
  input [1:0]Instr;
  input [2:0]LOCKSTEP_Master_Out;

  wire [1:0]Instr;
  wire [2:0]LOCKSTEP_Master_Out;
  wire [1:0]Y;

  (* INIT = "64'hFF00F0F0CCCCAAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD576 \Using_FPGA.Native 
       (.I0(Instr[1]),
        .I1(LOCKSTEP_Master_Out[1]),
        .I2(Instr[0]),
        .I3(LOCKSTEP_Master_Out[0]),
        .I4(LOCKSTEP_Master_Out[2]),
        .I5(1'b1),
        .O5(Y[1]),
        .O6(Y[0]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2__parameterized3_6
   (Y,
    Instr,
    LOCKSTEP_Master_Out);
  output [1:0]Y;
  input [1:0]Instr;
  input [2:0]LOCKSTEP_Master_Out;

  wire [1:0]Instr;
  wire [2:0]LOCKSTEP_Master_Out;
  wire [1:0]Y;

  (* INIT = "64'hFF00F0F0CCCCAAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD577 \Using_FPGA.Native 
       (.I0(Instr[1]),
        .I1(LOCKSTEP_Master_Out[1]),
        .I2(Instr[0]),
        .I3(LOCKSTEP_Master_Out[0]),
        .I4(LOCKSTEP_Master_Out[2]),
        .I5(1'b1),
        .O5(Y[1]),
        .O6(Y[0]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2__parameterized3_7
   (Y,
    Instr,
    LOCKSTEP_Master_Out);
  output [1:0]Y;
  input [1:0]Instr;
  input [2:0]LOCKSTEP_Master_Out;

  wire [1:0]Instr;
  wire [2:0]LOCKSTEP_Master_Out;
  wire [1:0]Y;

  (* INIT = "64'hFF00F0F0CCCCAAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD578 \Using_FPGA.Native 
       (.I0(Instr[1]),
        .I1(LOCKSTEP_Master_Out[1]),
        .I2(Instr[0]),
        .I3(LOCKSTEP_Master_Out[0]),
        .I4(LOCKSTEP_Master_Out[2]),
        .I5(1'b1),
        .O5(Y[1]),
        .O6(Y[0]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2__parameterized3_8
   (Y,
    Instr,
    LOCKSTEP_Master_Out);
  output [1:0]Y;
  input [1:0]Instr;
  input [2:0]LOCKSTEP_Master_Out;

  wire [1:0]Instr;
  wire [2:0]LOCKSTEP_Master_Out;
  wire [1:0]Y;

  (* INIT = "64'hFF00F0F0CCCCAAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD579 \Using_FPGA.Native 
       (.I0(Instr[1]),
        .I1(LOCKSTEP_Master_Out[1]),
        .I2(Instr[0]),
        .I3(LOCKSTEP_Master_Out[0]),
        .I4(LOCKSTEP_Master_Out[2]),
        .I5(1'b1),
        .O5(Y[1]),
        .O6(Y[0]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2__parameterized3_9
   (Y,
    Instr,
    LOCKSTEP_Master_Out);
  output [1:0]Y;
  input [1:0]Instr;
  input [2:0]LOCKSTEP_Master_Out;

  wire [1:0]Instr;
  wire [2:0]LOCKSTEP_Master_Out;
  wire [1:0]Y;

  (* INIT = "64'hFF00F0F0CCCCAAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD580 \Using_FPGA.Native 
       (.I0(Instr[1]),
        .I1(LOCKSTEP_Master_Out[1]),
        .I2(Instr[0]),
        .I3(LOCKSTEP_Master_Out[0]),
        .I4(LOCKSTEP_Master_Out[2]),
        .I5(1'b1),
        .O5(Y[1]),
        .O6(Y[0]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2__parameterized5
   (wb_PC_II_31,
    addr_AddSub_31,
    \Using_FPGA.Native_0 ,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[0] ,
    MEM_WB_Sel_Mem_PC);
  output wb_PC_II_31;
  output addr_AddSub_31;
  input [0:0]\Using_FPGA.Native_0 ;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[0] ;
  input MEM_WB_Sel_Mem_PC;

  wire MEM_WB_Sel_Mem_PC;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire addr_AddSub_31;
  wire [0:0]\mem_pc_i_reg[0] ;
  wire wb_PC_II_31;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD541 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[0] ),
        .I4(MEM_WB_Sel_Mem_PC),
        .I5(1'b1),
        .O5(wb_PC_II_31),
        .O6(addr_AddSub_31));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2__parameterized5_312
   (wb_PC_II_21,
    S,
    \Using_FPGA.Native_0 ,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[10] ,
    MEM_WB_Sel_Mem_PC);
  output wb_PC_II_21;
  output S;
  input \Using_FPGA.Native_0 ;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[10] ;
  input MEM_WB_Sel_Mem_PC;

  wire MEM_WB_Sel_Mem_PC;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\mem_pc_i_reg[10] ;
  wire wb_PC_II_21;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD542 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[10] ),
        .I4(MEM_WB_Sel_Mem_PC),
        .I5(1'b1),
        .O5(wb_PC_II_21),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2__parameterized5_315
   (wb_PC_II_20,
    S,
    \Using_FPGA.Native_0 ,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[11] ,
    MEM_WB_Sel_Mem_PC);
  output wb_PC_II_20;
  output S;
  input \Using_FPGA.Native_0 ;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[11] ;
  input MEM_WB_Sel_Mem_PC;

  wire MEM_WB_Sel_Mem_PC;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\mem_pc_i_reg[11] ;
  wire wb_PC_II_20;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD543 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[11] ),
        .I4(MEM_WB_Sel_Mem_PC),
        .I5(1'b1),
        .O5(wb_PC_II_20),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2__parameterized5_318
   (wb_PC_II_19,
    S,
    \Using_FPGA.Native_0 ,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[12] ,
    MEM_WB_Sel_Mem_PC);
  output wb_PC_II_19;
  output S;
  input \Using_FPGA.Native_0 ;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[12] ;
  input MEM_WB_Sel_Mem_PC;

  wire MEM_WB_Sel_Mem_PC;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\mem_pc_i_reg[12] ;
  wire wb_PC_II_19;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD544 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[12] ),
        .I4(MEM_WB_Sel_Mem_PC),
        .I5(1'b1),
        .O5(wb_PC_II_19),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2__parameterized5_321
   (wb_PC_II_18,
    S,
    \Using_FPGA.Native_0 ,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[13] ,
    MEM_WB_Sel_Mem_PC);
  output wb_PC_II_18;
  output S;
  input \Using_FPGA.Native_0 ;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[13] ;
  input MEM_WB_Sel_Mem_PC;

  wire MEM_WB_Sel_Mem_PC;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\mem_pc_i_reg[13] ;
  wire wb_PC_II_18;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD545 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[13] ),
        .I4(MEM_WB_Sel_Mem_PC),
        .I5(1'b1),
        .O5(wb_PC_II_18),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2__parameterized5_324
   (wb_PC_II_17,
    S,
    \Using_FPGA.Native_0 ,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[14] ,
    MEM_WB_Sel_Mem_PC);
  output wb_PC_II_17;
  output S;
  input \Using_FPGA.Native_0 ;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[14] ;
  input MEM_WB_Sel_Mem_PC;

  wire MEM_WB_Sel_Mem_PC;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\mem_pc_i_reg[14] ;
  wire wb_PC_II_17;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD546 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[14] ),
        .I4(MEM_WB_Sel_Mem_PC),
        .I5(1'b1),
        .O5(wb_PC_II_17),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2__parameterized5_327
   (wb_PC_II_16,
    S,
    \Using_FPGA.Native_0 ,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[15] ,
    MEM_WB_Sel_Mem_PC);
  output wb_PC_II_16;
  output S;
  input \Using_FPGA.Native_0 ;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[15] ;
  input MEM_WB_Sel_Mem_PC;

  wire MEM_WB_Sel_Mem_PC;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\mem_pc_i_reg[15] ;
  wire wb_PC_II_16;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD547 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[15] ),
        .I4(MEM_WB_Sel_Mem_PC),
        .I5(1'b1),
        .O5(wb_PC_II_16),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2__parameterized5_330
   (wb_PC_II_15,
    S,
    DI,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[16] ,
    MEM_WB_Sel_Mem_PC);
  output wb_PC_II_15;
  output S;
  input DI;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[16] ;
  input MEM_WB_Sel_Mem_PC;

  wire DI;
  wire MEM_WB_Sel_Mem_PC;
  wire S;
  wire [0:0]\mem_pc_i_reg[16] ;
  wire wb_PC_II_15;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD548 \Using_FPGA.Native 
       (.I0(DI),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[16] ),
        .I4(MEM_WB_Sel_Mem_PC),
        .I5(1'b1),
        .O5(wb_PC_II_15),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2__parameterized5_333
   (wb_PC_II_14,
    S,
    DI,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[17] ,
    MEM_WB_Sel_Mem_PC);
  output wb_PC_II_14;
  output S;
  input DI;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[17] ;
  input MEM_WB_Sel_Mem_PC;

  wire DI;
  wire MEM_WB_Sel_Mem_PC;
  wire S;
  wire [0:0]\mem_pc_i_reg[17] ;
  wire wb_PC_II_14;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD549 \Using_FPGA.Native 
       (.I0(DI),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[17] ),
        .I4(MEM_WB_Sel_Mem_PC),
        .I5(1'b1),
        .O5(wb_PC_II_14),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2__parameterized5_336
   (wb_PC_II_13,
    S,
    DI,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[18] ,
    MEM_WB_Sel_Mem_PC);
  output wb_PC_II_13;
  output S;
  input DI;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[18] ;
  input MEM_WB_Sel_Mem_PC;

  wire DI;
  wire MEM_WB_Sel_Mem_PC;
  wire S;
  wire [0:0]\mem_pc_i_reg[18] ;
  wire wb_PC_II_13;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD550 \Using_FPGA.Native 
       (.I0(DI),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[18] ),
        .I4(MEM_WB_Sel_Mem_PC),
        .I5(1'b1),
        .O5(wb_PC_II_13),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2__parameterized5_339
   (wb_PC_II_12,
    S,
    DI,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[19] ,
    MEM_WB_Sel_Mem_PC);
  output wb_PC_II_12;
  output S;
  input DI;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[19] ;
  input MEM_WB_Sel_Mem_PC;

  wire DI;
  wire MEM_WB_Sel_Mem_PC;
  wire S;
  wire [0:0]\mem_pc_i_reg[19] ;
  wire wb_PC_II_12;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD551 \Using_FPGA.Native 
       (.I0(DI),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[19] ),
        .I4(MEM_WB_Sel_Mem_PC),
        .I5(1'b1),
        .O5(wb_PC_II_12),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2__parameterized5_342
   (wb_PC_II_30,
    S,
    \Using_FPGA.Native_0 ,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[1] ,
    MEM_WB_Sel_Mem_PC);
  output wb_PC_II_30;
  output S;
  input \Using_FPGA.Native_0 ;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[1] ;
  input MEM_WB_Sel_Mem_PC;

  wire MEM_WB_Sel_Mem_PC;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\mem_pc_i_reg[1] ;
  wire wb_PC_II_30;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD552 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[1] ),
        .I4(MEM_WB_Sel_Mem_PC),
        .I5(1'b1),
        .O5(wb_PC_II_30),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2__parameterized5_345
   (wb_PC_II_11,
    S,
    DI,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[20] ,
    MEM_WB_Sel_Mem_PC);
  output wb_PC_II_11;
  output S;
  input DI;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[20] ;
  input MEM_WB_Sel_Mem_PC;

  wire DI;
  wire MEM_WB_Sel_Mem_PC;
  wire S;
  wire [0:0]\mem_pc_i_reg[20] ;
  wire wb_PC_II_11;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD553 \Using_FPGA.Native 
       (.I0(DI),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[20] ),
        .I4(MEM_WB_Sel_Mem_PC),
        .I5(1'b1),
        .O5(wb_PC_II_11),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2__parameterized5_348
   (wb_PC_II_10,
    S,
    DI,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[21] ,
    MEM_WB_Sel_Mem_PC);
  output wb_PC_II_10;
  output S;
  input DI;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[21] ;
  input MEM_WB_Sel_Mem_PC;

  wire DI;
  wire MEM_WB_Sel_Mem_PC;
  wire S;
  wire [0:0]\mem_pc_i_reg[21] ;
  wire wb_PC_II_10;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD554 \Using_FPGA.Native 
       (.I0(DI),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[21] ),
        .I4(MEM_WB_Sel_Mem_PC),
        .I5(1'b1),
        .O5(wb_PC_II_10),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2__parameterized5_351
   (wb_PC_II_9,
    S,
    DI,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[22] ,
    MEM_WB_Sel_Mem_PC);
  output wb_PC_II_9;
  output S;
  input DI;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[22] ;
  input MEM_WB_Sel_Mem_PC;

  wire DI;
  wire MEM_WB_Sel_Mem_PC;
  wire S;
  wire [0:0]\mem_pc_i_reg[22] ;
  wire wb_PC_II_9;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD555 \Using_FPGA.Native 
       (.I0(DI),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[22] ),
        .I4(MEM_WB_Sel_Mem_PC),
        .I5(1'b1),
        .O5(wb_PC_II_9),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2__parameterized5_354
   (wb_PC_II_8,
    S,
    DI,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[23] ,
    MEM_WB_Sel_Mem_PC);
  output wb_PC_II_8;
  output S;
  input DI;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[23] ;
  input MEM_WB_Sel_Mem_PC;

  wire DI;
  wire MEM_WB_Sel_Mem_PC;
  wire S;
  wire [0:0]\mem_pc_i_reg[23] ;
  wire wb_PC_II_8;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD556 \Using_FPGA.Native 
       (.I0(DI),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[23] ),
        .I4(MEM_WB_Sel_Mem_PC),
        .I5(1'b1),
        .O5(wb_PC_II_8),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2__parameterized5_357
   (wb_PC_II_7,
    S,
    \Using_FPGA.Native_0 ,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[24] ,
    MEM_WB_Sel_Mem_PC);
  output wb_PC_II_7;
  output S;
  input \Using_FPGA.Native_0 ;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[24] ;
  input MEM_WB_Sel_Mem_PC;

  wire MEM_WB_Sel_Mem_PC;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\mem_pc_i_reg[24] ;
  wire wb_PC_II_7;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD557 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[24] ),
        .I4(MEM_WB_Sel_Mem_PC),
        .I5(1'b1),
        .O5(wb_PC_II_7),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2__parameterized5_360
   (wb_PC_II_6,
    S,
    \Using_FPGA.Native_0 ,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[25] ,
    MEM_WB_Sel_Mem_PC);
  output wb_PC_II_6;
  output S;
  input \Using_FPGA.Native_0 ;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[25] ;
  input MEM_WB_Sel_Mem_PC;

  wire MEM_WB_Sel_Mem_PC;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\mem_pc_i_reg[25] ;
  wire wb_PC_II_6;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD558 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[25] ),
        .I4(MEM_WB_Sel_Mem_PC),
        .I5(1'b1),
        .O5(wb_PC_II_6),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2__parameterized5_363
   (wb_PC_II_5,
    S,
    \Using_FPGA.Native_0 ,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[26] ,
    MEM_WB_Sel_Mem_PC);
  output wb_PC_II_5;
  output S;
  input \Using_FPGA.Native_0 ;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[26] ;
  input MEM_WB_Sel_Mem_PC;

  wire MEM_WB_Sel_Mem_PC;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\mem_pc_i_reg[26] ;
  wire wb_PC_II_5;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD559 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[26] ),
        .I4(MEM_WB_Sel_Mem_PC),
        .I5(1'b1),
        .O5(wb_PC_II_5),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2__parameterized5_366
   (wb_PC_II_4,
    S,
    \Using_FPGA.Native_0 ,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[27] ,
    MEM_WB_Sel_Mem_PC);
  output wb_PC_II_4;
  output S;
  input \Using_FPGA.Native_0 ;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[27] ;
  input MEM_WB_Sel_Mem_PC;

  wire MEM_WB_Sel_Mem_PC;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\mem_pc_i_reg[27] ;
  wire wb_PC_II_4;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD560 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[27] ),
        .I4(MEM_WB_Sel_Mem_PC),
        .I5(1'b1),
        .O5(wb_PC_II_4),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2__parameterized5_369
   (wb_PC_II_3,
    S,
    \Using_FPGA.Native_0 ,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[28] ,
    MEM_WB_Sel_Mem_PC);
  output wb_PC_II_3;
  output S;
  input \Using_FPGA.Native_0 ;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[28] ;
  input MEM_WB_Sel_Mem_PC;

  wire MEM_WB_Sel_Mem_PC;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\mem_pc_i_reg[28] ;
  wire wb_PC_II_3;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD561 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[28] ),
        .I4(MEM_WB_Sel_Mem_PC),
        .I5(1'b1),
        .O5(wb_PC_II_3),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2__parameterized5_372
   (wb_PC_II_2,
    S,
    \Using_FPGA.Native_0 ,
    I1_0,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[29] ,
    MEM_WB_Sel_Mem_PC);
  output wb_PC_II_2;
  output S;
  input \Using_FPGA.Native_0 ;
  input I1_0;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[29] ;
  input MEM_WB_Sel_Mem_PC;

  wire I1_0;
  wire MEM_WB_Sel_Mem_PC;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\mem_pc_i_reg[29] ;
  wire wb_PC_II_2;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h69696969FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD562 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(I1_0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[29] ),
        .I4(MEM_WB_Sel_Mem_PC),
        .I5(1'b1),
        .O5(wb_PC_II_2),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2__parameterized5_375
   (wb_PC_II_29,
    S,
    \Using_FPGA.Native_0 ,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[2] ,
    MEM_WB_Sel_Mem_PC);
  output wb_PC_II_29;
  output S;
  input \Using_FPGA.Native_0 ;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[2] ;
  input MEM_WB_Sel_Mem_PC;

  wire MEM_WB_Sel_Mem_PC;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\mem_pc_i_reg[2] ;
  wire wb_PC_II_29;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD563 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[2] ),
        .I4(MEM_WB_Sel_Mem_PC),
        .I5(1'b1),
        .O5(wb_PC_II_29),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2__parameterized5_378
   (wb_PC_II_1,
    S,
    \Using_FPGA.Native_0 ,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[30] ,
    MEM_WB_Sel_Mem_PC);
  output wb_PC_II_1;
  output S;
  input \Using_FPGA.Native_0 ;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[30] ;
  input MEM_WB_Sel_Mem_PC;

  wire MEM_WB_Sel_Mem_PC;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\mem_pc_i_reg[30] ;
  wire wb_PC_II_1;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD564 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[30] ),
        .I4(MEM_WB_Sel_Mem_PC),
        .I5(1'b1),
        .O5(wb_PC_II_1),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2__parameterized5_381
   (wb_PC_II_0,
    S,
    DI,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[31] ,
    MEM_WB_Sel_Mem_PC);
  output wb_PC_II_0;
  output S;
  input DI;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[31] ;
  input MEM_WB_Sel_Mem_PC;

  wire DI;
  wire MEM_WB_Sel_Mem_PC;
  wire S;
  wire [0:0]\mem_pc_i_reg[31] ;
  wire wb_PC_II_0;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD565 \Using_FPGA.Native 
       (.I0(DI),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[31] ),
        .I4(MEM_WB_Sel_Mem_PC),
        .I5(1'b1),
        .O5(wb_PC_II_0),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2__parameterized5_384
   (wb_PC_II_28,
    S,
    \Using_FPGA.Native_0 ,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[3] ,
    MEM_WB_Sel_Mem_PC);
  output wb_PC_II_28;
  output S;
  input \Using_FPGA.Native_0 ;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[3] ;
  input MEM_WB_Sel_Mem_PC;

  wire MEM_WB_Sel_Mem_PC;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\mem_pc_i_reg[3] ;
  wire wb_PC_II_28;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD566 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[3] ),
        .I4(MEM_WB_Sel_Mem_PC),
        .I5(1'b1),
        .O5(wb_PC_II_28),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2__parameterized5_387
   (wb_PC_II_27,
    S,
    \Using_FPGA.Native_0 ,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[4] ,
    MEM_WB_Sel_Mem_PC);
  output wb_PC_II_27;
  output S;
  input \Using_FPGA.Native_0 ;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[4] ;
  input MEM_WB_Sel_Mem_PC;

  wire MEM_WB_Sel_Mem_PC;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\mem_pc_i_reg[4] ;
  wire wb_PC_II_27;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD567 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[4] ),
        .I4(MEM_WB_Sel_Mem_PC),
        .I5(1'b1),
        .O5(wb_PC_II_27),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2__parameterized5_390
   (wb_PC_II_26,
    S,
    \Using_FPGA.Native_0 ,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[5] ,
    MEM_WB_Sel_Mem_PC);
  output wb_PC_II_26;
  output S;
  input \Using_FPGA.Native_0 ;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[5] ;
  input MEM_WB_Sel_Mem_PC;

  wire MEM_WB_Sel_Mem_PC;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\mem_pc_i_reg[5] ;
  wire wb_PC_II_26;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD568 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[5] ),
        .I4(MEM_WB_Sel_Mem_PC),
        .I5(1'b1),
        .O5(wb_PC_II_26),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2__parameterized5_393
   (wb_PC_II_25,
    S,
    \Using_FPGA.Native_0 ,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[6] ,
    MEM_WB_Sel_Mem_PC);
  output wb_PC_II_25;
  output S;
  input \Using_FPGA.Native_0 ;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[6] ;
  input MEM_WB_Sel_Mem_PC;

  wire MEM_WB_Sel_Mem_PC;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\mem_pc_i_reg[6] ;
  wire wb_PC_II_25;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD569 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[6] ),
        .I4(MEM_WB_Sel_Mem_PC),
        .I5(1'b1),
        .O5(wb_PC_II_25),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2__parameterized5_396
   (wb_PC_II_24,
    S,
    \Using_FPGA.Native_0 ,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[7] ,
    MEM_WB_Sel_Mem_PC);
  output wb_PC_II_24;
  output S;
  input \Using_FPGA.Native_0 ;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[7] ;
  input MEM_WB_Sel_Mem_PC;

  wire MEM_WB_Sel_Mem_PC;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\mem_pc_i_reg[7] ;
  wire wb_PC_II_24;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD570 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[7] ),
        .I4(MEM_WB_Sel_Mem_PC),
        .I5(1'b1),
        .O5(wb_PC_II_24),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2__parameterized5_399
   (wb_PC_II_23,
    S,
    \Using_FPGA.Native_0 ,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[8] ,
    MEM_WB_Sel_Mem_PC);
  output wb_PC_II_23;
  output S;
  input \Using_FPGA.Native_0 ;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[8] ;
  input MEM_WB_Sel_Mem_PC;

  wire MEM_WB_Sel_Mem_PC;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\mem_pc_i_reg[8] ;
  wire wb_PC_II_23;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD571 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[8] ),
        .I4(MEM_WB_Sel_Mem_PC),
        .I5(1'b1),
        .O5(wb_PC_II_23),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module MB_LUT6_2__parameterized5_402
   (wb_PC_II_22,
    S,
    \Using_FPGA.Native_0 ,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[9] ,
    MEM_WB_Sel_Mem_PC);
  output wb_PC_II_22;
  output S;
  input \Using_FPGA.Native_0 ;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [0:0]\mem_pc_i_reg[9] ;
  input MEM_WB_Sel_Mem_PC;

  wire MEM_WB_Sel_Mem_PC;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\mem_pc_i_reg[9] ;
  wire wb_PC_II_22;
  wire [0:0]\wb_exception_kind_i_reg[28] ;

  (* INIT = "64'h96969696FF00AAAA" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT6_2_HD572 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(1'b0),
        .I2(\wb_exception_kind_i_reg[28] ),
        .I3(\mem_pc_i_reg[9] ),
        .I4(MEM_WB_Sel_Mem_PC),
        .I5(1'b1),
        .O5(wb_PC_II_22),
        .O6(S));
endmodule

module MB_MULT_AND
   (DI,
    Q,
    \EX_ALU_Op_reg[0] );
  output DI;
  input [0:0]Q;
  input [0:0]\EX_ALU_Op_reg[0] ;

  wire DI;
  wire [0:0]\EX_ALU_Op_reg[0] ;
  wire [0:0]Q;

  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] ),
        .O(DI));
endmodule

module MB_RAM32M
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    DID,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    \wb_gpr_write_addr_reg[0] );
  output [1:0]GPR_Op1;
  output [1:0]GPR_Op2;
  output [1:0]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]DID;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]\wb_gpr_write_addr_reg[0] ;

  wire Clk;
  wire [1:0]DID;
  wire [1:0]GPR_Op1;
  wire [1:0]GPR_Op2;
  wire [1:0]GPR_Op3;
  wire WB_GPR_Wr;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;
  wire [4:0]\wb_gpr_write_addr_reg[0] ;
  wire [1:0]\NLW_Using_FPGA.Native_DOD_UNCONNECTED ;

  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* IS_WCLK_INVERTED = "1'b0" *) 
  (* box_type = "PRIMITIVE" *) 
  RAM32M_UNIQ_BASE_ \Using_FPGA.Native 
       (.ADDRA({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4]}),
        .ADDRB(of_imm_data),
        .ADDRC({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1],of_gpr_op3_rd_addr[2],of_gpr_op3_rd_addr[3],of_gpr_op3_rd_addr[4]}),
        .ADDRD(\wb_gpr_write_addr_reg[0] ),
        .DIA(DID),
        .DIB(DID),
        .DIC(DID),
        .DID(DID),
        .DOA(GPR_Op1),
        .DOB(GPR_Op2),
        .DOC(GPR_Op3),
        .DOD(\NLW_Using_FPGA.Native_DOD_UNCONNECTED [1:0]),
        .WCLK(Clk),
        .WE(WB_GPR_Wr));
endmodule

(* ORIG_REF_NAME = "MB_RAM32M" *) 
module MB_RAM32M_412
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    \WB_MEM_Result_reg[20] ,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    \wb_gpr_write_addr_reg[0] );
  output [1:0]GPR_Op1;
  output [1:0]GPR_Op2;
  output [1:0]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]\WB_MEM_Result_reg[20] ;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]\wb_gpr_write_addr_reg[0] ;

  wire Clk;
  wire [1:0]GPR_Op1;
  wire [1:0]GPR_Op2;
  wire [1:0]GPR_Op3;
  wire WB_GPR_Wr;
  wire [1:0]\WB_MEM_Result_reg[20] ;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;
  wire [4:0]\wb_gpr_write_addr_reg[0] ;
  wire [1:0]\NLW_Using_FPGA.Native_DOD_UNCONNECTED ;

  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* IS_WCLK_INVERTED = "1'b0" *) 
  (* box_type = "PRIMITIVE" *) 
  RAM32M_HD526 \Using_FPGA.Native 
       (.ADDRA({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4]}),
        .ADDRB(of_imm_data),
        .ADDRC({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1],of_gpr_op3_rd_addr[2],of_gpr_op3_rd_addr[3],of_gpr_op3_rd_addr[4]}),
        .ADDRD(\wb_gpr_write_addr_reg[0] ),
        .DIA(\WB_MEM_Result_reg[20] ),
        .DIB(\WB_MEM_Result_reg[20] ),
        .DIC(\WB_MEM_Result_reg[20] ),
        .DID(\WB_MEM_Result_reg[20] ),
        .DOA(GPR_Op1),
        .DOB(GPR_Op2),
        .DOC(GPR_Op3),
        .DOD(\NLW_Using_FPGA.Native_DOD_UNCONNECTED [1:0]),
        .WCLK(Clk),
        .WE(WB_GPR_Wr));
endmodule

(* ORIG_REF_NAME = "MB_RAM32M" *) 
module MB_RAM32M_413
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    \WB_MEM_Result_reg[22] ,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    \wb_gpr_write_addr_reg[0] );
  output [1:0]GPR_Op1;
  output [1:0]GPR_Op2;
  output [1:0]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]\WB_MEM_Result_reg[22] ;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]\wb_gpr_write_addr_reg[0] ;

  wire Clk;
  wire [1:0]GPR_Op1;
  wire [1:0]GPR_Op2;
  wire [1:0]GPR_Op3;
  wire WB_GPR_Wr;
  wire [1:0]\WB_MEM_Result_reg[22] ;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;
  wire [4:0]\wb_gpr_write_addr_reg[0] ;
  wire [1:0]\NLW_Using_FPGA.Native_DOD_UNCONNECTED ;

  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* IS_WCLK_INVERTED = "1'b0" *) 
  (* box_type = "PRIMITIVE" *) 
  RAM32M_HD527 \Using_FPGA.Native 
       (.ADDRA({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4]}),
        .ADDRB(of_imm_data),
        .ADDRC({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1],of_gpr_op3_rd_addr[2],of_gpr_op3_rd_addr[3],of_gpr_op3_rd_addr[4]}),
        .ADDRD(\wb_gpr_write_addr_reg[0] ),
        .DIA(\WB_MEM_Result_reg[22] ),
        .DIB(\WB_MEM_Result_reg[22] ),
        .DIC(\WB_MEM_Result_reg[22] ),
        .DID(\WB_MEM_Result_reg[22] ),
        .DOA(GPR_Op1),
        .DOB(GPR_Op2),
        .DOC(GPR_Op3),
        .DOD(\NLW_Using_FPGA.Native_DOD_UNCONNECTED [1:0]),
        .WCLK(Clk),
        .WE(WB_GPR_Wr));
endmodule

(* ORIG_REF_NAME = "MB_RAM32M" *) 
module MB_RAM32M_414
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    \wb_exception_kind_i_reg[31] ,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    \wb_gpr_write_addr_reg[0] );
  output [1:0]GPR_Op1;
  output [1:0]GPR_Op2;
  output [1:0]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]\wb_exception_kind_i_reg[31] ;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]\wb_gpr_write_addr_reg[0] ;

  wire Clk;
  wire [1:0]GPR_Op1;
  wire [1:0]GPR_Op2;
  wire [1:0]GPR_Op3;
  wire WB_GPR_Wr;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;
  wire [1:0]\wb_exception_kind_i_reg[31] ;
  wire [4:0]\wb_gpr_write_addr_reg[0] ;
  wire [1:0]\NLW_Using_FPGA.Native_DOD_UNCONNECTED ;

  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* IS_WCLK_INVERTED = "1'b0" *) 
  (* box_type = "PRIMITIVE" *) 
  RAM32M_HD528 \Using_FPGA.Native 
       (.ADDRA({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4]}),
        .ADDRB(of_imm_data),
        .ADDRC({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1],of_gpr_op3_rd_addr[2],of_gpr_op3_rd_addr[3],of_gpr_op3_rd_addr[4]}),
        .ADDRD(\wb_gpr_write_addr_reg[0] ),
        .DIA(\wb_exception_kind_i_reg[31] ),
        .DIB(\wb_exception_kind_i_reg[31] ),
        .DIC(\wb_exception_kind_i_reg[31] ),
        .DID(\wb_exception_kind_i_reg[31] ),
        .DOA(GPR_Op1),
        .DOB(GPR_Op2),
        .DOC(GPR_Op3),
        .DOD(\NLW_Using_FPGA.Native_DOD_UNCONNECTED [1:0]),
        .WCLK(Clk),
        .WE(WB_GPR_Wr));
endmodule

(* ORIG_REF_NAME = "MB_RAM32M" *) 
module MB_RAM32M_415
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    \wb_exception_kind_i_reg[31] ,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    \wb_gpr_write_addr_reg[0] );
  output [1:0]GPR_Op1;
  output [1:0]GPR_Op2;
  output [1:0]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]\wb_exception_kind_i_reg[31] ;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]\wb_gpr_write_addr_reg[0] ;

  wire Clk;
  wire [1:0]GPR_Op1;
  wire [1:0]GPR_Op2;
  wire [1:0]GPR_Op3;
  wire WB_GPR_Wr;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;
  wire [1:0]\wb_exception_kind_i_reg[31] ;
  wire [4:0]\wb_gpr_write_addr_reg[0] ;
  wire [1:0]\NLW_Using_FPGA.Native_DOD_UNCONNECTED ;

  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* IS_WCLK_INVERTED = "1'b0" *) 
  (* box_type = "PRIMITIVE" *) 
  RAM32M_HD529 \Using_FPGA.Native 
       (.ADDRA({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4]}),
        .ADDRB(of_imm_data),
        .ADDRC({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1],of_gpr_op3_rd_addr[2],of_gpr_op3_rd_addr[3],of_gpr_op3_rd_addr[4]}),
        .ADDRD(\wb_gpr_write_addr_reg[0] ),
        .DIA(\wb_exception_kind_i_reg[31] ),
        .DIB(\wb_exception_kind_i_reg[31] ),
        .DIC(\wb_exception_kind_i_reg[31] ),
        .DID(\wb_exception_kind_i_reg[31] ),
        .DOA(GPR_Op1),
        .DOB(GPR_Op2),
        .DOC(GPR_Op3),
        .DOD(\NLW_Using_FPGA.Native_DOD_UNCONNECTED [1:0]),
        .WCLK(Clk),
        .WE(WB_GPR_Wr));
endmodule

(* ORIG_REF_NAME = "MB_RAM32M" *) 
module MB_RAM32M_416
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    \wb_exception_kind_i_reg[31] ,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    \wb_gpr_write_addr_reg[0] );
  output [1:0]GPR_Op1;
  output [1:0]GPR_Op2;
  output [1:0]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]\wb_exception_kind_i_reg[31] ;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]\wb_gpr_write_addr_reg[0] ;

  wire Clk;
  wire [1:0]GPR_Op1;
  wire [1:0]GPR_Op2;
  wire [1:0]GPR_Op3;
  wire WB_GPR_Wr;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;
  wire [1:0]\wb_exception_kind_i_reg[31] ;
  wire [4:0]\wb_gpr_write_addr_reg[0] ;
  wire [1:0]\NLW_Using_FPGA.Native_DOD_UNCONNECTED ;

  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* IS_WCLK_INVERTED = "1'b0" *) 
  (* box_type = "PRIMITIVE" *) 
  RAM32M_HD530 \Using_FPGA.Native 
       (.ADDRA({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4]}),
        .ADDRB(of_imm_data),
        .ADDRC({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1],of_gpr_op3_rd_addr[2],of_gpr_op3_rd_addr[3],of_gpr_op3_rd_addr[4]}),
        .ADDRD(\wb_gpr_write_addr_reg[0] ),
        .DIA(\wb_exception_kind_i_reg[31] ),
        .DIB(\wb_exception_kind_i_reg[31] ),
        .DIC(\wb_exception_kind_i_reg[31] ),
        .DID(\wb_exception_kind_i_reg[31] ),
        .DOA(GPR_Op1),
        .DOB(GPR_Op2),
        .DOC(GPR_Op3),
        .DOD(\NLW_Using_FPGA.Native_DOD_UNCONNECTED [1:0]),
        .WCLK(Clk),
        .WE(WB_GPR_Wr));
endmodule

(* ORIG_REF_NAME = "MB_RAM32M" *) 
module MB_RAM32M_417
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    \wb_exception_kind_i_reg[31] ,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    \wb_gpr_write_addr_reg[0] );
  output [1:0]GPR_Op1;
  output [1:0]GPR_Op2;
  output [1:0]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]\wb_exception_kind_i_reg[31] ;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]\wb_gpr_write_addr_reg[0] ;

  wire Clk;
  wire [1:0]GPR_Op1;
  wire [1:0]GPR_Op2;
  wire [1:0]GPR_Op3;
  wire WB_GPR_Wr;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;
  wire [1:0]\wb_exception_kind_i_reg[31] ;
  wire [4:0]\wb_gpr_write_addr_reg[0] ;
  wire [1:0]\NLW_Using_FPGA.Native_DOD_UNCONNECTED ;

  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* IS_WCLK_INVERTED = "1'b0" *) 
  (* box_type = "PRIMITIVE" *) 
  RAM32M_HD531 \Using_FPGA.Native 
       (.ADDRA({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4]}),
        .ADDRB(of_imm_data),
        .ADDRC({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1],of_gpr_op3_rd_addr[2],of_gpr_op3_rd_addr[3],of_gpr_op3_rd_addr[4]}),
        .ADDRD(\wb_gpr_write_addr_reg[0] ),
        .DIA(\wb_exception_kind_i_reg[31] ),
        .DIB(\wb_exception_kind_i_reg[31] ),
        .DIC(\wb_exception_kind_i_reg[31] ),
        .DID(\wb_exception_kind_i_reg[31] ),
        .DOA(GPR_Op1),
        .DOB(GPR_Op2),
        .DOC(GPR_Op3),
        .DOD(\NLW_Using_FPGA.Native_DOD_UNCONNECTED [1:0]),
        .WCLK(Clk),
        .WE(WB_GPR_Wr));
endmodule

(* ORIG_REF_NAME = "MB_RAM32M" *) 
module MB_RAM32M_418
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    \WB_MEM_Result_reg[2] ,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    \wb_gpr_write_addr_reg[0] );
  output [1:0]GPR_Op1;
  output [1:0]GPR_Op2;
  output [1:0]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]\WB_MEM_Result_reg[2] ;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]\wb_gpr_write_addr_reg[0] ;

  wire Clk;
  wire [1:0]GPR_Op1;
  wire [1:0]GPR_Op2;
  wire [1:0]GPR_Op3;
  wire WB_GPR_Wr;
  wire [1:0]\WB_MEM_Result_reg[2] ;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;
  wire [4:0]\wb_gpr_write_addr_reg[0] ;
  wire [1:0]\NLW_Using_FPGA.Native_DOD_UNCONNECTED ;

  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* IS_WCLK_INVERTED = "1'b0" *) 
  (* box_type = "PRIMITIVE" *) 
  RAM32M_HD532 \Using_FPGA.Native 
       (.ADDRA({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4]}),
        .ADDRB(of_imm_data),
        .ADDRC({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1],of_gpr_op3_rd_addr[2],of_gpr_op3_rd_addr[3],of_gpr_op3_rd_addr[4]}),
        .ADDRD(\wb_gpr_write_addr_reg[0] ),
        .DIA(\WB_MEM_Result_reg[2] ),
        .DIB(\WB_MEM_Result_reg[2] ),
        .DIC(\WB_MEM_Result_reg[2] ),
        .DID(\WB_MEM_Result_reg[2] ),
        .DOA(GPR_Op1),
        .DOB(GPR_Op2),
        .DOC(GPR_Op3),
        .DOD(\NLW_Using_FPGA.Native_DOD_UNCONNECTED [1:0]),
        .WCLK(Clk),
        .WE(WB_GPR_Wr));
endmodule

(* ORIG_REF_NAME = "MB_RAM32M" *) 
module MB_RAM32M_419
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    \WB_MEM_Result_reg[4] ,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    \wb_gpr_write_addr_reg[0] );
  output [1:0]GPR_Op1;
  output [1:0]GPR_Op2;
  output [1:0]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]\WB_MEM_Result_reg[4] ;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]\wb_gpr_write_addr_reg[0] ;

  wire Clk;
  wire [1:0]GPR_Op1;
  wire [1:0]GPR_Op2;
  wire [1:0]GPR_Op3;
  wire WB_GPR_Wr;
  wire [1:0]\WB_MEM_Result_reg[4] ;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;
  wire [4:0]\wb_gpr_write_addr_reg[0] ;
  wire [1:0]\NLW_Using_FPGA.Native_DOD_UNCONNECTED ;

  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* IS_WCLK_INVERTED = "1'b0" *) 
  (* box_type = "PRIMITIVE" *) 
  RAM32M_HD533 \Using_FPGA.Native 
       (.ADDRA({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4]}),
        .ADDRB(of_imm_data),
        .ADDRC({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1],of_gpr_op3_rd_addr[2],of_gpr_op3_rd_addr[3],of_gpr_op3_rd_addr[4]}),
        .ADDRD(\wb_gpr_write_addr_reg[0] ),
        .DIA(\WB_MEM_Result_reg[4] ),
        .DIB(\WB_MEM_Result_reg[4] ),
        .DIC(\WB_MEM_Result_reg[4] ),
        .DID(\WB_MEM_Result_reg[4] ),
        .DOA(GPR_Op1),
        .DOB(GPR_Op2),
        .DOC(GPR_Op3),
        .DOD(\NLW_Using_FPGA.Native_DOD_UNCONNECTED [1:0]),
        .WCLK(Clk),
        .WE(WB_GPR_Wr));
endmodule

(* ORIG_REF_NAME = "MB_RAM32M" *) 
module MB_RAM32M_420
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    \WB_MEM_Result_reg[6] ,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    \wb_gpr_write_addr_reg[0] );
  output [1:0]GPR_Op1;
  output [1:0]GPR_Op2;
  output [1:0]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]\WB_MEM_Result_reg[6] ;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]\wb_gpr_write_addr_reg[0] ;

  wire Clk;
  wire [1:0]GPR_Op1;
  wire [1:0]GPR_Op2;
  wire [1:0]GPR_Op3;
  wire WB_GPR_Wr;
  wire [1:0]\WB_MEM_Result_reg[6] ;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;
  wire [4:0]\wb_gpr_write_addr_reg[0] ;
  wire [1:0]\NLW_Using_FPGA.Native_DOD_UNCONNECTED ;

  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* IS_WCLK_INVERTED = "1'b0" *) 
  (* box_type = "PRIMITIVE" *) 
  RAM32M_HD534 \Using_FPGA.Native 
       (.ADDRA({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4]}),
        .ADDRB(of_imm_data),
        .ADDRC({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1],of_gpr_op3_rd_addr[2],of_gpr_op3_rd_addr[3],of_gpr_op3_rd_addr[4]}),
        .ADDRD(\wb_gpr_write_addr_reg[0] ),
        .DIA(\WB_MEM_Result_reg[6] ),
        .DIB(\WB_MEM_Result_reg[6] ),
        .DIC(\WB_MEM_Result_reg[6] ),
        .DID(\WB_MEM_Result_reg[6] ),
        .DOA(GPR_Op1),
        .DOB(GPR_Op2),
        .DOC(GPR_Op3),
        .DOD(\NLW_Using_FPGA.Native_DOD_UNCONNECTED [1:0]),
        .WCLK(Clk),
        .WE(WB_GPR_Wr));
endmodule

(* ORIG_REF_NAME = "MB_RAM32M" *) 
module MB_RAM32M_421
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    \WB_MEM_Result_reg[8] ,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    \wb_gpr_write_addr_reg[0] );
  output [1:0]GPR_Op1;
  output [1:0]GPR_Op2;
  output [1:0]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]\WB_MEM_Result_reg[8] ;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]\wb_gpr_write_addr_reg[0] ;

  wire Clk;
  wire [1:0]GPR_Op1;
  wire [1:0]GPR_Op2;
  wire [1:0]GPR_Op3;
  wire WB_GPR_Wr;
  wire [1:0]\WB_MEM_Result_reg[8] ;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;
  wire [4:0]\wb_gpr_write_addr_reg[0] ;
  wire [1:0]\NLW_Using_FPGA.Native_DOD_UNCONNECTED ;

  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* IS_WCLK_INVERTED = "1'b0" *) 
  (* box_type = "PRIMITIVE" *) 
  RAM32M_HD535 \Using_FPGA.Native 
       (.ADDRA({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4]}),
        .ADDRB(of_imm_data),
        .ADDRC({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1],of_gpr_op3_rd_addr[2],of_gpr_op3_rd_addr[3],of_gpr_op3_rd_addr[4]}),
        .ADDRD(\wb_gpr_write_addr_reg[0] ),
        .DIA(\WB_MEM_Result_reg[8] ),
        .DIB(\WB_MEM_Result_reg[8] ),
        .DIC(\WB_MEM_Result_reg[8] ),
        .DID(\WB_MEM_Result_reg[8] ),
        .DOA(GPR_Op1),
        .DOB(GPR_Op2),
        .DOC(GPR_Op3),
        .DOD(\NLW_Using_FPGA.Native_DOD_UNCONNECTED [1:0]),
        .WCLK(Clk),
        .WE(WB_GPR_Wr));
endmodule

(* ORIG_REF_NAME = "MB_RAM32M" *) 
module MB_RAM32M_422
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    \WB_MEM_Result_reg[10] ,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    \wb_gpr_write_addr_reg[0] );
  output [1:0]GPR_Op1;
  output [1:0]GPR_Op2;
  output [1:0]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]\WB_MEM_Result_reg[10] ;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]\wb_gpr_write_addr_reg[0] ;

  wire Clk;
  wire [1:0]GPR_Op1;
  wire [1:0]GPR_Op2;
  wire [1:0]GPR_Op3;
  wire WB_GPR_Wr;
  wire [1:0]\WB_MEM_Result_reg[10] ;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;
  wire [4:0]\wb_gpr_write_addr_reg[0] ;
  wire [1:0]\NLW_Using_FPGA.Native_DOD_UNCONNECTED ;

  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* IS_WCLK_INVERTED = "1'b0" *) 
  (* box_type = "PRIMITIVE" *) 
  RAM32M_HD536 \Using_FPGA.Native 
       (.ADDRA({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4]}),
        .ADDRB(of_imm_data),
        .ADDRC({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1],of_gpr_op3_rd_addr[2],of_gpr_op3_rd_addr[3],of_gpr_op3_rd_addr[4]}),
        .ADDRD(\wb_gpr_write_addr_reg[0] ),
        .DIA(\WB_MEM_Result_reg[10] ),
        .DIB(\WB_MEM_Result_reg[10] ),
        .DIC(\WB_MEM_Result_reg[10] ),
        .DID(\WB_MEM_Result_reg[10] ),
        .DOA(GPR_Op1),
        .DOB(GPR_Op2),
        .DOC(GPR_Op3),
        .DOD(\NLW_Using_FPGA.Native_DOD_UNCONNECTED [1:0]),
        .WCLK(Clk),
        .WE(WB_GPR_Wr));
endmodule

(* ORIG_REF_NAME = "MB_RAM32M" *) 
module MB_RAM32M_423
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    \WB_MEM_Result_reg[12] ,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    \wb_gpr_write_addr_reg[0] );
  output [1:0]GPR_Op1;
  output [1:0]GPR_Op2;
  output [1:0]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]\WB_MEM_Result_reg[12] ;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]\wb_gpr_write_addr_reg[0] ;

  wire Clk;
  wire [1:0]GPR_Op1;
  wire [1:0]GPR_Op2;
  wire [1:0]GPR_Op3;
  wire WB_GPR_Wr;
  wire [1:0]\WB_MEM_Result_reg[12] ;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;
  wire [4:0]\wb_gpr_write_addr_reg[0] ;
  wire [1:0]\NLW_Using_FPGA.Native_DOD_UNCONNECTED ;

  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* IS_WCLK_INVERTED = "1'b0" *) 
  (* box_type = "PRIMITIVE" *) 
  RAM32M_HD537 \Using_FPGA.Native 
       (.ADDRA({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4]}),
        .ADDRB(of_imm_data),
        .ADDRC({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1],of_gpr_op3_rd_addr[2],of_gpr_op3_rd_addr[3],of_gpr_op3_rd_addr[4]}),
        .ADDRD(\wb_gpr_write_addr_reg[0] ),
        .DIA(\WB_MEM_Result_reg[12] ),
        .DIB(\WB_MEM_Result_reg[12] ),
        .DIC(\WB_MEM_Result_reg[12] ),
        .DID(\WB_MEM_Result_reg[12] ),
        .DOA(GPR_Op1),
        .DOB(GPR_Op2),
        .DOC(GPR_Op3),
        .DOD(\NLW_Using_FPGA.Native_DOD_UNCONNECTED [1:0]),
        .WCLK(Clk),
        .WE(WB_GPR_Wr));
endmodule

(* ORIG_REF_NAME = "MB_RAM32M" *) 
module MB_RAM32M_424
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    \WB_MEM_Result_reg[14] ,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    \wb_gpr_write_addr_reg[0] );
  output [1:0]GPR_Op1;
  output [1:0]GPR_Op2;
  output [1:0]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]\WB_MEM_Result_reg[14] ;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]\wb_gpr_write_addr_reg[0] ;

  wire Clk;
  wire [1:0]GPR_Op1;
  wire [1:0]GPR_Op2;
  wire [1:0]GPR_Op3;
  wire WB_GPR_Wr;
  wire [1:0]\WB_MEM_Result_reg[14] ;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;
  wire [4:0]\wb_gpr_write_addr_reg[0] ;
  wire [1:0]\NLW_Using_FPGA.Native_DOD_UNCONNECTED ;

  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* IS_WCLK_INVERTED = "1'b0" *) 
  (* box_type = "PRIMITIVE" *) 
  RAM32M_HD538 \Using_FPGA.Native 
       (.ADDRA({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4]}),
        .ADDRB(of_imm_data),
        .ADDRC({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1],of_gpr_op3_rd_addr[2],of_gpr_op3_rd_addr[3],of_gpr_op3_rd_addr[4]}),
        .ADDRD(\wb_gpr_write_addr_reg[0] ),
        .DIA(\WB_MEM_Result_reg[14] ),
        .DIB(\WB_MEM_Result_reg[14] ),
        .DIC(\WB_MEM_Result_reg[14] ),
        .DID(\WB_MEM_Result_reg[14] ),
        .DOA(GPR_Op1),
        .DOB(GPR_Op2),
        .DOC(GPR_Op3),
        .DOD(\NLW_Using_FPGA.Native_DOD_UNCONNECTED [1:0]),
        .WCLK(Clk),
        .WE(WB_GPR_Wr));
endmodule

(* ORIG_REF_NAME = "MB_RAM32M" *) 
module MB_RAM32M_425
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    \WB_MEM_Result_reg[16] ,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    \wb_gpr_write_addr_reg[0] );
  output [1:0]GPR_Op1;
  output [1:0]GPR_Op2;
  output [1:0]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]\WB_MEM_Result_reg[16] ;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]\wb_gpr_write_addr_reg[0] ;

  wire Clk;
  wire [1:0]GPR_Op1;
  wire [1:0]GPR_Op2;
  wire [1:0]GPR_Op3;
  wire WB_GPR_Wr;
  wire [1:0]\WB_MEM_Result_reg[16] ;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;
  wire [4:0]\wb_gpr_write_addr_reg[0] ;
  wire [1:0]\NLW_Using_FPGA.Native_DOD_UNCONNECTED ;

  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* IS_WCLK_INVERTED = "1'b0" *) 
  (* box_type = "PRIMITIVE" *) 
  RAM32M_HD539 \Using_FPGA.Native 
       (.ADDRA({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4]}),
        .ADDRB(of_imm_data),
        .ADDRC({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1],of_gpr_op3_rd_addr[2],of_gpr_op3_rd_addr[3],of_gpr_op3_rd_addr[4]}),
        .ADDRD(\wb_gpr_write_addr_reg[0] ),
        .DIA(\WB_MEM_Result_reg[16] ),
        .DIB(\WB_MEM_Result_reg[16] ),
        .DIC(\WB_MEM_Result_reg[16] ),
        .DID(\WB_MEM_Result_reg[16] ),
        .DOA(GPR_Op1),
        .DOB(GPR_Op2),
        .DOC(GPR_Op3),
        .DOD(\NLW_Using_FPGA.Native_DOD_UNCONNECTED [1:0]),
        .WCLK(Clk),
        .WE(WB_GPR_Wr));
endmodule

(* ORIG_REF_NAME = "MB_RAM32M" *) 
module MB_RAM32M_426
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    \WB_MEM_Result_reg[18] ,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    \wb_gpr_write_addr_reg[0] );
  output [1:0]GPR_Op1;
  output [1:0]GPR_Op2;
  output [1:0]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]\WB_MEM_Result_reg[18] ;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]\wb_gpr_write_addr_reg[0] ;

  wire Clk;
  wire [1:0]GPR_Op1;
  wire [1:0]GPR_Op2;
  wire [1:0]GPR_Op3;
  wire WB_GPR_Wr;
  wire [1:0]\WB_MEM_Result_reg[18] ;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;
  wire [4:0]\wb_gpr_write_addr_reg[0] ;
  wire [1:0]\NLW_Using_FPGA.Native_DOD_UNCONNECTED ;

  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* IS_WCLK_INVERTED = "1'b0" *) 
  (* box_type = "PRIMITIVE" *) 
  RAM32M_HD540 \Using_FPGA.Native 
       (.ADDRA({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4]}),
        .ADDRB(of_imm_data),
        .ADDRC({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1],of_gpr_op3_rd_addr[2],of_gpr_op3_rd_addr[3],of_gpr_op3_rd_addr[4]}),
        .ADDRD(\wb_gpr_write_addr_reg[0] ),
        .DIA(\WB_MEM_Result_reg[18] ),
        .DIB(\WB_MEM_Result_reg[18] ),
        .DIC(\WB_MEM_Result_reg[18] ),
        .DID(\WB_MEM_Result_reg[18] ),
        .DOA(GPR_Op1),
        .DOB(GPR_Op2),
        .DOC(GPR_Op3),
        .DOD(\NLW_Using_FPGA.Native_DOD_UNCONNECTED [1:0]),
        .WCLK(Clk),
        .WE(WB_GPR_Wr));
endmodule

module MB_SRLC16E
   (SRL16_Sel_7,
    which_pc,
    \Serial_Dbg_Intf.Instr_Insert_Reg_En_1_reg ,
    SRL16_MC15_7,
    Address,
    Dbg_Clk,
    Dbg_Reg_En);
  output SRL16_Sel_7;
  output which_pc;
  output \Serial_Dbg_Intf.Instr_Insert_Reg_En_1_reg ;
  input SRL16_MC15_7;
  input [3:0]Address;
  input Dbg_Clk;
  input [0:7]Dbg_Reg_En;

  wire [3:0]Address;
  wire Dbg_Clk;
  wire [0:7]Dbg_Reg_En;
  wire SRL16_MC15_7;
  wire SRL16_Sel_7;
  wire \Serial_Dbg_Intf.Instr_Insert_Reg_En_1_reg ;
  wire which_pc;

  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  (* box_type = "PRIMITIVE" *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16CE_I1 
       (.A0(Address[0]),
        .A1(Address[1]),
        .A2(Address[2]),
        .A3(Address[3]),
        .CE(which_pc),
        .CLK(Dbg_Clk),
        .D(SRL16_MC15_7),
        .Q(SRL16_Sel_7));
  LUT5 #(
    .INIT(32'h00000010)) 
    \Use_unisim.MB_SRL16CE_I1_i_1 
       (.I0(\Serial_Dbg_Intf.Instr_Insert_Reg_En_1_reg ),
        .I1(Dbg_Reg_En[1]),
        .I2(Dbg_Reg_En[3]),
        .I3(Dbg_Reg_En[5]),
        .I4(Dbg_Reg_En[4]),
        .O(which_pc));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \Use_unisim.MB_SRL16CE_I1_i_2 
       (.I0(Dbg_Reg_En[0]),
        .I1(Dbg_Reg_En[2]),
        .I2(Dbg_Reg_En[6]),
        .I3(Dbg_Reg_En[7]),
        .O(\Serial_Dbg_Intf.Instr_Insert_Reg_En_1_reg ));
endmodule

(* ORIG_REF_NAME = "MB_SRLC16E" *) 
module MB_SRLC16E_34
   (SRL16_Sel_6,
    SRL16_MC15_7,
    which_pc,
    SRL16_MC15_6,
    Address,
    Dbg_Clk);
  output SRL16_Sel_6;
  output SRL16_MC15_7;
  input which_pc;
  input SRL16_MC15_6;
  input [3:0]Address;
  input Dbg_Clk;

  wire [3:0]Address;
  wire Dbg_Clk;
  wire SRL16_MC15_6;
  wire SRL16_MC15_7;
  wire SRL16_Sel_6;
  wire which_pc;

  (* box_type = "PRIMITIVE" *) 
  SRLC16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16CE_I1 
       (.A0(Address[0]),
        .A1(Address[1]),
        .A2(Address[2]),
        .A3(Address[3]),
        .CE(which_pc),
        .CLK(Dbg_Clk),
        .D(SRL16_MC15_6),
        .Q(SRL16_Sel_6),
        .Q15(SRL16_MC15_7));
endmodule

(* ORIG_REF_NAME = "MB_SRLC16E" *) 
module MB_SRLC16E_36
   (SRL16_Sel_5,
    SRL16_MC15_6,
    which_pc,
    SRL16_MC15_5,
    Address,
    Dbg_Clk);
  output SRL16_Sel_5;
  output SRL16_MC15_6;
  input which_pc;
  input SRL16_MC15_5;
  input [3:0]Address;
  input Dbg_Clk;

  wire [3:0]Address;
  wire Dbg_Clk;
  wire SRL16_MC15_5;
  wire SRL16_MC15_6;
  wire SRL16_Sel_5;
  wire which_pc;

  (* box_type = "PRIMITIVE" *) 
  SRLC16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16CE_I1 
       (.A0(Address[0]),
        .A1(Address[1]),
        .A2(Address[2]),
        .A3(Address[3]),
        .CE(which_pc),
        .CLK(Dbg_Clk),
        .D(SRL16_MC15_5),
        .Q(SRL16_Sel_5),
        .Q15(SRL16_MC15_6));
endmodule

(* ORIG_REF_NAME = "MB_SRLC16E" *) 
module MB_SRLC16E_38
   (SRL16_Sel_4,
    SRL16_MC15_5,
    which_pc,
    SRL16_MC15_4,
    Address,
    Dbg_Clk);
  output SRL16_Sel_4;
  output SRL16_MC15_5;
  input which_pc;
  input SRL16_MC15_4;
  input [3:0]Address;
  input Dbg_Clk;

  wire [3:0]Address;
  wire Dbg_Clk;
  wire SRL16_MC15_4;
  wire SRL16_MC15_5;
  wire SRL16_Sel_4;
  wire which_pc;

  (* box_type = "PRIMITIVE" *) 
  SRLC16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16CE_I1 
       (.A0(Address[0]),
        .A1(Address[1]),
        .A2(Address[2]),
        .A3(Address[3]),
        .CE(which_pc),
        .CLK(Dbg_Clk),
        .D(SRL16_MC15_4),
        .Q(SRL16_Sel_4),
        .Q15(SRL16_MC15_5));
endmodule

(* ORIG_REF_NAME = "MB_SRLC16E" *) 
module MB_SRLC16E_40
   (SRL16_Sel_3,
    SRL16_MC15_4,
    which_pc,
    SRL16_MC15_3,
    Address,
    Dbg_Clk);
  output SRL16_Sel_3;
  output SRL16_MC15_4;
  input which_pc;
  input SRL16_MC15_3;
  input [3:0]Address;
  input Dbg_Clk;

  wire [3:0]Address;
  wire Dbg_Clk;
  wire SRL16_MC15_3;
  wire SRL16_MC15_4;
  wire SRL16_Sel_3;
  wire which_pc;

  (* box_type = "PRIMITIVE" *) 
  SRLC16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16CE_I1 
       (.A0(Address[0]),
        .A1(Address[1]),
        .A2(Address[2]),
        .A3(Address[3]),
        .CE(which_pc),
        .CLK(Dbg_Clk),
        .D(SRL16_MC15_3),
        .Q(SRL16_Sel_3),
        .Q15(SRL16_MC15_4));
endmodule

(* ORIG_REF_NAME = "MB_SRLC16E" *) 
module MB_SRLC16E_42
   (SRL16_Sel_2,
    SRL16_MC15_3,
    which_pc,
    SRL16_MC15_2,
    Address,
    Dbg_Clk);
  output SRL16_Sel_2;
  output SRL16_MC15_3;
  input which_pc;
  input SRL16_MC15_2;
  input [3:0]Address;
  input Dbg_Clk;

  wire [3:0]Address;
  wire Dbg_Clk;
  wire SRL16_MC15_2;
  wire SRL16_MC15_3;
  wire SRL16_Sel_2;
  wire which_pc;

  (* box_type = "PRIMITIVE" *) 
  SRLC16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16CE_I1 
       (.A0(Address[0]),
        .A1(Address[1]),
        .A2(Address[2]),
        .A3(Address[3]),
        .CE(which_pc),
        .CLK(Dbg_Clk),
        .D(SRL16_MC15_2),
        .Q(SRL16_Sel_2),
        .Q15(SRL16_MC15_3));
endmodule

(* ORIG_REF_NAME = "MB_SRLC16E" *) 
module MB_SRLC16E_44
   (SRL16_Sel_1,
    SRL16_MC15_2,
    which_pc,
    SRL16_MC15_1,
    Address,
    Dbg_Clk);
  output SRL16_Sel_1;
  output SRL16_MC15_2;
  input which_pc;
  input SRL16_MC15_1;
  input [3:0]Address;
  input Dbg_Clk;

  wire [3:0]Address;
  wire Dbg_Clk;
  wire SRL16_MC15_1;
  wire SRL16_MC15_2;
  wire SRL16_Sel_1;
  wire which_pc;

  (* box_type = "PRIMITIVE" *) 
  SRLC16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16CE_I1 
       (.A0(Address[0]),
        .A1(Address[1]),
        .A2(Address[2]),
        .A3(Address[3]),
        .CE(which_pc),
        .CLK(Dbg_Clk),
        .D(SRL16_MC15_1),
        .Q(SRL16_Sel_1),
        .Q15(SRL16_MC15_2));
endmodule

(* ORIG_REF_NAME = "MB_SRLC16E" *) 
module MB_SRLC16E_46
   (SRL16_Sel_0,
    SRL16_MC15_1,
    which_pc,
    Dbg_TDI,
    Address,
    Dbg_Clk);
  output SRL16_Sel_0;
  output SRL16_MC15_1;
  input which_pc;
  input Dbg_TDI;
  input [3:0]Address;
  input Dbg_Clk;

  wire [3:0]Address;
  wire Dbg_Clk;
  wire Dbg_TDI;
  wire SRL16_MC15_1;
  wire SRL16_Sel_0;
  wire which_pc;

  (* box_type = "PRIMITIVE" *) 
  SRLC16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16CE_I1 
       (.A0(Address[0]),
        .A1(Address[1]),
        .A2(Address[2]),
        .A3(Address[3]),
        .CE(which_pc),
        .CLK(Dbg_Clk),
        .D(Dbg_TDI),
        .Q(SRL16_Sel_0),
        .Q15(SRL16_MC15_1));
endmodule

(* C_ADDR_TAG_BITS = "17" *) (* C_ALLOW_DCACHE_WR = "1" *) (* C_ALLOW_ICACHE_WR = "1" *) 
(* C_AREA_OPTIMIZED = "0" *) (* C_ASYNC_INTERRUPT = "1" *) (* C_ASYNC_WAKEUP = "3" *) 
(* C_AVOID_PRIMITIVES = "0" *) (* C_BASE_VECTORS = "64'b0000000000000000000000000000000000000000000000000000000000000000" *) (* C_BRANCH_TARGET_CACHE_SIZE = "0" *) 
(* C_CACHE_BYTE_SIZE = "8192" *) (* C_DADDR_SIZE = "32" *) (* C_DATA_SIZE = "32" *) 
(* C_DCACHE_ADDR_TAG = "17" *) (* C_DCACHE_ALWAYS_USED = "0" *) (* C_DCACHE_BASEADDR = "64'b0000000000000000000000000000000000000000000000000000000000000000" *) 
(* C_DCACHE_BYTE_SIZE = "8192" *) (* C_DCACHE_DATA_WIDTH = "0" *) (* C_DCACHE_FORCE_TAG_LUTRAM = "0" *) 
(* C_DCACHE_HIGHADDR = "64'b0000000000000000000000000000000000111111111111111111111111111111" *) (* C_DCACHE_LINE_LEN = "4" *) (* C_DCACHE_USE_WRITEBACK = "0" *) 
(* C_DCACHE_VICTIMS = "0" *) (* C_DEBUG_COUNTER_WIDTH = "32" *) (* C_DEBUG_ENABLED = "1" *) 
(* C_DEBUG_EVENT_COUNTERS = "5" *) (* C_DEBUG_EXTERNAL_TRACE = "0" *) (* C_DEBUG_INTERFACE = "0" *) 
(* C_DEBUG_LATENCY_COUNTERS = "1" *) (* C_DEBUG_PROFILE_SIZE = "0" *) (* C_DEBUG_TRACE_ASYNC_RESET = "0" *) 
(* C_DEBUG_TRACE_SIZE = "8192" *) (* C_DIV_ZERO_EXCEPTION = "0" *) (* C_DYNAMIC_BUS_SIZING = "0" *) 
(* C_D_AXI = "1" *) (* C_D_LMB = "1" *) (* C_ECC_USE_CE_EXCEPTION = "0" *) 
(* C_EDGE_IS_POSITIVE = "1" *) (* C_ENDIANNESS = "1" *) (* C_FAMILY = "zynq" *) 
(* C_FAULT_TOLERANT = "0" *) (* C_FPU_EXCEPTION = "0" *) (* C_FREQ = "100000000" *) 
(* C_FSL_EXCEPTION = "0" *) (* C_FSL_LINKS = "0" *) (* C_IADDR_SIZE = "32" *) 
(* C_ICACHE_ALWAYS_USED = "0" *) (* C_ICACHE_BASEADDR = "64'b0000000000000000000000000000000000000000000000000000000000000000" *) (* C_ICACHE_DATA_WIDTH = "0" *) 
(* C_ICACHE_FORCE_TAG_LUTRAM = "0" *) (* C_ICACHE_HIGHADDR = "64'b0000000000000000000000000000000000111111111111111111111111111111" *) (* C_ICACHE_LINE_LEN = "4" *) 
(* C_ICACHE_STREAMS = "0" *) (* C_ICACHE_VICTIMS = "0" *) (* C_ILL_OPCODE_EXCEPTION = "0" *) 
(* C_IMPRECISE_EXCEPTIONS = "0" *) (* C_INSTANCE = "design_gol_microblaze_0_0" *) (* C_INSTR_SIZE = "32" *) 
(* C_INTERCONNECT = "2" *) (* C_INTERRUPT_IS_EDGE = "0" *) (* C_I_AXI = "0" *) 
(* C_I_LMB = "1" *) (* C_LOCKSTEP_MASTER = "0" *) (* C_LOCKSTEP_SLAVE = "0" *) 
(* C_M0_AXIS_DATA_WIDTH = "32" *) (* C_M10_AXIS_DATA_WIDTH = "32" *) (* C_M11_AXIS_DATA_WIDTH = "32" *) 
(* C_M12_AXIS_DATA_WIDTH = "32" *) (* C_M13_AXIS_DATA_WIDTH = "32" *) (* C_M14_AXIS_DATA_WIDTH = "32" *) 
(* C_M15_AXIS_DATA_WIDTH = "32" *) (* C_M1_AXIS_DATA_WIDTH = "32" *) (* C_M2_AXIS_DATA_WIDTH = "32" *) 
(* C_M3_AXIS_DATA_WIDTH = "32" *) (* C_M4_AXIS_DATA_WIDTH = "32" *) (* C_M5_AXIS_DATA_WIDTH = "32" *) 
(* C_M6_AXIS_DATA_WIDTH = "32" *) (* C_M7_AXIS_DATA_WIDTH = "32" *) (* C_M8_AXIS_DATA_WIDTH = "32" *) 
(* C_M9_AXIS_DATA_WIDTH = "32" *) (* C_MMU_DTLB_SIZE = "4" *) (* C_MMU_ITLB_SIZE = "2" *) 
(* C_MMU_PRIVILEGED_INSTR = "0" *) (* C_MMU_TLB_ACCESS = "3" *) (* C_MMU_ZONES = "16" *) 
(* C_M_AXI_DC_ADDR_WIDTH = "32" *) (* C_M_AXI_DC_ARUSER_WIDTH = "5" *) (* C_M_AXI_DC_AWUSER_WIDTH = "5" *) 
(* C_M_AXI_DC_BUSER_WIDTH = "1" *) (* C_M_AXI_DC_DATA_WIDTH = "32" *) (* C_M_AXI_DC_EXCLUSIVE_ACCESS = "0" *) 
(* C_M_AXI_DC_RUSER_WIDTH = "1" *) (* C_M_AXI_DC_THREAD_ID_WIDTH = "1" *) (* C_M_AXI_DC_USER_VALUE = "31" *) 
(* C_M_AXI_DC_WUSER_WIDTH = "1" *) (* C_M_AXI_DP_ADDR_WIDTH = "32" *) (* C_M_AXI_DP_DATA_WIDTH = "32" *) 
(* C_M_AXI_DP_EXCLUSIVE_ACCESS = "0" *) (* C_M_AXI_DP_THREAD_ID_WIDTH = "1" *) (* C_M_AXI_D_BUS_EXCEPTION = "0" *) 
(* C_M_AXI_IC_ADDR_WIDTH = "32" *) (* C_M_AXI_IC_ARUSER_WIDTH = "5" *) (* C_M_AXI_IC_AWUSER_WIDTH = "5" *) 
(* C_M_AXI_IC_BUSER_WIDTH = "1" *) (* C_M_AXI_IC_DATA_WIDTH = "32" *) (* C_M_AXI_IC_RUSER_WIDTH = "1" *) 
(* C_M_AXI_IC_THREAD_ID_WIDTH = "1" *) (* C_M_AXI_IC_USER_VALUE = "31" *) (* C_M_AXI_IC_WUSER_WIDTH = "1" *) 
(* C_M_AXI_IP_ADDR_WIDTH = "32" *) (* C_M_AXI_IP_DATA_WIDTH = "32" *) (* C_M_AXI_IP_THREAD_ID_WIDTH = "1" *) 
(* C_M_AXI_I_BUS_EXCEPTION = "0" *) (* C_NUMBER_OF_PC_BRK = "1" *) (* C_NUMBER_OF_RD_ADDR_BRK = "0" *) 
(* C_NUMBER_OF_WR_ADDR_BRK = "0" *) (* C_NUM_SYNC_FF_CLK = "2" *) (* C_NUM_SYNC_FF_CLK_DEBUG = "2" *) 
(* C_NUM_SYNC_FF_CLK_IRQ = "1" *) (* C_NUM_SYNC_FF_DBG_CLK = "1" *) (* C_NUM_SYNC_FF_DBG_TRACE_CLK = "2" *) 
(* C_OPCODE_0x0_ILLEGAL = "0" *) (* C_OPTIMIZATION = "0" *) (* C_PC_WIDTH = "32" *) 
(* C_PIADDR_SIZE = "32" *) (* C_PVR = "0" *) (* C_PVR_USER1 = "8'b00000000" *) 
(* C_PVR_USER2 = "0" *) (* C_RESET_MSR = "0" *) (* C_S0_AXIS_DATA_WIDTH = "32" *) 
(* C_S10_AXIS_DATA_WIDTH = "32" *) (* C_S11_AXIS_DATA_WIDTH = "32" *) (* C_S12_AXIS_DATA_WIDTH = "32" *) 
(* C_S13_AXIS_DATA_WIDTH = "32" *) (* C_S14_AXIS_DATA_WIDTH = "32" *) (* C_S15_AXIS_DATA_WIDTH = "32" *) 
(* C_S1_AXIS_DATA_WIDTH = "32" *) (* C_S2_AXIS_DATA_WIDTH = "32" *) (* C_S3_AXIS_DATA_WIDTH = "32" *) 
(* C_S4_AXIS_DATA_WIDTH = "32" *) (* C_S5_AXIS_DATA_WIDTH = "32" *) (* C_S6_AXIS_DATA_WIDTH = "32" *) 
(* C_S7_AXIS_DATA_WIDTH = "32" *) (* C_S8_AXIS_DATA_WIDTH = "32" *) (* C_S9_AXIS_DATA_WIDTH = "32" *) 
(* C_SCO = "0" *) (* C_UNALIGNED_EXCEPTIONS = "0" *) (* C_USE_BARREL = "0" *) 
(* C_USE_BRANCH_TARGET_CACHE = "0" *) (* C_USE_CONFIG_RESET = "0" *) (* C_USE_DCACHE = "0" *) 
(* C_USE_DIV = "0" *) (* C_USE_EXTENDED_FSL_INSTR = "0" *) (* C_USE_EXT_BRK = "0" *) 
(* C_USE_EXT_NM_BRK = "0" *) (* C_USE_FPU = "0" *) (* C_USE_HW_MUL = "0" *) 
(* C_USE_ICACHE = "0" *) (* C_USE_INTERRUPT = "0" *) (* C_USE_MMU = "0" *) 
(* C_USE_MSR_INSTR = "0" *) (* C_USE_NON_SECURE = "0" *) (* C_USE_PCMP_INSTR = "0" *) 
(* C_USE_REORDER_INSTR = "1" *) (* C_USE_STACK_PROTECTION = "0" *) (* DowngradeIPIdentifiedWarnings = "yes" *) 
module MicroBlaze
   (RAM_Static,
    RAM_To,
    RAM_From,
    Clk,
    Reset,
    Mb_Reset,
    Config_Reset,
    Scan_Reset_Sel,
    Scan_Reset,
    Reset_Mode,
    Non_Secure,
    Interrupt,
    Interrupt_Address,
    Interrupt_Ack,
    Ext_BRK,
    Ext_NM_BRK,
    Pause,
    Pause_Ack,
    Dbg_Continue,
    Dbg_Stop,
    Dbg_Intr,
    MB_Halted,
    MB_Error,
    Wakeup,
    Sleep,
    Hibernate,
    Suspend,
    Dbg_Wakeup,
    LOCKSTEP_Slave_In,
    LOCKSTEP_Master_Out,
    LOCKSTEP_Out,
    Instr_Addr,
    Instr,
    IFetch,
    I_AS,
    IReady,
    IWAIT,
    ICE,
    IUE,
    M_AXI_IP_AWID,
    M_AXI_IP_AWADDR,
    M_AXI_IP_AWLEN,
    M_AXI_IP_AWSIZE,
    M_AXI_IP_AWBURST,
    M_AXI_IP_AWLOCK,
    M_AXI_IP_AWCACHE,
    M_AXI_IP_AWPROT,
    M_AXI_IP_AWQOS,
    M_AXI_IP_AWVALID,
    M_AXI_IP_AWREADY,
    M_AXI_IP_WDATA,
    M_AXI_IP_WSTRB,
    M_AXI_IP_WLAST,
    M_AXI_IP_WVALID,
    M_AXI_IP_WREADY,
    M_AXI_IP_BID,
    M_AXI_IP_BRESP,
    M_AXI_IP_BVALID,
    M_AXI_IP_BREADY,
    M_AXI_IP_ARID,
    M_AXI_IP_ARADDR,
    M_AXI_IP_ARLEN,
    M_AXI_IP_ARSIZE,
    M_AXI_IP_ARBURST,
    M_AXI_IP_ARLOCK,
    M_AXI_IP_ARCACHE,
    M_AXI_IP_ARPROT,
    M_AXI_IP_ARQOS,
    M_AXI_IP_ARVALID,
    M_AXI_IP_ARREADY,
    M_AXI_IP_RID,
    M_AXI_IP_RDATA,
    M_AXI_IP_RRESP,
    M_AXI_IP_RLAST,
    M_AXI_IP_RVALID,
    M_AXI_IP_RREADY,
    Data_Addr,
    Data_Read,
    Data_Write,
    D_AS,
    Read_Strobe,
    Write_Strobe,
    DReady,
    DWait,
    DCE,
    DUE,
    Byte_Enable,
    M_AXI_DP_AWID,
    M_AXI_DP_AWADDR,
    M_AXI_DP_AWLEN,
    M_AXI_DP_AWSIZE,
    M_AXI_DP_AWBURST,
    M_AXI_DP_AWLOCK,
    M_AXI_DP_AWCACHE,
    M_AXI_DP_AWPROT,
    M_AXI_DP_AWQOS,
    M_AXI_DP_AWVALID,
    M_AXI_DP_AWREADY,
    M_AXI_DP_WDATA,
    M_AXI_DP_WSTRB,
    M_AXI_DP_WLAST,
    M_AXI_DP_WVALID,
    M_AXI_DP_WREADY,
    M_AXI_DP_BID,
    M_AXI_DP_BRESP,
    M_AXI_DP_BVALID,
    M_AXI_DP_BREADY,
    M_AXI_DP_ARID,
    M_AXI_DP_ARADDR,
    M_AXI_DP_ARLEN,
    M_AXI_DP_ARSIZE,
    M_AXI_DP_ARBURST,
    M_AXI_DP_ARLOCK,
    M_AXI_DP_ARCACHE,
    M_AXI_DP_ARPROT,
    M_AXI_DP_ARQOS,
    M_AXI_DP_ARVALID,
    M_AXI_DP_ARREADY,
    M_AXI_DP_RID,
    M_AXI_DP_RDATA,
    M_AXI_DP_RRESP,
    M_AXI_DP_RLAST,
    M_AXI_DP_RVALID,
    M_AXI_DP_RREADY,
    Dbg_Disable,
    Dbg_Clk,
    Dbg_TDI,
    Dbg_TDO,
    Dbg_Reg_En,
    Dbg_Shift,
    Dbg_Capture,
    Dbg_Update,
    Debug_Rst,
    Dbg_Trig_In,
    Dbg_Trig_Ack_In,
    Dbg_Trig_Out,
    Dbg_Trig_Ack_Out,
    Dbg_Trace_Clk,
    Dbg_Trace_Data,
    Dbg_Trace_Ready,
    Dbg_Trace_Valid,
    Dbg_AWADDR,
    Dbg_AWVALID,
    Dbg_AWREADY,
    Dbg_WDATA,
    Dbg_WVALID,
    Dbg_WREADY,
    Dbg_BRESP,
    Dbg_BVALID,
    Dbg_BREADY,
    Dbg_ARADDR,
    Dbg_ARVALID,
    Dbg_ARREADY,
    Dbg_RDATA,
    Dbg_RRESP,
    Dbg_RVALID,
    Dbg_RREADY,
    DEBUG_ACLK,
    DEBUG_ARESETN,
    Trace_Instruction,
    Trace_Valid_Instr,
    Trace_PC,
    Trace_Reg_Write,
    Trace_Reg_Addr,
    Trace_MSR_Reg,
    Trace_PID_Reg,
    Trace_New_Reg_Value,
    Trace_Exception_Taken,
    Trace_Exception_Kind,
    Trace_Jump_Taken,
    Trace_Delay_Slot,
    Trace_Data_Address,
    Trace_Data_Write_Value,
    Trace_Data_Byte_Enable,
    Trace_Data_Access,
    Trace_Data_Read,
    Trace_Data_Write,
    Trace_DCache_Req,
    Trace_DCache_Hit,
    Trace_DCache_Rdy,
    Trace_DCache_Read,
    Trace_ICache_Req,
    Trace_ICache_Hit,
    Trace_ICache_Rdy,
    Trace_OF_PipeRun,
    Trace_EX_PipeRun,
    Trace_MEM_PipeRun,
    Trace_MB_Halted,
    Trace_Jump_Hit,
    M0_AXIS_TLAST,
    M0_AXIS_TDATA,
    M0_AXIS_TVALID,
    M0_AXIS_TREADY,
    M1_AXIS_TLAST,
    M1_AXIS_TDATA,
    M1_AXIS_TVALID,
    M1_AXIS_TREADY,
    M2_AXIS_TLAST,
    M2_AXIS_TDATA,
    M2_AXIS_TVALID,
    M2_AXIS_TREADY,
    M3_AXIS_TLAST,
    M3_AXIS_TDATA,
    M3_AXIS_TVALID,
    M3_AXIS_TREADY,
    M4_AXIS_TLAST,
    M4_AXIS_TDATA,
    M4_AXIS_TVALID,
    M4_AXIS_TREADY,
    M5_AXIS_TLAST,
    M5_AXIS_TDATA,
    M5_AXIS_TVALID,
    M5_AXIS_TREADY,
    M6_AXIS_TLAST,
    M6_AXIS_TDATA,
    M6_AXIS_TVALID,
    M6_AXIS_TREADY,
    M7_AXIS_TLAST,
    M7_AXIS_TDATA,
    M7_AXIS_TVALID,
    M7_AXIS_TREADY,
    M8_AXIS_TLAST,
    M8_AXIS_TDATA,
    M8_AXIS_TVALID,
    M8_AXIS_TREADY,
    M9_AXIS_TLAST,
    M9_AXIS_TDATA,
    M9_AXIS_TVALID,
    M9_AXIS_TREADY,
    M10_AXIS_TLAST,
    M10_AXIS_TDATA,
    M10_AXIS_TVALID,
    M10_AXIS_TREADY,
    M11_AXIS_TLAST,
    M11_AXIS_TDATA,
    M11_AXIS_TVALID,
    M11_AXIS_TREADY,
    M12_AXIS_TLAST,
    M12_AXIS_TDATA,
    M12_AXIS_TVALID,
    M12_AXIS_TREADY,
    M13_AXIS_TLAST,
    M13_AXIS_TDATA,
    M13_AXIS_TVALID,
    M13_AXIS_TREADY,
    M14_AXIS_TLAST,
    M14_AXIS_TDATA,
    M14_AXIS_TVALID,
    M14_AXIS_TREADY,
    M15_AXIS_TLAST,
    M15_AXIS_TDATA,
    M15_AXIS_TVALID,
    M15_AXIS_TREADY,
    S0_AXIS_TLAST,
    S0_AXIS_TDATA,
    S0_AXIS_TVALID,
    S0_AXIS_TREADY,
    S1_AXIS_TLAST,
    S1_AXIS_TDATA,
    S1_AXIS_TVALID,
    S1_AXIS_TREADY,
    S2_AXIS_TLAST,
    S2_AXIS_TDATA,
    S2_AXIS_TVALID,
    S2_AXIS_TREADY,
    S3_AXIS_TLAST,
    S3_AXIS_TDATA,
    S3_AXIS_TVALID,
    S3_AXIS_TREADY,
    S4_AXIS_TLAST,
    S4_AXIS_TDATA,
    S4_AXIS_TVALID,
    S4_AXIS_TREADY,
    S5_AXIS_TLAST,
    S5_AXIS_TDATA,
    S5_AXIS_TVALID,
    S5_AXIS_TREADY,
    S6_AXIS_TLAST,
    S6_AXIS_TDATA,
    S6_AXIS_TVALID,
    S6_AXIS_TREADY,
    S7_AXIS_TLAST,
    S7_AXIS_TDATA,
    S7_AXIS_TVALID,
    S7_AXIS_TREADY,
    S8_AXIS_TLAST,
    S8_AXIS_TDATA,
    S8_AXIS_TVALID,
    S8_AXIS_TREADY,
    S9_AXIS_TLAST,
    S9_AXIS_TDATA,
    S9_AXIS_TVALID,
    S9_AXIS_TREADY,
    S10_AXIS_TLAST,
    S10_AXIS_TDATA,
    S10_AXIS_TVALID,
    S10_AXIS_TREADY,
    S11_AXIS_TLAST,
    S11_AXIS_TDATA,
    S11_AXIS_TVALID,
    S11_AXIS_TREADY,
    S12_AXIS_TLAST,
    S12_AXIS_TDATA,
    S12_AXIS_TVALID,
    S12_AXIS_TREADY,
    S13_AXIS_TLAST,
    S13_AXIS_TDATA,
    S13_AXIS_TVALID,
    S13_AXIS_TREADY,
    S14_AXIS_TLAST,
    S14_AXIS_TDATA,
    S14_AXIS_TVALID,
    S14_AXIS_TREADY,
    S15_AXIS_TLAST,
    S15_AXIS_TDATA,
    S15_AXIS_TVALID,
    S15_AXIS_TREADY,
    M_AXI_IC_AWID,
    M_AXI_IC_AWADDR,
    M_AXI_IC_AWLEN,
    M_AXI_IC_AWSIZE,
    M_AXI_IC_AWBURST,
    M_AXI_IC_AWLOCK,
    M_AXI_IC_AWCACHE,
    M_AXI_IC_AWPROT,
    M_AXI_IC_AWQOS,
    M_AXI_IC_AWVALID,
    M_AXI_IC_AWREADY,
    M_AXI_IC_AWUSER,
    M_AXI_IC_AWDOMAIN,
    M_AXI_IC_AWSNOOP,
    M_AXI_IC_AWBAR,
    M_AXI_IC_WDATA,
    M_AXI_IC_WSTRB,
    M_AXI_IC_WLAST,
    M_AXI_IC_WVALID,
    M_AXI_IC_WREADY,
    M_AXI_IC_WUSER,
    M_AXI_IC_BID,
    M_AXI_IC_BRESP,
    M_AXI_IC_BVALID,
    M_AXI_IC_BREADY,
    M_AXI_IC_BUSER,
    M_AXI_IC_WACK,
    M_AXI_IC_ARID,
    M_AXI_IC_ARADDR,
    M_AXI_IC_ARLEN,
    M_AXI_IC_ARSIZE,
    M_AXI_IC_ARBURST,
    M_AXI_IC_ARLOCK,
    M_AXI_IC_ARCACHE,
    M_AXI_IC_ARPROT,
    M_AXI_IC_ARQOS,
    M_AXI_IC_ARVALID,
    M_AXI_IC_ARREADY,
    M_AXI_IC_ARUSER,
    M_AXI_IC_ARDOMAIN,
    M_AXI_IC_ARSNOOP,
    M_AXI_IC_ARBAR,
    M_AXI_IC_RID,
    M_AXI_IC_RDATA,
    M_AXI_IC_RRESP,
    M_AXI_IC_RLAST,
    M_AXI_IC_RVALID,
    M_AXI_IC_RREADY,
    M_AXI_IC_RUSER,
    M_AXI_IC_RACK,
    M_AXI_IC_ACVALID,
    M_AXI_IC_ACADDR,
    M_AXI_IC_ACSNOOP,
    M_AXI_IC_ACPROT,
    M_AXI_IC_ACREADY,
    M_AXI_IC_CRVALID,
    M_AXI_IC_CRRESP,
    M_AXI_IC_CRREADY,
    M_AXI_IC_CDVALID,
    M_AXI_IC_CDDATA,
    M_AXI_IC_CDLAST,
    M_AXI_IC_CDREADY,
    M_AXI_DC_AWID,
    M_AXI_DC_AWADDR,
    M_AXI_DC_AWLEN,
    M_AXI_DC_AWSIZE,
    M_AXI_DC_AWBURST,
    M_AXI_DC_AWLOCK,
    M_AXI_DC_AWCACHE,
    M_AXI_DC_AWPROT,
    M_AXI_DC_AWQOS,
    M_AXI_DC_AWVALID,
    M_AXI_DC_AWREADY,
    M_AXI_DC_AWUSER,
    M_AXI_DC_AWDOMAIN,
    M_AXI_DC_AWSNOOP,
    M_AXI_DC_AWBAR,
    M_AXI_DC_WDATA,
    M_AXI_DC_WSTRB,
    M_AXI_DC_WLAST,
    M_AXI_DC_WVALID,
    M_AXI_DC_WREADY,
    M_AXI_DC_WUSER,
    M_AXI_DC_BRESP,
    M_AXI_DC_BID,
    M_AXI_DC_BVALID,
    M_AXI_DC_BREADY,
    M_AXI_DC_BUSER,
    M_AXI_DC_WACK,
    M_AXI_DC_ARID,
    M_AXI_DC_ARADDR,
    M_AXI_DC_ARLEN,
    M_AXI_DC_ARSIZE,
    M_AXI_DC_ARBURST,
    M_AXI_DC_ARLOCK,
    M_AXI_DC_ARCACHE,
    M_AXI_DC_ARPROT,
    M_AXI_DC_ARQOS,
    M_AXI_DC_ARVALID,
    M_AXI_DC_ARREADY,
    M_AXI_DC_ARUSER,
    M_AXI_DC_ARDOMAIN,
    M_AXI_DC_ARSNOOP,
    M_AXI_DC_ARBAR,
    M_AXI_DC_RID,
    M_AXI_DC_RDATA,
    M_AXI_DC_RRESP,
    M_AXI_DC_RLAST,
    M_AXI_DC_RVALID,
    M_AXI_DC_RREADY,
    M_AXI_DC_RUSER,
    M_AXI_DC_RACK,
    M_AXI_DC_ACVALID,
    M_AXI_DC_ACADDR,
    M_AXI_DC_ACSNOOP,
    M_AXI_DC_ACPROT,
    M_AXI_DC_ACREADY,
    M_AXI_DC_CRVALID,
    M_AXI_DC_CRRESP,
    M_AXI_DC_CRREADY,
    M_AXI_DC_CDVALID,
    M_AXI_DC_CDDATA,
    M_AXI_DC_CDLAST,
    M_AXI_DC_CDREADY);
  input [1023:0]RAM_Static;
  input [16383:0]RAM_To;
  output [16383:0]RAM_From;
  input Clk;
  input Reset;
  input Mb_Reset;
  input Config_Reset;
  input Scan_Reset_Sel;
  input Scan_Reset;
  input [0:1]Reset_Mode;
  input [0:3]Non_Secure;
  input Interrupt;
  input [0:31]Interrupt_Address;
  output [0:1]Interrupt_Ack;
  input Ext_BRK;
  input Ext_NM_BRK;
  input Pause;
  output Pause_Ack;
  output Dbg_Continue;
  input Dbg_Stop;
  output Dbg_Intr;
  output MB_Halted;
  output MB_Error;
  input [0:1]Wakeup;
  output Sleep;
  output Hibernate;
  output Suspend;
  output Dbg_Wakeup;
  input [0:4095]LOCKSTEP_Slave_In;
  output [0:4095]LOCKSTEP_Master_Out;
  output [0:4095]LOCKSTEP_Out;
  output [0:31]Instr_Addr;
  input [0:31]Instr;
  output IFetch;
  output I_AS;
  input IReady;
  input IWAIT;
  input ICE;
  input IUE;
  output [0:0]M_AXI_IP_AWID;
  output [31:0]M_AXI_IP_AWADDR;
  output [7:0]M_AXI_IP_AWLEN;
  output [2:0]M_AXI_IP_AWSIZE;
  output [1:0]M_AXI_IP_AWBURST;
  output M_AXI_IP_AWLOCK;
  output [3:0]M_AXI_IP_AWCACHE;
  output [2:0]M_AXI_IP_AWPROT;
  output [3:0]M_AXI_IP_AWQOS;
  output M_AXI_IP_AWVALID;
  input M_AXI_IP_AWREADY;
  output [31:0]M_AXI_IP_WDATA;
  output [3:0]M_AXI_IP_WSTRB;
  output M_AXI_IP_WLAST;
  output M_AXI_IP_WVALID;
  input M_AXI_IP_WREADY;
  input [0:0]M_AXI_IP_BID;
  input [1:0]M_AXI_IP_BRESP;
  input M_AXI_IP_BVALID;
  output M_AXI_IP_BREADY;
  output [0:0]M_AXI_IP_ARID;
  output [31:0]M_AXI_IP_ARADDR;
  output [7:0]M_AXI_IP_ARLEN;
  output [2:0]M_AXI_IP_ARSIZE;
  output [1:0]M_AXI_IP_ARBURST;
  output M_AXI_IP_ARLOCK;
  output [3:0]M_AXI_IP_ARCACHE;
  output [2:0]M_AXI_IP_ARPROT;
  output [3:0]M_AXI_IP_ARQOS;
  output M_AXI_IP_ARVALID;
  input M_AXI_IP_ARREADY;
  input [0:0]M_AXI_IP_RID;
  input [31:0]M_AXI_IP_RDATA;
  input [1:0]M_AXI_IP_RRESP;
  input M_AXI_IP_RLAST;
  input M_AXI_IP_RVALID;
  output M_AXI_IP_RREADY;
  output [0:31]Data_Addr;
  input [0:31]Data_Read;
  output [0:31]Data_Write;
  output D_AS;
  output Read_Strobe;
  output Write_Strobe;
  input DReady;
  input DWait;
  input DCE;
  input DUE;
  output [0:3]Byte_Enable;
  output [0:0]M_AXI_DP_AWID;
  output [31:0]M_AXI_DP_AWADDR;
  output [7:0]M_AXI_DP_AWLEN;
  output [2:0]M_AXI_DP_AWSIZE;
  output [1:0]M_AXI_DP_AWBURST;
  output M_AXI_DP_AWLOCK;
  output [3:0]M_AXI_DP_AWCACHE;
  output [2:0]M_AXI_DP_AWPROT;
  output [3:0]M_AXI_DP_AWQOS;
  output M_AXI_DP_AWVALID;
  input M_AXI_DP_AWREADY;
  output [31:0]M_AXI_DP_WDATA;
  output [3:0]M_AXI_DP_WSTRB;
  output M_AXI_DP_WLAST;
  output M_AXI_DP_WVALID;
  input M_AXI_DP_WREADY;
  input [0:0]M_AXI_DP_BID;
  input [1:0]M_AXI_DP_BRESP;
  input M_AXI_DP_BVALID;
  output M_AXI_DP_BREADY;
  output [0:0]M_AXI_DP_ARID;
  output [31:0]M_AXI_DP_ARADDR;
  output [7:0]M_AXI_DP_ARLEN;
  output [2:0]M_AXI_DP_ARSIZE;
  output [1:0]M_AXI_DP_ARBURST;
  output M_AXI_DP_ARLOCK;
  output [3:0]M_AXI_DP_ARCACHE;
  output [2:0]M_AXI_DP_ARPROT;
  output [3:0]M_AXI_DP_ARQOS;
  output M_AXI_DP_ARVALID;
  input M_AXI_DP_ARREADY;
  input [0:0]M_AXI_DP_RID;
  input [31:0]M_AXI_DP_RDATA;
  input [1:0]M_AXI_DP_RRESP;
  input M_AXI_DP_RLAST;
  input M_AXI_DP_RVALID;
  output M_AXI_DP_RREADY;
  input Dbg_Disable;
  input Dbg_Clk;
  input Dbg_TDI;
  output Dbg_TDO;
  input [0:7]Dbg_Reg_En;
  input Dbg_Shift;
  input Dbg_Capture;
  input Dbg_Update;
  input Debug_Rst;
  output [0:7]Dbg_Trig_In;
  input [0:7]Dbg_Trig_Ack_In;
  input [0:7]Dbg_Trig_Out;
  output [0:7]Dbg_Trig_Ack_Out;
  input Dbg_Trace_Clk;
  output [0:35]Dbg_Trace_Data;
  input Dbg_Trace_Ready;
  output Dbg_Trace_Valid;
  input [14:2]Dbg_AWADDR;
  input Dbg_AWVALID;
  output Dbg_AWREADY;
  input [31:0]Dbg_WDATA;
  input Dbg_WVALID;
  output Dbg_WREADY;
  output [1:0]Dbg_BRESP;
  output Dbg_BVALID;
  input Dbg_BREADY;
  input [14:2]Dbg_ARADDR;
  input Dbg_ARVALID;
  output Dbg_ARREADY;
  output [31:0]Dbg_RDATA;
  output [1:0]Dbg_RRESP;
  output Dbg_RVALID;
  input Dbg_RREADY;
  input DEBUG_ACLK;
  input DEBUG_ARESETN;
  (* mark_debug = "false" *) output [0:31]Trace_Instruction;
  (* mark_debug = "false" *) output Trace_Valid_Instr;
  (* mark_debug = "false" *) output [0:31]Trace_PC;
  (* mark_debug = "false" *) output Trace_Reg_Write;
  (* mark_debug = "false" *) output [0:4]Trace_Reg_Addr;
  (* mark_debug = "false" *) output [0:14]Trace_MSR_Reg;
  (* mark_debug = "false" *) output [0:7]Trace_PID_Reg;
  (* mark_debug = "false" *) output [0:31]Trace_New_Reg_Value;
  (* mark_debug = "false" *) output Trace_Exception_Taken;
  (* mark_debug = "false" *) output [0:4]Trace_Exception_Kind;
  (* mark_debug = "false" *) output Trace_Jump_Taken;
  (* mark_debug = "false" *) output Trace_Delay_Slot;
  (* mark_debug = "false" *) output [0:31]Trace_Data_Address;
  (* mark_debug = "false" *) output [0:31]Trace_Data_Write_Value;
  (* mark_debug = "false" *) output [0:3]Trace_Data_Byte_Enable;
  (* mark_debug = "false" *) output Trace_Data_Access;
  (* mark_debug = "false" *) output Trace_Data_Read;
  (* mark_debug = "false" *) output Trace_Data_Write;
  (* mark_debug = "false" *) output Trace_DCache_Req;
  (* mark_debug = "false" *) output Trace_DCache_Hit;
  (* mark_debug = "false" *) output Trace_DCache_Rdy;
  (* mark_debug = "false" *) output Trace_DCache_Read;
  (* mark_debug = "false" *) output Trace_ICache_Req;
  (* mark_debug = "false" *) output Trace_ICache_Hit;
  (* mark_debug = "false" *) output Trace_ICache_Rdy;
  (* mark_debug = "false" *) output Trace_OF_PipeRun;
  (* mark_debug = "false" *) output Trace_EX_PipeRun;
  (* mark_debug = "false" *) output Trace_MEM_PipeRun;
  (* mark_debug = "false" *) output Trace_MB_Halted;
  (* mark_debug = "false" *) output Trace_Jump_Hit;
  output M0_AXIS_TLAST;
  output [31:0]M0_AXIS_TDATA;
  output M0_AXIS_TVALID;
  input M0_AXIS_TREADY;
  output M1_AXIS_TLAST;
  output [31:0]M1_AXIS_TDATA;
  output M1_AXIS_TVALID;
  input M1_AXIS_TREADY;
  output M2_AXIS_TLAST;
  output [31:0]M2_AXIS_TDATA;
  output M2_AXIS_TVALID;
  input M2_AXIS_TREADY;
  output M3_AXIS_TLAST;
  output [31:0]M3_AXIS_TDATA;
  output M3_AXIS_TVALID;
  input M3_AXIS_TREADY;
  output M4_AXIS_TLAST;
  output [31:0]M4_AXIS_TDATA;
  output M4_AXIS_TVALID;
  input M4_AXIS_TREADY;
  output M5_AXIS_TLAST;
  output [31:0]M5_AXIS_TDATA;
  output M5_AXIS_TVALID;
  input M5_AXIS_TREADY;
  output M6_AXIS_TLAST;
  output [31:0]M6_AXIS_TDATA;
  output M6_AXIS_TVALID;
  input M6_AXIS_TREADY;
  output M7_AXIS_TLAST;
  output [31:0]M7_AXIS_TDATA;
  output M7_AXIS_TVALID;
  input M7_AXIS_TREADY;
  output M8_AXIS_TLAST;
  output [31:0]M8_AXIS_TDATA;
  output M8_AXIS_TVALID;
  input M8_AXIS_TREADY;
  output M9_AXIS_TLAST;
  output [31:0]M9_AXIS_TDATA;
  output M9_AXIS_TVALID;
  input M9_AXIS_TREADY;
  output M10_AXIS_TLAST;
  output [31:0]M10_AXIS_TDATA;
  output M10_AXIS_TVALID;
  input M10_AXIS_TREADY;
  output M11_AXIS_TLAST;
  output [31:0]M11_AXIS_TDATA;
  output M11_AXIS_TVALID;
  input M11_AXIS_TREADY;
  output M12_AXIS_TLAST;
  output [31:0]M12_AXIS_TDATA;
  output M12_AXIS_TVALID;
  input M12_AXIS_TREADY;
  output M13_AXIS_TLAST;
  output [31:0]M13_AXIS_TDATA;
  output M13_AXIS_TVALID;
  input M13_AXIS_TREADY;
  output M14_AXIS_TLAST;
  output [31:0]M14_AXIS_TDATA;
  output M14_AXIS_TVALID;
  input M14_AXIS_TREADY;
  output M15_AXIS_TLAST;
  output [31:0]M15_AXIS_TDATA;
  output M15_AXIS_TVALID;
  input M15_AXIS_TREADY;
  input S0_AXIS_TLAST;
  input [31:0]S0_AXIS_TDATA;
  input S0_AXIS_TVALID;
  output S0_AXIS_TREADY;
  input S1_AXIS_TLAST;
  input [31:0]S1_AXIS_TDATA;
  input S1_AXIS_TVALID;
  output S1_AXIS_TREADY;
  input S2_AXIS_TLAST;
  input [31:0]S2_AXIS_TDATA;
  input S2_AXIS_TVALID;
  output S2_AXIS_TREADY;
  input S3_AXIS_TLAST;
  input [31:0]S3_AXIS_TDATA;
  input S3_AXIS_TVALID;
  output S3_AXIS_TREADY;
  input S4_AXIS_TLAST;
  input [31:0]S4_AXIS_TDATA;
  input S4_AXIS_TVALID;
  output S4_AXIS_TREADY;
  input S5_AXIS_TLAST;
  input [31:0]S5_AXIS_TDATA;
  input S5_AXIS_TVALID;
  output S5_AXIS_TREADY;
  input S6_AXIS_TLAST;
  input [31:0]S6_AXIS_TDATA;
  input S6_AXIS_TVALID;
  output S6_AXIS_TREADY;
  input S7_AXIS_TLAST;
  input [31:0]S7_AXIS_TDATA;
  input S7_AXIS_TVALID;
  output S7_AXIS_TREADY;
  input S8_AXIS_TLAST;
  input [31:0]S8_AXIS_TDATA;
  input S8_AXIS_TVALID;
  output S8_AXIS_TREADY;
  input S9_AXIS_TLAST;
  input [31:0]S9_AXIS_TDATA;
  input S9_AXIS_TVALID;
  output S9_AXIS_TREADY;
  input S10_AXIS_TLAST;
  input [31:0]S10_AXIS_TDATA;
  input S10_AXIS_TVALID;
  output S10_AXIS_TREADY;
  input S11_AXIS_TLAST;
  input [31:0]S11_AXIS_TDATA;
  input S11_AXIS_TVALID;
  output S11_AXIS_TREADY;
  input S12_AXIS_TLAST;
  input [31:0]S12_AXIS_TDATA;
  input S12_AXIS_TVALID;
  output S12_AXIS_TREADY;
  input S13_AXIS_TLAST;
  input [31:0]S13_AXIS_TDATA;
  input S13_AXIS_TVALID;
  output S13_AXIS_TREADY;
  input S14_AXIS_TLAST;
  input [31:0]S14_AXIS_TDATA;
  input S14_AXIS_TVALID;
  output S14_AXIS_TREADY;
  input S15_AXIS_TLAST;
  input [31:0]S15_AXIS_TDATA;
  input S15_AXIS_TVALID;
  output S15_AXIS_TREADY;
  output [0:0]M_AXI_IC_AWID;
  output [31:0]M_AXI_IC_AWADDR;
  output [7:0]M_AXI_IC_AWLEN;
  output [2:0]M_AXI_IC_AWSIZE;
  output [1:0]M_AXI_IC_AWBURST;
  output M_AXI_IC_AWLOCK;
  output [3:0]M_AXI_IC_AWCACHE;
  output [2:0]M_AXI_IC_AWPROT;
  output [3:0]M_AXI_IC_AWQOS;
  output M_AXI_IC_AWVALID;
  input M_AXI_IC_AWREADY;
  output [4:0]M_AXI_IC_AWUSER;
  output [1:0]M_AXI_IC_AWDOMAIN;
  output [2:0]M_AXI_IC_AWSNOOP;
  output [1:0]M_AXI_IC_AWBAR;
  output [31:0]M_AXI_IC_WDATA;
  output [3:0]M_AXI_IC_WSTRB;
  output M_AXI_IC_WLAST;
  output M_AXI_IC_WVALID;
  input M_AXI_IC_WREADY;
  output [0:0]M_AXI_IC_WUSER;
  input [0:0]M_AXI_IC_BID;
  input [1:0]M_AXI_IC_BRESP;
  input M_AXI_IC_BVALID;
  output M_AXI_IC_BREADY;
  input [0:0]M_AXI_IC_BUSER;
  output M_AXI_IC_WACK;
  output [0:0]M_AXI_IC_ARID;
  output [31:0]M_AXI_IC_ARADDR;
  output [7:0]M_AXI_IC_ARLEN;
  output [2:0]M_AXI_IC_ARSIZE;
  output [1:0]M_AXI_IC_ARBURST;
  output M_AXI_IC_ARLOCK;
  output [3:0]M_AXI_IC_ARCACHE;
  output [2:0]M_AXI_IC_ARPROT;
  output [3:0]M_AXI_IC_ARQOS;
  output M_AXI_IC_ARVALID;
  input M_AXI_IC_ARREADY;
  output [4:0]M_AXI_IC_ARUSER;
  output [1:0]M_AXI_IC_ARDOMAIN;
  output [3:0]M_AXI_IC_ARSNOOP;
  output [1:0]M_AXI_IC_ARBAR;
  input [0:0]M_AXI_IC_RID;
  input [31:0]M_AXI_IC_RDATA;
  input [1:0]M_AXI_IC_RRESP;
  input M_AXI_IC_RLAST;
  input M_AXI_IC_RVALID;
  output M_AXI_IC_RREADY;
  input [0:0]M_AXI_IC_RUSER;
  output M_AXI_IC_RACK;
  input M_AXI_IC_ACVALID;
  input [31:0]M_AXI_IC_ACADDR;
  input [3:0]M_AXI_IC_ACSNOOP;
  input [2:0]M_AXI_IC_ACPROT;
  output M_AXI_IC_ACREADY;
  output M_AXI_IC_CRVALID;
  output [4:0]M_AXI_IC_CRRESP;
  input M_AXI_IC_CRREADY;
  output M_AXI_IC_CDVALID;
  output [31:0]M_AXI_IC_CDDATA;
  output M_AXI_IC_CDLAST;
  input M_AXI_IC_CDREADY;
  output [0:0]M_AXI_DC_AWID;
  output [31:0]M_AXI_DC_AWADDR;
  output [7:0]M_AXI_DC_AWLEN;
  output [2:0]M_AXI_DC_AWSIZE;
  output [1:0]M_AXI_DC_AWBURST;
  output M_AXI_DC_AWLOCK;
  output [3:0]M_AXI_DC_AWCACHE;
  output [2:0]M_AXI_DC_AWPROT;
  output [3:0]M_AXI_DC_AWQOS;
  output M_AXI_DC_AWVALID;
  input M_AXI_DC_AWREADY;
  output [4:0]M_AXI_DC_AWUSER;
  output [1:0]M_AXI_DC_AWDOMAIN;
  output [2:0]M_AXI_DC_AWSNOOP;
  output [1:0]M_AXI_DC_AWBAR;
  output [31:0]M_AXI_DC_WDATA;
  output [3:0]M_AXI_DC_WSTRB;
  output M_AXI_DC_WLAST;
  output M_AXI_DC_WVALID;
  input M_AXI_DC_WREADY;
  output [0:0]M_AXI_DC_WUSER;
  input [1:0]M_AXI_DC_BRESP;
  input [0:0]M_AXI_DC_BID;
  input M_AXI_DC_BVALID;
  output M_AXI_DC_BREADY;
  input [0:0]M_AXI_DC_BUSER;
  output M_AXI_DC_WACK;
  output [0:0]M_AXI_DC_ARID;
  output [31:0]M_AXI_DC_ARADDR;
  output [7:0]M_AXI_DC_ARLEN;
  output [2:0]M_AXI_DC_ARSIZE;
  output [1:0]M_AXI_DC_ARBURST;
  output M_AXI_DC_ARLOCK;
  output [3:0]M_AXI_DC_ARCACHE;
  output [2:0]M_AXI_DC_ARPROT;
  output [3:0]M_AXI_DC_ARQOS;
  output M_AXI_DC_ARVALID;
  input M_AXI_DC_ARREADY;
  output [4:0]M_AXI_DC_ARUSER;
  output [1:0]M_AXI_DC_ARDOMAIN;
  output [3:0]M_AXI_DC_ARSNOOP;
  output [1:0]M_AXI_DC_ARBAR;
  input [0:0]M_AXI_DC_RID;
  input [31:0]M_AXI_DC_RDATA;
  input [1:0]M_AXI_DC_RRESP;
  input M_AXI_DC_RLAST;
  input M_AXI_DC_RVALID;
  output M_AXI_DC_RREADY;
  input [0:0]M_AXI_DC_RUSER;
  output M_AXI_DC_RACK;
  input M_AXI_DC_ACVALID;
  input [31:0]M_AXI_DC_ACADDR;
  input [3:0]M_AXI_DC_ACSNOOP;
  input [2:0]M_AXI_DC_ACPROT;
  output M_AXI_DC_ACREADY;
  output M_AXI_DC_CRVALID;
  output [4:0]M_AXI_DC_CRRESP;
  input M_AXI_DC_CRREADY;
  output M_AXI_DC_CDVALID;
  output [31:0]M_AXI_DC_CDDATA;
  output M_AXI_DC_CDLAST;
  input M_AXI_DC_CDREADY;

  wire [0:3]Byte_Enable;
  wire Clk;
  wire DReady;
  wire D_AS;
  wire [0:31]Data_Addr;
  wire [0:31]Data_Read;
  wire [0:31]Data_Write;
  wire Dbg_Capture;
  wire Dbg_Clk;
  wire [0:7]Dbg_Reg_En;
  wire Dbg_Shift;
  wire Dbg_TDI;
  wire Dbg_TDO;
  wire Dbg_TDO_INST_0_i_10_n_0;
  wire Dbg_TDO_INST_0_i_30_n_0;
  wire Dbg_TDO_INST_0_i_3_n_0;
  wire Dbg_Update;
  wire Debug_Rst;
  wire IReady;
  wire I_AS;
  wire [0:31]Instr;
  wire [0:31]Instr_Addr;
  wire [31:0]M_AXI_DP_ARADDR;
  wire M_AXI_DP_ARREADY;
  wire M_AXI_DP_ARVALID;
  wire M_AXI_DP_AWREADY;
  wire M_AXI_DP_AWVALID;
  wire M_AXI_DP_BVALID;
  wire [31:0]M_AXI_DP_RDATA;
  wire M_AXI_DP_RVALID;
  wire [31:0]M_AXI_DP_WDATA;
  wire M_AXI_DP_WREADY;
  wire M_AXI_DP_WVALID;
  wire MicroBlaze_Core_I_n_412;
  wire \Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Status_Reg_En ;
  wire Reset;
  wire Write_Strobe;
  wire NLW_MicroBlaze_Core_I_DWait_UNCONNECTED;
  wire NLW_MicroBlaze_Core_I_Dbg_Stop_UNCONNECTED;
  wire NLW_MicroBlaze_Core_I_Hibernate_UNCONNECTED;
  wire NLW_MicroBlaze_Core_I_Mb_Reset_UNCONNECTED;
  wire NLW_MicroBlaze_Core_I_Pause_UNCONNECTED;
  wire NLW_MicroBlaze_Core_I_Pause_Ack_UNCONNECTED;
  wire NLW_MicroBlaze_Core_I_Scan_Reset_UNCONNECTED;
  wire NLW_MicroBlaze_Core_I_Scan_Reset_Sel_UNCONNECTED;
  wire NLW_MicroBlaze_Core_I_Sleep_UNCONNECTED;
  wire NLW_MicroBlaze_Core_I_Suspend_UNCONNECTED;
  wire \NLW_MicroBlaze_Core_I_Using_FPGA.Native_UNCONNECTED ;
  wire NLW_MicroBlaze_Core_I_WB_Read_Imm_Reg_1_reg_UNCONNECTED;
  wire NLW_MicroBlaze_Core_I_use_Reg_Neg_S_reg_UNCONNECTED;
  wire [356:0]NLW_MicroBlaze_Core_I_D_UNCONNECTED;
  wire [1:0]NLW_MicroBlaze_Core_I_Dbg_Trig_Ack_In_UNCONNECTED;
  wire [1:0]NLW_MicroBlaze_Core_I_Dbg_Trig_Ack_Out_UNCONNECTED;
  wire [1:0]NLW_MicroBlaze_Core_I_Dbg_Trig_In_UNCONNECTED;
  wire [1:0]NLW_MicroBlaze_Core_I_Dbg_Trig_Out_UNCONNECTED;
  wire [40:0]NLW_MicroBlaze_Core_I_LOCKSTEP_Master_Out_UNCONNECTED;
  wire [1:0]NLW_MicroBlaze_Core_I_Q_UNCONNECTED;
  wire [0:1]NLW_MicroBlaze_Core_I_Reset_Mode_UNCONNECTED;
  wire [0:1]NLW_MicroBlaze_Core_I_Wakeup_UNCONNECTED;

  LUT4 #(
    .INIT(16'h0010)) 
    Dbg_TDO_INST_0_i_10
       (.I0(Dbg_Reg_En[0]),
        .I1(Dbg_Reg_En[2]),
        .I2(Dbg_Reg_En[6]),
        .I3(Dbg_Reg_En[7]),
        .O(Dbg_TDO_INST_0_i_10_n_0));
  LUT4 #(
    .INIT(16'h0010)) 
    Dbg_TDO_INST_0_i_3
       (.I0(Dbg_Reg_En[1]),
        .I1(Dbg_Reg_En[3]),
        .I2(Dbg_Reg_En[5]),
        .I3(Dbg_Reg_En[4]),
        .O(Dbg_TDO_INST_0_i_3_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    Dbg_TDO_INST_0_i_30
       (.I0(Dbg_Reg_En[2]),
        .I1(Dbg_Reg_En[0]),
        .O(Dbg_TDO_INST_0_i_30_n_0));
  LUT5 #(
    .INIT(32'h00000200)) 
    Dbg_TDO_INST_0_i_6
       (.I0(Dbg_Reg_En[7]),
        .I1(Dbg_Reg_En[0]),
        .I2(Dbg_Reg_En[2]),
        .I3(Dbg_Reg_En[6]),
        .I4(MicroBlaze_Core_I_n_412),
        .O(\Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Status_Reg_En ));
  MicroBlaze_Core MicroBlaze_Core_I
       (.Clk(Clk),
        .D({NLW_MicroBlaze_Core_I_D_UNCONNECTED[356:355],I_AS,NLW_MicroBlaze_Core_I_D_UNCONNECTED[353:336],Instr_Addr[18],Instr_Addr[19],Instr_Addr[20],Instr_Addr[21],Instr_Addr[22],Instr_Addr[23],Instr_Addr[24],Instr_Addr[25],Instr_Addr[26],Instr_Addr[27],Instr_Addr[28],Instr_Addr[29],NLW_MicroBlaze_Core_I_D_UNCONNECTED[323:312],Data_Addr[10],NLW_MicroBlaze_Core_I_D_UNCONNECTED[310:304],Data_Addr[18],Data_Addr[19],Data_Addr[20],Data_Addr[21],Data_Addr[22],Data_Addr[23],Data_Addr[24],Data_Addr[25],Data_Addr[26],Data_Addr[27],Data_Addr[28],Data_Addr[29],NLW_MicroBlaze_Core_I_D_UNCONNECTED[291:290],Data_Write[0],Data_Write[1],Data_Write[2],Data_Write[3],Data_Write[4],Data_Write[5],Data_Write[6],Data_Write[7],Data_Write[8],Data_Write[9],Data_Write[10],Data_Write[11],Data_Write[12],Data_Write[13],Data_Write[14],Data_Write[15],Data_Write[16],Data_Write[17],Data_Write[18],Data_Write[19],Data_Write[20],Data_Write[21],Data_Write[22],Data_Write[23],Data_Write[24],Data_Write[25],Data_Write[26],Data_Write[27],Data_Write[28],Data_Write[29],Data_Write[30],Data_Write[31],D_AS,NLW_MicroBlaze_Core_I_D_UNCONNECTED[256],Write_Strobe,Byte_Enable[0],Byte_Enable[1],Byte_Enable[2],Byte_Enable[3],M_AXI_DP_ARADDR[31:16],NLW_MicroBlaze_Core_I_D_UNCONNECTED[234:223],M_AXI_DP_ARADDR[3:2],NLW_MicroBlaze_Core_I_D_UNCONNECTED[220:219],M_AXI_DP_AWVALID,M_AXI_DP_WDATA,NLW_MicroBlaze_Core_I_D_UNCONNECTED[185:182],M_AXI_DP_WVALID,M_AXI_DP_ARVALID,NLW_MicroBlaze_Core_I_D_UNCONNECTED[179:0]}),
        .DReady(DReady),
        .DWait(NLW_MicroBlaze_Core_I_DWait_UNCONNECTED),
        .Data_Read(Data_Read),
        .Dbg_Capture(Dbg_Capture),
        .Dbg_Clk(Dbg_Clk),
        .Dbg_Reg_En(Dbg_Reg_En),
        .Dbg_Shift(Dbg_Shift),
        .Dbg_Stop(NLW_MicroBlaze_Core_I_Dbg_Stop_UNCONNECTED),
        .Dbg_TDI(Dbg_TDI),
        .Dbg_TDO(Dbg_TDO),
        .Dbg_Trig_Ack_In(NLW_MicroBlaze_Core_I_Dbg_Trig_Ack_In_UNCONNECTED[1:0]),
        .Dbg_Trig_Ack_Out(NLW_MicroBlaze_Core_I_Dbg_Trig_Ack_Out_UNCONNECTED[1:0]),
        .Dbg_Trig_In(NLW_MicroBlaze_Core_I_Dbg_Trig_In_UNCONNECTED[1:0]),
        .Dbg_Trig_Out(NLW_MicroBlaze_Core_I_Dbg_Trig_Out_UNCONNECTED[1:0]),
        .Dbg_Update(Dbg_Update),
        .Debug_Rst(Debug_Rst),
        .Hibernate(NLW_MicroBlaze_Core_I_Hibernate_UNCONNECTED),
        .IReady(IReady),
        .Instr(Instr),
        .LOCKSTEP_Master_Out(NLW_MicroBlaze_Core_I_LOCKSTEP_Master_Out_UNCONNECTED[40:0]),
        .M_AXI_DP_ARREADY(M_AXI_DP_ARREADY),
        .M_AXI_DP_AWREADY(M_AXI_DP_AWREADY),
        .M_AXI_DP_BVALID(M_AXI_DP_BVALID),
        .M_AXI_DP_RDATA(M_AXI_DP_RDATA),
        .M_AXI_DP_RVALID(M_AXI_DP_RVALID),
        .M_AXI_DP_WREADY(M_AXI_DP_WREADY),
        .Mb_Reset(NLW_MicroBlaze_Core_I_Mb_Reset_UNCONNECTED),
        .Pause(NLW_MicroBlaze_Core_I_Pause_UNCONNECTED),
        .Pause_Ack(NLW_MicroBlaze_Core_I_Pause_Ack_UNCONNECTED),
        .Q(NLW_MicroBlaze_Core_I_Q_UNCONNECTED[1:0]),
        .Reset(Reset),
        .Reset_Mode(NLW_MicroBlaze_Core_I_Reset_Mode_UNCONNECTED[0:1]),
        .Scan_Reset(NLW_MicroBlaze_Core_I_Scan_Reset_UNCONNECTED),
        .Scan_Reset_Sel(NLW_MicroBlaze_Core_I_Scan_Reset_Sel_UNCONNECTED),
        .\Serial_Dbg_Intf.command_reg_reg[1] (MicroBlaze_Core_I_n_412),
        .Sleep(NLW_MicroBlaze_Core_I_Sleep_UNCONNECTED),
        .Status_Reg_En(\Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Status_Reg_En ),
        .Suspend(NLW_MicroBlaze_Core_I_Suspend_UNCONNECTED),
        .\Use_Serial_Unified_Completion.completion_block_reg (Dbg_TDO_INST_0_i_3_n_0),
        .\Use_Serial_Unified_Completion.completion_block_reg_0 (Dbg_TDO_INST_0_i_30_n_0),
        .\Use_Serial_Unified_Completion.completion_block_reg_1 (Dbg_TDO_INST_0_i_10_n_0),
        .\Using_FPGA.Native (\NLW_MicroBlaze_Core_I_Using_FPGA.Native_UNCONNECTED ),
        .WB_Read_Imm_Reg_1_reg(NLW_MicroBlaze_Core_I_WB_Read_Imm_Reg_1_reg_UNCONNECTED),
        .Wakeup(NLW_MicroBlaze_Core_I_Wakeup_UNCONNECTED[0:1]),
        .use_Reg_Neg_S_reg(NLW_MicroBlaze_Core_I_use_Reg_Neg_S_reg_UNCONNECTED));
endmodule

module MicroBlaze_Core
   (use_Reg_Neg_S_reg,
    WB_Read_Imm_Reg_1_reg,
    \Using_FPGA.Native ,
    Q,
    D,
    Pause_Ack,
    Sleep,
    LOCKSTEP_Master_Out,
    Hibernate,
    Suspend,
    Dbg_Trig_In,
    Dbg_Trig_Ack_Out,
    Dbg_TDO,
    \Serial_Dbg_Intf.command_reg_reg[1] ,
    Clk,
    Dbg_Clk,
    Debug_Rst,
    Reset,
    Mb_Reset,
    Pause,
    Dbg_Update,
    Dbg_Trig_Ack_In,
    Dbg_Trig_Out,
    Dbg_Stop,
    Dbg_Capture,
    \Use_Serial_Unified_Completion.completion_block_reg ,
    Status_Reg_En,
    IReady,
    Reset_Mode,
    DWait,
    DReady,
    Scan_Reset,
    Scan_Reset_Sel,
    Dbg_Reg_En,
    \Use_Serial_Unified_Completion.completion_block_reg_0 ,
    Dbg_Shift,
    M_AXI_DP_BVALID,
    M_AXI_DP_RVALID,
    \Use_Serial_Unified_Completion.completion_block_reg_1 ,
    M_AXI_DP_ARREADY,
    M_AXI_DP_WREADY,
    M_AXI_DP_AWREADY,
    Instr,
    Dbg_TDI,
    Wakeup,
    M_AXI_DP_RDATA,
    Data_Read);
  output use_Reg_Neg_S_reg;
  output WB_Read_Imm_Reg_1_reg;
  output \Using_FPGA.Native ;
  output [1:0]Q;
  output [356:0]D;
  output Pause_Ack;
  output Sleep;
  output [40:0]LOCKSTEP_Master_Out;
  output Hibernate;
  output Suspend;
  output [1:0]Dbg_Trig_In;
  output [1:0]Dbg_Trig_Ack_Out;
  output Dbg_TDO;
  output \Serial_Dbg_Intf.command_reg_reg[1] ;
  input Clk;
  input Dbg_Clk;
  input Debug_Rst;
  input Reset;
  input Mb_Reset;
  input Pause;
  input Dbg_Update;
  input [1:0]Dbg_Trig_Ack_In;
  input [1:0]Dbg_Trig_Out;
  input Dbg_Stop;
  input Dbg_Capture;
  input \Use_Serial_Unified_Completion.completion_block_reg ;
  input Status_Reg_En;
  input IReady;
  input [0:1]Reset_Mode;
  input DWait;
  input DReady;
  input Scan_Reset;
  input Scan_Reset_Sel;
  input [0:7]Dbg_Reg_En;
  input \Use_Serial_Unified_Completion.completion_block_reg_0 ;
  input Dbg_Shift;
  input M_AXI_DP_BVALID;
  input M_AXI_DP_RVALID;
  input \Use_Serial_Unified_Completion.completion_block_reg_1 ;
  input M_AXI_DP_ARREADY;
  input M_AXI_DP_WREADY;
  input M_AXI_DP_AWREADY;
  input [0:31]Instr;
  input Dbg_TDI;
  input [0:1]Wakeup;
  input [31:0]M_AXI_DP_RDATA;
  input [0:31]Data_Read;

  wire Clk;
  wire [356:0]D;
  wire DReady;
  wire [0:31]Data_Read;
  wire Dbg_Capture;
  wire Dbg_Clk;
  wire [0:7]Dbg_Reg_En;
  wire Dbg_Shift;
  wire Dbg_TDI;
  wire Dbg_TDO;
  wire Dbg_Update;
  wire Debug_Rst;
  wire IReady;
  wire [0:31]Instr;
  wire M_AXI_DP_ARREADY;
  wire M_AXI_DP_AWREADY;
  wire M_AXI_DP_BVALID;
  wire [31:0]M_AXI_DP_RDATA;
  wire M_AXI_DP_RVALID;
  wire M_AXI_DP_WREADY;
  wire Reset;
  wire \Serial_Dbg_Intf.command_reg_reg[1] ;
  wire Status_Reg_En;
  wire Synced;
  wire \Use_Serial_Unified_Completion.completion_block_reg ;
  wire \Use_Serial_Unified_Completion.completion_block_reg_0 ;
  wire \Use_Serial_Unified_Completion.completion_block_reg_1 ;
  wire reset_temp__0;
  wire sync_reset;
  wire \NLW_Performance.Core_DI_UNCONNECTED ;
  wire \NLW_Performance.Core_DWait_UNCONNECTED ;
  wire \NLW_Performance.Core_Dbg_Stop_UNCONNECTED ;
  wire \NLW_Performance.Core_Hibernate_UNCONNECTED ;
  wire \NLW_Performance.Core_LOCKSTEP_Out_reg[2915]_UNCONNECTED ;
  wire \NLW_Performance.Core_LOCKSTEP_Out_reg[2916]_UNCONNECTED ;
  wire \NLW_Performance.Core_LOCKSTEP_Out_reg[2917]_UNCONNECTED ;
  wire \NLW_Performance.Core_LOCKSTEP_Out_reg[2918]_UNCONNECTED ;
  wire \NLW_Performance.Core_LOCKSTEP_Out_reg[2919]_UNCONNECTED ;
  wire \NLW_Performance.Core_LOCKSTEP_Out_reg[2920]_UNCONNECTED ;
  wire \NLW_Performance.Core_LOCKSTEP_Out_reg[2921]_UNCONNECTED ;
  wire \NLW_Performance.Core_LOCKSTEP_Out_reg[2922]_UNCONNECTED ;
  wire \NLW_Performance.Core_LOCKSTEP_Out_reg[2923]_UNCONNECTED ;
  wire \NLW_Performance.Core_LOCKSTEP_Out_reg[2924]_UNCONNECTED ;
  wire \NLW_Performance.Core_LOCKSTEP_Out_reg[2925]_UNCONNECTED ;
  wire \NLW_Performance.Core_LOCKSTEP_Out_reg[2926]_UNCONNECTED ;
  wire \NLW_Performance.Core_LOCKSTEP_Out_reg[2927]_UNCONNECTED ;
  wire \NLW_Performance.Core_LOCKSTEP_Out_reg[2928]_UNCONNECTED ;
  wire \NLW_Performance.Core_LOCKSTEP_Out_reg[2929]_UNCONNECTED ;
  wire \NLW_Performance.Core_LOCKSTEP_Out_reg[2930]_UNCONNECTED ;
  wire \NLW_Performance.Core_LOCKSTEP_Out_reg[2931]_UNCONNECTED ;
  wire \NLW_Performance.Core_LOCKSTEP_Out_reg[2932]_UNCONNECTED ;
  wire \NLW_Performance.Core_LOCKSTEP_Out_reg[2933]_UNCONNECTED ;
  wire \NLW_Performance.Core_LOCKSTEP_Out_reg[2934]_UNCONNECTED ;
  wire \NLW_Performance.Core_LOCKSTEP_Out_reg[2935]_UNCONNECTED ;
  wire \NLW_Performance.Core_LOCKSTEP_Out_reg[2936]_UNCONNECTED ;
  wire \NLW_Performance.Core_LOCKSTEP_Out_reg[2937]_UNCONNECTED ;
  wire \NLW_Performance.Core_LOCKSTEP_Out_reg[2938]_UNCONNECTED ;
  wire \NLW_Performance.Core_LOCKSTEP_Out_reg[2939]_UNCONNECTED ;
  wire \NLW_Performance.Core_LOCKSTEP_Out_reg[2940]_UNCONNECTED ;
  wire \NLW_Performance.Core_LOCKSTEP_Out_reg[2941]_UNCONNECTED ;
  wire \NLW_Performance.Core_LOCKSTEP_Out_reg[2942]_UNCONNECTED ;
  wire \NLW_Performance.Core_LOCKSTEP_Out_reg[2943]_UNCONNECTED ;
  wire \NLW_Performance.Core_LOCKSTEP_Out_reg[2944]_UNCONNECTED ;
  wire \NLW_Performance.Core_Pause_UNCONNECTED ;
  wire \NLW_Performance.Core_Pause_Ack_UNCONNECTED ;
  wire \NLW_Performance.Core_Scan_Reset_UNCONNECTED ;
  wire \NLW_Performance.Core_Scan_Reset_Sel_UNCONNECTED ;
  wire \NLW_Performance.Core_Sleep_UNCONNECTED ;
  wire \NLW_Performance.Core_Suspend_UNCONNECTED ;
  wire \NLW_Performance.Core_Synchronize.use_sync_reset.sync_reg[2]_UNCONNECTED ;
  wire \NLW_Performance.Core_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Performance.Core_WB_Read_Imm_Reg_1_reg_UNCONNECTED ;
  wire \NLW_Performance.Core_use_Reg_Neg_S_reg_UNCONNECTED ;
  wire [325:0]\NLW_Performance.Core_D_UNCONNECTED ;
  wire [1:0]\NLW_Performance.Core_Dbg_Trig_Ack_In_UNCONNECTED ;
  wire [1:0]\NLW_Performance.Core_Dbg_Trig_Ack_Out_UNCONNECTED ;
  wire [1:0]\NLW_Performance.Core_Dbg_Trig_In_UNCONNECTED ;
  wire [1:0]\NLW_Performance.Core_Dbg_Trig_Out_UNCONNECTED ;
  wire [40:0]\NLW_Performance.Core_LOCKSTEP_Master_Out_UNCONNECTED ;
  wire [1:0]\NLW_Performance.Core_Q_UNCONNECTED ;
  wire [0:1]\NLW_Performance.Core_Reset_Mode_UNCONNECTED ;
  wire [0:1]\NLW_Performance.Core_wakeup_i_UNCONNECTED ;

  MicroBlaze_GTi \Performance.Core 
       (.Clk(Clk),
        .D({\NLW_Performance.Core_D_UNCONNECTED [325:324],D[354],\NLW_Performance.Core_D_UNCONNECTED [322:305],D[335:324],\NLW_Performance.Core_D_UNCONNECTED [292:281],D[311],\NLW_Performance.Core_D_UNCONNECTED [279:273],D[303:292],\NLW_Performance.Core_D_UNCONNECTED [260:259],D[289:257],\NLW_Performance.Core_D_UNCONNECTED [225],D[255:235],\NLW_Performance.Core_D_UNCONNECTED [203:192],D[222:221],\NLW_Performance.Core_D_UNCONNECTED [189:188],D[218:186],\NLW_Performance.Core_D_UNCONNECTED [154:151],D[181:180],\NLW_Performance.Core_D_UNCONNECTED [148:0]}),
        .DI(\NLW_Performance.Core_DI_UNCONNECTED ),
        .DReady(DReady),
        .DWait(\NLW_Performance.Core_DWait_UNCONNECTED ),
        .Data_Read(Data_Read),
        .Dbg_Capture(Dbg_Capture),
        .Dbg_Clk(Dbg_Clk),
        .Dbg_Reg_En(Dbg_Reg_En),
        .Dbg_Shift(Dbg_Shift),
        .Dbg_Stop(\NLW_Performance.Core_Dbg_Stop_UNCONNECTED ),
        .Dbg_TDI(Dbg_TDI),
        .Dbg_TDO(Dbg_TDO),
        .Dbg_Trig_Ack_In(\NLW_Performance.Core_Dbg_Trig_Ack_In_UNCONNECTED [1:0]),
        .Dbg_Trig_Ack_Out(\NLW_Performance.Core_Dbg_Trig_Ack_Out_UNCONNECTED [1:0]),
        .Dbg_Trig_In(\NLW_Performance.Core_Dbg_Trig_In_UNCONNECTED [1:0]),
        .Dbg_Trig_Out(\NLW_Performance.Core_Dbg_Trig_Out_UNCONNECTED [1:0]),
        .Dbg_Update(Dbg_Update),
        .Hibernate(\NLW_Performance.Core_Hibernate_UNCONNECTED ),
        .IReady(IReady),
        .Instr(Instr),
        .LOCKSTEP_Master_Out(\NLW_Performance.Core_LOCKSTEP_Master_Out_UNCONNECTED [40:0]),
        .\LOCKSTEP_Out_reg[2915] (\NLW_Performance.Core_LOCKSTEP_Out_reg[2915]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2916] (\NLW_Performance.Core_LOCKSTEP_Out_reg[2916]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2917] (\NLW_Performance.Core_LOCKSTEP_Out_reg[2917]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2918] (\NLW_Performance.Core_LOCKSTEP_Out_reg[2918]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2919] (\NLW_Performance.Core_LOCKSTEP_Out_reg[2919]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2920] (\NLW_Performance.Core_LOCKSTEP_Out_reg[2920]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2921] (\NLW_Performance.Core_LOCKSTEP_Out_reg[2921]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2922] (\NLW_Performance.Core_LOCKSTEP_Out_reg[2922]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2923] (\NLW_Performance.Core_LOCKSTEP_Out_reg[2923]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2924] (\NLW_Performance.Core_LOCKSTEP_Out_reg[2924]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2925] (\NLW_Performance.Core_LOCKSTEP_Out_reg[2925]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2926] (\NLW_Performance.Core_LOCKSTEP_Out_reg[2926]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2927] (\NLW_Performance.Core_LOCKSTEP_Out_reg[2927]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2928] (\NLW_Performance.Core_LOCKSTEP_Out_reg[2928]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2929] (\NLW_Performance.Core_LOCKSTEP_Out_reg[2929]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2930] (\NLW_Performance.Core_LOCKSTEP_Out_reg[2930]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2931] (\NLW_Performance.Core_LOCKSTEP_Out_reg[2931]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2932] (\NLW_Performance.Core_LOCKSTEP_Out_reg[2932]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2933] (\NLW_Performance.Core_LOCKSTEP_Out_reg[2933]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2934] (\NLW_Performance.Core_LOCKSTEP_Out_reg[2934]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2935] (\NLW_Performance.Core_LOCKSTEP_Out_reg[2935]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2936] (\NLW_Performance.Core_LOCKSTEP_Out_reg[2936]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2937] (\NLW_Performance.Core_LOCKSTEP_Out_reg[2937]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2938] (\NLW_Performance.Core_LOCKSTEP_Out_reg[2938]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2939] (\NLW_Performance.Core_LOCKSTEP_Out_reg[2939]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2940] (\NLW_Performance.Core_LOCKSTEP_Out_reg[2940]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2941] (\NLW_Performance.Core_LOCKSTEP_Out_reg[2941]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2942] (\NLW_Performance.Core_LOCKSTEP_Out_reg[2942]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2943] (\NLW_Performance.Core_LOCKSTEP_Out_reg[2943]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2944] (\NLW_Performance.Core_LOCKSTEP_Out_reg[2944]_UNCONNECTED ),
        .M_AXI_DP_ARREADY(M_AXI_DP_ARREADY),
        .M_AXI_DP_AWREADY(M_AXI_DP_AWREADY),
        .M_AXI_DP_BVALID(M_AXI_DP_BVALID),
        .M_AXI_DP_RDATA(M_AXI_DP_RDATA),
        .M_AXI_DP_RVALID(M_AXI_DP_RVALID),
        .M_AXI_DP_WREADY(M_AXI_DP_WREADY),
        .Pause(\NLW_Performance.Core_Pause_UNCONNECTED ),
        .Pause_Ack(\NLW_Performance.Core_Pause_Ack_UNCONNECTED ),
        .Q(\NLW_Performance.Core_Q_UNCONNECTED [1:0]),
        .Reset_Mode(\NLW_Performance.Core_Reset_Mode_UNCONNECTED [0:1]),
        .Scan_Reset(\NLW_Performance.Core_Scan_Reset_UNCONNECTED ),
        .Scan_Reset_Sel(\NLW_Performance.Core_Scan_Reset_Sel_UNCONNECTED ),
        .\Serial_Dbg_Intf.command_reg_reg[1] (\Serial_Dbg_Intf.command_reg_reg[1] ),
        .Sleep(\NLW_Performance.Core_Sleep_UNCONNECTED ),
        .Status_Reg_En(Status_Reg_En),
        .Suspend(\NLW_Performance.Core_Suspend_UNCONNECTED ),
        .\Synchronize.use_sync_reset.sync_reg[2] (\NLW_Performance.Core_Synchronize.use_sync_reset.sync_reg[2]_UNCONNECTED ),
        .\Use_Serial_Unified_Completion.completion_block_reg (\Use_Serial_Unified_Completion.completion_block_reg ),
        .\Use_Serial_Unified_Completion.completion_block_reg_0 (\Use_Serial_Unified_Completion.completion_block_reg_0 ),
        .\Use_Serial_Unified_Completion.completion_block_reg_1 (\Use_Serial_Unified_Completion.completion_block_reg_1 ),
        .\Using_FPGA.Native (\NLW_Performance.Core_Using_FPGA.Native_UNCONNECTED ),
        .WB_Read_Imm_Reg_1_reg(\NLW_Performance.Core_WB_Read_Imm_Reg_1_reg_UNCONNECTED ),
        .sync_reset(sync_reset),
        .use_Reg_Neg_S_reg(\NLW_Performance.Core_use_Reg_Neg_S_reg_UNCONNECTED ),
        .wakeup_i(\NLW_Performance.Core_wakeup_i_UNCONNECTED [0:1]));
  mb_sync_bit Reset_DFF
       (.Clk(Clk),
        .out(Synced),
        .reset_temp__0(reset_temp__0));
  FDRE #(
    .INIT(1'b1)) 
    \Use_Async_Reset.sync_reset_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(Synced),
        .Q(sync_reset),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    reset_temp
       (.I0(Debug_Rst),
        .I1(Reset),
        .O(reset_temp__0));
endmodule

module MicroBlaze_GTi
   (use_Reg_Neg_S_reg,
    WB_Read_Imm_Reg_1_reg,
    \Using_FPGA.Native ,
    Q,
    DI,
    \LOCKSTEP_Out_reg[2944] ,
    \LOCKSTEP_Out_reg[2943] ,
    \LOCKSTEP_Out_reg[2942] ,
    \LOCKSTEP_Out_reg[2941] ,
    \LOCKSTEP_Out_reg[2940] ,
    \LOCKSTEP_Out_reg[2939] ,
    \LOCKSTEP_Out_reg[2938] ,
    \LOCKSTEP_Out_reg[2937] ,
    \LOCKSTEP_Out_reg[2936] ,
    \LOCKSTEP_Out_reg[2935] ,
    \LOCKSTEP_Out_reg[2934] ,
    \LOCKSTEP_Out_reg[2933] ,
    \LOCKSTEP_Out_reg[2932] ,
    \LOCKSTEP_Out_reg[2931] ,
    \LOCKSTEP_Out_reg[2930] ,
    \LOCKSTEP_Out_reg[2929] ,
    \LOCKSTEP_Out_reg[2928] ,
    \LOCKSTEP_Out_reg[2927] ,
    \LOCKSTEP_Out_reg[2926] ,
    \LOCKSTEP_Out_reg[2925] ,
    \LOCKSTEP_Out_reg[2924] ,
    \LOCKSTEP_Out_reg[2923] ,
    \LOCKSTEP_Out_reg[2922] ,
    \LOCKSTEP_Out_reg[2921] ,
    \LOCKSTEP_Out_reg[2920] ,
    \LOCKSTEP_Out_reg[2919] ,
    \LOCKSTEP_Out_reg[2918] ,
    \LOCKSTEP_Out_reg[2917] ,
    \LOCKSTEP_Out_reg[2916] ,
    \LOCKSTEP_Out_reg[2915] ,
    D,
    Pause_Ack,
    Sleep,
    LOCKSTEP_Master_Out,
    Hibernate,
    Suspend,
    Dbg_Trig_In,
    Dbg_Trig_Ack_Out,
    Dbg_TDO,
    \Serial_Dbg_Intf.command_reg_reg[1] ,
    sync_reset,
    Clk,
    Dbg_Clk,
    Pause,
    Dbg_Update,
    Dbg_Trig_Ack_In,
    Dbg_Trig_Out,
    Dbg_Stop,
    Dbg_Capture,
    \Use_Serial_Unified_Completion.completion_block_reg ,
    Status_Reg_En,
    IReady,
    Reset_Mode,
    DWait,
    DReady,
    wakeup_i,
    Scan_Reset,
    Scan_Reset_Sel,
    Dbg_Reg_En,
    \Use_Serial_Unified_Completion.completion_block_reg_0 ,
    Dbg_Shift,
    M_AXI_DP_BVALID,
    M_AXI_DP_RVALID,
    \Use_Serial_Unified_Completion.completion_block_reg_1 ,
    M_AXI_DP_ARREADY,
    M_AXI_DP_WREADY,
    M_AXI_DP_AWREADY,
    \Synchronize.use_sync_reset.sync_reg[2] ,
    Instr,
    Dbg_TDI,
    M_AXI_DP_RDATA,
    Data_Read);
  output use_Reg_Neg_S_reg;
  output WB_Read_Imm_Reg_1_reg;
  output \Using_FPGA.Native ;
  output [1:0]Q;
  output DI;
  output \LOCKSTEP_Out_reg[2944] ;
  output \LOCKSTEP_Out_reg[2943] ;
  output \LOCKSTEP_Out_reg[2942] ;
  output \LOCKSTEP_Out_reg[2941] ;
  output \LOCKSTEP_Out_reg[2940] ;
  output \LOCKSTEP_Out_reg[2939] ;
  output \LOCKSTEP_Out_reg[2938] ;
  output \LOCKSTEP_Out_reg[2937] ;
  output \LOCKSTEP_Out_reg[2936] ;
  output \LOCKSTEP_Out_reg[2935] ;
  output \LOCKSTEP_Out_reg[2934] ;
  output \LOCKSTEP_Out_reg[2933] ;
  output \LOCKSTEP_Out_reg[2932] ;
  output \LOCKSTEP_Out_reg[2931] ;
  output \LOCKSTEP_Out_reg[2930] ;
  output \LOCKSTEP_Out_reg[2929] ;
  output \LOCKSTEP_Out_reg[2928] ;
  output \LOCKSTEP_Out_reg[2927] ;
  output \LOCKSTEP_Out_reg[2926] ;
  output \LOCKSTEP_Out_reg[2925] ;
  output \LOCKSTEP_Out_reg[2924] ;
  output \LOCKSTEP_Out_reg[2923] ;
  output \LOCKSTEP_Out_reg[2922] ;
  output \LOCKSTEP_Out_reg[2921] ;
  output \LOCKSTEP_Out_reg[2920] ;
  output \LOCKSTEP_Out_reg[2919] ;
  output \LOCKSTEP_Out_reg[2918] ;
  output \LOCKSTEP_Out_reg[2917] ;
  output \LOCKSTEP_Out_reg[2916] ;
  output \LOCKSTEP_Out_reg[2915] ;
  output [325:0]D;
  output Pause_Ack;
  output Sleep;
  output [40:0]LOCKSTEP_Master_Out;
  output Hibernate;
  output Suspend;
  output [1:0]Dbg_Trig_In;
  output [1:0]Dbg_Trig_Ack_Out;
  output Dbg_TDO;
  output \Serial_Dbg_Intf.command_reg_reg[1] ;
  input sync_reset;
  input Clk;
  input Dbg_Clk;
  input Pause;
  input Dbg_Update;
  input [1:0]Dbg_Trig_Ack_In;
  input [1:0]Dbg_Trig_Out;
  input Dbg_Stop;
  input Dbg_Capture;
  input \Use_Serial_Unified_Completion.completion_block_reg ;
  input Status_Reg_En;
  input IReady;
  input [0:1]Reset_Mode;
  input DWait;
  input DReady;
  input [0:1]wakeup_i;
  input Scan_Reset;
  input Scan_Reset_Sel;
  input [0:7]Dbg_Reg_En;
  input \Use_Serial_Unified_Completion.completion_block_reg_0 ;
  input Dbg_Shift;
  input M_AXI_DP_BVALID;
  input M_AXI_DP_RVALID;
  input \Use_Serial_Unified_Completion.completion_block_reg_1 ;
  input M_AXI_DP_ARREADY;
  input M_AXI_DP_WREADY;
  input M_AXI_DP_AWREADY;
  input \Synchronize.use_sync_reset.sync_reg[2] ;
  input [0:31]Instr;
  input Dbg_TDI;
  input [31:0]M_AXI_DP_RDATA;
  input [0:31]Data_Read;

  wire \Byte_Doublet_Handle_gti_I/mem_reverse_byteorder ;
  wire \Byte_Doublet_Handle_gti_I/p_0_in ;
  wire [0:0]\Byte_Doublet_Handle_gti_I/wb_read_lsb_1_sel ;
  wire [0:1]\Byte_Doublet_Handle_gti_I/wb_read_lsb_sel ;
  wire \Byte_Doublet_Handle_gti_I/wb_read_msb_doublet_sel ;
  wire Clk;
  wire [325:0]\^D ;
  wire \^DI ;
  wire DReady;
  wire Data_Flow_I_n_19;
  wire Data_Flow_I_n_232;
  wire Data_Flow_I_n_233;
  wire Data_Flow_I_n_234;
  wire Data_Flow_I_n_235;
  wire Data_Flow_I_n_236;
  wire Data_Flow_I_n_237;
  wire Data_Flow_I_n_238;
  wire Data_Flow_I_n_239;
  wire Data_Flow_I_n_326;
  wire Data_Flow_I_n_343;
  wire Data_Flow_I_n_344;
  wire Data_Flow_I_n_345;
  wire Data_Flow_I_n_346;
  wire Data_Flow_I_n_347;
  wire Data_Flow_I_n_348;
  wire Data_Flow_I_n_349;
  wire Data_Flow_I_n_350;
  wire Data_Flow_I_n_351;
  wire Data_Flow_I_n_352;
  wire Data_Flow_I_n_353;
  wire Data_Flow_I_n_354;
  wire Data_Flow_I_n_355;
  wire Data_Flow_I_n_356;
  wire Data_Flow_I_n_357;
  wire Data_Flow_I_n_358;
  wire Data_Flow_I_n_359;
  wire Data_Flow_I_n_360;
  wire Data_Flow_I_n_361;
  wire Data_Flow_I_n_366;
  wire Data_Flow_I_n_367;
  wire Data_Flow_I_n_368;
  wire Data_Flow_I_n_369;
  wire Data_Flow_I_n_370;
  wire Data_Flow_I_n_371;
  wire Data_Flow_I_n_372;
  wire Data_Flow_I_n_373;
  wire Data_Flow_I_n_374;
  wire Data_Flow_I_n_375;
  wire Data_Flow_I_n_376;
  wire Data_Flow_I_n_377;
  wire Data_Flow_I_n_378;
  wire Data_Flow_I_n_379;
  wire Data_Flow_I_n_380;
  wire \Data_Flow_Logic_I/R ;
  wire \Data_Flow_Logic_I/WB_MEM_Result0 ;
  wire [0:31]Data_Read;
  wire Dbg_Capture;
  wire Dbg_Clk;
  wire [0:7]Dbg_Reg_En;
  wire Dbg_Shift;
  wire Dbg_TDI;
  wire Dbg_TDO;
  wire Dbg_Update;
  wire Decode_I_n_239;
  wire Decode_I_n_254;
  wire Decode_I_n_287;
  wire Decode_I_n_288;
  wire Decode_I_n_290;
  wire Decode_I_n_291;
  wire Decode_I_n_292;
  wire Decode_I_n_293;
  wire Decode_I_n_294;
  wire Decode_I_n_295;
  wire Decode_I_n_296;
  wire Decode_I_n_297;
  wire Decode_I_n_298;
  wire Decode_I_n_299;
  wire Decode_I_n_300;
  wire Decode_I_n_301;
  wire Decode_I_n_302;
  wire Decode_I_n_303;
  wire Decode_I_n_304;
  wire Decode_I_n_305;
  wire Decode_I_n_306;
  wire Decode_I_n_307;
  wire Decode_I_n_308;
  wire Decode_I_n_309;
  wire Decode_I_n_310;
  wire Decode_I_n_311;
  wire Decode_I_n_312;
  wire Decode_I_n_313;
  wire Decode_I_n_314;
  wire Decode_I_n_315;
  wire Decode_I_n_316;
  wire Decode_I_n_317;
  wire Decode_I_n_318;
  wire Decode_I_n_319;
  wire Decode_I_n_320;
  wire Decode_I_n_321;
  wire Decode_I_n_354;
  wire Decode_I_n_355;
  wire Decode_I_n_356;
  wire Decode_I_n_357;
  wire Decode_I_n_358;
  wire Decode_I_n_359;
  wire Decode_I_n_360;
  wire Decode_I_n_361;
  wire Decode_I_n_362;
  wire Decode_I_n_363;
  wire Decode_I_n_364;
  wire Decode_I_n_365;
  wire Decode_I_n_366;
  wire Decode_I_n_367;
  wire Decode_I_n_368;
  wire Decode_I_n_369;
  wire Decode_I_n_370;
  wire Decode_I_n_371;
  wire Decode_I_n_372;
  wire Decode_I_n_373;
  wire Decode_I_n_374;
  wire Decode_I_n_375;
  wire Decode_I_n_376;
  wire Decode_I_n_377;
  wire Decode_I_n_396;
  wire Decode_I_n_402;
  wire Decode_I_n_403;
  wire Decode_I_n_404;
  wire Decode_I_n_405;
  wire Decode_I_n_406;
  wire Decode_I_n_407;
  wire Decode_I_n_408;
  wire Decode_I_n_409;
  wire Decode_I_n_410;
  wire Decode_I_n_411;
  wire Decode_I_n_412;
  wire Decode_I_n_413;
  wire Decode_I_n_414;
  wire Decode_I_n_415;
  wire Decode_I_n_416;
  wire Decode_I_n_417;
  wire Decode_I_n_418;
  wire Decode_I_n_419;
  wire Decode_I_n_420;
  wire Decode_I_n_421;
  wire Decode_I_n_422;
  wire Decode_I_n_423;
  wire Decode_I_n_424;
  wire Decode_I_n_425;
  wire Decode_I_n_426;
  wire Decode_I_n_427;
  wire Decode_I_n_428;
  wire Decode_I_n_429;
  wire Decode_I_n_430;
  wire Decode_I_n_431;
  wire Decode_I_n_432;
  wire Decode_I_n_433;
  wire Decode_I_n_434;
  wire Decode_I_n_437;
  wire Decode_I_n_438;
  wire Decode_I_n_440;
  wire Decode_I_n_441;
  wire Decode_I_n_442;
  wire Decode_I_n_443;
  wire Decode_I_n_444;
  wire Decode_I_n_445;
  wire Decode_I_n_453;
  wire Decode_I_n_454;
  wire Decode_I_n_455;
  wire Decode_I_n_456;
  wire Decode_I_n_457;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:31]EX_Fwd;
  wire IReady;
  wire IReady_0;
  wire [0:31]Instr;
  wire [40:0]\^LOCKSTEP_Master_Out ;
  wire \^LOCKSTEP_Out_reg[2915] ;
  wire \^LOCKSTEP_Out_reg[2916] ;
  wire \^LOCKSTEP_Out_reg[2917] ;
  wire \^LOCKSTEP_Out_reg[2918] ;
  wire \^LOCKSTEP_Out_reg[2919] ;
  wire \^LOCKSTEP_Out_reg[2920] ;
  wire \^LOCKSTEP_Out_reg[2921] ;
  wire \^LOCKSTEP_Out_reg[2922] ;
  wire \^LOCKSTEP_Out_reg[2923] ;
  wire \^LOCKSTEP_Out_reg[2924] ;
  wire \^LOCKSTEP_Out_reg[2925] ;
  wire \^LOCKSTEP_Out_reg[2926] ;
  wire \^LOCKSTEP_Out_reg[2927] ;
  wire \^LOCKSTEP_Out_reg[2928] ;
  wire \^LOCKSTEP_Out_reg[2929] ;
  wire \^LOCKSTEP_Out_reg[2938] ;
  wire \^LOCKSTEP_Out_reg[2939] ;
  wire \^LOCKSTEP_Out_reg[2940] ;
  wire \^LOCKSTEP_Out_reg[2941] ;
  wire \^LOCKSTEP_Out_reg[2942] ;
  wire \^LOCKSTEP_Out_reg[2943] ;
  wire \^LOCKSTEP_Out_reg[2944] ;
  wire [0:30]MEM_Fwd;
  wire [0:31]MEM_PC;
  wire MEM_WB_Sel_Mem_PC;
  wire M_AXI_DP_ARREADY;
  wire M_AXI_DP_AWREADY;
  wire M_AXI_DP_BVALID;
  wire [31:0]M_AXI_DP_RDATA;
  wire M_AXI_DP_RVALID;
  wire M_AXI_DP_WREADY;
  wire \Operand_Select_I/I0 ;
  wire \Operand_Select_I/I1 ;
  wire [0:15]\Operand_Select_I/imm_reg ;
  wire [0:31]\Operand_Select_I/of_op2 ;
  wire [0:31]\Operand_Select_I/of_op3 ;
  wire \PreFetch_Buffer_I1/I041_out ;
  wire \PreFetch_Buffer_I1/I139_out ;
  wire [0:0]\PreFetch_Buffer_I1/if_predecode ;
  wire \PreFetch_Buffer_I1/p_1_in49_in ;
  wire [1:0]\^Q ;
  wire S;
  wire SRI;
  wire \Serial_Dbg_Intf.command_reg_reg[1] ;
  wire \Shift_Logic_Module_I/I4 ;
  wire \^Sleep ;
  wire Sleep_Out;
  wire Status_Reg_En;
  wire \Use_DBUS.DAXI_Interface_I1_n_10 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_11 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_12 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_13 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_14 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_15 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_16 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_17 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_18 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_19 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_20 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_21 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_22 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_23 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_24 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_25 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_26 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_27 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_28 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_29 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_30 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_31 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_32 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_33 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_34 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_35 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_4 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_5 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_6 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_7 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_8 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_9 ;
  wire \Use_Debug_Logic.Master_Core.Debug_Perf_n_38 ;
  wire \Use_Debug_Logic.Master_Core.Debug_Perf_n_39 ;
  wire \Use_Debug_Logic.Master_Core.Debug_Perf_n_41 ;
  wire \Use_Debug_Logic.Master_Core.Debug_Perf_n_42 ;
  wire \Use_Debug_Logic.Master_Core.Debug_Perf_n_44 ;
  wire \Use_Debug_Logic.Master_Core.Debug_Perf_n_51 ;
  wire \Use_Debug_Logic.Master_Core.Debug_Perf_n_52 ;
  wire \Use_Debug_Logic.Master_Core.Debug_Perf_n_54 ;
  wire \Use_Debug_Logic.Master_Core.Debug_Perf_n_56 ;
  wire \Use_Debug_Logic.Master_Core.Debug_Perf_n_57 ;
  wire \Use_Serial_Unified_Completion.completion_block_reg ;
  wire \Use_Serial_Unified_Completion.completion_block_reg_0 ;
  wire \Use_Serial_Unified_Completion.completion_block_reg_1 ;
  wire \^Using_FPGA.Native ;
  wire \^WB_Read_Imm_Reg_1_reg ;
  wire active_access_d1;
  wire dbg_clean_stop;
  wire dbg_stop_i;
  wire ex_Enable_Sext_Shift;
  wire [28:30]ex_MSR;
  wire [0:1]ex_alu_op;
  wire ex_byte_access;
  wire ex_cmp_op;
  wire [30:31]ex_databus_addr;
  wire ex_doublet_access;
  wire ex_exception_no_load_store_mask;
  wire ex_load_shift_carry;
  wire ex_move_to_MSR_instr;
  wire ex_op1_cmp_equal;
  wire ex_op1_cmp_equal_n;
  wire [0:31]ex_op1_i;
  wire ex_op1_neg;
  wire [31:31]ex_op2;
  wire [1:30]ex_op3;
  wire ex_reverse_mem_access;
  wire ex_sel_alu;
  wire [0:1]ex_sext_op;
  wire ex_swap_byte_instr;
  wire ex_swap_instr;
  wire ex_unsigned_op;
  wire ex_use_carry;
  wire ex_valid;
  wire \exception_registers_I1/I1 ;
  wire [0:31]gpr_op1;
  wire [0:31]gpr_op2;
  wire [0:31]gpr_op3;
  wire [0:31]ib_data;
  wire if_missed_fetch;
  wire [3:3]if_sel_input;
  wire lopt;
  wire lopt_1;
  wire lopt_10;
  wire lopt_11;
  wire lopt_2;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire mem_Exception_Taken;
  wire [28:30]mem_MSR;
  wire mem_byte_access;
  wire mem_databus_access;
  wire mem_doublet_access;
  wire [0:31]mem_ex_result;
  wire mem_sel_msr;
  wire new_request;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [0:15]of_imm_data;
  wire of_op1_sel_spr;
  wire [0:31]of_pc;
  wire [0:0]of_predecode;
  wire p_1_out;
  wire read_register_MSR_1;
  wire sync_reset;
  wire \^use_Reg_Neg_S_reg ;
  wire wb_Halted;
  wire wb_byte_access;
  wire [0:31]wb_dlmb_valid_read_data;
  wire [0:31]wb_excep_return_addr;
  wire wb_gpr_write_dbg;
  wire [0:31]wb_mem_result;
  wire wb_pc_valid;
  wire wb_piperun;
  wire wb_read_imm_reg;
  wire wb_read_imm_reg_1;
  wire \NLW_Data_Flow_I_LOCKSTEP_Out_reg[2930]_UNCONNECTED ;
  wire \NLW_Data_Flow_I_LOCKSTEP_Out_reg[2931]_UNCONNECTED ;
  wire \NLW_Data_Flow_I_LOCKSTEP_Out_reg[2932]_UNCONNECTED ;
  wire \NLW_Data_Flow_I_LOCKSTEP_Out_reg[2933]_UNCONNECTED ;
  wire \NLW_Data_Flow_I_LOCKSTEP_Out_reg[2934]_UNCONNECTED ;
  wire \NLW_Data_Flow_I_LOCKSTEP_Out_reg[2935]_UNCONNECTED ;
  wire \NLW_Data_Flow_I_LOCKSTEP_Out_reg[2936]_UNCONNECTED ;
  wire \NLW_Data_Flow_I_LOCKSTEP_Out_reg[2937]_UNCONNECTED ;
  wire NLW_Data_Flow_I_ex_op1_zero_UNCONNECTED;
  wire [67:12]\NLW_Data_Flow_I_MEM_DataBus_Addr_reg[0]_UNCONNECTED ;
  wire [3:0]\NLW_Data_Flow_I_Using_FPGA.Native_54_UNCONNECTED ;
  wire NLW_Decode_I_DWait_UNCONNECTED;
  wire NLW_Decode_I_Hibernate_UNCONNECTED;
  wire NLW_Decode_I_MEM_DataBus_Read_UNCONNECTED;
  wire NLW_Decode_I_Pause_UNCONNECTED;
  wire NLW_Decode_I_Pause_Ack_UNCONNECTED;
  wire \NLW_Decode_I_Serial_Dbg_Intf.force_stop_cmd_i_reg_UNCONNECTED ;
  wire NLW_Decode_I_Sleep_Decode_UNCONNECTED;
  wire NLW_Decode_I_Suspend_UNCONNECTED;
  wire NLW_Decode_I_dbg_pause_UNCONNECTED;
  wire NLW_Decode_I_ex_op1_zero_UNCONNECTED;
  wire NLW_Decode_I_lopt_3_UNCONNECTED;
  wire NLW_Decode_I_mem_databus_ready_UNCONNECTED;
  wire NLW_Decode_I_mem_databus_write_UNCONNECTED;
  wire [2:0]NLW_Decode_I_LOCKSTEP_Master_Out_UNCONNECTED;
  wire [0:0]NLW_Decode_I_Q_UNCONNECTED;
  wire [0:1]NLW_Decode_I_Reset_Mode_UNCONNECTED;
  wire [149:1]NLW_Decode_I_mb_halted_1_reg_UNCONNECTED;
  wire [0:1]NLW_Decode_I_wakeup_i_UNCONNECTED;
  wire \NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Dbg_Stop_UNCONNECTED ;
  wire \NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Pause_UNCONNECTED ;
  wire \NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Scan_Reset_UNCONNECTED ;
  wire \NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Scan_Reset_Sel_UNCONNECTED ;
  wire \NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Sleep_Decode_UNCONNECTED ;
  wire \NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Synchronize.use_sync_reset.sync_reg[2]_UNCONNECTED ;
  wire \NLW_Use_Debug_Logic.Master_Core.Debug_Perf_dbg_pause_UNCONNECTED ;
  wire [1:0]\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Dbg_Trig_Ack_In_UNCONNECTED ;
  wire [1:0]\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Dbg_Trig_Ack_Out_UNCONNECTED ;
  wire [1:0]\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Dbg_Trig_In_UNCONNECTED ;
  wire [1:0]\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Dbg_Trig_Out_UNCONNECTED ;
  wire [37:33]\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_LOCKSTEP_Master_Out_UNCONNECTED ;
  wire [0:1]\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Reset_Mode_UNCONNECTED ;
  wire NLW_mem_databus_ready_sel_carry_or_lopt_UNCONNECTED;
  wire NLW_mem_databus_ready_sel_carry_or_mem_databus_ready_UNCONNECTED;

  assign D[323] = \^D [323];
  assign D[304:293] = \^D [304:293];
  assign D[280] = \^D [280];
  assign D[272:261] = \^D [272:261];
  assign D[258:226] = \^D [258:226];
  assign D[224:204] = \^D [224:204];
  assign D[191:190] = \^D [191:190];
  assign D[187:155] = \^D [187:155];
  assign D[150:149] = \^D [150:149];
  Data_Flow_gti Data_Flow_I
       (.Clk(Clk),
        .D({\Operand_Select_I/I0 ,Decode_I_n_290,Decode_I_n_291,Decode_I_n_292,Decode_I_n_293,Decode_I_n_294,Decode_I_n_295,Decode_I_n_296,Decode_I_n_297,Decode_I_n_298,Decode_I_n_299,Decode_I_n_300,Decode_I_n_301,Decode_I_n_302,Decode_I_n_303,Decode_I_n_304,Decode_I_n_305,Decode_I_n_306,Decode_I_n_307,Decode_I_n_308,Decode_I_n_309,Decode_I_n_310,Decode_I_n_311,Decode_I_n_312,Decode_I_n_313,Decode_I_n_314,Decode_I_n_315,Decode_I_n_316,Decode_I_n_317,Decode_I_n_318,Decode_I_n_319}),
        .DI(\^DI ),
        .E(Decode_I_n_437),
        .\EX_ALU_Op_reg[0] ({ex_alu_op[0],ex_alu_op[1]}),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .\EX_Branch_CMP_Op1_reg[10] (Data_Flow_I_n_353),
        .\EX_Branch_CMP_Op1_reg[11] (Data_Flow_I_n_352),
        .\EX_Branch_CMP_Op1_reg[12] (Data_Flow_I_n_351),
        .\EX_Branch_CMP_Op1_reg[13] (Data_Flow_I_n_350),
        .\EX_Branch_CMP_Op1_reg[14] (Data_Flow_I_n_349),
        .\EX_Branch_CMP_Op1_reg[15] (Data_Flow_I_n_348),
        .\EX_Branch_CMP_Op1_reg[1] (Data_Flow_I_n_361),
        .\EX_Branch_CMP_Op1_reg[2] (Data_Flow_I_n_360),
        .\EX_Branch_CMP_Op1_reg[3] (Data_Flow_I_n_359),
        .\EX_Branch_CMP_Op1_reg[4] (Data_Flow_I_n_358),
        .\EX_Branch_CMP_Op1_reg[5] (Data_Flow_I_n_357),
        .\EX_Branch_CMP_Op1_reg[6] (Data_Flow_I_n_356),
        .\EX_Branch_CMP_Op1_reg[7] (Data_Flow_I_n_355),
        .\EX_Branch_CMP_Op1_reg[9] (Data_Flow_I_n_354),
        .EX_Enable_ALU(EX_Enable_ALU),
        .EX_Fwd({EX_Fwd[0],EX_Fwd[17],EX_Fwd[18],EX_Fwd[19],EX_Fwd[20],EX_Fwd[21],EX_Fwd[22],EX_Fwd[23],EX_Fwd[24],EX_Fwd[25],EX_Fwd[26],EX_Fwd[27],EX_Fwd[28],EX_Fwd[29],EX_Fwd[30],EX_Fwd[31]}),
        .\EX_Op2_reg[0] ({\Operand_Select_I/imm_reg [0],\Operand_Select_I/imm_reg [1],\Operand_Select_I/imm_reg [2],\Operand_Select_I/imm_reg [3],\Operand_Select_I/imm_reg [4],\Operand_Select_I/imm_reg [5],\Operand_Select_I/imm_reg [6],\Operand_Select_I/imm_reg [7],\Operand_Select_I/imm_reg [8],\Operand_Select_I/imm_reg [9],\Operand_Select_I/imm_reg [10],\Operand_Select_I/imm_reg [11],\Operand_Select_I/imm_reg [12],\Operand_Select_I/imm_reg [13],\Operand_Select_I/imm_reg [14],\Operand_Select_I/imm_reg [15]}),
        .\EX_Op3_reg[10] (Data_Flow_I_n_344),
        .\EX_Op3_reg[2] (Data_Flow_I_n_347),
        .\EX_Op3_reg[3] (Data_Flow_I_n_346),
        .\EX_Op3_reg[6] (Data_Flow_I_n_345),
        .\EX_Sext_Op_reg[0] ({ex_sext_op[0],ex_sext_op[1]}),
        .GPR_Op1({gpr_op1[0],gpr_op1[1],gpr_op1[2],gpr_op1[3],gpr_op1[4],gpr_op1[5],gpr_op1[6],gpr_op1[7],gpr_op1[8],gpr_op1[9],gpr_op1[10],gpr_op1[11],gpr_op1[12],gpr_op1[13],gpr_op1[14],gpr_op1[15],gpr_op1[17],gpr_op1[18],gpr_op1[19],gpr_op1[20],gpr_op1[21],gpr_op1[22],gpr_op1[23],gpr_op1[24],gpr_op1[25],gpr_op1[26],gpr_op1[27],gpr_op1[28],gpr_op1[29],gpr_op1[30],gpr_op1[31]}),
        .GPR_Op2(gpr_op2),
        .GPR_Op3({gpr_op3[0],gpr_op3[1],gpr_op3[2],gpr_op3[3],gpr_op3[4],gpr_op3[5],gpr_op3[6],gpr_op3[7],gpr_op3[8],gpr_op3[9],gpr_op3[10],gpr_op3[11],gpr_op3[12],gpr_op3[13],gpr_op3[14],gpr_op3[15],gpr_op3[17],gpr_op3[18],gpr_op3[19],gpr_op3[20],gpr_op3[21],gpr_op3[22],gpr_op3[23],gpr_op3[24],gpr_op3[25],gpr_op3[26],gpr_op3[27],gpr_op3[28],gpr_op3[29],gpr_op3[30],gpr_op3[31]}),
        .I1(\Operand_Select_I/I1 ),
        .I1_0(\exception_registers_I1/I1 ),
        .\LOCKSTEP_Out_reg[2915] (\^LOCKSTEP_Out_reg[2915] ),
        .\LOCKSTEP_Out_reg[2916] (\^LOCKSTEP_Out_reg[2916] ),
        .\LOCKSTEP_Out_reg[2917] (\^LOCKSTEP_Out_reg[2917] ),
        .\LOCKSTEP_Out_reg[2918] (\^LOCKSTEP_Out_reg[2918] ),
        .\LOCKSTEP_Out_reg[2919] (\^LOCKSTEP_Out_reg[2919] ),
        .\LOCKSTEP_Out_reg[2920] (\^LOCKSTEP_Out_reg[2920] ),
        .\LOCKSTEP_Out_reg[2921] (\^LOCKSTEP_Out_reg[2921] ),
        .\LOCKSTEP_Out_reg[2922] (\^LOCKSTEP_Out_reg[2922] ),
        .\LOCKSTEP_Out_reg[2923] (\^LOCKSTEP_Out_reg[2923] ),
        .\LOCKSTEP_Out_reg[2924] (\^LOCKSTEP_Out_reg[2924] ),
        .\LOCKSTEP_Out_reg[2925] (\^LOCKSTEP_Out_reg[2925] ),
        .\LOCKSTEP_Out_reg[2926] (\^LOCKSTEP_Out_reg[2926] ),
        .\LOCKSTEP_Out_reg[2927] (\^LOCKSTEP_Out_reg[2927] ),
        .\LOCKSTEP_Out_reg[2928] (\^LOCKSTEP_Out_reg[2928] ),
        .\LOCKSTEP_Out_reg[2929] (\^LOCKSTEP_Out_reg[2929] ),
        .\LOCKSTEP_Out_reg[2930] (\NLW_Data_Flow_I_LOCKSTEP_Out_reg[2930]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2931] (\NLW_Data_Flow_I_LOCKSTEP_Out_reg[2931]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2932] (\NLW_Data_Flow_I_LOCKSTEP_Out_reg[2932]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2933] (\NLW_Data_Flow_I_LOCKSTEP_Out_reg[2933]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2934] (\NLW_Data_Flow_I_LOCKSTEP_Out_reg[2934]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2935] (\NLW_Data_Flow_I_LOCKSTEP_Out_reg[2935]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2936] (\NLW_Data_Flow_I_LOCKSTEP_Out_reg[2936]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2937] (\NLW_Data_Flow_I_LOCKSTEP_Out_reg[2937]_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[2938] (\^LOCKSTEP_Out_reg[2938] ),
        .\LOCKSTEP_Out_reg[2939] (\^LOCKSTEP_Out_reg[2939] ),
        .\LOCKSTEP_Out_reg[2940] (\^LOCKSTEP_Out_reg[2940] ),
        .\LOCKSTEP_Out_reg[2941] (\^LOCKSTEP_Out_reg[2941] ),
        .\LOCKSTEP_Out_reg[2942] (\^LOCKSTEP_Out_reg[2942] ),
        .\LOCKSTEP_Out_reg[2943] (\^LOCKSTEP_Out_reg[2943] ),
        .\LOCKSTEP_Out_reg[2944] (\^LOCKSTEP_Out_reg[2944] ),
        .\LOCKSTEP_Out_reg[3007] ({wb_excep_return_addr[0],wb_excep_return_addr[1],wb_excep_return_addr[2],wb_excep_return_addr[3],wb_excep_return_addr[4],wb_excep_return_addr[5],wb_excep_return_addr[6],wb_excep_return_addr[7],wb_excep_return_addr[8],wb_excep_return_addr[9],wb_excep_return_addr[10],wb_excep_return_addr[11],wb_excep_return_addr[12],wb_excep_return_addr[13],wb_excep_return_addr[14],wb_excep_return_addr[15],wb_excep_return_addr[24],wb_excep_return_addr[25],wb_excep_return_addr[26],wb_excep_return_addr[27],wb_excep_return_addr[28],wb_excep_return_addr[29],wb_excep_return_addr[30],wb_excep_return_addr[31]}),
        .\LOCKSTEP_Out_reg[3007]_0 ({wb_mem_result[0],wb_mem_result[1],wb_mem_result[2],wb_mem_result[3],wb_mem_result[4],wb_mem_result[5],wb_mem_result[6],wb_mem_result[7],wb_mem_result[8],wb_mem_result[9],wb_mem_result[10],wb_mem_result[11],wb_mem_result[12],wb_mem_result[13],wb_mem_result[14],wb_mem_result[15],wb_mem_result[24],wb_mem_result[25],wb_mem_result[26],wb_mem_result[27],wb_mem_result[28],wb_mem_result[29],wb_mem_result[30],wb_mem_result[31]}),
        .\LOCKSTEP_Out_reg[3031] ({\Byte_Doublet_Handle_gti_I/wb_read_lsb_sel [0],\Byte_Doublet_Handle_gti_I/wb_read_lsb_sel [1]}),
        .\MEM_DataBus_Addr_reg[0] ({\^D [290:261],\NLW_Data_Flow_I_MEM_DataBus_Addr_reg[0]_UNCONNECTED [67:66],\^D [258],\^D [255:253],\^D [251:250],\^D [247],\^D [245],\^D [243:242],\^D [239],\^D [237],\^D [235:234],\^D [231],\^D [229:227],\^D [186:155],\NLW_Data_Flow_I_MEM_DataBus_Addr_reg[0]_UNCONNECTED [15:12],\^D [115],\^D [108:106],\^D [89:82]}),
        .\MEM_DataBus_Write_Data_reg[1] ({ex_op3[1],ex_op3[2],ex_op3[4],ex_op3[6],ex_op3[9],ex_op3[10],ex_op3[12],ex_op3[14],ex_op3[17],ex_op3[18],ex_op3[20],ex_op3[22],ex_op3[25],ex_op3[26],ex_op3[28],ex_op3[30]}),
        .MEM_WB_Sel_Mem_PC(MEM_WB_Sel_Mem_PC),
        .\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg (\Use_Debug_Logic.Master_Core.Debug_Perf_n_39 ),
        .Q(ex_op2),
        .R(\Data_Flow_Logic_I/R ),
        .SR(\Data_Flow_Logic_I/WB_MEM_Result0 ),
        .\Using_FPGA.Native ({ex_op1_i[0],ex_op1_i[16],ex_op1_i[17],ex_op1_i[18],ex_op1_i[19],ex_op1_i[20],ex_op1_i[21],ex_op1_i[22],ex_op1_i[23],ex_op1_i[24],ex_op1_i[25],ex_op1_i[26],ex_op1_i[27],ex_op1_i[28],ex_op1_i[29],ex_op1_i[30],ex_op1_i[31]}),
        .\Using_FPGA.Native_0 (Data_Flow_I_n_19),
        .\Using_FPGA.Native_1 ({EX_Fwd[1],EX_Fwd[2],EX_Fwd[3],EX_Fwd[4],EX_Fwd[5],EX_Fwd[6],EX_Fwd[7],EX_Fwd[8],EX_Fwd[9],EX_Fwd[10],EX_Fwd[11],EX_Fwd[12],EX_Fwd[13],EX_Fwd[14],EX_Fwd[15],EX_Fwd[16]}),
        .\Using_FPGA.Native_10 (Data_Flow_I_n_371),
        .\Using_FPGA.Native_11 (Data_Flow_I_n_372),
        .\Using_FPGA.Native_12 (Data_Flow_I_n_373),
        .\Using_FPGA.Native_13 (Data_Flow_I_n_374),
        .\Using_FPGA.Native_14 (Data_Flow_I_n_375),
        .\Using_FPGA.Native_15 (Data_Flow_I_n_376),
        .\Using_FPGA.Native_16 (Data_Flow_I_n_377),
        .\Using_FPGA.Native_17 (Data_Flow_I_n_378),
        .\Using_FPGA.Native_18 (Data_Flow_I_n_379),
        .\Using_FPGA.Native_19 (Decode_I_n_434),
        .\Using_FPGA.Native_2 (ex_op1_neg),
        .\Using_FPGA.Native_20 (Decode_I_n_433),
        .\Using_FPGA.Native_21 (Decode_I_n_432),
        .\Using_FPGA.Native_22 (Decode_I_n_431),
        .\Using_FPGA.Native_23 (Decode_I_n_430),
        .\Using_FPGA.Native_24 (Decode_I_n_429),
        .\Using_FPGA.Native_25 (Decode_I_n_428),
        .\Using_FPGA.Native_26 (Decode_I_n_427),
        .\Using_FPGA.Native_27 (Decode_I_n_426),
        .\Using_FPGA.Native_28 (Decode_I_n_425),
        .\Using_FPGA.Native_29 (Decode_I_n_424),
        .\Using_FPGA.Native_3 (Data_Flow_I_n_326),
        .\Using_FPGA.Native_30 (Decode_I_n_423),
        .\Using_FPGA.Native_31 (Decode_I_n_422),
        .\Using_FPGA.Native_32 (Decode_I_n_421),
        .\Using_FPGA.Native_33 (Decode_I_n_420),
        .\Using_FPGA.Native_34 (Decode_I_n_419),
        .\Using_FPGA.Native_35 (Decode_I_n_418),
        .\Using_FPGA.Native_36 (Decode_I_n_417),
        .\Using_FPGA.Native_37 (Decode_I_n_416),
        .\Using_FPGA.Native_38 (Decode_I_n_415),
        .\Using_FPGA.Native_39 (Decode_I_n_414),
        .\Using_FPGA.Native_4 (Data_Flow_I_n_343),
        .\Using_FPGA.Native_40 (Decode_I_n_413),
        .\Using_FPGA.Native_41 (Decode_I_n_412),
        .\Using_FPGA.Native_42 (Decode_I_n_411),
        .\Using_FPGA.Native_43 (Decode_I_n_410),
        .\Using_FPGA.Native_44 (Decode_I_n_409),
        .\Using_FPGA.Native_45 (Decode_I_n_408),
        .\Using_FPGA.Native_46 (Decode_I_n_407),
        .\Using_FPGA.Native_47 (Decode_I_n_406),
        .\Using_FPGA.Native_48 (Decode_I_n_405),
        .\Using_FPGA.Native_49 (Decode_I_n_404),
        .\Using_FPGA.Native_5 (Data_Flow_I_n_366),
        .\Using_FPGA.Native_50 (Decode_I_n_288),
        .\Using_FPGA.Native_51 (Decode_I_n_287),
        .\Using_FPGA.Native_52 (Decode_I_n_442),
        .\Using_FPGA.Native_53 (Decode_I_n_444),
        .\Using_FPGA.Native_54 ({\^D [257:256],\^D [252],\^D [249:248],\^D [246],\^D [244],\^D [241:240],\^D [238],\^D [236],\^D [233:232],\^D [230],\NLW_Data_Flow_I_Using_FPGA.Native_54_UNCONNECTED [3:0]}),
        .\Using_FPGA.Native_6 (Data_Flow_I_n_367),
        .\Using_FPGA.Native_7 (Data_Flow_I_n_368),
        .\Using_FPGA.Native_8 (Data_Flow_I_n_369),
        .\Using_FPGA.Native_9 (Data_Flow_I_n_370),
        .\Using_LWX_SWX_instr.ex_reservation_reg (Decode_I_n_438),
        .WB_GPR_Wr(\^D [114]),
        .\WB_MEM_Result_reg[0] ({MEM_Fwd[0],MEM_Fwd[28],MEM_Fwd[29],MEM_Fwd[30]}),
        .\WB_MEM_Result_reg[0]_0 ({\Operand_Select_I/of_op3 [0],\Operand_Select_I/of_op3 [1],\Operand_Select_I/of_op3 [2],\Operand_Select_I/of_op3 [3],\Operand_Select_I/of_op3 [4],\Operand_Select_I/of_op3 [5],\Operand_Select_I/of_op3 [6],\Operand_Select_I/of_op3 [7],\Operand_Select_I/of_op3 [8],\Operand_Select_I/of_op3 [9],\Operand_Select_I/of_op3 [10],\Operand_Select_I/of_op3 [11],\Operand_Select_I/of_op3 [12],\Operand_Select_I/of_op3 [13],\Operand_Select_I/of_op3 [14],\Operand_Select_I/of_op3 [15],\Operand_Select_I/of_op3 [17],\Operand_Select_I/of_op3 [18],\Operand_Select_I/of_op3 [19],\Operand_Select_I/of_op3 [20],\Operand_Select_I/of_op3 [21],\Operand_Select_I/of_op3 [22],\Operand_Select_I/of_op3 [23],\Operand_Select_I/of_op3 [24],\Operand_Select_I/of_op3 [25],\Operand_Select_I/of_op3 [26],\Operand_Select_I/of_op3 [27],\Operand_Select_I/of_op3 [28],\Operand_Select_I/of_op3 [29],\Operand_Select_I/of_op3 [30],\Operand_Select_I/of_op3 [31]}),
        .\WB_MEM_Result_reg[0]_1 (\^D [105]),
        .\WB_MEM_Result_reg[10] (\^D [95]),
        .\WB_MEM_Result_reg[11] (\^D [94]),
        .\WB_MEM_Result_reg[12] (\^D [93]),
        .\WB_MEM_Result_reg[13] (\^D [92]),
        .\WB_MEM_Result_reg[14] (\^D [91]),
        .\WB_MEM_Result_reg[15] (\^D [90]),
        .\WB_MEM_Result_reg[1] (\^D [104]),
        .\WB_MEM_Result_reg[2] (\^D [103]),
        .\WB_MEM_Result_reg[3] (\^D [102]),
        .\WB_MEM_Result_reg[4] (\^D [101]),
        .\WB_MEM_Result_reg[5] (\^D [100]),
        .\WB_MEM_Result_reg[6] (\^D [99]),
        .\WB_MEM_Result_reg[7] (\^D [98]),
        .\WB_MEM_Result_reg[8] (\^D [97]),
        .\WB_MEM_Result_reg[9] (\^D [96]),
        .\data_rd_reg_reg[16] ({Data_Flow_I_n_232,Data_Flow_I_n_233,Data_Flow_I_n_234,Data_Flow_I_n_235,Data_Flow_I_n_236,Data_Flow_I_n_237,Data_Flow_I_n_238,Data_Flow_I_n_239}),
        .ex_Enable_Sext_Shift(ex_Enable_Sext_Shift),
        .ex_MSR({ex_MSR[28],ex_MSR[29],ex_MSR[30]}),
        .ex_branch_with_delayslot_reg(\^Using_FPGA.Native ),
        .ex_byte_access(ex_byte_access),
        .ex_cmp_op(ex_cmp_op),
        .ex_databus_addr({ex_databus_addr[30],ex_databus_addr[31]}),
        .ex_doublet_access(ex_doublet_access),
        .\ex_gpr_write_addr_reg[0] (Decode_I_n_320),
        .\ex_gpr_write_addr_reg[0]_0 (Decode_I_n_443),
        .ex_load_alu_carry_reg(Decode_I_n_239),
        .ex_load_shift_carry(ex_load_shift_carry),
        .ex_move_to_MSR_instr(ex_move_to_MSR_instr),
        .ex_move_to_MSR_instr_reg(Decode_I_n_440),
        .ex_op1_cmp_equal(ex_op1_cmp_equal),
        .ex_op1_cmp_equal_n(ex_op1_cmp_equal_n),
        .ex_op1_zero(NLW_Data_Flow_I_ex_op1_zero_UNCONNECTED),
        .ex_reverse_mem_access(ex_reverse_mem_access),
        .ex_sel_alu(ex_sel_alu),
        .ex_sel_alu_i_reg({\Operand_Select_I/of_op2 [0],\Operand_Select_I/of_op2 [1],\Operand_Select_I/of_op2 [2],\Operand_Select_I/of_op2 [3],\Operand_Select_I/of_op2 [4],\Operand_Select_I/of_op2 [5],\Operand_Select_I/of_op2 [6],\Operand_Select_I/of_op2 [7],\Operand_Select_I/of_op2 [8],\Operand_Select_I/of_op2 [9],\Operand_Select_I/of_op2 [10],\Operand_Select_I/of_op2 [11],\Operand_Select_I/of_op2 [12],\Operand_Select_I/of_op2 [13],\Operand_Select_I/of_op2 [14],\Operand_Select_I/of_op2 [15],\Operand_Select_I/of_op2 [16],\Operand_Select_I/of_op2 [17],\Operand_Select_I/of_op2 [18],\Operand_Select_I/of_op2 [19],\Operand_Select_I/of_op2 [20],\Operand_Select_I/of_op2 [21],\Operand_Select_I/of_op2 [22],\Operand_Select_I/of_op2 [23],\Operand_Select_I/of_op2 [24],\Operand_Select_I/of_op2 [25],\Operand_Select_I/of_op2 [26],\Operand_Select_I/of_op2 [27],\Operand_Select_I/of_op2 [28],\Operand_Select_I/of_op2 [29],\Operand_Select_I/of_op2 [30],\Operand_Select_I/of_op2 [31]}),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .ex_swap_instr(ex_swap_instr),
        .ex_unsigned_op(ex_unsigned_op),
        .ex_use_carry(ex_use_carry),
        .ex_valid_reg(\Use_Debug_Logic.Master_Core.Debug_Perf_n_51 ),
        .in0(Decode_I_n_456),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .mem_MSR({mem_MSR[28],mem_MSR[29],mem_MSR[30]}),
        .mem_byte_access(mem_byte_access),
        .mem_byte_access_reg(Decode_I_n_457),
        .\mem_byte_selects_reg[0] (Data_Flow_I_n_380),
        .mem_doublet_access(mem_doublet_access),
        .mem_ex_result(mem_ex_result),
        .\mem_pc_i_reg[0] ({MEM_PC[0],MEM_PC[1],MEM_PC[2],MEM_PC[3],MEM_PC[4],MEM_PC[5],MEM_PC[6],MEM_PC[7],MEM_PC[8],MEM_PC[9],MEM_PC[10],MEM_PC[11],MEM_PC[12],MEM_PC[13],MEM_PC[14],MEM_PC[15],MEM_PC[16],MEM_PC[17],MEM_PC[18],MEM_PC[19],MEM_PC[20],MEM_PC[21],MEM_PC[22],MEM_PC[23],MEM_PC[24],MEM_PC[25],MEM_PC[26],MEM_PC[27],MEM_PC[28],MEM_PC[29],MEM_PC[30],MEM_PC[31]}),
        .mem_reverse_byteorder(\Byte_Doublet_Handle_gti_I/mem_reverse_byteorder ),
        .mem_sel_msr(mem_sel_msr),
        .mem_valid_reg(\^WB_Read_Imm_Reg_1_reg ),
        .mem_valid_reg_0(Decode_I_n_441),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data),
        .of_op1_sel_spr(of_op1_sel_spr),
        .of_pause_reg(\^use_Reg_Neg_S_reg ),
        .out(\Shift_Logic_Module_I/I4 ),
        .read_register_MSR_1(read_register_MSR_1),
        .sync_reset(sync_reset),
        .wb_byte_access(wb_byte_access),
        .\wb_exception_kind_i_reg[28] (\^Q [1]),
        .\wb_exception_kind_i_reg[31] (\^D [73]),
        .\wb_exception_kind_i_reg[31]_0 (\^D [81]),
        .\wb_exception_kind_i_reg[31]_1 (\^D [80]),
        .\wb_exception_kind_i_reg[31]_2 (\^D [79]),
        .\wb_exception_kind_i_reg[31]_3 (\^D [78]),
        .\wb_exception_kind_i_reg[31]_4 (\^D [77]),
        .\wb_exception_kind_i_reg[31]_5 (\^D [76]),
        .\wb_exception_kind_i_reg[31]_6 (\^D [75]),
        .\wb_exception_kind_i_reg[31]_7 (\^D [74]),
        .\wb_gpr_write_addr_reg[0] (\^D [113:109]),
        .\wb_gpr_write_addr_reg[3] (Decode_I_n_321),
        .wb_gpr_write_dbg(wb_gpr_write_dbg),
        .wb_piperun(wb_piperun),
        .wb_read_lsb_1_sel(\Byte_Doublet_Handle_gti_I/wb_read_lsb_1_sel ),
        .\wb_read_lsb_1_sel_reg[0] (\Byte_Doublet_Handle_gti_I/p_0_in ),
        .\wb_read_lsb_1_sel_reg[0]_0 (\Use_DBUS.DAXI_Interface_I1_n_26 ),
        .\wb_read_lsb_1_sel_reg[0]_1 (\Use_DBUS.DAXI_Interface_I1_n_23 ),
        .\wb_read_lsb_1_sel_reg[0]_2 (\Use_DBUS.DAXI_Interface_I1_n_21 ),
        .\wb_read_lsb_1_sel_reg[0]_3 (\Use_DBUS.DAXI_Interface_I1_n_17 ),
        .\wb_read_lsb_1_sel_reg[0]_4 (\Use_DBUS.DAXI_Interface_I1_n_15 ),
        .\wb_read_lsb_1_sel_reg[0]_5 (\Use_DBUS.DAXI_Interface_I1_n_11 ),
        .\wb_read_lsb_1_sel_reg[0]_6 (\Use_DBUS.DAXI_Interface_I1_n_9 ),
        .\wb_read_lsb_1_sel_reg[0]_7 (\Use_DBUS.DAXI_Interface_I1_n_6 ),
        .wb_read_msb_doublet_sel(\Byte_Doublet_Handle_gti_I/wb_read_msb_doublet_sel ));
  Decode_gti Decode_I
       (.Clk(Clk),
        .D({of_pc[0],of_pc[1],of_pc[2],of_pc[3],of_pc[4],of_pc[5],of_pc[6],of_pc[7],of_pc[8],of_pc[9],of_pc[10],of_pc[11],of_pc[12],of_pc[13],of_pc[14],of_pc[15],of_pc[16],of_pc[17],of_pc[18],of_pc[19],of_pc[20],of_pc[21],of_pc[22],of_pc[23],of_pc[24],of_pc[25],of_pc[26],of_pc[27],of_pc[28],of_pc[29],of_pc[30],of_pc[31]}),
        .DI(\^DI ),
        .DReady(DReady),
        .DWait(NLW_Decode_I_DWait_UNCONNECTED),
        .E(Decode_I_n_437),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .\EX_Branch_CMP_Op1_reg[0] ({\Operand_Select_I/I0 ,Decode_I_n_290,Decode_I_n_291,Decode_I_n_292,Decode_I_n_293,Decode_I_n_294,Decode_I_n_295,Decode_I_n_296,Decode_I_n_297,Decode_I_n_298,Decode_I_n_299,Decode_I_n_300,Decode_I_n_301,Decode_I_n_302,Decode_I_n_303,Decode_I_n_304,Decode_I_n_305,Decode_I_n_306,Decode_I_n_307,Decode_I_n_308,Decode_I_n_309,Decode_I_n_310,Decode_I_n_311,Decode_I_n_312,Decode_I_n_313,Decode_I_n_314,Decode_I_n_315,Decode_I_n_316,Decode_I_n_317,Decode_I_n_318,Decode_I_n_319}),
        .\EX_Branch_CMP_Op1_reg[0]_0 (ex_op1_neg),
        .\EX_Branch_CMP_Op1_reg[30] (Decode_I_n_321),
        .\EX_Branch_CMP_Op1_reg[30]_0 (Decode_I_n_444),
        .\EX_Branch_CMP_Op1_reg[31] (Decode_I_n_320),
        .\EX_Branch_CMP_Op1_reg[31]_0 (Decode_I_n_443),
        .EX_Enable_ALU(EX_Enable_ALU),
        .EX_Fwd({EX_Fwd[0],EX_Fwd[17],EX_Fwd[18],EX_Fwd[19],EX_Fwd[20],EX_Fwd[21],EX_Fwd[22],EX_Fwd[23],EX_Fwd[24],EX_Fwd[25],EX_Fwd[26],EX_Fwd[27],EX_Fwd[28],EX_Fwd[29],EX_Fwd[30],EX_Fwd[31]}),
        .\EX_Op1_reg[0] ({ex_op1_i[0],ex_op1_i[16],ex_op1_i[17],ex_op1_i[18],ex_op1_i[19],ex_op1_i[20],ex_op1_i[21],ex_op1_i[22],ex_op1_i[23],ex_op1_i[24],ex_op1_i[25],ex_op1_i[26],ex_op1_i[27],ex_op1_i[28],ex_op1_i[29],ex_op1_i[30],ex_op1_i[31]}),
        .\EX_Op1_reg[0]_0 (Data_Flow_I_n_373),
        .\EX_Op1_reg[10] (Decode_I_n_425),
        .\EX_Op1_reg[10]_0 (Data_Flow_I_n_367),
        .\EX_Op1_reg[11] (Decode_I_n_424),
        .\EX_Op1_reg[11]_0 (Data_Flow_I_n_368),
        .\EX_Op1_reg[12] (Decode_I_n_423),
        .\EX_Op1_reg[12]_0 (Data_Flow_I_n_369),
        .\EX_Op1_reg[13] (Decode_I_n_422),
        .\EX_Op1_reg[13]_0 (Data_Flow_I_n_370),
        .\EX_Op1_reg[14] (Decode_I_n_421),
        .\EX_Op1_reg[14]_0 (Data_Flow_I_n_371),
        .\EX_Op1_reg[15] (Decode_I_n_420),
        .\EX_Op1_reg[15]_0 (Data_Flow_I_n_372),
        .\EX_Op1_reg[16] (Decode_I_n_419),
        .\EX_Op1_reg[17] (Decode_I_n_418),
        .\EX_Op1_reg[18] (Decode_I_n_417),
        .\EX_Op1_reg[19] (Decode_I_n_416),
        .\EX_Op1_reg[1] (Decode_I_n_434),
        .\EX_Op1_reg[1]_0 (Data_Flow_I_n_374),
        .\EX_Op1_reg[20] (Decode_I_n_415),
        .\EX_Op1_reg[21] (Decode_I_n_414),
        .\EX_Op1_reg[22] (Decode_I_n_413),
        .\EX_Op1_reg[23] (Decode_I_n_412),
        .\EX_Op1_reg[24] (Decode_I_n_411),
        .\EX_Op1_reg[24]_0 (Data_Flow_I_n_19),
        .\EX_Op1_reg[25] (Decode_I_n_410),
        .\EX_Op1_reg[26] (Decode_I_n_409),
        .\EX_Op1_reg[27] (Decode_I_n_408),
        .\EX_Op1_reg[28] (Decode_I_n_407),
        .\EX_Op1_reg[29] (Decode_I_n_406),
        .\EX_Op1_reg[2] (Decode_I_n_433),
        .\EX_Op1_reg[2]_0 (Data_Flow_I_n_375),
        .\EX_Op1_reg[30] (Decode_I_n_405),
        .\EX_Op1_reg[31] (Decode_I_n_404),
        .\EX_Op1_reg[3] (Decode_I_n_432),
        .\EX_Op1_reg[3]_0 (Data_Flow_I_n_376),
        .\EX_Op1_reg[4] (Decode_I_n_431),
        .\EX_Op1_reg[4]_0 (Data_Flow_I_n_377),
        .\EX_Op1_reg[5] (Decode_I_n_430),
        .\EX_Op1_reg[5]_0 (Data_Flow_I_n_378),
        .\EX_Op1_reg[6] (Decode_I_n_429),
        .\EX_Op1_reg[6]_0 (Data_Flow_I_n_379),
        .\EX_Op1_reg[7] (Decode_I_n_428),
        .\EX_Op1_reg[7]_0 (Data_Flow_I_n_343),
        .\EX_Op1_reg[8] (Decode_I_n_427),
        .\EX_Op1_reg[9] (Decode_I_n_426),
        .\EX_Op1_reg[9]_0 (Data_Flow_I_n_366),
        .\EX_Op2_reg[0] ({\Operand_Select_I/of_op2 [0],\Operand_Select_I/of_op2 [1],\Operand_Select_I/of_op2 [2],\Operand_Select_I/of_op2 [3],\Operand_Select_I/of_op2 [4],\Operand_Select_I/of_op2 [5],\Operand_Select_I/of_op2 [6],\Operand_Select_I/of_op2 [7],\Operand_Select_I/of_op2 [8],\Operand_Select_I/of_op2 [9],\Operand_Select_I/of_op2 [10],\Operand_Select_I/of_op2 [11],\Operand_Select_I/of_op2 [12],\Operand_Select_I/of_op2 [13],\Operand_Select_I/of_op2 [14],\Operand_Select_I/of_op2 [15],\Operand_Select_I/of_op2 [16],\Operand_Select_I/of_op2 [17],\Operand_Select_I/of_op2 [18],\Operand_Select_I/of_op2 [19],\Operand_Select_I/of_op2 [20],\Operand_Select_I/of_op2 [21],\Operand_Select_I/of_op2 [22],\Operand_Select_I/of_op2 [23],\Operand_Select_I/of_op2 [24],\Operand_Select_I/of_op2 [25],\Operand_Select_I/of_op2 [26],\Operand_Select_I/of_op2 [27],\Operand_Select_I/of_op2 [28],\Operand_Select_I/of_op2 [29],\Operand_Select_I/of_op2 [30],\Operand_Select_I/of_op2 [31]}),
        .\EX_Op2_reg[0]_0 ({\^D [290:261],\^D [115],\^D [108:106],\^D [89:82]}),
        .\EX_Op2_reg[31] (ex_op2),
        .\EX_Op3_reg[0] ({\Operand_Select_I/of_op3 [0],\Operand_Select_I/of_op3 [1],\Operand_Select_I/of_op3 [2],\Operand_Select_I/of_op3 [3],\Operand_Select_I/of_op3 [4],\Operand_Select_I/of_op3 [5],\Operand_Select_I/of_op3 [6],\Operand_Select_I/of_op3 [7],\Operand_Select_I/of_op3 [8],\Operand_Select_I/of_op3 [9],\Operand_Select_I/of_op3 [10],\Operand_Select_I/of_op3 [11],\Operand_Select_I/of_op3 [12],\Operand_Select_I/of_op3 [13],\Operand_Select_I/of_op3 [14],\Operand_Select_I/of_op3 [15],\Operand_Select_I/of_op3 [17],\Operand_Select_I/of_op3 [18],\Operand_Select_I/of_op3 [19],\Operand_Select_I/of_op3 [20],\Operand_Select_I/of_op3 [21],\Operand_Select_I/of_op3 [22],\Operand_Select_I/of_op3 [23],\Operand_Select_I/of_op3 [24],\Operand_Select_I/of_op3 [25],\Operand_Select_I/of_op3 [26],\Operand_Select_I/of_op3 [27],\Operand_Select_I/of_op3 [28],\Operand_Select_I/of_op3 [29],\Operand_Select_I/of_op3 [30],\Operand_Select_I/of_op3 [31]}),
        .\EX_Op3_reg[1] ({ex_op3[1],ex_op3[2],ex_op3[4],ex_op3[6],ex_op3[9],ex_op3[10],ex_op3[12],ex_op3[14],ex_op3[17],ex_op3[18],ex_op3[20],ex_op3[22],ex_op3[25],ex_op3[26],ex_op3[28],ex_op3[30]}),
        .\EX_Op3_reg[31] (Decode_I_n_287),
        .\EX_Op3_reg[31]_0 (Decode_I_n_288),
        .\EX_Op3_reg[31]_1 (Decode_I_n_441),
        .\EX_Op3_reg[31]_2 (Decode_I_n_442),
        .GPR_Op1({gpr_op1[0],gpr_op1[1],gpr_op1[2],gpr_op1[3],gpr_op1[4],gpr_op1[5],gpr_op1[6],gpr_op1[7],gpr_op1[8],gpr_op1[9],gpr_op1[10],gpr_op1[11],gpr_op1[12],gpr_op1[13],gpr_op1[14],gpr_op1[15],gpr_op1[17],gpr_op1[18],gpr_op1[19],gpr_op1[20],gpr_op1[21],gpr_op1[22],gpr_op1[23],gpr_op1[24],gpr_op1[25],gpr_op1[26],gpr_op1[27],gpr_op1[28],gpr_op1[29],gpr_op1[30],gpr_op1[31]}),
        .GPR_Op2(gpr_op2),
        .GPR_Op3({gpr_op3[0],gpr_op3[1],gpr_op3[2],gpr_op3[3],gpr_op3[4],gpr_op3[5],gpr_op3[6],gpr_op3[7],gpr_op3[8],gpr_op3[9],gpr_op3[10],gpr_op3[11],gpr_op3[12],gpr_op3[13],gpr_op3[14],gpr_op3[15],gpr_op3[17],gpr_op3[18],gpr_op3[19],gpr_op3[20],gpr_op3[21],gpr_op3[22],gpr_op3[23],gpr_op3[24],gpr_op3[25],gpr_op3[26],gpr_op3[27],gpr_op3[28],gpr_op3[29],gpr_op3[30],gpr_op3[31]}),
        .Hibernate(NLW_Decode_I_Hibernate_UNCONNECTED),
        .I041_out(\PreFetch_Buffer_I1/I041_out ),
        .I1(\Operand_Select_I/I1 ),
        .I139_out(\PreFetch_Buffer_I1/I139_out ),
        .I1_0(\exception_registers_I1/I1 ),
        .IReady(IReady),
        .IReady_1(IReady_0),
        .LOCKSTEP_Master_Out(NLW_Decode_I_LOCKSTEP_Master_Out_UNCONNECTED[2:0]),
        .\MEM_DataBus_Addr_reg[9]_0 ({ex_alu_op[0],ex_alu_op[1]}),
        .MEM_DataBus_Read(NLW_Decode_I_MEM_DataBus_Read_UNCONNECTED),
        .MEM_WB_Sel_Mem_PC(MEM_WB_Sel_Mem_PC),
        .M_AXI_DP_ARREADY(M_AXI_DP_ARREADY),
        .M_AXI_DP_ARVALID_i_reg(Decode_I_n_453),
        .M_AXI_DP_AWREADY(M_AXI_DP_AWREADY),
        .M_AXI_DP_AWVALID_i_reg(Decode_I_n_455),
        .M_AXI_DP_AWVALID_i_reg_0({\^D [187],\^D [150:149]}),
        .M_AXI_DP_WREADY(M_AXI_DP_WREADY),
        .M_AXI_DP_WVALID_i_reg(Decode_I_n_454),
        .Pause(NLW_Decode_I_Pause_UNCONNECTED),
        .Pause_Ack(NLW_Decode_I_Pause_Ack_UNCONNECTED),
        .\Performace_Debug_Control.dbg_freeze_nohalt_reg (\Use_Debug_Logic.Master_Core.Debug_Perf_n_44 ),
        .\Performace_Debug_Control.dbg_state_nohalt_reg (Decode_I_n_403),
        .\Performace_Debug_Control.dbg_state_nohalt_reg_0 (\Use_Debug_Logic.Master_Core.Debug_Perf_n_42 ),
        .\Performace_Debug_Control.dbg_stop_if_delay_i_reg (\Use_Debug_Logic.Master_Core.Debug_Perf_n_52 ),
        .\Performace_Debug_Control.dbg_stop_if_delay_i_reg_0 (\Use_Debug_Logic.Master_Core.Debug_Perf_n_54 ),
        .\Performace_Debug_Control.dbg_stop_if_delay_i_reg_1 (\Use_Debug_Logic.Master_Core.Debug_Perf_n_56 ),
        .\Performace_Debug_Control.dbg_stop_if_delay_i_reg_2 (\^LOCKSTEP_Master_Out [32]),
        .\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg (Decode_I_n_402),
        .\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 (\Use_Debug_Logic.Master_Core.Debug_Perf_n_39 ),
        .\Performace_Debug_Control.ex_brki_hit_reg (Decode_I_n_445),
        .\Performace_Debug_Control.ex_dbg_pc_hit_i_reg (\^LOCKSTEP_Master_Out [36]),
        .Q({\^Q [1],NLW_Decode_I_Q_UNCONNECTED[0]}),
        .R(\Data_Flow_Logic_I/R ),
        .Reset_Mode(NLW_Decode_I_Reset_Mode_UNCONNECTED[0:1]),
        .SR(\Data_Flow_Logic_I/WB_MEM_Result0 ),
        .SRI(SRI),
        .\Serial_Dbg_Intf.control_reg_reg[8] (\Use_Debug_Logic.Master_Core.Debug_Perf_n_57 ),
        .\Serial_Dbg_Intf.force_stop_cmd_i_reg (\NLW_Decode_I_Serial_Dbg_Intf.force_stop_cmd_i_reg_UNCONNECTED ),
        .\Serial_Dbg_Intf.if_debug_ready_i_reg (\^LOCKSTEP_Master_Out [38]),
        .Sleep(\^Sleep ),
        .Sleep_Decode(NLW_Decode_I_Sleep_Decode_UNCONNECTED),
        .Sleep_Out(Sleep_Out),
        .Suspend(NLW_Decode_I_Suspend_UNCONNECTED),
        .\Use_DLMB.wb_dlmb_valid_read_data_reg[16] (\Use_DBUS.DAXI_Interface_I1_n_28 ),
        .\Use_DLMB.wb_dlmb_valid_read_data_reg[17] (\Use_DBUS.DAXI_Interface_I1_n_29 ),
        .\Use_DLMB.wb_dlmb_valid_read_data_reg[18] (\Use_DBUS.DAXI_Interface_I1_n_30 ),
        .\Use_DLMB.wb_dlmb_valid_read_data_reg[19] (\Use_DBUS.DAXI_Interface_I1_n_31 ),
        .\Use_DLMB.wb_dlmb_valid_read_data_reg[20] (\Use_DBUS.DAXI_Interface_I1_n_32 ),
        .\Use_DLMB.wb_dlmb_valid_read_data_reg[21] (\Use_DBUS.DAXI_Interface_I1_n_33 ),
        .\Use_DLMB.wb_dlmb_valid_read_data_reg[22] (\Use_DBUS.DAXI_Interface_I1_n_34 ),
        .\Use_DLMB.wb_dlmb_valid_read_data_reg[23] (\Use_DBUS.DAXI_Interface_I1_n_35 ),
        .\Use_DLMB.wb_dlmb_valid_read_data_reg[24] (\Use_DBUS.DAXI_Interface_I1_n_4 ),
        .\Use_DLMB.wb_dlmb_valid_read_data_reg[25] (\Use_DBUS.DAXI_Interface_I1_n_7 ),
        .\Use_DLMB.wb_dlmb_valid_read_data_reg[26] (\Use_DBUS.DAXI_Interface_I1_n_12 ),
        .\Use_DLMB.wb_dlmb_valid_read_data_reg[27] (\Use_DBUS.DAXI_Interface_I1_n_13 ),
        .\Use_DLMB.wb_dlmb_valid_read_data_reg[28] (\Use_DBUS.DAXI_Interface_I1_n_18 ),
        .\Use_DLMB.wb_dlmb_valid_read_data_reg[29] (\Use_DBUS.DAXI_Interface_I1_n_19 ),
        .\Use_DLMB.wb_dlmb_valid_read_data_reg[30] (\Use_DBUS.DAXI_Interface_I1_n_24 ),
        .\Use_DLMB.wb_dlmb_valid_read_data_reg[31] (\Use_DBUS.DAXI_Interface_I1_n_27 ),
        .\Using_FPGA.Native (if_sel_input),
        .\Using_FPGA.Native_0 (of_predecode),
        .\Using_FPGA.Native_1 (\^Using_FPGA.Native ),
        .\Using_FPGA.Native_10 ({MEM_Fwd[0],MEM_Fwd[28],MEM_Fwd[29],MEM_Fwd[30]}),
        .\Using_FPGA.Native_11 (\^LOCKSTEP_Out_reg[2944] ),
        .\Using_FPGA.Native_12 (\^LOCKSTEP_Out_reg[2943] ),
        .\Using_FPGA.Native_13 (\^LOCKSTEP_Out_reg[2942] ),
        .\Using_FPGA.Native_14 (\^LOCKSTEP_Out_reg[2941] ),
        .\Using_FPGA.Native_15 (\^LOCKSTEP_Out_reg[2940] ),
        .\Using_FPGA.Native_16 (\^LOCKSTEP_Out_reg[2939] ),
        .\Using_FPGA.Native_17 (\^LOCKSTEP_Out_reg[2938] ),
        .\Using_FPGA.Native_18 (\^LOCKSTEP_Out_reg[2929] ),
        .\Using_FPGA.Native_19 (\^LOCKSTEP_Out_reg[2928] ),
        .\Using_FPGA.Native_2 (Decode_I_n_239),
        .\Using_FPGA.Native_20 (\^LOCKSTEP_Out_reg[2927] ),
        .\Using_FPGA.Native_21 (\^LOCKSTEP_Out_reg[2926] ),
        .\Using_FPGA.Native_22 (\^LOCKSTEP_Out_reg[2925] ),
        .\Using_FPGA.Native_23 (Data_Flow_I_n_344),
        .\Using_FPGA.Native_24 (\^LOCKSTEP_Out_reg[2924] ),
        .\Using_FPGA.Native_25 (\^LOCKSTEP_Out_reg[2923] ),
        .\Using_FPGA.Native_26 (\^LOCKSTEP_Out_reg[2922] ),
        .\Using_FPGA.Native_27 (\^LOCKSTEP_Out_reg[2921] ),
        .\Using_FPGA.Native_28 (Data_Flow_I_n_345),
        .\Using_FPGA.Native_29 (\^LOCKSTEP_Out_reg[2920] ),
        .\Using_FPGA.Native_3 (Decode_I_n_396),
        .\Using_FPGA.Native_30 (\^LOCKSTEP_Out_reg[2919] ),
        .\Using_FPGA.Native_31 (\^LOCKSTEP_Out_reg[2918] ),
        .\Using_FPGA.Native_32 (Data_Flow_I_n_346),
        .\Using_FPGA.Native_33 (\^LOCKSTEP_Out_reg[2917] ),
        .\Using_FPGA.Native_34 (Data_Flow_I_n_347),
        .\Using_FPGA.Native_35 (\^LOCKSTEP_Out_reg[2916] ),
        .\Using_FPGA.Native_36 (\^LOCKSTEP_Out_reg[2915] ),
        .\Using_FPGA.Native_37 (Data_Flow_I_n_380),
        .\Using_FPGA.Native_4 (Decode_I_n_438),
        .\Using_FPGA.Native_5 (Decode_I_n_440),
        .\Using_FPGA.Native_6 ({ex_sext_op[0],ex_sext_op[1]}),
        .\Using_FPGA.Native_7 (\PreFetch_Buffer_I1/p_1_in49_in ),
        .\Using_FPGA.Native_8 ({MEM_PC[0],MEM_PC[1],MEM_PC[2],MEM_PC[3],MEM_PC[4],MEM_PC[5],MEM_PC[6],MEM_PC[7],MEM_PC[8],MEM_PC[9],MEM_PC[10],MEM_PC[11],MEM_PC[12],MEM_PC[13],MEM_PC[14],MEM_PC[15],MEM_PC[16],MEM_PC[17],MEM_PC[18],MEM_PC[19],MEM_PC[20],MEM_PC[21],MEM_PC[22],MEM_PC[23],MEM_PC[24],MEM_PC[25],MEM_PC[26],MEM_PC[27],MEM_PC[28],MEM_PC[29],MEM_PC[30],MEM_PC[31]}),
        .\Using_FPGA.Native_9 ({wb_excep_return_addr[0],wb_excep_return_addr[1],wb_excep_return_addr[2],wb_excep_return_addr[3],wb_excep_return_addr[4],wb_excep_return_addr[5],wb_excep_return_addr[6],wb_excep_return_addr[7],wb_excep_return_addr[8],wb_excep_return_addr[9],wb_excep_return_addr[10],wb_excep_return_addr[11],wb_excep_return_addr[12],wb_excep_return_addr[13],wb_excep_return_addr[14],wb_excep_return_addr[15],wb_excep_return_addr[24],wb_excep_return_addr[25],wb_excep_return_addr[26],wb_excep_return_addr[27],wb_excep_return_addr[28],wb_excep_return_addr[29],wb_excep_return_addr[30],wb_excep_return_addr[31]}),
        .\WB_MEM_Result_reg[0] ({wb_mem_result[0],wb_mem_result[1],wb_mem_result[2],wb_mem_result[3],wb_mem_result[4],wb_mem_result[5],wb_mem_result[6],wb_mem_result[7],wb_mem_result[8],wb_mem_result[9],wb_mem_result[10],wb_mem_result[11],wb_mem_result[12],wb_mem_result[13],wb_mem_result[14],wb_mem_result[15],wb_mem_result[24],wb_mem_result[25],wb_mem_result[26],wb_mem_result[27],wb_mem_result[28],wb_mem_result[29],wb_mem_result[30],wb_mem_result[31]}),
        .WB_Read_Imm_Reg_1_reg_0(\^WB_Read_Imm_Reg_1_reg ),
        .Y(ib_data),
        .active_access_d1(active_access_d1),
        .\data_rd_reg_reg[0] ({Decode_I_n_354,Decode_I_n_355,Decode_I_n_356,Decode_I_n_357,Decode_I_n_358,Decode_I_n_359,Decode_I_n_360,Decode_I_n_361,Decode_I_n_362,Decode_I_n_363,Decode_I_n_364,Decode_I_n_365,Decode_I_n_366,Decode_I_n_367,Decode_I_n_368,Decode_I_n_369,Decode_I_n_370,Decode_I_n_371,Decode_I_n_372,Decode_I_n_373,Decode_I_n_374,Decode_I_n_375,Decode_I_n_376,Decode_I_n_377}),
        .dbg_clean_stop(dbg_clean_stop),
        .dbg_halt_reset_mode_reg(\Use_Debug_Logic.Master_Core.Debug_Perf_n_41 ),
        .dbg_pause(NLW_Decode_I_dbg_pause_UNCONNECTED),
        .dbg_stop_i(dbg_stop_i),
        .ex_Enable_Sext_Shift(ex_Enable_Sext_Shift),
        .ex_MSR({ex_MSR[28],ex_MSR[29],ex_MSR[30]}),
        .ex_byte_access(ex_byte_access),
        .ex_cmp_op(ex_cmp_op),
        .ex_databus_addr({ex_databus_addr[30],ex_databus_addr[31]}),
        .ex_doublet_access(ex_doublet_access),
        .ex_exception_no_load_store_mask(ex_exception_no_load_store_mask),
        .ex_load_shift_carry(ex_load_shift_carry),
        .ex_load_shift_carry_reg_0(Data_Flow_I_n_326),
        .ex_move_to_MSR_instr(ex_move_to_MSR_instr),
        .ex_op1_cmp_equal(ex_op1_cmp_equal),
        .ex_op1_cmp_equal_n(ex_op1_cmp_equal_n),
        .ex_op1_zero(NLW_Decode_I_ex_op1_zero_UNCONNECTED),
        .ex_reverse_mem_access(ex_reverse_mem_access),
        .ex_sel_alu(ex_sel_alu),
        .ex_sel_alu_i_reg_0(Data_Flow_I_n_348),
        .ex_sel_alu_i_reg_1({EX_Fwd[1],EX_Fwd[2],EX_Fwd[3],EX_Fwd[4],EX_Fwd[5],EX_Fwd[6],EX_Fwd[7],EX_Fwd[8],EX_Fwd[9],EX_Fwd[10],EX_Fwd[11],EX_Fwd[12],EX_Fwd[13],EX_Fwd[14],EX_Fwd[15],EX_Fwd[16]}),
        .ex_sel_alu_i_reg_10(Data_Flow_I_n_357),
        .ex_sel_alu_i_reg_11(Data_Flow_I_n_358),
        .ex_sel_alu_i_reg_12(Data_Flow_I_n_359),
        .ex_sel_alu_i_reg_13(Data_Flow_I_n_360),
        .ex_sel_alu_i_reg_14(Data_Flow_I_n_361),
        .ex_sel_alu_i_reg_2(Data_Flow_I_n_349),
        .ex_sel_alu_i_reg_3(Data_Flow_I_n_350),
        .ex_sel_alu_i_reg_4(Data_Flow_I_n_351),
        .ex_sel_alu_i_reg_5(Data_Flow_I_n_352),
        .ex_sel_alu_i_reg_6(Data_Flow_I_n_353),
        .ex_sel_alu_i_reg_7(Data_Flow_I_n_354),
        .ex_sel_alu_i_reg_8(Data_Flow_I_n_355),
        .ex_sel_alu_i_reg_9(Data_Flow_I_n_356),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .ex_swap_instr(ex_swap_instr),
        .ex_unsigned_op(ex_unsigned_op),
        .ex_use_carry(ex_use_carry),
        .ex_valid(ex_valid),
        .ex_valid_reg_0(\Use_Debug_Logic.Master_Core.Debug_Perf_n_51 ),
        .if_missed_fetch(if_missed_fetch),
        .\imm_reg_reg[0] ({\Operand_Select_I/imm_reg [0],\Operand_Select_I/imm_reg [1],\Operand_Select_I/imm_reg [2],\Operand_Select_I/imm_reg [3],\Operand_Select_I/imm_reg [4],\Operand_Select_I/imm_reg [5],\Operand_Select_I/imm_reg [6],\Operand_Select_I/imm_reg [7],\Operand_Select_I/imm_reg [8],\Operand_Select_I/imm_reg [9],\Operand_Select_I/imm_reg [10],\Operand_Select_I/imm_reg [11],\Operand_Select_I/imm_reg [12],\Operand_Select_I/imm_reg [13],\Operand_Select_I/imm_reg [14],\Operand_Select_I/imm_reg [15]}),
        .in(\PreFetch_Buffer_I1/if_predecode ),
        .in0(Decode_I_n_456),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_10(lopt_10),
        .lopt_11(lopt_11),
        .lopt_2(lopt_2),
        .lopt_3(NLW_Decode_I_lopt_3_UNCONNECTED),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .lopt_9(lopt_9),
        .mb_halted_1_reg({\^D [325:323],NLW_Decode_I_mb_halted_1_reg_UNCONNECTED[149:132],\^D [304:293],NLW_Decode_I_mb_halted_1_reg_UNCONNECTED[119:118],\^D [257:256],\^D [252],\^D [249:248],\^D [246],\^D [244],\^D [241:240],\^D [238],\^D [236],\^D [233:232],\^D [230],NLW_Decode_I_mb_halted_1_reg_UNCONNECTED[103],\^D [224:204],NLW_Decode_I_mb_halted_1_reg_UNCONNECTED[81:70],\^D [191:190],NLW_Decode_I_mb_halted_1_reg_UNCONNECTED[67:34],\^D [116],\^D [114:109],\^D [105:90],\^D [81:73],NLW_Decode_I_mb_halted_1_reg_UNCONNECTED[1],\^D [71]}),
        .mem_Exception_Taken(mem_Exception_Taken),
        .mem_MSR({mem_MSR[28],mem_MSR[29],mem_MSR[30]}),
        .mem_byte_access(mem_byte_access),
        .\mem_byte_selects_reg[0] (\Byte_Doublet_Handle_gti_I/p_0_in ),
        .mem_databus_access(mem_databus_access),
        .mem_databus_ready(NLW_Decode_I_mem_databus_ready_UNCONNECTED),
        .mem_databus_write(NLW_Decode_I_mem_databus_write_UNCONNECTED),
        .mem_doublet_access(mem_doublet_access),
        .mem_ex_result(mem_ex_result),
        .mem_reverse_byteorder(\Byte_Doublet_Handle_gti_I/mem_reverse_byteorder ),
        .mem_sel_msr(mem_sel_msr),
        .new_request(new_request),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data),
        .of_op1_sel_spr(of_op1_sel_spr),
        .out(\Shift_Logic_Module_I/I4 ),
        .read_register_MSR_1(read_register_MSR_1),
        .sync_reset(sync_reset),
        .use_Reg_Neg_S_reg(\^use_Reg_Neg_S_reg ),
        .wakeup_i(NLW_Decode_I_wakeup_i_UNCONNECTED[0:1]),
        .wb_Halted(wb_Halted),
        .wb_byte_access(wb_byte_access),
        .wb_gpr_write_dbg(wb_gpr_write_dbg),
        .wb_pc_valid(wb_pc_valid),
        .wb_piperun(wb_piperun),
        .wb_read_imm_reg(wb_read_imm_reg),
        .wb_read_imm_reg_1(wb_read_imm_reg_1),
        .\wb_read_lsb_sel_reg[0] (Decode_I_n_457),
        .\wb_read_lsb_sel_reg[1] (\Use_DBUS.DAXI_Interface_I1_n_25 ),
        .\wb_read_lsb_sel_reg[1]_0 (\Use_DBUS.DAXI_Interface_I1_n_22 ),
        .\wb_read_lsb_sel_reg[1]_1 (\Use_DBUS.DAXI_Interface_I1_n_20 ),
        .\wb_read_lsb_sel_reg[1]_2 (\Use_DBUS.DAXI_Interface_I1_n_16 ),
        .\wb_read_lsb_sel_reg[1]_3 (\Use_DBUS.DAXI_Interface_I1_n_14 ),
        .\wb_read_lsb_sel_reg[1]_4 (\Use_DBUS.DAXI_Interface_I1_n_10 ),
        .\wb_read_lsb_sel_reg[1]_5 (\Use_DBUS.DAXI_Interface_I1_n_8 ),
        .\wb_read_lsb_sel_reg[1]_6 (\Use_DBUS.DAXI_Interface_I1_n_5 ),
        .wb_valid_reg_0(Decode_I_n_254));
  DAXI_interface \Use_DBUS.DAXI_Interface_I1 
       (.Clk(Clk),
        .D({\^D [187],\^D [150:149]}),
        .DReady(DReady),
        .\LOCKSTEP_Out_reg[3007] (\Use_DBUS.DAXI_Interface_I1_n_4 ),
        .\LOCKSTEP_Out_reg[3008] (\Use_DBUS.DAXI_Interface_I1_n_7 ),
        .\LOCKSTEP_Out_reg[3009] (\Use_DBUS.DAXI_Interface_I1_n_12 ),
        .\LOCKSTEP_Out_reg[3010] (\Use_DBUS.DAXI_Interface_I1_n_13 ),
        .\LOCKSTEP_Out_reg[3011] (\Use_DBUS.DAXI_Interface_I1_n_18 ),
        .\LOCKSTEP_Out_reg[3012] (\Use_DBUS.DAXI_Interface_I1_n_19 ),
        .\LOCKSTEP_Out_reg[3013] (\Use_DBUS.DAXI_Interface_I1_n_24 ),
        .\LOCKSTEP_Out_reg[3014] (\Use_DBUS.DAXI_Interface_I1_n_27 ),
        .\LOCKSTEP_Out_reg[3015] (\Use_DBUS.DAXI_Interface_I1_n_28 ),
        .\LOCKSTEP_Out_reg[3016] (\Use_DBUS.DAXI_Interface_I1_n_29 ),
        .\LOCKSTEP_Out_reg[3017] (\Use_DBUS.DAXI_Interface_I1_n_30 ),
        .\LOCKSTEP_Out_reg[3018] (\Use_DBUS.DAXI_Interface_I1_n_31 ),
        .\LOCKSTEP_Out_reg[3019] (\Use_DBUS.DAXI_Interface_I1_n_32 ),
        .\LOCKSTEP_Out_reg[3020] (\Use_DBUS.DAXI_Interface_I1_n_33 ),
        .\LOCKSTEP_Out_reg[3021] (\Use_DBUS.DAXI_Interface_I1_n_34 ),
        .\LOCKSTEP_Out_reg[3022] (\Use_DBUS.DAXI_Interface_I1_n_35 ),
        .\LOCKSTEP_Out_reg[3023] (\Use_DBUS.DAXI_Interface_I1_n_6 ),
        .\LOCKSTEP_Out_reg[3024] (\Use_DBUS.DAXI_Interface_I1_n_9 ),
        .\LOCKSTEP_Out_reg[3025] (\Use_DBUS.DAXI_Interface_I1_n_11 ),
        .\LOCKSTEP_Out_reg[3026] (\Use_DBUS.DAXI_Interface_I1_n_15 ),
        .\LOCKSTEP_Out_reg[3027] (\Use_DBUS.DAXI_Interface_I1_n_17 ),
        .\LOCKSTEP_Out_reg[3028] (\Use_DBUS.DAXI_Interface_I1_n_21 ),
        .\LOCKSTEP_Out_reg[3029] (\Use_DBUS.DAXI_Interface_I1_n_23 ),
        .\LOCKSTEP_Out_reg[3030] (\Use_DBUS.DAXI_Interface_I1_n_26 ),
        .\LOCKSTEP_Out_reg[3031] (\Use_DBUS.DAXI_Interface_I1_n_5 ),
        .\LOCKSTEP_Out_reg[3032] (\Use_DBUS.DAXI_Interface_I1_n_8 ),
        .\LOCKSTEP_Out_reg[3033] (\Use_DBUS.DAXI_Interface_I1_n_10 ),
        .\LOCKSTEP_Out_reg[3034] (\Use_DBUS.DAXI_Interface_I1_n_14 ),
        .\LOCKSTEP_Out_reg[3035] (\Use_DBUS.DAXI_Interface_I1_n_16 ),
        .\LOCKSTEP_Out_reg[3036] (\Use_DBUS.DAXI_Interface_I1_n_20 ),
        .\LOCKSTEP_Out_reg[3037] (\Use_DBUS.DAXI_Interface_I1_n_22 ),
        .\LOCKSTEP_Out_reg[3038] (\Use_DBUS.DAXI_Interface_I1_n_25 ),
        .MEM_DataBus_Access_reg(mem_databus_access),
        .MEM_DataBus_Write_reg(Decode_I_n_453),
        .MEM_DataBus_Write_reg_0(Decode_I_n_454),
        .MEM_DataBus_Write_reg_1(Decode_I_n_455),
        .M_AXI_DP_BVALID(M_AXI_DP_BVALID),
        .M_AXI_DP_RDATA(M_AXI_DP_RDATA),
        .M_AXI_DP_RVALID(M_AXI_DP_RVALID),
        .Q({wb_dlmb_valid_read_data[0],wb_dlmb_valid_read_data[1],wb_dlmb_valid_read_data[2],wb_dlmb_valid_read_data[3],wb_dlmb_valid_read_data[4],wb_dlmb_valid_read_data[5],wb_dlmb_valid_read_data[6],wb_dlmb_valid_read_data[7],wb_dlmb_valid_read_data[8],wb_dlmb_valid_read_data[9],wb_dlmb_valid_read_data[10],wb_dlmb_valid_read_data[11],wb_dlmb_valid_read_data[12],wb_dlmb_valid_read_data[13],wb_dlmb_valid_read_data[14],wb_dlmb_valid_read_data[15],wb_dlmb_valid_read_data[16],wb_dlmb_valid_read_data[17],wb_dlmb_valid_read_data[18],wb_dlmb_valid_read_data[19],wb_dlmb_valid_read_data[20],wb_dlmb_valid_read_data[21],wb_dlmb_valid_read_data[22],wb_dlmb_valid_read_data[23],wb_dlmb_valid_read_data[24],wb_dlmb_valid_read_data[25],wb_dlmb_valid_read_data[26],wb_dlmb_valid_read_data[27],wb_dlmb_valid_read_data[28],wb_dlmb_valid_read_data[29],wb_dlmb_valid_read_data[30],wb_dlmb_valid_read_data[31]}),
        .S(S),
        .\Serial_Dbg_Intf.force_stop_cmd_i_reg (\Use_Debug_Logic.Master_Core.Debug_Perf_n_38 ),
        .active_access_d1(active_access_d1),
        .new_request(new_request),
        .sync_reset(sync_reset),
        .wb_read_lsb_1_sel(\Byte_Doublet_Handle_gti_I/wb_read_lsb_1_sel ),
        .\wb_read_lsb_sel_reg[0] ({\Byte_Doublet_Handle_gti_I/wb_read_lsb_sel [0],\Byte_Doublet_Handle_gti_I/wb_read_lsb_sel [1]}),
        .wb_read_msb_doublet_sel(\Byte_Doublet_Handle_gti_I/wb_read_msb_doublet_sel ));
  MB_AND2B1L \Use_DLMB.Using_Latch_AS_Logic.AND2B1L_I1 
       (.D(\^D [226]),
        .E(\^WB_Read_Imm_Reg_1_reg ),
        .SRI(SRI));
  LUT2 #(
    .INIT(4'hB)) 
    \Use_DLMB.wb_dlmb_valid_read_data[0]_i_1 
       (.I0(sync_reset),
        .I1(DReady),
        .O(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[0] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[0]),
        .Q(wb_dlmb_valid_read_data[0]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[10] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[10]),
        .Q(wb_dlmb_valid_read_data[10]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[11] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[11]),
        .Q(wb_dlmb_valid_read_data[11]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[12] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[12]),
        .Q(wb_dlmb_valid_read_data[12]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[13] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[13]),
        .Q(wb_dlmb_valid_read_data[13]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[14] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[14]),
        .Q(wb_dlmb_valid_read_data[14]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[15] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[15]),
        .Q(wb_dlmb_valid_read_data[15]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[16] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[16]),
        .Q(wb_dlmb_valid_read_data[16]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[17] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[17]),
        .Q(wb_dlmb_valid_read_data[17]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[18] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[18]),
        .Q(wb_dlmb_valid_read_data[18]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[19] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[19]),
        .Q(wb_dlmb_valid_read_data[19]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[1] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[1]),
        .Q(wb_dlmb_valid_read_data[1]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[20] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[20]),
        .Q(wb_dlmb_valid_read_data[20]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[21] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[21]),
        .Q(wb_dlmb_valid_read_data[21]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[22] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[22]),
        .Q(wb_dlmb_valid_read_data[22]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[23] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[23]),
        .Q(wb_dlmb_valid_read_data[23]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[24] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[24]),
        .Q(wb_dlmb_valid_read_data[24]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[25] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[25]),
        .Q(wb_dlmb_valid_read_data[25]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[26] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[26]),
        .Q(wb_dlmb_valid_read_data[26]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[27] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[27]),
        .Q(wb_dlmb_valid_read_data[27]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[28] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[28]),
        .Q(wb_dlmb_valid_read_data[28]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[29] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[29]),
        .Q(wb_dlmb_valid_read_data[29]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[2] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[2]),
        .Q(wb_dlmb_valid_read_data[2]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[30] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[30]),
        .Q(wb_dlmb_valid_read_data[30]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[31] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[31]),
        .Q(wb_dlmb_valid_read_data[31]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[3] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[3]),
        .Q(wb_dlmb_valid_read_data[3]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[4] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[4]),
        .Q(wb_dlmb_valid_read_data[4]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[5] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[5]),
        .Q(wb_dlmb_valid_read_data[5]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[6] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[6]),
        .Q(wb_dlmb_valid_read_data[6]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[7] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[7]),
        .Q(wb_dlmb_valid_read_data[7]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[8] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[8]),
        .Q(wb_dlmb_valid_read_data[8]),
        .R(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[9] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[9]),
        .Q(wb_dlmb_valid_read_data[9]),
        .R(p_1_out));
  Debug \Use_Debug_Logic.Master_Core.Debug_Perf 
       (.Address(of_pc),
        .Clk(Clk),
        .D({\^D [325:324],\^D [116],\^D [73],\^D [71]}),
        .Dbg_Capture(Dbg_Capture),
        .Dbg_Clk(Dbg_Clk),
        .Dbg_Reg_En(Dbg_Reg_En),
        .Dbg_Shift(Dbg_Shift),
        .Dbg_Stop(\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Dbg_Stop_UNCONNECTED ),
        .Dbg_TDI(Dbg_TDI),
        .Dbg_TDO(Dbg_TDO),
        .Dbg_Trig_Ack_In(\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Dbg_Trig_Ack_In_UNCONNECTED [1:0]),
        .Dbg_Trig_Ack_Out(\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Dbg_Trig_Ack_Out_UNCONNECTED [1:0]),
        .Dbg_Trig_In(\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Dbg_Trig_In_UNCONNECTED [1:0]),
        .Dbg_Trig_Out(\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Dbg_Trig_Out_UNCONNECTED [1:0]),
        .Dbg_Update(Dbg_Update),
        .E(\^WB_Read_Imm_Reg_1_reg ),
        .IReady(IReady),
        .IReady_0(IReady_0),
        .LOCKSTEP_Master_Out({\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_LOCKSTEP_Master_Out_UNCONNECTED [37],\^LOCKSTEP_Master_Out [38],\^LOCKSTEP_Master_Out [36],\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_LOCKSTEP_Master_Out_UNCONNECTED [34:33],\^LOCKSTEP_Master_Out [32:0]}),
        .MEM_DataBus_Access_reg(mem_databus_access),
        .Pause(\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Pause_UNCONNECTED ),
        .\Performace_Debug_Control.dbg_freeze_nohalt_reg_0 (\Use_Debug_Logic.Master_Core.Debug_Perf_n_44 ),
        .\Performace_Debug_Control.dbg_state_nohalt_reg_0 (\Use_Debug_Logic.Master_Core.Debug_Perf_n_42 ),
        .\Performace_Debug_Control.dbg_stop_if_delay_i_reg_0 (\Use_Debug_Logic.Master_Core.Debug_Perf_n_41 ),
        .\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ({Decode_I_n_354,Decode_I_n_355,Decode_I_n_356,Decode_I_n_357,Decode_I_n_358,Decode_I_n_359,Decode_I_n_360,Decode_I_n_361,Decode_I_n_362,Decode_I_n_363,Decode_I_n_364,Decode_I_n_365,Decode_I_n_366,Decode_I_n_367,Decode_I_n_368,Decode_I_n_369,Data_Flow_I_n_232,Data_Flow_I_n_233,Data_Flow_I_n_234,Data_Flow_I_n_235,Data_Flow_I_n_236,Data_Flow_I_n_237,Data_Flow_I_n_238,Data_Flow_I_n_239,Decode_I_n_370,Decode_I_n_371,Decode_I_n_372,Decode_I_n_373,Decode_I_n_374,Decode_I_n_375,Decode_I_n_376,Decode_I_n_377}),
        .\Performace_Debug_Control.force_stop_cmd_1_reg_0 (\Use_Debug_Logic.Master_Core.Debug_Perf_n_38 ),
        .Q(\Use_Debug_Logic.Master_Core.Debug_Perf_n_57 ),
        .Reset_Mode(\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Reset_Mode_UNCONNECTED [0:1]),
        .Scan_Reset(\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Scan_Reset_UNCONNECTED ),
        .Scan_Reset_Sel(\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Scan_Reset_Sel_UNCONNECTED ),
        .\Serial_Dbg_Intf.command_reg_reg[1]_0 (\Serial_Dbg_Intf.command_reg_reg[1] ),
        .\Single_Synchronize.use_async_reset.sync_reg (\Use_Debug_Logic.Master_Core.Debug_Perf_n_39 ),
        .Sleep(\^Sleep ),
        .Sleep_Decode(\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Sleep_Decode_UNCONNECTED ),
        .Sleep_Out(Sleep_Out),
        .Status_Reg_En(Status_Reg_En),
        .\Synchronize.use_sync_reset.sync_reg[2] (\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Synchronize.use_sync_reset.sync_reg[2]_UNCONNECTED ),
        .\Use_Serial_Unified_Completion.completion_block_reg (\Use_Serial_Unified_Completion.completion_block_reg ),
        .\Use_Serial_Unified_Completion.completion_block_reg_0 (\Use_Serial_Unified_Completion.completion_block_reg_0 ),
        .\Use_Serial_Unified_Completion.completion_block_reg_1 (\Use_Serial_Unified_Completion.completion_block_reg_1 ),
        .\Using_FPGA.Native (\Use_Debug_Logic.Master_Core.Debug_Perf_n_51 ),
        .\Using_FPGA.Native_0 (\Use_Debug_Logic.Master_Core.Debug_Perf_n_52 ),
        .\Using_FPGA.Native_1 (Decode_I_n_445),
        .dbg_clean_stop(dbg_clean_stop),
        .dbg_halt_reset_mode_reg_0(Decode_I_n_402),
        .dbg_halt_reset_mode_reg_1(Decode_I_n_403),
        .dbg_pause(\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_dbg_pause_UNCONNECTED ),
        .dbg_stop_i(dbg_stop_i),
        .ex_branch_with_delayslot_reg(\^Using_FPGA.Native ),
        .ex_exception_no_load_store_mask(ex_exception_no_load_store_mask),
        .ex_valid(ex_valid),
        .if_missed_fetch(if_missed_fetch),
        .\if_pc_reg[29] (\Use_Debug_Logic.Master_Core.Debug_Perf_n_54 ),
        .mem_Exception_Taken(mem_Exception_Taken),
        .mem_exception_from_ex_reg(\Use_Debug_Logic.Master_Core.Debug_Perf_n_56 ),
        .of_pause_reg(\^use_Reg_Neg_S_reg ),
        .read_register_MSR_1(read_register_MSR_1),
        .sync_reset(sync_reset),
        .wb_Halted(wb_Halted),
        .wb_gpr_write_dbg(wb_gpr_write_dbg),
        .wb_pc_valid(wb_pc_valid),
        .wb_read_imm_reg(wb_read_imm_reg),
        .wb_read_imm_reg_1(wb_read_imm_reg_1),
        .wb_valid_reg(Decode_I_n_254));
  instr_mux instr_mux_I
       (.I041_out(\PreFetch_Buffer_I1/I041_out ),
        .I139_out(\PreFetch_Buffer_I1/I139_out ),
        .Instr(Instr),
        .LOCKSTEP_Master_Out({\^LOCKSTEP_Master_Out [38],\^LOCKSTEP_Master_Out [31:0]}),
        .\Using_FPGA.Native (Decode_I_n_396),
        .\Using_FPGA.Native_0 (of_predecode),
        .\Using_FPGA.Native_1 (if_sel_input),
        .\Using_FPGA.Native_2 (\PreFetch_Buffer_I1/p_1_in49_in ),
        .Y(ib_data),
        .in(\PreFetch_Buffer_I1/if_predecode ));
  microblaze_v10_0_3_carry_or mem_databus_ready_sel_carry_or
       (.S(S),
        .lopt(NLW_mem_databus_ready_sel_carry_or_lopt_UNCONNECTED),
        .lopt_1(lopt_4),
        .lopt_2(lopt_5),
        .lopt_3(lopt_6),
        .lopt_4(lopt_7),
        .lopt_5(lopt_8),
        .lopt_6(lopt_9),
        .lopt_7(lopt_10),
        .lopt_8(lopt_11),
        .mem_databus_ready(NLW_mem_databus_ready_sel_carry_or_mem_databus_ready_UNCONNECTED));
endmodule

module Operand_Select_gti
   (\Using_FPGA.Native ,
    Q,
    \LOCKSTEP_Out_reg[98] ,
    \MEM_DataBus_Write_Data_reg[1] ,
    \MEM_DataBus_Addr_reg[0] ,
    \Using_FPGA.Native_0 ,
    \EX_Op3_reg[16]_0 ,
    \Using_FPGA.Native_1 ,
    \EX_Op3_reg[10]_0 ,
    \EX_Op3_reg[6]_0 ,
    \EX_Op3_reg[3]_0 ,
    \EX_Op3_reg[2]_0 ,
    \EX_Branch_CMP_Op1_reg[16]_0 ,
    \EX_Branch_CMP_Op1_reg[15]_0 ,
    \EX_Branch_CMP_Op1_reg[14]_0 ,
    \EX_Branch_CMP_Op1_reg[13]_0 ,
    \EX_Branch_CMP_Op1_reg[12]_0 ,
    \EX_Branch_CMP_Op1_reg[11]_0 ,
    \EX_Branch_CMP_Op1_reg[10]_0 ,
    \EX_Branch_CMP_Op1_reg[9]_0 ,
    \EX_Branch_CMP_Op1_reg[7]_0 ,
    \EX_Branch_CMP_Op1_reg[6]_0 ,
    \EX_Branch_CMP_Op1_reg[5]_0 ,
    \EX_Branch_CMP_Op1_reg[4]_0 ,
    \EX_Branch_CMP_Op1_reg[3]_0 ,
    \EX_Branch_CMP_Op1_reg[2]_0 ,
    \EX_Branch_CMP_Op1_reg[1]_0 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 ,
    \Using_FPGA.Native_5 ,
    \Using_FPGA.Native_6 ,
    \Using_FPGA.Native_7 ,
    \Using_FPGA.Native_8 ,
    \Using_FPGA.Native_9 ,
    \Using_FPGA.Native_10 ,
    \Using_FPGA.Native_11 ,
    \Using_FPGA.Native_12 ,
    \Using_FPGA.Native_13 ,
    \Using_FPGA.Native_14 ,
    \Using_FPGA.Native_15 ,
    S,
    in0,
    \MEM_DataBus_Addr_reg[0]_0 ,
    \Zero_Detecting[0].nibble_Zero_reg ,
    \Using_FPGA.Native_16 ,
    \mem_byte_selects_reg[0] ,
    \EX_Op2_reg[0]_0 ,
    of_op1_sel_spr,
    D,
    I1,
    \Using_FPGA.Native_17 ,
    \Using_FPGA.Native_18 ,
    \Using_FPGA.Native_19 ,
    \Using_FPGA.Native_20 ,
    \Using_FPGA.Native_21 ,
    \Using_FPGA.Native_22 ,
    \Using_FPGA.Native_23 ,
    \Using_FPGA.Native_24 ,
    \Using_FPGA.Native_25 ,
    \Using_FPGA.Native_26 ,
    \Using_FPGA.Native_27 ,
    \Using_FPGA.Native_28 ,
    \Using_FPGA.Native_29 ,
    \Using_FPGA.Native_30 ,
    \Using_FPGA.Native_31 ,
    \Using_FPGA.Native_32 ,
    \Using_FPGA.Native_33 ,
    \Using_FPGA.Native_34 ,
    \Using_FPGA.Native_35 ,
    \Using_FPGA.Native_36 ,
    \Using_FPGA.Native_37 ,
    \Using_FPGA.Native_38 ,
    \Using_FPGA.Native_39 ,
    \Using_FPGA.Native_40 ,
    \Using_FPGA.Native_41 ,
    \Using_FPGA.Native_42 ,
    \Using_FPGA.Native_43 ,
    \Using_FPGA.Native_44 ,
    \Using_FPGA.Native_45 ,
    \Using_FPGA.Native_46 ,
    \Using_FPGA.Native_47 ,
    ex_branch_with_delayslot_reg,
    ex_valid_reg,
    ex_move_to_MSR_instr,
    ex_MSR,
    ex_reverse_mem_access,
    ex_byte_access,
    ex_doublet_access,
    ex_swap_byte_instr,
    \Using_FPGA.Native_48 ,
    mem_valid_reg,
    mem_ex_result,
    \ex_gpr_write_addr_reg[0] ,
    \Using_FPGA.Native_49 ,
    \EX_Op2_reg[1]_0 ,
    ex_sel_alu,
    ex_swap_instr,
    ex_Enable_Sext_Shift,
    \EX_Sext_Op_reg[0] ,
    out,
    \EX_Sext_Op_reg[1] ,
    ex_cmp_op,
    sync_reset,
    E,
    of_imm_data,
    Clk,
    of_pause_reg,
    ex_sel_alu_i_reg,
    \WB_MEM_Result_reg[0] );
  output \Using_FPGA.Native ;
  output [31:0]Q;
  output [19:0]\LOCKSTEP_Out_reg[98] ;
  output [15:0]\MEM_DataBus_Write_Data_reg[1] ;
  output [31:0]\MEM_DataBus_Addr_reg[0] ;
  output \Using_FPGA.Native_0 ;
  output \EX_Op3_reg[16]_0 ;
  output [15:0]\Using_FPGA.Native_1 ;
  output \EX_Op3_reg[10]_0 ;
  output \EX_Op3_reg[6]_0 ;
  output \EX_Op3_reg[3]_0 ;
  output \EX_Op3_reg[2]_0 ;
  output \EX_Branch_CMP_Op1_reg[16]_0 ;
  output \EX_Branch_CMP_Op1_reg[15]_0 ;
  output \EX_Branch_CMP_Op1_reg[14]_0 ;
  output \EX_Branch_CMP_Op1_reg[13]_0 ;
  output \EX_Branch_CMP_Op1_reg[12]_0 ;
  output \EX_Branch_CMP_Op1_reg[11]_0 ;
  output \EX_Branch_CMP_Op1_reg[10]_0 ;
  output \EX_Branch_CMP_Op1_reg[9]_0 ;
  output \EX_Branch_CMP_Op1_reg[7]_0 ;
  output \EX_Branch_CMP_Op1_reg[6]_0 ;
  output \EX_Branch_CMP_Op1_reg[5]_0 ;
  output \EX_Branch_CMP_Op1_reg[4]_0 ;
  output \EX_Branch_CMP_Op1_reg[3]_0 ;
  output \EX_Branch_CMP_Op1_reg[2]_0 ;
  output \EX_Branch_CMP_Op1_reg[1]_0 ;
  output \Using_FPGA.Native_2 ;
  output \Using_FPGA.Native_3 ;
  output \Using_FPGA.Native_4 ;
  output \Using_FPGA.Native_5 ;
  output \Using_FPGA.Native_6 ;
  output \Using_FPGA.Native_7 ;
  output \Using_FPGA.Native_8 ;
  output \Using_FPGA.Native_9 ;
  output \Using_FPGA.Native_10 ;
  output \Using_FPGA.Native_11 ;
  output \Using_FPGA.Native_12 ;
  output \Using_FPGA.Native_13 ;
  output \Using_FPGA.Native_14 ;
  output \Using_FPGA.Native_15 ;
  output S;
  output in0;
  output \MEM_DataBus_Addr_reg[0]_0 ;
  output \Zero_Detecting[0].nibble_Zero_reg ;
  output [29:0]\Using_FPGA.Native_16 ;
  output [1:0]\mem_byte_selects_reg[0] ;
  output [15:0]\EX_Op2_reg[0]_0 ;
  input of_op1_sel_spr;
  input [31:0]D;
  input I1;
  input \Using_FPGA.Native_17 ;
  input \Using_FPGA.Native_18 ;
  input \Using_FPGA.Native_19 ;
  input \Using_FPGA.Native_20 ;
  input \Using_FPGA.Native_21 ;
  input \Using_FPGA.Native_22 ;
  input \Using_FPGA.Native_23 ;
  input \Using_FPGA.Native_24 ;
  input \Using_FPGA.Native_25 ;
  input \Using_FPGA.Native_26 ;
  input \Using_FPGA.Native_27 ;
  input \Using_FPGA.Native_28 ;
  input \Using_FPGA.Native_29 ;
  input \Using_FPGA.Native_30 ;
  input \Using_FPGA.Native_31 ;
  input \Using_FPGA.Native_32 ;
  input \Using_FPGA.Native_33 ;
  input \Using_FPGA.Native_34 ;
  input \Using_FPGA.Native_35 ;
  input \Using_FPGA.Native_36 ;
  input \Using_FPGA.Native_37 ;
  input \Using_FPGA.Native_38 ;
  input \Using_FPGA.Native_39 ;
  input \Using_FPGA.Native_40 ;
  input \Using_FPGA.Native_41 ;
  input \Using_FPGA.Native_42 ;
  input \Using_FPGA.Native_43 ;
  input \Using_FPGA.Native_44 ;
  input \Using_FPGA.Native_45 ;
  input \Using_FPGA.Native_46 ;
  input \Using_FPGA.Native_47 ;
  input ex_branch_with_delayslot_reg;
  input ex_valid_reg;
  input ex_move_to_MSR_instr;
  input [0:0]ex_MSR;
  input ex_reverse_mem_access;
  input ex_byte_access;
  input ex_doublet_access;
  input ex_swap_byte_instr;
  input \Using_FPGA.Native_48 ;
  input mem_valid_reg;
  input [4:0]mem_ex_result;
  input \ex_gpr_write_addr_reg[0] ;
  input \Using_FPGA.Native_49 ;
  input [15:0]\EX_Op2_reg[1]_0 ;
  input ex_sel_alu;
  input ex_swap_instr;
  input ex_Enable_Sext_Shift;
  input [1:0]\EX_Sext_Op_reg[0] ;
  input out;
  input \EX_Sext_Op_reg[1] ;
  input ex_cmp_op;
  input sync_reset;
  input [0:0]E;
  input [0:15]of_imm_data;
  input Clk;
  input of_pause_reg;
  input [31:0]ex_sel_alu_i_reg;
  input [31:0]\WB_MEM_Result_reg[0] ;

  wire Clk;
  wire [31:0]D;
  wire [0:0]E;
  wire \EX_Branch_CMP_Op1_reg[10]_0 ;
  wire \EX_Branch_CMP_Op1_reg[11]_0 ;
  wire \EX_Branch_CMP_Op1_reg[12]_0 ;
  wire \EX_Branch_CMP_Op1_reg[13]_0 ;
  wire \EX_Branch_CMP_Op1_reg[14]_0 ;
  wire \EX_Branch_CMP_Op1_reg[15]_0 ;
  wire \EX_Branch_CMP_Op1_reg[16]_0 ;
  wire \EX_Branch_CMP_Op1_reg[1]_0 ;
  wire \EX_Branch_CMP_Op1_reg[2]_0 ;
  wire \EX_Branch_CMP_Op1_reg[3]_0 ;
  wire \EX_Branch_CMP_Op1_reg[4]_0 ;
  wire \EX_Branch_CMP_Op1_reg[5]_0 ;
  wire \EX_Branch_CMP_Op1_reg[6]_0 ;
  wire \EX_Branch_CMP_Op1_reg[7]_0 ;
  wire \EX_Branch_CMP_Op1_reg[9]_0 ;
  wire [15:0]\EX_Op2_reg[0]_0 ;
  wire [15:0]\EX_Op2_reg[1]_0 ;
  wire \EX_Op3_reg[10]_0 ;
  wire \EX_Op3_reg[16]_0 ;
  wire \EX_Op3_reg[2]_0 ;
  wire \EX_Op3_reg[3]_0 ;
  wire \EX_Op3_reg[6]_0 ;
  wire [1:0]\EX_Sext_Op_reg[0] ;
  wire \EX_Sext_Op_reg[1] ;
  wire \Gen_Bit[31].MUXF7_I1_n_0 ;
  wire I1;
  wire [19:0]\LOCKSTEP_Out_reg[98] ;
  wire [31:0]\MEM_DataBus_Addr_reg[0] ;
  wire \MEM_DataBus_Addr_reg[0]_0 ;
  wire [15:0]\MEM_DataBus_Write_Data_reg[1] ;
  wire O;
  wire O0_out;
  wire O10_out;
  wire O11_out;
  wire O12_out;
  wire O13_out;
  wire O14_out;
  wire O15_out;
  wire O16_out;
  wire O17_out;
  wire O18_out;
  wire O19_out;
  wire O1_out;
  wire O20_out;
  wire O21_out;
  wire O22_out;
  wire O23_out;
  wire O24_out;
  wire O25_out;
  wire O26_out;
  wire O27_out;
  wire O28_out;
  wire O29_out;
  wire O2_out;
  wire O3_out;
  wire O4_out;
  wire O5_out;
  wire O6_out;
  wire O7_out;
  wire O8_out;
  wire O9_out;
  wire [31:0]Q;
  wire S;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [15:0]\Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_10 ;
  wire \Using_FPGA.Native_11 ;
  wire \Using_FPGA.Native_12 ;
  wire \Using_FPGA.Native_13 ;
  wire \Using_FPGA.Native_14 ;
  wire \Using_FPGA.Native_15 ;
  wire [29:0]\Using_FPGA.Native_16 ;
  wire \Using_FPGA.Native_17 ;
  wire \Using_FPGA.Native_18 ;
  wire \Using_FPGA.Native_19 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_20 ;
  wire \Using_FPGA.Native_21 ;
  wire \Using_FPGA.Native_22 ;
  wire \Using_FPGA.Native_23 ;
  wire \Using_FPGA.Native_24 ;
  wire \Using_FPGA.Native_25 ;
  wire \Using_FPGA.Native_26 ;
  wire \Using_FPGA.Native_27 ;
  wire \Using_FPGA.Native_28 ;
  wire \Using_FPGA.Native_29 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_30 ;
  wire \Using_FPGA.Native_31 ;
  wire \Using_FPGA.Native_32 ;
  wire \Using_FPGA.Native_33 ;
  wire \Using_FPGA.Native_34 ;
  wire \Using_FPGA.Native_35 ;
  wire \Using_FPGA.Native_36 ;
  wire \Using_FPGA.Native_37 ;
  wire \Using_FPGA.Native_38 ;
  wire \Using_FPGA.Native_39 ;
  wire \Using_FPGA.Native_4 ;
  wire \Using_FPGA.Native_40 ;
  wire \Using_FPGA.Native_41 ;
  wire \Using_FPGA.Native_42 ;
  wire \Using_FPGA.Native_43 ;
  wire \Using_FPGA.Native_44 ;
  wire \Using_FPGA.Native_45 ;
  wire \Using_FPGA.Native_46 ;
  wire \Using_FPGA.Native_47 ;
  wire \Using_FPGA.Native_48 ;
  wire \Using_FPGA.Native_49 ;
  wire \Using_FPGA.Native_5 ;
  wire \Using_FPGA.Native_6 ;
  wire \Using_FPGA.Native_7 ;
  wire \Using_FPGA.Native_8 ;
  wire \Using_FPGA.Native_9 ;
  wire [31:0]\WB_MEM_Result_reg[0] ;
  wire \Zero_Detecting[0].nibble_Zero_reg ;
  wire ex_Enable_Sext_Shift;
  wire [0:0]ex_MSR;
  wire [30:31]ex_branch_cmp_op1;
  wire ex_branch_with_delayslot_reg;
  wire ex_byte_access;
  wire ex_cmp_op;
  wire ex_doublet_access;
  wire \ex_gpr_write_addr_reg[0] ;
  wire ex_move_to_MSR_instr;
  wire [0:31]ex_op3;
  wire ex_reverse_mem_access;
  wire ex_sel_alu;
  wire [31:0]ex_sel_alu_i_reg;
  wire ex_swap_byte_instr;
  wire ex_swap_instr;
  wire ex_valid_reg;
  wire in0;
  wire [1:0]\mem_byte_selects_reg[0] ;
  wire [4:0]mem_ex_result;
  wire mem_valid_reg;
  wire [0:15]of_imm_data;
  wire of_op1_sel_spr;
  wire of_pause_reg;
  wire out;
  wire sync_reset;

  LUT5 #(
    .INIT(32'h96696969)) 
    \Byte_Enable[0]_INST_0_i_1 
       (.I0(ex_reverse_mem_access),
        .I1(Q[1]),
        .I2(\MEM_DataBus_Addr_reg[0] [1]),
        .I3(\MEM_DataBus_Addr_reg[0] [0]),
        .I4(Q[0]),
        .O(\mem_byte_selects_reg[0] [1]));
  LUT6 #(
    .INIT(64'hF0F0F3C0F0F0E2E2)) 
    \Data_Write[0]_INST_0 
       (.I0(ex_op3[0]),
        .I1(ex_byte_access),
        .I2(ex_op3[24]),
        .I3(ex_op3[16]),
        .I4(ex_reverse_mem_access),
        .I5(ex_doublet_access),
        .O(\LOCKSTEP_Out_reg[98] [17]));
  LUT6 #(
    .INIT(64'hCCCCCCCCFC0CFA0A)) 
    \Data_Write[11]_INST_0 
       (.I0(ex_op3[11]),
        .I1(ex_op3[27]),
        .I2(ex_reverse_mem_access),
        .I3(ex_op3[19]),
        .I4(ex_doublet_access),
        .I5(ex_byte_access),
        .O(\LOCKSTEP_Out_reg[98] [11]));
  LUT6 #(
    .INIT(64'hCCCCCCCCFC0CFA0A)) 
    \Data_Write[13]_INST_0 
       (.I0(ex_op3[13]),
        .I1(ex_op3[29]),
        .I2(ex_reverse_mem_access),
        .I3(ex_op3[21]),
        .I4(ex_doublet_access),
        .I5(ex_byte_access),
        .O(\LOCKSTEP_Out_reg[98] [10]));
  LUT6 #(
    .INIT(64'hCCCCCCCCFC0CFA0A)) 
    \Data_Write[15]_INST_0 
       (.I0(ex_op3[15]),
        .I1(ex_op3[31]),
        .I2(ex_reverse_mem_access),
        .I3(ex_op3[23]),
        .I4(ex_doublet_access),
        .I5(ex_byte_access),
        .O(\LOCKSTEP_Out_reg[98] [9]));
  LUT6 #(
    .INIT(64'hAAAAAFA0AAAACFC0)) 
    \Data_Write[16]_INST_0 
       (.I0(ex_op3[24]),
        .I1(ex_op3[8]),
        .I2(ex_reverse_mem_access),
        .I3(ex_op3[16]),
        .I4(ex_byte_access),
        .I5(ex_doublet_access),
        .O(\LOCKSTEP_Out_reg[98] [8]));
  LUT6 #(
    .INIT(64'hAAAAAFA0AAAACFC0)) 
    \Data_Write[19]_INST_0 
       (.I0(ex_op3[27]),
        .I1(ex_op3[11]),
        .I2(ex_reverse_mem_access),
        .I3(ex_op3[19]),
        .I4(ex_byte_access),
        .I5(ex_doublet_access),
        .O(\LOCKSTEP_Out_reg[98] [7]));
  LUT6 #(
    .INIT(64'hAAAAAFA0AAAACFC0)) 
    \Data_Write[21]_INST_0 
       (.I0(ex_op3[29]),
        .I1(ex_op3[13]),
        .I2(ex_reverse_mem_access),
        .I3(ex_op3[21]),
        .I4(ex_byte_access),
        .I5(ex_doublet_access),
        .O(\LOCKSTEP_Out_reg[98] [6]));
  LUT6 #(
    .INIT(64'hAAAAAFA0AAAACFC0)) 
    \Data_Write[23]_INST_0 
       (.I0(ex_op3[31]),
        .I1(ex_op3[15]),
        .I2(ex_reverse_mem_access),
        .I3(ex_op3[23]),
        .I4(ex_byte_access),
        .I5(ex_doublet_access),
        .O(\LOCKSTEP_Out_reg[98] [5]));
  LUT6 #(
    .INIT(64'hFF00AFA0FF00CFC0)) 
    \Data_Write[24]_INST_0 
       (.I0(ex_op3[16]),
        .I1(ex_op3[0]),
        .I2(ex_reverse_mem_access),
        .I3(ex_op3[24]),
        .I4(ex_byte_access),
        .I5(ex_doublet_access),
        .O(\LOCKSTEP_Out_reg[98] [4]));
  LUT6 #(
    .INIT(64'hFF00AFA0FF00CFC0)) 
    \Data_Write[27]_INST_0 
       (.I0(ex_op3[19]),
        .I1(ex_op3[3]),
        .I2(ex_reverse_mem_access),
        .I3(ex_op3[27]),
        .I4(ex_byte_access),
        .I5(ex_doublet_access),
        .O(\LOCKSTEP_Out_reg[98] [3]));
  LUT6 #(
    .INIT(64'hFF00AFA0FF00CFC0)) 
    \Data_Write[29]_INST_0 
       (.I0(ex_op3[21]),
        .I1(ex_op3[5]),
        .I2(ex_reverse_mem_access),
        .I3(ex_op3[29]),
        .I4(ex_byte_access),
        .I5(ex_doublet_access),
        .O(\LOCKSTEP_Out_reg[98] [2]));
  LUT6 #(
    .INIT(64'hFB0BFF00F808FF00)) 
    \Data_Write[30]_INST_0 
       (.I0(\MEM_DataBus_Write_Data_reg[1] [4]),
        .I1(ex_doublet_access),
        .I2(ex_byte_access),
        .I3(\MEM_DataBus_Write_Data_reg[1] [0]),
        .I4(ex_reverse_mem_access),
        .I5(\MEM_DataBus_Write_Data_reg[1] [12]),
        .O(\LOCKSTEP_Out_reg[98] [1]));
  LUT6 #(
    .INIT(64'hFF00AFA0FF00CFC0)) 
    \Data_Write[31]_INST_0 
       (.I0(ex_op3[23]),
        .I1(ex_op3[7]),
        .I2(ex_reverse_mem_access),
        .I3(ex_op3[31]),
        .I4(ex_byte_access),
        .I5(ex_doublet_access),
        .O(\LOCKSTEP_Out_reg[98] [0]));
  LUT6 #(
    .INIT(64'hFF00FF00FC0CFA0A)) 
    \Data_Write[3]_INST_0 
       (.I0(ex_op3[3]),
        .I1(ex_op3[19]),
        .I2(ex_reverse_mem_access),
        .I3(ex_op3[27]),
        .I4(ex_doublet_access),
        .I5(ex_byte_access),
        .O(\LOCKSTEP_Out_reg[98] [16]));
  LUT6 #(
    .INIT(64'hFFFFFBF800000B08)) 
    \Data_Write[4]_INST_0 
       (.I0(\MEM_DataBus_Write_Data_reg[1] [5]),
        .I1(ex_doublet_access),
        .I2(ex_byte_access),
        .I3(\MEM_DataBus_Write_Data_reg[1] [13]),
        .I4(ex_reverse_mem_access),
        .I5(\MEM_DataBus_Write_Data_reg[1] [1]),
        .O(\LOCKSTEP_Out_reg[98] [15]));
  LUT6 #(
    .INIT(64'hF0F0F3C0F0F0E2E2)) 
    \Data_Write[5]_INST_0 
       (.I0(ex_op3[5]),
        .I1(ex_byte_access),
        .I2(ex_op3[29]),
        .I3(ex_op3[21]),
        .I4(ex_reverse_mem_access),
        .I5(ex_doublet_access),
        .O(\LOCKSTEP_Out_reg[98] [14]));
  LUT6 #(
    .INIT(64'hF0F0F3C0F0F0E2E2)) 
    \Data_Write[7]_INST_0 
       (.I0(ex_op3[7]),
        .I1(ex_byte_access),
        .I2(ex_op3[31]),
        .I3(ex_op3[23]),
        .I4(ex_reverse_mem_access),
        .I5(ex_doublet_access),
        .O(\LOCKSTEP_Out_reg[98] [13]));
  LUT6 #(
    .INIT(64'hCCCCCCCCFC0CFA0A)) 
    \Data_Write[8]_INST_0 
       (.I0(ex_op3[8]),
        .I1(ex_op3[24]),
        .I2(ex_reverse_mem_access),
        .I3(ex_op3[16]),
        .I4(ex_doublet_access),
        .I5(ex_byte_access),
        .O(\LOCKSTEP_Out_reg[98] [12]));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[0] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[31]),
        .Q(\Using_FPGA.Native_16 [29]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[10] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[21]),
        .Q(\Using_FPGA.Native_16 [19]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[11] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[20]),
        .Q(\Using_FPGA.Native_16 [18]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[12] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[19]),
        .Q(\Using_FPGA.Native_16 [17]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[13] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[18]),
        .Q(\Using_FPGA.Native_16 [16]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[14] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[17]),
        .Q(\Using_FPGA.Native_16 [15]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[15] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[16]),
        .Q(\Using_FPGA.Native_16 [14]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[16] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[15]),
        .Q(\Using_FPGA.Native_16 [13]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[17] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[14]),
        .Q(\Using_FPGA.Native_16 [12]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[18] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[13]),
        .Q(\Using_FPGA.Native_16 [11]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[19] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[12]),
        .Q(\Using_FPGA.Native_16 [10]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[1] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[30]),
        .Q(\Using_FPGA.Native_16 [28]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[20] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[11]),
        .Q(\Using_FPGA.Native_16 [9]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[21] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[10]),
        .Q(\Using_FPGA.Native_16 [8]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[22] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[9]),
        .Q(\Using_FPGA.Native_16 [7]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[23] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[8]),
        .Q(\Using_FPGA.Native_16 [6]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[24] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[7]),
        .Q(\Using_FPGA.Native_16 [5]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[25] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[6]),
        .Q(\Using_FPGA.Native_16 [4]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[26] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[5]),
        .Q(\Using_FPGA.Native_16 [3]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[27] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[4]),
        .Q(\Using_FPGA.Native_16 [2]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[28] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[3]),
        .Q(\Using_FPGA.Native_16 [1]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[29] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[2]),
        .Q(\Using_FPGA.Native_16 [0]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[2] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[29]),
        .Q(\Using_FPGA.Native_16 [27]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[30] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[1]),
        .Q(ex_branch_cmp_op1[30]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[31] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[0]),
        .Q(ex_branch_cmp_op1[31]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[3] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[28]),
        .Q(\Using_FPGA.Native_16 [26]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[4] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[27]),
        .Q(\Using_FPGA.Native_16 [25]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[5] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[26]),
        .Q(\Using_FPGA.Native_16 [24]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[6] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[25]),
        .Q(\Using_FPGA.Native_16 [23]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[7] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[24]),
        .Q(\Using_FPGA.Native_16 [22]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[8] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[23]),
        .Q(\Using_FPGA.Native_16 [21]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[9] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[22]),
        .Q(\Using_FPGA.Native_16 [20]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[0] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O),
        .Q(Q[31]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[10] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O20_out),
        .Q(Q[21]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[11] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O19_out),
        .Q(Q[20]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[12] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O18_out),
        .Q(Q[19]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[13] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O17_out),
        .Q(Q[18]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[14] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O16_out),
        .Q(Q[17]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[15] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O15_out),
        .Q(Q[16]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[16] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O14_out),
        .Q(Q[15]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[17] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O13_out),
        .Q(Q[14]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[18] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O12_out),
        .Q(Q[13]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[19] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O11_out),
        .Q(Q[12]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[1] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O29_out),
        .Q(Q[30]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[20] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O10_out),
        .Q(Q[11]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[21] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O9_out),
        .Q(Q[10]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[22] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O8_out),
        .Q(Q[9]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[23] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O7_out),
        .Q(Q[8]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[24] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O6_out),
        .Q(Q[7]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[25] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O5_out),
        .Q(Q[6]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[26] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O4_out),
        .Q(Q[5]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[27] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O3_out),
        .Q(Q[4]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[28] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O2_out),
        .Q(Q[3]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[29] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O1_out),
        .Q(Q[2]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[2] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O28_out),
        .Q(Q[29]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[30] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O0_out),
        .Q(Q[1]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[31] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(\Gen_Bit[31].MUXF7_I1_n_0 ),
        .Q(Q[0]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[3] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O27_out),
        .Q(Q[28]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[4] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O26_out),
        .Q(Q[27]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[5] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O25_out),
        .Q(Q[26]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[6] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O24_out),
        .Q(Q[25]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[7] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O23_out),
        .Q(Q[24]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[8] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O22_out),
        .Q(Q[23]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[9] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(O21_out),
        .Q(Q[22]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[0] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[31]),
        .Q(\MEM_DataBus_Addr_reg[0] [31]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[10] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[21]),
        .Q(\MEM_DataBus_Addr_reg[0] [21]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[11] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[20]),
        .Q(\MEM_DataBus_Addr_reg[0] [20]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[12] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[19]),
        .Q(\MEM_DataBus_Addr_reg[0] [19]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[13] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[18]),
        .Q(\MEM_DataBus_Addr_reg[0] [18]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[14] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[17]),
        .Q(\MEM_DataBus_Addr_reg[0] [17]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[15] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[16]),
        .Q(\MEM_DataBus_Addr_reg[0] [16]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[16] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[15]),
        .Q(\MEM_DataBus_Addr_reg[0] [15]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[17] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[14]),
        .Q(\MEM_DataBus_Addr_reg[0] [14]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[18] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[13]),
        .Q(\MEM_DataBus_Addr_reg[0] [13]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[19] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[12]),
        .Q(\MEM_DataBus_Addr_reg[0] [12]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[1] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[30]),
        .Q(\MEM_DataBus_Addr_reg[0] [30]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[20] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[11]),
        .Q(\MEM_DataBus_Addr_reg[0] [11]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[21] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[10]),
        .Q(\MEM_DataBus_Addr_reg[0] [10]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[22] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[9]),
        .Q(\MEM_DataBus_Addr_reg[0] [9]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[23] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[8]),
        .Q(\MEM_DataBus_Addr_reg[0] [8]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[24] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[7]),
        .Q(\MEM_DataBus_Addr_reg[0] [7]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[25] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[6]),
        .Q(\MEM_DataBus_Addr_reg[0] [6]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[26] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[5]),
        .Q(\MEM_DataBus_Addr_reg[0] [5]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[27] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[4]),
        .Q(\MEM_DataBus_Addr_reg[0] [4]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[28] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[3]),
        .Q(\MEM_DataBus_Addr_reg[0] [3]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[29] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[2]),
        .Q(\MEM_DataBus_Addr_reg[0] [2]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[2] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[29]),
        .Q(\MEM_DataBus_Addr_reg[0] [29]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[30] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[1]),
        .Q(\MEM_DataBus_Addr_reg[0] [1]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[31] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[0]),
        .Q(\MEM_DataBus_Addr_reg[0] [0]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[3] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[28]),
        .Q(\MEM_DataBus_Addr_reg[0] [28]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[4] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[27]),
        .Q(\MEM_DataBus_Addr_reg[0] [27]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[5] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[26]),
        .Q(\MEM_DataBus_Addr_reg[0] [26]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[6] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[25]),
        .Q(\MEM_DataBus_Addr_reg[0] [25]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[7] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[24]),
        .Q(\MEM_DataBus_Addr_reg[0] [24]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[8] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[23]),
        .Q(\MEM_DataBus_Addr_reg[0] [23]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[9] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(ex_sel_alu_i_reg[22]),
        .Q(\MEM_DataBus_Addr_reg[0] [22]),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'h8B88)) 
    \EX_Op3[10]_i_2 
       (.I0(\Using_FPGA.Native_1 [6]),
        .I1(\Using_FPGA.Native_48 ),
        .I2(mem_valid_reg),
        .I3(mem_ex_result[1]),
        .O(\EX_Op3_reg[10]_0 ));
  LUT4 #(
    .INIT(16'h8B88)) 
    \EX_Op3[16]_i_2 
       (.I0(\Using_FPGA.Native_1 [0]),
        .I1(\Using_FPGA.Native_48 ),
        .I2(mem_valid_reg),
        .I3(mem_ex_result[0]),
        .O(\EX_Op3_reg[16]_0 ));
  LUT4 #(
    .INIT(16'h8B88)) 
    \EX_Op3[2]_i_2 
       (.I0(\Using_FPGA.Native_1 [14]),
        .I1(\Using_FPGA.Native_48 ),
        .I2(mem_valid_reg),
        .I3(mem_ex_result[4]),
        .O(\EX_Op3_reg[2]_0 ));
  LUT4 #(
    .INIT(16'h8B88)) 
    \EX_Op3[3]_i_2 
       (.I0(\Using_FPGA.Native_1 [13]),
        .I1(\Using_FPGA.Native_48 ),
        .I2(mem_valid_reg),
        .I3(mem_ex_result[3]),
        .O(\EX_Op3_reg[3]_0 ));
  LUT4 #(
    .INIT(16'h8B88)) 
    \EX_Op3[6]_i_2 
       (.I0(\Using_FPGA.Native_1 [10]),
        .I1(\Using_FPGA.Native_48 ),
        .I2(mem_valid_reg),
        .I3(mem_ex_result[2]),
        .O(\EX_Op3_reg[6]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[0] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(\WB_MEM_Result_reg[0] [31]),
        .Q(ex_op3[0]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[10] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(\WB_MEM_Result_reg[0] [21]),
        .Q(\MEM_DataBus_Write_Data_reg[1] [10]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[11] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(\WB_MEM_Result_reg[0] [20]),
        .Q(ex_op3[11]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[12] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(\WB_MEM_Result_reg[0] [19]),
        .Q(\MEM_DataBus_Write_Data_reg[1] [9]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[13] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(\WB_MEM_Result_reg[0] [18]),
        .Q(ex_op3[13]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[14] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(\WB_MEM_Result_reg[0] [17]),
        .Q(\MEM_DataBus_Write_Data_reg[1] [8]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[15] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(\WB_MEM_Result_reg[0] [16]),
        .Q(ex_op3[15]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[16] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(\WB_MEM_Result_reg[0] [15]),
        .Q(ex_op3[16]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[17] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(\WB_MEM_Result_reg[0] [14]),
        .Q(\MEM_DataBus_Write_Data_reg[1] [7]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[18] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(\WB_MEM_Result_reg[0] [13]),
        .Q(\MEM_DataBus_Write_Data_reg[1] [6]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[19] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(\WB_MEM_Result_reg[0] [12]),
        .Q(ex_op3[19]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[1] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(\WB_MEM_Result_reg[0] [30]),
        .Q(\MEM_DataBus_Write_Data_reg[1] [15]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[20] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(\WB_MEM_Result_reg[0] [11]),
        .Q(\MEM_DataBus_Write_Data_reg[1] [5]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[21] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(\WB_MEM_Result_reg[0] [10]),
        .Q(ex_op3[21]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[22] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(\WB_MEM_Result_reg[0] [9]),
        .Q(\MEM_DataBus_Write_Data_reg[1] [4]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[23] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(\WB_MEM_Result_reg[0] [8]),
        .Q(ex_op3[23]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[24] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(\WB_MEM_Result_reg[0] [7]),
        .Q(ex_op3[24]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[25] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(\WB_MEM_Result_reg[0] [6]),
        .Q(\MEM_DataBus_Write_Data_reg[1] [3]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[26] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(\WB_MEM_Result_reg[0] [5]),
        .Q(\MEM_DataBus_Write_Data_reg[1] [2]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[27] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(\WB_MEM_Result_reg[0] [4]),
        .Q(ex_op3[27]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[28] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(\WB_MEM_Result_reg[0] [3]),
        .Q(\MEM_DataBus_Write_Data_reg[1] [1]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[29] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(\WB_MEM_Result_reg[0] [2]),
        .Q(ex_op3[29]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[2] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(\WB_MEM_Result_reg[0] [29]),
        .Q(\MEM_DataBus_Write_Data_reg[1] [14]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[30] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(\WB_MEM_Result_reg[0] [1]),
        .Q(\MEM_DataBus_Write_Data_reg[1] [0]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[31] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(\WB_MEM_Result_reg[0] [0]),
        .Q(ex_op3[31]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[3] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(\WB_MEM_Result_reg[0] [28]),
        .Q(ex_op3[3]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[4] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(\WB_MEM_Result_reg[0] [27]),
        .Q(\MEM_DataBus_Write_Data_reg[1] [13]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[5] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(\WB_MEM_Result_reg[0] [26]),
        .Q(ex_op3[5]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[6] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(\WB_MEM_Result_reg[0] [25]),
        .Q(\MEM_DataBus_Write_Data_reg[1] [12]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[7] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(\WB_MEM_Result_reg[0] [24]),
        .Q(ex_op3[7]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[8] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(\WB_MEM_Result_reg[0] [23]),
        .Q(ex_op3[8]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[9] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(\WB_MEM_Result_reg[0] [22]),
        .Q(\MEM_DataBus_Write_Data_reg[1] [11]),
        .R(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_427 \Gen_Bit[0].MUXF7_I1 
       (.D(O),
        .I1(I1),
        .\Using_FPGA.Native_0 (D[31]),
        .of_op1_sel_spr(of_op1_sel_spr));
  microblaze_v10_0_3_MB_MUXF7_428 \Gen_Bit[10].MUXF7_I1 
       (.D(O20_out),
        .\EX_Branch_CMP_Op1_reg[10] (\EX_Branch_CMP_Op1_reg[10]_0 ),
        .\EX_Op2_reg[10] (\EX_Op2_reg[1]_0 [6]),
        .\EX_Sext_Op_reg[0] (\EX_Sext_Op_reg[0] ),
        .Q({Q[22:21],Q[13],Q[5]}),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 [6]),
        .\Using_FPGA.Native_1 (D[21]),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_26 ),
        .ex_Enable_Sext_Shift(ex_Enable_Sext_Shift),
        .\ex_gpr_write_addr_reg[0] (\ex_gpr_write_addr_reg[0] ),
        .ex_sel_alu(ex_sel_alu),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .ex_swap_instr(ex_swap_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .out(out));
  microblaze_v10_0_3_MB_MUXF7_429 \Gen_Bit[11].MUXF7_I1 
       (.D(O19_out),
        .\EX_Branch_CMP_Op1_reg[11] (\EX_Branch_CMP_Op1_reg[11]_0 ),
        .\EX_Op2_reg[11] (\EX_Op2_reg[1]_0 [5]),
        .\EX_Sext_Op_reg[0] (\EX_Sext_Op_reg[0] ),
        .Q({Q[21:20],Q[12],Q[4]}),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 [5]),
        .\Using_FPGA.Native_1 (D[20]),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_27 ),
        .ex_Enable_Sext_Shift(ex_Enable_Sext_Shift),
        .\ex_gpr_write_addr_reg[0] (\ex_gpr_write_addr_reg[0] ),
        .ex_sel_alu(ex_sel_alu),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .ex_swap_instr(ex_swap_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .out(out));
  microblaze_v10_0_3_MB_MUXF7_430 \Gen_Bit[12].MUXF7_I1 
       (.D(O18_out),
        .\EX_Branch_CMP_Op1_reg[12] (\EX_Branch_CMP_Op1_reg[12]_0 ),
        .\EX_Op2_reg[12] (\EX_Op2_reg[1]_0 [4]),
        .\EX_Sext_Op_reg[0] (\EX_Sext_Op_reg[0] ),
        .Q({Q[20:19],Q[11],Q[3]}),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 [4]),
        .\Using_FPGA.Native_1 (D[19]),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_28 ),
        .ex_Enable_Sext_Shift(ex_Enable_Sext_Shift),
        .\ex_gpr_write_addr_reg[0] (\ex_gpr_write_addr_reg[0] ),
        .ex_sel_alu(ex_sel_alu),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .ex_swap_instr(ex_swap_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .out(out));
  microblaze_v10_0_3_MB_MUXF7_431 \Gen_Bit[13].MUXF7_I1 
       (.D(O17_out),
        .\EX_Branch_CMP_Op1_reg[13] (\EX_Branch_CMP_Op1_reg[13]_0 ),
        .\EX_Op2_reg[13] (\EX_Op2_reg[1]_0 [3]),
        .\EX_Sext_Op_reg[0] (\EX_Sext_Op_reg[0] ),
        .Q({Q[19:18],Q[10],Q[2]}),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 [3]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_29 ),
        .\WB_MEM_Result_reg[13] (D[18]),
        .ex_Enable_Sext_Shift(ex_Enable_Sext_Shift),
        .\ex_gpr_write_addr_reg[0] (\ex_gpr_write_addr_reg[0] ),
        .ex_sel_alu(ex_sel_alu),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .ex_swap_instr(ex_swap_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .out(out));
  microblaze_v10_0_3_MB_MUXF7_432 \Gen_Bit[14].MUXF7_I1 
       (.D(O16_out),
        .\EX_Branch_CMP_Op1_reg[14] (\EX_Branch_CMP_Op1_reg[14]_0 ),
        .\EX_Op2_reg[14] (\EX_Op2_reg[1]_0 [2]),
        .\EX_Sext_Op_reg[0] (\EX_Sext_Op_reg[0] ),
        .Q({Q[18:17],Q[9],Q[1]}),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 [2]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_30 ),
        .\WB_MEM_Result_reg[14] (D[17]),
        .ex_Enable_Sext_Shift(ex_Enable_Sext_Shift),
        .\ex_gpr_write_addr_reg[0] (\ex_gpr_write_addr_reg[0] ),
        .ex_sel_alu(ex_sel_alu),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .ex_swap_instr(ex_swap_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .out(out));
  microblaze_v10_0_3_MB_MUXF7_433 \Gen_Bit[15].MUXF7_I1 
       (.D(O15_out),
        .\EX_Branch_CMP_Op1_reg[15] (\EX_Branch_CMP_Op1_reg[15]_0 ),
        .\EX_Op2_reg[15] (\EX_Op2_reg[1]_0 [1]),
        .\EX_Sext_Op_reg[0] (\EX_Sext_Op_reg[0] ),
        .Q({Q[17:16],Q[8],Q[0]}),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 [1]),
        .\Using_FPGA.Native_1 (D[16]),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_31 ),
        .ex_Enable_Sext_Shift(ex_Enable_Sext_Shift),
        .\ex_gpr_write_addr_reg[0] (\ex_gpr_write_addr_reg[0] ),
        .ex_sel_alu(ex_sel_alu),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .ex_swap_instr(ex_swap_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .out(out));
  microblaze_v10_0_3_MB_MUXF7_434 \Gen_Bit[16].MUXF7_I1 
       (.D(O14_out),
        .\EX_Branch_CMP_Op1_reg[16] (\EX_Branch_CMP_Op1_reg[16]_0 ),
        .\EX_Op2_reg[16] (\EX_Op2_reg[1]_0 [0]),
        .\EX_Sext_Op_reg[0] (\EX_Sext_Op_reg[0] ),
        .\EX_Sext_Op_reg[1] (\EX_Sext_Op_reg[1] ),
        .Q({Q[31],Q[23],Q[16:15]}),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 [0]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_32 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_49 ),
        .\WB_MEM_Result_reg[16] (D[15]),
        .ex_Enable_Sext_Shift(ex_Enable_Sext_Shift),
        .\ex_gpr_write_addr_reg[0] (\ex_gpr_write_addr_reg[0] ),
        .ex_sel_alu(ex_sel_alu),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .ex_swap_instr(ex_swap_instr),
        .mem_ex_result(mem_ex_result[0]),
        .of_op1_sel_spr(of_op1_sel_spr));
  microblaze_v10_0_3_MB_MUXF7_435 \Gen_Bit[17].MUXF7_I1 
       (.D(O13_out),
        .Q({Q[30],Q[22]}),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_2 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_33 ),
        .\WB_MEM_Result_reg[17] (D[14]),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr));
  microblaze_v10_0_3_MB_MUXF7_436 \Gen_Bit[18].MUXF7_I1 
       (.D(O12_out),
        .Q({Q[29],Q[21]}),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_3 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_34 ),
        .\WB_MEM_Result_reg[18] (D[13]),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr));
  microblaze_v10_0_3_MB_MUXF7_437 \Gen_Bit[19].MUXF7_I1 
       (.D(O11_out),
        .Q({Q[28],Q[20]}),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_4 ),
        .\Using_FPGA.Native_1 (D[12]),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_35 ),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr));
  microblaze_v10_0_3_MB_MUXF7_438 \Gen_Bit[1].MUXF7_I1 
       (.D(O29_out),
        .\EX_Branch_CMP_Op1_reg[1] (\EX_Branch_CMP_Op1_reg[1]_0 ),
        .\EX_Op2_reg[1] (\EX_Op2_reg[1]_0 [15]),
        .\EX_Sext_Op_reg[0] (\EX_Sext_Op_reg[0] ),
        .Q({Q[31:30],Q[14],Q[6]}),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 [15]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_17 ),
        .\WB_MEM_Result_reg[1] (D[30]),
        .ex_Enable_Sext_Shift(ex_Enable_Sext_Shift),
        .\ex_gpr_write_addr_reg[0] (\ex_gpr_write_addr_reg[0] ),
        .ex_sel_alu(ex_sel_alu),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .ex_swap_instr(ex_swap_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .out(out));
  microblaze_v10_0_3_MB_MUXF7_439 \Gen_Bit[20].MUXF7_I1 
       (.D(O10_out),
        .Q({Q[27],Q[19]}),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_5 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_36 ),
        .\WB_MEM_Result_reg[20] (D[11]),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr));
  microblaze_v10_0_3_MB_MUXF7_440 \Gen_Bit[21].MUXF7_I1 
       (.D(O9_out),
        .Q({Q[26],Q[18]}),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_6 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_37 ),
        .\WB_MEM_Result_reg[21] (D[10]),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr));
  microblaze_v10_0_3_MB_MUXF7_441 \Gen_Bit[22].MUXF7_I1 
       (.D(O8_out),
        .Q({Q[25],Q[17]}),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_7 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_38 ),
        .\WB_MEM_Result_reg[22] (D[9]),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr));
  microblaze_v10_0_3_MB_MUXF7_442 \Gen_Bit[23].MUXF7_I1 
       (.D(O7_out),
        .Q({Q[24],Q[16]}),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_8 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_39 ),
        .\WB_MEM_Result_reg[23] (D[8]),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr));
  microblaze_v10_0_3_MB_MUXF7_443 \Gen_Bit[24].MUXF7_I1 
       (.D(O6_out),
        .Q({Q[31],Q[23]}),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_9 ),
        .\Using_FPGA.Native_1 (D[7]),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_40 ),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr));
  microblaze_v10_0_3_MB_MUXF7_444 \Gen_Bit[25].MUXF7_I1 
       (.D(O5_out),
        .Q({Q[30],Q[22]}),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_10 ),
        .\Using_FPGA.Native_1 (D[6]),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_41 ),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr));
  microblaze_v10_0_3_MB_MUXF7_445 \Gen_Bit[26].MUXF7_I1 
       (.D(O4_out),
        .Q({Q[29],Q[21]}),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_11 ),
        .\Using_FPGA.Native_1 (D[5]),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_42 ),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr));
  microblaze_v10_0_3_MB_MUXF7_446 \Gen_Bit[27].MUXF7_I1 
       (.D(O3_out),
        .Q({Q[28],Q[20]}),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_12 ),
        .\Using_FPGA.Native_1 (D[4]),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_43 ),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr));
  microblaze_v10_0_3_MB_MUXF7_447 \Gen_Bit[28].MUXF7_I1 
       (.D(O2_out),
        .Q({Q[27],Q[19]}),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_13 ),
        .\Using_FPGA.Native_1 (D[3]),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_44 ),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr));
  microblaze_v10_0_3_MB_MUXF7_448 \Gen_Bit[29].MUXF7_I1 
       (.D(O1_out),
        .Q({Q[26],Q[18]}),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_14 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_45 ),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .\wb_exception_kind_i_reg[31] (D[2]));
  microblaze_v10_0_3_MB_MUXF7_449 \Gen_Bit[2].MUXF7_I1 
       (.D(O28_out),
        .\EX_Branch_CMP_Op1_reg[2] (\EX_Branch_CMP_Op1_reg[2]_0 ),
        .\EX_Op2_reg[2] (\EX_Op2_reg[1]_0 [14]),
        .\EX_Sext_Op_reg[0] (\EX_Sext_Op_reg[0] ),
        .Q({Q[30:29],Q[13],Q[5]}),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 [14]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_18 ),
        .\WB_MEM_Result_reg[2] (D[29]),
        .ex_Enable_Sext_Shift(ex_Enable_Sext_Shift),
        .\ex_gpr_write_addr_reg[0] (\ex_gpr_write_addr_reg[0] ),
        .ex_sel_alu(ex_sel_alu),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .ex_swap_instr(ex_swap_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .out(out));
  microblaze_v10_0_3_MB_MUXF7_450 \Gen_Bit[30].MUXF7_I1 
       (.D(O0_out),
        .Q({Q[25],Q[17]}),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_15 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_46 ),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .\wb_exception_kind_i_reg[31] (D[1]));
  microblaze_v10_0_3_MB_MUXF7_451 \Gen_Bit[31].MUXF7_I1 
       (.D(\Gen_Bit[31].MUXF7_I1_n_0 ),
        .Q({Q[24],Q[16]}),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (D[0]),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_47 ),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr));
  microblaze_v10_0_3_MB_MUXF7_452 \Gen_Bit[3].MUXF7_I1 
       (.D(O27_out),
        .\EX_Branch_CMP_Op1_reg[3] (\EX_Branch_CMP_Op1_reg[3]_0 ),
        .\EX_Op2_reg[3] (\EX_Op2_reg[1]_0 [13]),
        .\EX_Sext_Op_reg[0] (\EX_Sext_Op_reg[0] ),
        .Q({Q[29:28],Q[12],Q[4]}),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 [13]),
        .\Using_FPGA.Native_1 (D[28]),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_19 ),
        .ex_Enable_Sext_Shift(ex_Enable_Sext_Shift),
        .\ex_gpr_write_addr_reg[0] (\ex_gpr_write_addr_reg[0] ),
        .ex_sel_alu(ex_sel_alu),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .ex_swap_instr(ex_swap_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .out(out));
  microblaze_v10_0_3_MB_MUXF7_453 \Gen_Bit[4].MUXF7_I1 
       (.D(O26_out),
        .\EX_Branch_CMP_Op1_reg[4] (\EX_Branch_CMP_Op1_reg[4]_0 ),
        .\EX_Op2_reg[4] (\EX_Op2_reg[1]_0 [12]),
        .\EX_Sext_Op_reg[0] (\EX_Sext_Op_reg[0] ),
        .Q({Q[28:27],Q[11],Q[3]}),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 [12]),
        .\Using_FPGA.Native_1 (D[27]),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_20 ),
        .ex_Enable_Sext_Shift(ex_Enable_Sext_Shift),
        .\ex_gpr_write_addr_reg[0] (\ex_gpr_write_addr_reg[0] ),
        .ex_sel_alu(ex_sel_alu),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .ex_swap_instr(ex_swap_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .out(out));
  microblaze_v10_0_3_MB_MUXF7_454 \Gen_Bit[5].MUXF7_I1 
       (.D(O25_out),
        .\EX_Branch_CMP_Op1_reg[5] (\EX_Branch_CMP_Op1_reg[5]_0 ),
        .\EX_Op2_reg[5] (\EX_Op2_reg[1]_0 [11]),
        .\EX_Sext_Op_reg[0] (\EX_Sext_Op_reg[0] ),
        .Q({Q[27:26],Q[10],Q[2]}),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 [11]),
        .\Using_FPGA.Native_1 (D[26]),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_21 ),
        .ex_Enable_Sext_Shift(ex_Enable_Sext_Shift),
        .\ex_gpr_write_addr_reg[0] (\ex_gpr_write_addr_reg[0] ),
        .ex_sel_alu(ex_sel_alu),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .ex_swap_instr(ex_swap_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .out(out));
  microblaze_v10_0_3_MB_MUXF7_455 \Gen_Bit[6].MUXF7_I1 
       (.D(O24_out),
        .\EX_Branch_CMP_Op1_reg[6] (\EX_Branch_CMP_Op1_reg[6]_0 ),
        .\EX_Op2_reg[6] (\EX_Op2_reg[1]_0 [10]),
        .\EX_Sext_Op_reg[0] (\EX_Sext_Op_reg[0] ),
        .Q({Q[26:25],Q[9],Q[1]}),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 [10]),
        .\Using_FPGA.Native_1 (D[25]),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_22 ),
        .ex_Enable_Sext_Shift(ex_Enable_Sext_Shift),
        .\ex_gpr_write_addr_reg[0] (\ex_gpr_write_addr_reg[0] ),
        .ex_sel_alu(ex_sel_alu),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .ex_swap_instr(ex_swap_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .out(out));
  microblaze_v10_0_3_MB_MUXF7_456 \Gen_Bit[7].MUXF7_I1 
       (.D(O23_out),
        .\EX_Branch_CMP_Op1_reg[7] (\EX_Branch_CMP_Op1_reg[7]_0 ),
        .\EX_Op2_reg[7] (\EX_Op2_reg[1]_0 [9]),
        .\EX_Sext_Op_reg[0] (\EX_Sext_Op_reg[0] ),
        .Q({Q[25:24],Q[8],Q[0]}),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 [9]),
        .\Using_FPGA.Native_1 (D[24]),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_23 ),
        .ex_Enable_Sext_Shift(ex_Enable_Sext_Shift),
        .\ex_gpr_write_addr_reg[0] (\ex_gpr_write_addr_reg[0] ),
        .ex_sel_alu(ex_sel_alu),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .ex_swap_instr(ex_swap_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .out(out));
  microblaze_v10_0_3_MB_MUXF7_457 \Gen_Bit[8].MUXF7_I1 
       (.D(O22_out),
        .\EX_Op2_reg[8] (\EX_Op2_reg[1]_0 [8]),
        .\EX_Sext_Op_reg[0] (\EX_Sext_Op_reg[0] ),
        .Q({Q[24:23],Q[15],Q[7]}),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 [8]),
        .\Using_FPGA.Native_1 (D[23]),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_24 ),
        .ex_Enable_Sext_Shift(ex_Enable_Sext_Shift),
        .ex_sel_alu(ex_sel_alu),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .ex_swap_instr(ex_swap_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .out(out));
  microblaze_v10_0_3_MB_MUXF7_458 \Gen_Bit[9].MUXF7_I1 
       (.D(O21_out),
        .\EX_Branch_CMP_Op1_reg[9] (\EX_Branch_CMP_Op1_reg[9]_0 ),
        .\EX_Op2_reg[9] (\EX_Op2_reg[1]_0 [7]),
        .\EX_Sext_Op_reg[0] (\EX_Sext_Op_reg[0] ),
        .Q({Q[23:22],Q[14],Q[6]}),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 [7]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_25 ),
        .\WB_MEM_Result_reg[9] (D[22]),
        .ex_Enable_Sext_Shift(ex_Enable_Sext_Shift),
        .\ex_gpr_write_addr_reg[0] (\ex_gpr_write_addr_reg[0] ),
        .ex_sel_alu(ex_sel_alu),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .ex_swap_instr(ex_swap_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .out(out));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \Using_FPGA.Native_i_1__115 
       (.I0(Q[1]),
        .I1(ex_branch_with_delayslot_reg),
        .I2(ex_valid_reg),
        .I3(ex_move_to_MSR_instr),
        .I4(ex_MSR),
        .O(\Using_FPGA.Native ));
  LUT3 #(
    .INIT(8'hD7)) 
    \Using_FPGA.Native_i_1__172 
       (.I0(ex_cmp_op),
        .I1(Q[31]),
        .I2(\MEM_DataBus_Addr_reg[0] [31]),
        .O(S));
  LUT3 #(
    .INIT(8'hD7)) 
    \Using_FPGA.Native_i_1__177 
       (.I0(ex_cmp_op),
        .I1(Q[31]),
        .I2(\MEM_DataBus_Addr_reg[0] [31]),
        .O(\MEM_DataBus_Addr_reg[0]_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \Using_FPGA.Native_i_1__179 
       (.I0(ex_branch_cmp_op1[30]),
        .I1(ex_branch_cmp_op1[31]),
        .O(\Zero_Detecting[0].nibble_Zero_reg ));
  FDRE #(
    .INIT(1'b0)) 
    \imm_reg_reg[0] 
       (.C(Clk),
        .CE(E),
        .D(of_imm_data[0]),
        .Q(\EX_Op2_reg[0]_0 [15]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \imm_reg_reg[10] 
       (.C(Clk),
        .CE(E),
        .D(of_imm_data[10]),
        .Q(\EX_Op2_reg[0]_0 [5]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \imm_reg_reg[11] 
       (.C(Clk),
        .CE(E),
        .D(of_imm_data[11]),
        .Q(\EX_Op2_reg[0]_0 [4]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \imm_reg_reg[12] 
       (.C(Clk),
        .CE(E),
        .D(of_imm_data[12]),
        .Q(\EX_Op2_reg[0]_0 [3]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \imm_reg_reg[13] 
       (.C(Clk),
        .CE(E),
        .D(of_imm_data[13]),
        .Q(\EX_Op2_reg[0]_0 [2]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \imm_reg_reg[14] 
       (.C(Clk),
        .CE(E),
        .D(of_imm_data[14]),
        .Q(\EX_Op2_reg[0]_0 [1]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \imm_reg_reg[15] 
       (.C(Clk),
        .CE(E),
        .D(of_imm_data[15]),
        .Q(\EX_Op2_reg[0]_0 [0]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \imm_reg_reg[1] 
       (.C(Clk),
        .CE(E),
        .D(of_imm_data[1]),
        .Q(\EX_Op2_reg[0]_0 [14]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \imm_reg_reg[2] 
       (.C(Clk),
        .CE(E),
        .D(of_imm_data[2]),
        .Q(\EX_Op2_reg[0]_0 [13]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \imm_reg_reg[3] 
       (.C(Clk),
        .CE(E),
        .D(of_imm_data[3]),
        .Q(\EX_Op2_reg[0]_0 [12]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \imm_reg_reg[4] 
       (.C(Clk),
        .CE(E),
        .D(of_imm_data[4]),
        .Q(\EX_Op2_reg[0]_0 [11]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \imm_reg_reg[5] 
       (.C(Clk),
        .CE(E),
        .D(of_imm_data[5]),
        .Q(\EX_Op2_reg[0]_0 [10]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \imm_reg_reg[6] 
       (.C(Clk),
        .CE(E),
        .D(of_imm_data[6]),
        .Q(\EX_Op2_reg[0]_0 [9]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \imm_reg_reg[7] 
       (.C(Clk),
        .CE(E),
        .D(of_imm_data[7]),
        .Q(\EX_Op2_reg[0]_0 [8]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \imm_reg_reg[8] 
       (.C(Clk),
        .CE(E),
        .D(of_imm_data[8]),
        .Q(\EX_Op2_reg[0]_0 [7]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \imm_reg_reg[9] 
       (.C(Clk),
        .CE(E),
        .D(of_imm_data[9]),
        .Q(\EX_Op2_reg[0]_0 [6]),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'h69)) 
    \mem_byte_selects[1]_i_1 
       (.I0(ex_reverse_mem_access),
        .I1(Q[0]),
        .I2(\MEM_DataBus_Addr_reg[0] [0]),
        .O(\mem_byte_selects_reg[0] [0]));
  LUT4 #(
    .INIT(16'h00E2)) 
    sign_0_15_inferred_i_1
       (.I0(Q[7]),
        .I1(\EX_Sext_Op_reg[0] [0]),
        .I2(Q[15]),
        .I3(\EX_Sext_Op_reg[0] [1]),
        .O(in0));
endmodule

module PC_Module_gti
   (D,
    O56_out,
    Q,
    if_missed_fetch_reg,
    \EX_Op1_reg[31] ,
    \EX_Op1_reg[27] ,
    \EX_Op1_reg[26] ,
    \EX_Op1_reg[25] ,
    \EX_Op1_reg[24] ,
    \EX_Op1_reg[23] ,
    \EX_Op1_reg[22] ,
    \EX_Op1_reg[21] ,
    \EX_Op1_reg[20] ,
    \EX_Op1_reg[19] ,
    \EX_Op1_reg[18] ,
    \EX_Op1_reg[17] ,
    \EX_Op1_reg[16] ,
    \EX_Op1_reg[15] ,
    \EX_Op1_reg[14] ,
    \EX_Op1_reg[13] ,
    \EX_Op1_reg[12] ,
    \EX_Op1_reg[11] ,
    \EX_Op1_reg[10] ,
    \EX_Op1_reg[9] ,
    \EX_Op1_reg[8] ,
    \EX_Op1_reg[7] ,
    \EX_Op1_reg[6] ,
    \EX_Op1_reg[5] ,
    \EX_Op1_reg[4] ,
    \EX_Op1_reg[3] ,
    \EX_Op1_reg[2] ,
    \EX_Op1_reg[1] ,
    O,
    \if_pc_reg[28]_0 ,
    \if_pc_reg[27]_0 ,
    \if_pc_reg[26]_0 ,
    \if_pc_reg[25]_0 ,
    \if_pc_reg[24]_0 ,
    \if_pc_reg[23]_0 ,
    \if_pc_reg[22]_0 ,
    \if_pc_reg[21]_0 ,
    \if_pc_reg[20]_0 ,
    \if_pc_reg[19]_0 ,
    \if_pc_reg[18]_0 ,
    \if_pc_reg[17]_0 ,
    \if_pc_reg[16]_0 ,
    \if_pc_reg[15]_0 ,
    \if_pc_reg[14]_0 ,
    \if_pc_reg[13]_0 ,
    \if_pc_reg[12]_0 ,
    \if_pc_reg[11]_0 ,
    \if_pc_reg[10]_0 ,
    \if_pc_reg[9]_0 ,
    \if_pc_reg[8]_0 ,
    \if_pc_reg[7]_0 ,
    \if_pc_reg[6]_0 ,
    \if_pc_reg[5]_0 ,
    \if_pc_reg[4]_0 ,
    \if_pc_reg[3]_0 ,
    \if_pc_reg[2]_0 ,
    \if_pc_reg[1]_0 ,
    \Using_FPGA.Native ,
    of_pause_reg,
    sync_reset,
    Clk,
    \Using_FPGA.Native_0 ,
    \Serial_Dbg_Intf.if_debug_ready_i_reg ,
    \Performace_Debug_Control.dbg_freeze_nohalt_reg ,
    \wb_exception_kind_i_reg[28] ,
    wb_exception,
    IReady,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    CI,
    IReady_1,
    if_pre_buffer_addr,
    if_sel_input,
    E,
    \Using_FPGA.Native_3 ,
    \if_pc_reg[0]_0 ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output [31:0]D;
  output O56_out;
  output [1:0]Q;
  output if_missed_fetch_reg;
  output \EX_Op1_reg[31] ;
  output \EX_Op1_reg[27] ;
  output \EX_Op1_reg[26] ;
  output \EX_Op1_reg[25] ;
  output \EX_Op1_reg[24] ;
  output \EX_Op1_reg[23] ;
  output \EX_Op1_reg[22] ;
  output \EX_Op1_reg[21] ;
  output \EX_Op1_reg[20] ;
  output \EX_Op1_reg[19] ;
  output \EX_Op1_reg[18] ;
  output \EX_Op1_reg[17] ;
  output \EX_Op1_reg[16] ;
  output \EX_Op1_reg[15] ;
  output \EX_Op1_reg[14] ;
  output \EX_Op1_reg[13] ;
  output \EX_Op1_reg[12] ;
  output \EX_Op1_reg[11] ;
  output \EX_Op1_reg[10] ;
  output \EX_Op1_reg[9] ;
  output \EX_Op1_reg[8] ;
  output \EX_Op1_reg[7] ;
  output \EX_Op1_reg[6] ;
  output \EX_Op1_reg[5] ;
  output \EX_Op1_reg[4] ;
  output \EX_Op1_reg[3] ;
  output \EX_Op1_reg[2] ;
  output \EX_Op1_reg[1] ;
  output O;
  output \if_pc_reg[28]_0 ;
  output \if_pc_reg[27]_0 ;
  output \if_pc_reg[26]_0 ;
  output \if_pc_reg[25]_0 ;
  output \if_pc_reg[24]_0 ;
  output \if_pc_reg[23]_0 ;
  output \if_pc_reg[22]_0 ;
  output \if_pc_reg[21]_0 ;
  output \if_pc_reg[20]_0 ;
  output \if_pc_reg[19]_0 ;
  output \if_pc_reg[18]_0 ;
  output \if_pc_reg[17]_0 ;
  output \if_pc_reg[16]_0 ;
  output \if_pc_reg[15]_0 ;
  output \if_pc_reg[14]_0 ;
  output \if_pc_reg[13]_0 ;
  output \if_pc_reg[12]_0 ;
  output \if_pc_reg[11]_0 ;
  output \if_pc_reg[10]_0 ;
  output \if_pc_reg[9]_0 ;
  output \if_pc_reg[8]_0 ;
  output \if_pc_reg[7]_0 ;
  output \if_pc_reg[6]_0 ;
  output \if_pc_reg[5]_0 ;
  output \if_pc_reg[4]_0 ;
  output \if_pc_reg[3]_0 ;
  output \if_pc_reg[2]_0 ;
  output \if_pc_reg[1]_0 ;
  output [31:0]\Using_FPGA.Native ;
  input of_pause_reg;
  input sync_reset;
  input Clk;
  input \Using_FPGA.Native_0 ;
  input \Serial_Dbg_Intf.if_debug_ready_i_reg ;
  input \Performace_Debug_Control.dbg_freeze_nohalt_reg ;
  input [1:0]\wb_exception_kind_i_reg[28] ;
  input wb_exception;
  input IReady;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input CI;
  input IReady_1;
  input [0:0]if_pre_buffer_addr;
  input [0:0]if_sel_input;
  input [0:0]E;
  input [0:0]\Using_FPGA.Native_3 ;
  input [31:0]\if_pc_reg[0]_0 ;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire Clk;
  wire [31:0]D;
  wire [0:0]E;
  wire \EX_Op1_reg[10] ;
  wire \EX_Op1_reg[11] ;
  wire \EX_Op1_reg[12] ;
  wire \EX_Op1_reg[13] ;
  wire \EX_Op1_reg[14] ;
  wire \EX_Op1_reg[15] ;
  wire \EX_Op1_reg[16] ;
  wire \EX_Op1_reg[17] ;
  wire \EX_Op1_reg[18] ;
  wire \EX_Op1_reg[19] ;
  wire \EX_Op1_reg[1] ;
  wire \EX_Op1_reg[20] ;
  wire \EX_Op1_reg[21] ;
  wire \EX_Op1_reg[22] ;
  wire \EX_Op1_reg[23] ;
  wire \EX_Op1_reg[24] ;
  wire \EX_Op1_reg[25] ;
  wire \EX_Op1_reg[26] ;
  wire \EX_Op1_reg[27] ;
  wire \EX_Op1_reg[2] ;
  wire \EX_Op1_reg[31] ;
  wire \EX_Op1_reg[3] ;
  wire \EX_Op1_reg[4] ;
  wire \EX_Op1_reg[5] ;
  wire \EX_Op1_reg[6] ;
  wire \EX_Op1_reg[7] ;
  wire \EX_Op1_reg[8] ;
  wire \EX_Op1_reg[9] ;
  wire I0;
  wire I0101_out;
  wire I0105_out;
  wire I0109_out;
  wire I0113_out;
  wire I0117_out;
  wire I0121_out;
  wire I0125_out;
  wire I013_out;
  wire I017_out;
  wire I021_out;
  wire I025_out;
  wire I029_out;
  wire I033_out;
  wire I037_out;
  wire I041_out;
  wire I045_out;
  wire I049_out;
  wire I053_out;
  wire I057_out;
  wire I05_out;
  wire I061_out;
  wire I065_out;
  wire I069_out;
  wire I073_out;
  wire I077_out;
  wire I081_out;
  wire I085_out;
  wire I089_out;
  wire I093_out;
  wire I097_out;
  wire I09_out;
  wire IReady;
  wire IReady_1;
  wire O;
  wire O56_out;
  wire \PC_Buffer_reg[3][0]_srl4_n_0 ;
  wire \Performace_Debug_Control.dbg_freeze_nohalt_reg ;
  wire [1:0]Q;
  wire S;
  wire S102_in;
  wire S107_in;
  wire S112_in;
  wire S117_in;
  wire S122_in;
  wire S127_in;
  wire S12_in;
  wire S132_in;
  wire S137_in;
  wire S142_in;
  wire S147_in;
  wire S152_in;
  wire S17_in;
  wire S22_in;
  wire S27_in;
  wire S32_in;
  wire S37_in;
  wire S42_in;
  wire S47_in;
  wire S52_in;
  wire S57_in;
  wire S62_in;
  wire S67_in;
  wire S72_in;
  wire S77_in;
  wire S82_in;
  wire S87_in;
  wire S92_in;
  wire S97_in;
  wire \Serial_Dbg_Intf.if_debug_ready_i_reg ;
  wire [31:0]\Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire [0:0]\Using_FPGA.Native_3 ;
  wire [0:31]ex_pc;
  wire if_missed_fetch_reg;
  wire [29:1]if_pc_carry;
  wire [31:0]\if_pc_reg[0]_0 ;
  wire \if_pc_reg[10]_0 ;
  wire \if_pc_reg[11]_0 ;
  wire \if_pc_reg[12]_0 ;
  wire \if_pc_reg[13]_0 ;
  wire \if_pc_reg[14]_0 ;
  wire \if_pc_reg[15]_0 ;
  wire \if_pc_reg[16]_0 ;
  wire \if_pc_reg[17]_0 ;
  wire \if_pc_reg[18]_0 ;
  wire \if_pc_reg[19]_0 ;
  wire \if_pc_reg[1]_0 ;
  wire \if_pc_reg[20]_0 ;
  wire \if_pc_reg[21]_0 ;
  wire \if_pc_reg[22]_0 ;
  wire \if_pc_reg[23]_0 ;
  wire \if_pc_reg[24]_0 ;
  wire \if_pc_reg[25]_0 ;
  wire \if_pc_reg[26]_0 ;
  wire \if_pc_reg[27]_0 ;
  wire \if_pc_reg[28]_0 ;
  wire \if_pc_reg[2]_0 ;
  wire \if_pc_reg[3]_0 ;
  wire \if_pc_reg[4]_0 ;
  wire \if_pc_reg[5]_0 ;
  wire \if_pc_reg[6]_0 ;
  wire \if_pc_reg[7]_0 ;
  wire \if_pc_reg[8]_0 ;
  wire \if_pc_reg[9]_0 ;
  wire [0:0]if_pre_buffer_addr;
  wire [0:0]if_sel_input;
  wire lopt;
  wire lopt_1;
  wire lopt_10;
  wire lopt_11;
  wire lopt_13;
  wire lopt_15;
  wire lopt_16;
  wire lopt_17;
  wire lopt_18;
  wire lopt_19;
  wire \^lopt_2 ;
  wire lopt_20;
  wire lopt_22;
  wire lopt_24;
  wire lopt_25;
  wire lopt_26;
  wire lopt_27;
  wire lopt_28;
  wire lopt_29;
  wire lopt_31;
  wire lopt_33;
  wire lopt_34;
  wire lopt_35;
  wire lopt_36;
  wire lopt_37;
  wire lopt_38;
  wire lopt_4;
  wire lopt_40;
  wire lopt_42;
  wire lopt_43;
  wire lopt_44;
  wire lopt_45;
  wire lopt_46;
  wire lopt_47;
  wire lopt_49;
  wire lopt_51;
  wire lopt_52;
  wire lopt_53;
  wire lopt_54;
  wire lopt_55;
  wire lopt_56;
  wire lopt_58;
  wire lopt_6;
  wire lopt_60;
  wire lopt_61;
  wire lopt_62;
  wire lopt_63;
  wire lopt_64;
  wire lopt_65;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire of_pause_reg;
  wire of_pc_ii_0;
  wire of_pc_ii_1;
  wire of_pc_ii_10;
  wire of_pc_ii_11;
  wire of_pc_ii_12;
  wire of_pc_ii_13;
  wire of_pc_ii_14;
  wire of_pc_ii_15;
  wire of_pc_ii_16;
  wire of_pc_ii_17;
  wire of_pc_ii_18;
  wire of_pc_ii_19;
  wire of_pc_ii_2;
  wire of_pc_ii_20;
  wire of_pc_ii_21;
  wire of_pc_ii_22;
  wire of_pc_ii_23;
  wire of_pc_ii_24;
  wire of_pc_ii_25;
  wire of_pc_ii_26;
  wire of_pc_ii_27;
  wire of_pc_ii_28;
  wire of_pc_ii_29;
  wire of_pc_ii_3;
  wire of_pc_ii_30;
  wire of_pc_ii_31;
  wire of_pc_ii_4;
  wire of_pc_ii_5;
  wire of_pc_ii_6;
  wire of_pc_ii_7;
  wire of_pc_ii_8;
  wire of_pc_ii_9;
  wire p_1_in103_in;
  wire p_1_in108_in;
  wire p_1_in113_in;
  wire p_1_in118_in;
  wire p_1_in123_in;
  wire p_1_in128_in;
  wire p_1_in133_in;
  wire p_1_in138_in;
  wire p_1_in13_in;
  wire p_1_in143_in;
  wire p_1_in148_in;
  wire p_1_in153_in;
  wire p_1_in18_in;
  wire p_1_in23_in;
  wire p_1_in28_in;
  wire p_1_in33_in;
  wire p_1_in38_in;
  wire p_1_in43_in;
  wire p_1_in48_in;
  wire p_1_in53_in;
  wire p_1_in58_in;
  wire p_1_in63_in;
  wire p_1_in68_in;
  wire p_1_in73_in;
  wire p_1_in78_in;
  wire p_1_in83_in;
  wire p_1_in88_in;
  wire p_1_in8_in;
  wire p_1_in93_in;
  wire p_1_in98_in;
  wire p_2_in4_in;
  wire sync_reset;
  wire wb_exception;
  wire [1:0]\wb_exception_kind_i_reg[28] ;
  wire \NLW_Using_FPGA.Incr_PC[10].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[10].MUXCY_XOR_I_if_pc_reg[11]_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[10].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[10].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[11].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[11].MUXCY_XOR_I_if_pc_reg[12]_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[11].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[11].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[12].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[12].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[12].MUXCY_XOR_I_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[13].MUXCY_XOR_I_if_pc_reg[14]_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[13].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[14].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[14].MUXCY_XOR_I_if_pc_reg[15]_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[14].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[14].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[15].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[15].MUXCY_XOR_I_if_pc_reg[16]_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[15].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[15].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[16].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[16].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[16].MUXCY_XOR_I_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[17].MUXCY_XOR_I_if_pc_reg[18]_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[17].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[18].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[18].MUXCY_XOR_I_if_pc_reg[19]_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[18].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[18].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[19].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[19].MUXCY_XOR_I_if_pc_reg[20]_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[19].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[19].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[1].MUXCY_XOR_I_if_pc_reg[2]_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[1].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[20].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[20].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[20].MUXCY_XOR_I_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[21].MUXCY_XOR_I_if_pc_reg[22]_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[21].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[22].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[22].MUXCY_XOR_I_if_pc_reg[23]_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[22].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[22].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[23].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[23].MUXCY_XOR_I_if_pc_reg[24]_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[23].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[23].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[24].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[24].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[24].MUXCY_XOR_I_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[25].MUXCY_XOR_I_if_pc_reg[26]_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[25].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[26].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[26].MUXCY_XOR_I_if_pc_reg[27]_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[26].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[26].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[27].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[27].MUXCY_XOR_I_if_pc_reg[28]_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[27].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[27].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[28].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[28].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[28].MUXCY_XOR_I_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[29].MUXCY_XOR_I_CI_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[29].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[2].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[2].MUXCY_XOR_I_if_pc_reg[3]_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[2].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[2].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[3].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[3].MUXCY_XOR_I_if_pc_reg[4]_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[3].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[3].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[4].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[4].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[4].MUXCY_XOR_I_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[5].MUXCY_XOR_I_if_pc_reg[6]_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[5].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[6].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[6].MUXCY_XOR_I_if_pc_reg[7]_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[6].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[6].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[7].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[7].MUXCY_XOR_I_if_pc_reg[8]_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[7].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[7].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[8].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[8].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[8].MUXCY_XOR_I_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[9].MUXCY_XOR_I_CI_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[9].MUXCY_XOR_I_Q_UNCONNECTED ;

  assign \^lopt_2  = lopt_3;
  assign lopt_2 = S;
  LUT6 #(
    .INIT(64'h5444444455555555)) 
    I_AS_INST_0_i_1
       (.I0(\Serial_Dbg_Intf.if_debug_ready_i_reg ),
        .I1(\Performace_Debug_Control.dbg_freeze_nohalt_reg ),
        .I2(\wb_exception_kind_i_reg[28] [1]),
        .I3(\wb_exception_kind_i_reg[28] [0]),
        .I4(wb_exception),
        .I5(IReady),
        .O(if_missed_fetch_reg));
  MB_FDR_209 \Instruction_Prefetch_Mux[0].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[31]),
        .I0125_out(I0125_out),
        .Q(S152_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .of_pc_ii_31(of_pc_ii_31),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_210 \Instruction_Prefetch_Mux[0].PC_Mux_MUXF7 
       (.I0125_out(I0125_out),
        .Q(S152_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_31(of_pc_ii_31),
        .out(p_1_in153_in));
  MB_FDR_211 \Instruction_Prefetch_Mux[10].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[21]),
        .\EX_Op1_reg[10] (\EX_Op1_reg[10] ),
        .I085_out(I085_out),
        .Q(S102_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_2 ),
        .of_pc_ii_21(of_pc_ii_21),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_212 \Instruction_Prefetch_Mux[10].PC_Mux_MUXF7 
       (.I085_out(I085_out),
        .Q(S102_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_21(of_pc_ii_21),
        .out(p_1_in103_in));
  MB_FDR_213 \Instruction_Prefetch_Mux[11].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[20]),
        .\EX_Op1_reg[11] (\EX_Op1_reg[11] ),
        .I081_out(I081_out),
        .Q(S97_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_2 ),
        .of_pc_ii_20(of_pc_ii_20),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_214 \Instruction_Prefetch_Mux[11].PC_Mux_MUXF7 
       (.I081_out(I081_out),
        .Q(S97_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_20(of_pc_ii_20),
        .out(p_1_in98_in));
  MB_FDR_215 \Instruction_Prefetch_Mux[12].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[19]),
        .\EX_Op1_reg[12] (\EX_Op1_reg[12] ),
        .I077_out(I077_out),
        .Q(S92_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_2 ),
        .of_pc_ii_19(of_pc_ii_19),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_216 \Instruction_Prefetch_Mux[12].PC_Mux_MUXF7 
       (.I077_out(I077_out),
        .Q(S92_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_19(of_pc_ii_19),
        .out(p_1_in93_in));
  MB_FDR_217 \Instruction_Prefetch_Mux[13].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[18]),
        .\EX_Op1_reg[13] (\EX_Op1_reg[13] ),
        .I073_out(I073_out),
        .Q(S87_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_2 ),
        .of_pc_ii_18(of_pc_ii_18),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_218 \Instruction_Prefetch_Mux[13].PC_Mux_MUXF7 
       (.I073_out(I073_out),
        .Q(S87_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_18(of_pc_ii_18),
        .out(p_1_in88_in));
  MB_FDR_219 \Instruction_Prefetch_Mux[14].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[17]),
        .\EX_Op1_reg[14] (\EX_Op1_reg[14] ),
        .I069_out(I069_out),
        .Q(S82_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_2 ),
        .of_pc_ii_17(of_pc_ii_17),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_220 \Instruction_Prefetch_Mux[14].PC_Mux_MUXF7 
       (.I069_out(I069_out),
        .Q(S82_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_17(of_pc_ii_17),
        .out(p_1_in83_in));
  MB_FDR_221 \Instruction_Prefetch_Mux[15].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[16]),
        .\EX_Op1_reg[15] (\EX_Op1_reg[15] ),
        .I065_out(I065_out),
        .Q(S77_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_2 ),
        .of_pc_ii_16(of_pc_ii_16),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_222 \Instruction_Prefetch_Mux[15].PC_Mux_MUXF7 
       (.I065_out(I065_out),
        .Q(S77_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_16(of_pc_ii_16),
        .out(p_1_in78_in));
  MB_FDR_223 \Instruction_Prefetch_Mux[16].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[15]),
        .\EX_Op1_reg[16] (\EX_Op1_reg[16] ),
        .I061_out(I061_out),
        .Q(S72_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_2 ),
        .of_pc_ii_15(of_pc_ii_15),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_224 \Instruction_Prefetch_Mux[16].PC_Mux_MUXF7 
       (.I061_out(I061_out),
        .Q(S72_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_15(of_pc_ii_15),
        .out(p_1_in73_in));
  MB_FDR_225 \Instruction_Prefetch_Mux[17].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[14]),
        .\EX_Op1_reg[17] (\EX_Op1_reg[17] ),
        .I057_out(I057_out),
        .Q(S67_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_2 ),
        .of_pc_ii_14(of_pc_ii_14),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_226 \Instruction_Prefetch_Mux[17].PC_Mux_MUXF7 
       (.I057_out(I057_out),
        .Q(S67_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_14(of_pc_ii_14),
        .out(p_1_in68_in));
  MB_FDR_227 \Instruction_Prefetch_Mux[18].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[13]),
        .\EX_Op1_reg[18] (\EX_Op1_reg[18] ),
        .I053_out(I053_out),
        .Q(S62_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_2 ),
        .of_pc_ii_13(of_pc_ii_13),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_228 \Instruction_Prefetch_Mux[18].PC_Mux_MUXF7 
       (.I053_out(I053_out),
        .Q(S62_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_13(of_pc_ii_13),
        .out(p_1_in63_in));
  MB_FDR_229 \Instruction_Prefetch_Mux[19].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[12]),
        .\EX_Op1_reg[19] (\EX_Op1_reg[19] ),
        .I049_out(I049_out),
        .Q(S57_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_2 ),
        .of_pc_ii_12(of_pc_ii_12),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_230 \Instruction_Prefetch_Mux[19].PC_Mux_MUXF7 
       (.I049_out(I049_out),
        .Q(S57_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_12(of_pc_ii_12),
        .out(p_1_in58_in));
  MB_FDR_231 \Instruction_Prefetch_Mux[1].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[30]),
        .\EX_Op1_reg[1] (\EX_Op1_reg[1] ),
        .I0121_out(I0121_out),
        .Q(S147_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_2 ),
        .of_pc_ii_30(of_pc_ii_30),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_232 \Instruction_Prefetch_Mux[1].PC_Mux_MUXF7 
       (.I0121_out(I0121_out),
        .Q(S147_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_30(of_pc_ii_30),
        .out(p_1_in148_in));
  MB_FDR_233 \Instruction_Prefetch_Mux[20].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[11]),
        .\EX_Op1_reg[20] (\EX_Op1_reg[20] ),
        .I045_out(I045_out),
        .Q(S52_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_2 ),
        .of_pc_ii_11(of_pc_ii_11),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_234 \Instruction_Prefetch_Mux[20].PC_Mux_MUXF7 
       (.I045_out(I045_out),
        .Q(S52_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_11(of_pc_ii_11),
        .out(p_1_in53_in));
  MB_FDR_235 \Instruction_Prefetch_Mux[21].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[10]),
        .\EX_Op1_reg[21] (\EX_Op1_reg[21] ),
        .I041_out(I041_out),
        .Q(S47_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_2 ),
        .of_pc_ii_10(of_pc_ii_10),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_236 \Instruction_Prefetch_Mux[21].PC_Mux_MUXF7 
       (.I041_out(I041_out),
        .Q(S47_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_10(of_pc_ii_10),
        .out(p_1_in48_in));
  MB_FDR_237 \Instruction_Prefetch_Mux[22].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[9]),
        .\EX_Op1_reg[22] (\EX_Op1_reg[22] ),
        .I037_out(I037_out),
        .Q(S42_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_2 ),
        .of_pc_ii_9(of_pc_ii_9),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_238 \Instruction_Prefetch_Mux[22].PC_Mux_MUXF7 
       (.I037_out(I037_out),
        .Q(S42_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_9(of_pc_ii_9),
        .out(p_1_in43_in));
  MB_FDR_239 \Instruction_Prefetch_Mux[23].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[8]),
        .\EX_Op1_reg[23] (\EX_Op1_reg[23] ),
        .I033_out(I033_out),
        .Q(S37_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_2 ),
        .of_pc_ii_8(of_pc_ii_8),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_240 \Instruction_Prefetch_Mux[23].PC_Mux_MUXF7 
       (.I033_out(I033_out),
        .Q(S37_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_8(of_pc_ii_8),
        .out(p_1_in38_in));
  MB_FDR_241 \Instruction_Prefetch_Mux[24].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[7]),
        .\EX_Op1_reg[24] (\EX_Op1_reg[24] ),
        .I029_out(I029_out),
        .Q(S32_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_2 ),
        .of_pc_ii_7(of_pc_ii_7),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_242 \Instruction_Prefetch_Mux[24].PC_Mux_MUXF7 
       (.I029_out(I029_out),
        .Q(S32_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_7(of_pc_ii_7),
        .out(p_1_in33_in));
  MB_FDR_243 \Instruction_Prefetch_Mux[25].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[6]),
        .\EX_Op1_reg[25] (\EX_Op1_reg[25] ),
        .I025_out(I025_out),
        .Q(S27_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_2 ),
        .of_pc_ii_6(of_pc_ii_6),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_244 \Instruction_Prefetch_Mux[25].PC_Mux_MUXF7 
       (.I025_out(I025_out),
        .Q(S27_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_6(of_pc_ii_6),
        .out(p_1_in28_in));
  MB_FDR_245 \Instruction_Prefetch_Mux[26].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[5]),
        .\EX_Op1_reg[26] (\EX_Op1_reg[26] ),
        .I021_out(I021_out),
        .Q(S22_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_2 ),
        .of_pc_ii_5(of_pc_ii_5),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_246 \Instruction_Prefetch_Mux[26].PC_Mux_MUXF7 
       (.I021_out(I021_out),
        .Q(S22_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_5(of_pc_ii_5),
        .out(p_1_in23_in));
  MB_FDR_247 \Instruction_Prefetch_Mux[27].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[4]),
        .\EX_Op1_reg[27] (\EX_Op1_reg[27] ),
        .I017_out(I017_out),
        .Q(S17_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_2 ),
        .of_pc_ii_4(of_pc_ii_4),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_248 \Instruction_Prefetch_Mux[27].PC_Mux_MUXF7 
       (.I017_out(I017_out),
        .Q(S17_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_4(of_pc_ii_4),
        .out(p_1_in18_in));
  MB_FDR_249 \Instruction_Prefetch_Mux[28].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[3]),
        .I013_out(I013_out),
        .Q(S12_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .of_pc_ii_3(of_pc_ii_3),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_250 \Instruction_Prefetch_Mux[28].PC_Mux_MUXF7 
       (.I013_out(I013_out),
        .Q(S12_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_3(of_pc_ii_3),
        .out(p_1_in13_in));
  MB_FDR_251 \Instruction_Prefetch_Mux[29].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[2]),
        .I09_out(I09_out),
        .Q(S),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .of_pc_ii_2(of_pc_ii_2),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_252 \Instruction_Prefetch_Mux[29].PC_Mux_MUXF7 
       (.I09_out(I09_out),
        .Q(S),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_2(of_pc_ii_2),
        .out(p_1_in8_in));
  MB_FDR_253 \Instruction_Prefetch_Mux[2].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[29]),
        .\EX_Op1_reg[2] (\EX_Op1_reg[2] ),
        .I0117_out(I0117_out),
        .Q(S142_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_2 ),
        .of_pc_ii_29(of_pc_ii_29),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_254 \Instruction_Prefetch_Mux[2].PC_Mux_MUXF7 
       (.I0117_out(I0117_out),
        .Q(S142_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_29(of_pc_ii_29),
        .out(p_1_in143_in));
  MB_FDR_255 \Instruction_Prefetch_Mux[30].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[1]),
        .I05_out(I05_out),
        .Q(Q[1]),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .of_pc_ii_1(of_pc_ii_1),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_256 \Instruction_Prefetch_Mux[30].PC_Mux_MUXF7 
       (.I05_out(I05_out),
        .Q(Q[1]),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_1(of_pc_ii_1),
        .out(p_2_in4_in));
  MB_FDR_257 \Instruction_Prefetch_Mux[31].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[0]),
        .\EX_Op1_reg[31] (\EX_Op1_reg[31] ),
        .I0(I0),
        .Q(Q[0]),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_2 ),
        .of_pc_ii_0(of_pc_ii_0),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_258 \Instruction_Prefetch_Mux[31].PC_Mux_MUXF7 
       (.I0(I0),
        .Q(Q[0]),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_0(of_pc_ii_0),
        .out(\PC_Buffer_reg[3][0]_srl4_n_0 ));
  MB_FDR_259 \Instruction_Prefetch_Mux[3].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[28]),
        .\EX_Op1_reg[3] (\EX_Op1_reg[3] ),
        .I0113_out(I0113_out),
        .Q(S137_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_2 ),
        .of_pc_ii_28(of_pc_ii_28),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_260 \Instruction_Prefetch_Mux[3].PC_Mux_MUXF7 
       (.I0113_out(I0113_out),
        .Q(S137_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_28(of_pc_ii_28),
        .out(p_1_in138_in));
  MB_FDR_261 \Instruction_Prefetch_Mux[4].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[27]),
        .\EX_Op1_reg[4] (\EX_Op1_reg[4] ),
        .I0109_out(I0109_out),
        .Q(S132_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_2 ),
        .of_pc_ii_27(of_pc_ii_27),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_262 \Instruction_Prefetch_Mux[4].PC_Mux_MUXF7 
       (.I0109_out(I0109_out),
        .Q(S132_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_27(of_pc_ii_27),
        .out(p_1_in133_in));
  MB_FDR_263 \Instruction_Prefetch_Mux[5].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[26]),
        .\EX_Op1_reg[5] (\EX_Op1_reg[5] ),
        .I0105_out(I0105_out),
        .Q(S127_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_2 ),
        .of_pc_ii_26(of_pc_ii_26),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_264 \Instruction_Prefetch_Mux[5].PC_Mux_MUXF7 
       (.I0105_out(I0105_out),
        .Q(S127_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_26(of_pc_ii_26),
        .out(p_1_in128_in));
  MB_FDR_265 \Instruction_Prefetch_Mux[6].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[25]),
        .\EX_Op1_reg[6] (\EX_Op1_reg[6] ),
        .I0101_out(I0101_out),
        .Q(S122_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_2 ),
        .of_pc_ii_25(of_pc_ii_25),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_266 \Instruction_Prefetch_Mux[6].PC_Mux_MUXF7 
       (.I0101_out(I0101_out),
        .Q(S122_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_25(of_pc_ii_25),
        .out(p_1_in123_in));
  MB_FDR_267 \Instruction_Prefetch_Mux[7].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[24]),
        .\EX_Op1_reg[7] (\EX_Op1_reg[7] ),
        .I097_out(I097_out),
        .Q(S117_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_2 ),
        .of_pc_ii_24(of_pc_ii_24),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_268 \Instruction_Prefetch_Mux[7].PC_Mux_MUXF7 
       (.I097_out(I097_out),
        .Q(S117_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_24(of_pc_ii_24),
        .out(p_1_in118_in));
  MB_FDR_269 \Instruction_Prefetch_Mux[8].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[23]),
        .\EX_Op1_reg[8] (\EX_Op1_reg[8] ),
        .I093_out(I093_out),
        .Q(S112_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_2 ),
        .of_pc_ii_23(of_pc_ii_23),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_270 \Instruction_Prefetch_Mux[8].PC_Mux_MUXF7 
       (.I093_out(I093_out),
        .Q(S112_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_23(of_pc_ii_23),
        .out(p_1_in113_in));
  MB_FDR_271 \Instruction_Prefetch_Mux[9].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[22]),
        .\EX_Op1_reg[9] (\EX_Op1_reg[9] ),
        .I089_out(I089_out),
        .Q(S107_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_2 ),
        .of_pc_ii_22(of_pc_ii_22),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_272 \Instruction_Prefetch_Mux[9].PC_Mux_MUXF7 
       (.I089_out(I089_out),
        .Q(S107_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .of_pause_reg(of_pause_reg),
        .of_pc_ii_22(of_pc_ii_22),
        .out(p_1_in108_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][0]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][0]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(Q[0]),
        .Q(\PC_Buffer_reg[3][0]_srl4_n_0 ));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][10]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][10]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(S47_in),
        .Q(p_1_in48_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][11]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][11]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(S52_in),
        .Q(p_1_in53_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][12]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][12]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(S57_in),
        .Q(p_1_in58_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][13]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][13]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(S62_in),
        .Q(p_1_in63_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][14]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][14]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(S67_in),
        .Q(p_1_in68_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][15]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][15]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(S72_in),
        .Q(p_1_in73_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][16]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][16]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(S77_in),
        .Q(p_1_in78_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][17]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][17]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(S82_in),
        .Q(p_1_in83_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][18]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][18]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(S87_in),
        .Q(p_1_in88_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][19]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][19]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(S92_in),
        .Q(p_1_in93_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][1]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][1]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(Q[1]),
        .Q(p_2_in4_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][20]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][20]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(S97_in),
        .Q(p_1_in98_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][21]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][21]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(S102_in),
        .Q(p_1_in103_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][22]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][22]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(S107_in),
        .Q(p_1_in108_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][23]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][23]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(S112_in),
        .Q(p_1_in113_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][24]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][24]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(S117_in),
        .Q(p_1_in118_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][25]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][25]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(S122_in),
        .Q(p_1_in123_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][26]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][26]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(S127_in),
        .Q(p_1_in128_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][27]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][27]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(S132_in),
        .Q(p_1_in133_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][28]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][28]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(S137_in),
        .Q(p_1_in138_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][29]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][29]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(S142_in),
        .Q(p_1_in143_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][2]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][2]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(S),
        .Q(p_1_in8_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][30]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][30]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(S147_in),
        .Q(p_1_in148_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][31]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][31]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(S152_in),
        .Q(p_1_in153_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][3]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][3]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(S12_in),
        .Q(p_1_in13_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][4]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][4]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(S17_in),
        .Q(p_1_in18_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][5]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][5]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(S22_in),
        .Q(p_1_in23_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][6]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][6]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(S27_in),
        .Q(p_1_in28_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][7]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][7]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(S32_in),
        .Q(p_1_in33_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][8]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][8]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(S37_in),
        .Q(p_1_in38_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][9]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][9]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(S42_in),
        .Q(p_1_in43_in));
  microblaze_v10_0_3_MB_MUXCY_XORCY \Using_FPGA.Incr_PC[0].MUXCY_XOR_I 
       (.LO(if_pc_carry[29]),
        .O56_out(O56_out),
        .Q(S152_in));
  microblaze_v10_0_3_MB_MUXCY_XORCY_273 \Using_FPGA.Incr_PC[10].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[10].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(\NLW_Using_FPGA.Incr_PC[10].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[10] (\if_pc_reg[10]_0 ),
        .\if_pc_reg[11] (\NLW_Using_FPGA.Incr_PC[10].MUXCY_XOR_I_if_pc_reg[11]_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA.Incr_PC[10].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_42),
        .lopt_2(lopt_46));
  microblaze_v10_0_3_MB_MUXCY_XORCY_274 \Using_FPGA.Incr_PC[11].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[11].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(\NLW_Using_FPGA.Incr_PC[11].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[11] (\if_pc_reg[11]_0 ),
        .\if_pc_reg[12] (\NLW_Using_FPGA.Incr_PC[11].MUXCY_XOR_I_if_pc_reg[12]_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA.Incr_PC[11].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_40),
        .lopt_2(lopt_45));
  microblaze_v10_0_3_MB_MUXCY_XORCY_275 \Using_FPGA.Incr_PC[12].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[12].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(S92_in),
        .\if_pc_reg[12] (\if_pc_reg[12]_0 ),
        .\if_pc_reg[13] (if_pc_carry[17]),
        .lopt(\NLW_Using_FPGA.Incr_PC[12].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_40),
        .lopt_10(lopt_46),
        .lopt_11(lopt_47),
        .lopt_2(S97_in),
        .lopt_3(\NLW_Using_FPGA.Incr_PC[12].MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_42),
        .lopt_5(S102_in),
        .lopt_6(lopt_43),
        .lopt_7(lopt_44),
        .lopt_8(S107_in),
        .lopt_9(lopt_45));
  microblaze_v10_0_3_MB_MUXCY_XORCY_276 \Using_FPGA.Incr_PC[13].MUXCY_XOR_I 
       (.LO(if_pc_carry[17]),
        .Q(\NLW_Using_FPGA.Incr_PC[13].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[13] (\if_pc_reg[13]_0 ),
        .\if_pc_reg[14] (\NLW_Using_FPGA.Incr_PC[13].MUXCY_XOR_I_if_pc_reg[14]_UNCONNECTED ),
        .lopt(lopt_34),
        .lopt_1(lopt_35),
        .lopt_2(lopt_38));
  microblaze_v10_0_3_MB_MUXCY_XORCY_277 \Using_FPGA.Incr_PC[14].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[14].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(\NLW_Using_FPGA.Incr_PC[14].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[14] (\if_pc_reg[14]_0 ),
        .\if_pc_reg[15] (\NLW_Using_FPGA.Incr_PC[14].MUXCY_XOR_I_if_pc_reg[15]_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA.Incr_PC[14].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_33),
        .lopt_2(lopt_37));
  microblaze_v10_0_3_MB_MUXCY_XORCY_278 \Using_FPGA.Incr_PC[15].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[15].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(\NLW_Using_FPGA.Incr_PC[15].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[15] (\if_pc_reg[15]_0 ),
        .\if_pc_reg[16] (\NLW_Using_FPGA.Incr_PC[15].MUXCY_XOR_I_if_pc_reg[16]_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA.Incr_PC[15].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_31),
        .lopt_2(lopt_36));
  microblaze_v10_0_3_MB_MUXCY_XORCY_279 \Using_FPGA.Incr_PC[16].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[16].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(S72_in),
        .\if_pc_reg[16] (\if_pc_reg[16]_0 ),
        .\if_pc_reg[17] (if_pc_carry[13]),
        .lopt(\NLW_Using_FPGA.Incr_PC[16].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_31),
        .lopt_10(lopt_37),
        .lopt_11(lopt_38),
        .lopt_2(S77_in),
        .lopt_3(\NLW_Using_FPGA.Incr_PC[16].MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_33),
        .lopt_5(S82_in),
        .lopt_6(lopt_34),
        .lopt_7(lopt_35),
        .lopt_8(S87_in),
        .lopt_9(lopt_36));
  microblaze_v10_0_3_MB_MUXCY_XORCY_280 \Using_FPGA.Incr_PC[17].MUXCY_XOR_I 
       (.LO(if_pc_carry[13]),
        .Q(\NLW_Using_FPGA.Incr_PC[17].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[17] (\if_pc_reg[17]_0 ),
        .\if_pc_reg[18] (\NLW_Using_FPGA.Incr_PC[17].MUXCY_XOR_I_if_pc_reg[18]_UNCONNECTED ),
        .lopt(lopt_25),
        .lopt_1(lopt_26),
        .lopt_2(lopt_29));
  microblaze_v10_0_3_MB_MUXCY_XORCY_281 \Using_FPGA.Incr_PC[18].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[18].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(\NLW_Using_FPGA.Incr_PC[18].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[18] (\if_pc_reg[18]_0 ),
        .\if_pc_reg[19] (\NLW_Using_FPGA.Incr_PC[18].MUXCY_XOR_I_if_pc_reg[19]_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA.Incr_PC[18].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_24),
        .lopt_2(lopt_28));
  microblaze_v10_0_3_MB_MUXCY_XORCY_282 \Using_FPGA.Incr_PC[19].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[19].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(\NLW_Using_FPGA.Incr_PC[19].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[19] (\if_pc_reg[19]_0 ),
        .\if_pc_reg[20] (\NLW_Using_FPGA.Incr_PC[19].MUXCY_XOR_I_if_pc_reg[20]_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA.Incr_PC[19].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_22),
        .lopt_2(lopt_27));
  microblaze_v10_0_3_MB_MUXCY_XORCY_283 \Using_FPGA.Incr_PC[1].MUXCY_XOR_I 
       (.LO(if_pc_carry[29]),
        .Q(\NLW_Using_FPGA.Incr_PC[1].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[1] (\if_pc_reg[1]_0 ),
        .\if_pc_reg[2] (\NLW_Using_FPGA.Incr_PC[1].MUXCY_XOR_I_if_pc_reg[2]_UNCONNECTED ),
        .lopt(lopt_61),
        .lopt_1(lopt_62),
        .lopt_2(lopt_65));
  microblaze_v10_0_3_MB_MUXCY_XORCY_284 \Using_FPGA.Incr_PC[20].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[20].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(S52_in),
        .\if_pc_reg[20] (\if_pc_reg[20]_0 ),
        .\if_pc_reg[21] (if_pc_carry[9]),
        .lopt(\NLW_Using_FPGA.Incr_PC[20].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_22),
        .lopt_10(lopt_28),
        .lopt_11(lopt_29),
        .lopt_2(S57_in),
        .lopt_3(\NLW_Using_FPGA.Incr_PC[20].MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_24),
        .lopt_5(S62_in),
        .lopt_6(lopt_25),
        .lopt_7(lopt_26),
        .lopt_8(S67_in),
        .lopt_9(lopt_27));
  microblaze_v10_0_3_MB_MUXCY_XORCY_285 \Using_FPGA.Incr_PC[21].MUXCY_XOR_I 
       (.LO(if_pc_carry[9]),
        .Q(\NLW_Using_FPGA.Incr_PC[21].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[21] (\if_pc_reg[21]_0 ),
        .\if_pc_reg[22] (\NLW_Using_FPGA.Incr_PC[21].MUXCY_XOR_I_if_pc_reg[22]_UNCONNECTED ),
        .lopt(lopt_16),
        .lopt_1(lopt_17),
        .lopt_2(lopt_20));
  microblaze_v10_0_3_MB_MUXCY_XORCY_286 \Using_FPGA.Incr_PC[22].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[22].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(\NLW_Using_FPGA.Incr_PC[22].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[22] (\if_pc_reg[22]_0 ),
        .\if_pc_reg[23] (\NLW_Using_FPGA.Incr_PC[22].MUXCY_XOR_I_if_pc_reg[23]_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA.Incr_PC[22].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_15),
        .lopt_2(lopt_19));
  microblaze_v10_0_3_MB_MUXCY_XORCY_287 \Using_FPGA.Incr_PC[23].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[23].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(\NLW_Using_FPGA.Incr_PC[23].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[23] (\if_pc_reg[23]_0 ),
        .\if_pc_reg[24] (\NLW_Using_FPGA.Incr_PC[23].MUXCY_XOR_I_if_pc_reg[24]_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA.Incr_PC[23].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_13),
        .lopt_2(lopt_18));
  microblaze_v10_0_3_MB_MUXCY_XORCY_288 \Using_FPGA.Incr_PC[24].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[24].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(S32_in),
        .\if_pc_reg[24] (\if_pc_reg[24]_0 ),
        .\if_pc_reg[25] (if_pc_carry[5]),
        .lopt(\NLW_Using_FPGA.Incr_PC[24].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_13),
        .lopt_10(lopt_19),
        .lopt_11(lopt_20),
        .lopt_2(S37_in),
        .lopt_3(\NLW_Using_FPGA.Incr_PC[24].MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_15),
        .lopt_5(S42_in),
        .lopt_6(lopt_16),
        .lopt_7(lopt_17),
        .lopt_8(S47_in),
        .lopt_9(lopt_18));
  microblaze_v10_0_3_MB_MUXCY_XORCY_289 \Using_FPGA.Incr_PC[25].MUXCY_XOR_I 
       (.LO(if_pc_carry[5]),
        .Q(\NLW_Using_FPGA.Incr_PC[25].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[25] (\if_pc_reg[25]_0 ),
        .\if_pc_reg[26] (\NLW_Using_FPGA.Incr_PC[25].MUXCY_XOR_I_if_pc_reg[26]_UNCONNECTED ),
        .lopt(lopt_7),
        .lopt_1(lopt_8),
        .lopt_2(lopt_11));
  microblaze_v10_0_3_MB_MUXCY_XORCY_290 \Using_FPGA.Incr_PC[26].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[26].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(\NLW_Using_FPGA.Incr_PC[26].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[26] (\if_pc_reg[26]_0 ),
        .\if_pc_reg[27] (\NLW_Using_FPGA.Incr_PC[26].MUXCY_XOR_I_if_pc_reg[27]_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA.Incr_PC[26].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_6),
        .lopt_2(lopt_10));
  microblaze_v10_0_3_MB_MUXCY_XORCY_291 \Using_FPGA.Incr_PC[27].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[27].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(\NLW_Using_FPGA.Incr_PC[27].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[27] (\if_pc_reg[27]_0 ),
        .\if_pc_reg[28] (\NLW_Using_FPGA.Incr_PC[27].MUXCY_XOR_I_if_pc_reg[28]_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA.Incr_PC[27].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_4),
        .lopt_2(lopt_9));
  microblaze_v10_0_3_MB_MUXCY_XORCY_292 \Using_FPGA.Incr_PC[28].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[28].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(S12_in),
        .\if_pc_reg[28] (\if_pc_reg[28]_0 ),
        .\if_pc_reg[29] (if_pc_carry[1]),
        .lopt(\NLW_Using_FPGA.Incr_PC[28].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_4),
        .lopt_10(lopt_10),
        .lopt_11(lopt_11),
        .lopt_2(S17_in),
        .lopt_3(\NLW_Using_FPGA.Incr_PC[28].MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_6),
        .lopt_5(S22_in),
        .lopt_6(lopt_7),
        .lopt_7(lopt_8),
        .lopt_8(S27_in),
        .lopt_9(lopt_9));
  microblaze_v10_0_3_MB_MUXCY_XORCY_293 \Using_FPGA.Incr_PC[29].MUXCY_XOR_I 
       (.CI(\NLW_Using_FPGA.Incr_PC[29].MUXCY_XOR_I_CI_UNCONNECTED ),
        .LO(if_pc_carry[1]),
        .O(O),
        .Q(\NLW_Using_FPGA.Incr_PC[29].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(\^lopt_2 ));
  microblaze_v10_0_3_MB_MUXCY_XORCY_294 \Using_FPGA.Incr_PC[2].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[2].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(\NLW_Using_FPGA.Incr_PC[2].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[2] (\if_pc_reg[2]_0 ),
        .\if_pc_reg[3] (\NLW_Using_FPGA.Incr_PC[2].MUXCY_XOR_I_if_pc_reg[3]_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA.Incr_PC[2].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_60),
        .lopt_2(lopt_64));
  microblaze_v10_0_3_MB_MUXCY_XORCY_295 \Using_FPGA.Incr_PC[3].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[3].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(\NLW_Using_FPGA.Incr_PC[3].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[3] (\if_pc_reg[3]_0 ),
        .\if_pc_reg[4] (\NLW_Using_FPGA.Incr_PC[3].MUXCY_XOR_I_if_pc_reg[4]_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA.Incr_PC[3].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_58),
        .lopt_2(lopt_63));
  microblaze_v10_0_3_MB_MUXCY_XORCY_296 \Using_FPGA.Incr_PC[4].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[4].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(S132_in),
        .\if_pc_reg[4] (\if_pc_reg[4]_0 ),
        .\if_pc_reg[5] (if_pc_carry[25]),
        .lopt(\NLW_Using_FPGA.Incr_PC[4].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_58),
        .lopt_10(lopt_64),
        .lopt_11(lopt_65),
        .lopt_2(S137_in),
        .lopt_3(\NLW_Using_FPGA.Incr_PC[4].MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_60),
        .lopt_5(S142_in),
        .lopt_6(lopt_61),
        .lopt_7(lopt_62),
        .lopt_8(S147_in),
        .lopt_9(lopt_63));
  microblaze_v10_0_3_MB_MUXCY_XORCY_297 \Using_FPGA.Incr_PC[5].MUXCY_XOR_I 
       (.LO(if_pc_carry[25]),
        .Q(\NLW_Using_FPGA.Incr_PC[5].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[5] (\if_pc_reg[5]_0 ),
        .\if_pc_reg[6] (\NLW_Using_FPGA.Incr_PC[5].MUXCY_XOR_I_if_pc_reg[6]_UNCONNECTED ),
        .lopt(lopt_52),
        .lopt_1(lopt_53),
        .lopt_2(lopt_56));
  microblaze_v10_0_3_MB_MUXCY_XORCY_298 \Using_FPGA.Incr_PC[6].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[6].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(\NLW_Using_FPGA.Incr_PC[6].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[6] (\if_pc_reg[6]_0 ),
        .\if_pc_reg[7] (\NLW_Using_FPGA.Incr_PC[6].MUXCY_XOR_I_if_pc_reg[7]_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA.Incr_PC[6].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_51),
        .lopt_2(lopt_55));
  microblaze_v10_0_3_MB_MUXCY_XORCY_299 \Using_FPGA.Incr_PC[7].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[7].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(\NLW_Using_FPGA.Incr_PC[7].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[7] (\if_pc_reg[7]_0 ),
        .\if_pc_reg[8] (\NLW_Using_FPGA.Incr_PC[7].MUXCY_XOR_I_if_pc_reg[8]_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA.Incr_PC[7].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_49),
        .lopt_2(lopt_54));
  microblaze_v10_0_3_MB_MUXCY_XORCY_300 \Using_FPGA.Incr_PC[8].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[8].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(S112_in),
        .\if_pc_reg[8] (\if_pc_reg[8]_0 ),
        .\if_pc_reg[9] (if_pc_carry[21]),
        .lopt(\NLW_Using_FPGA.Incr_PC[8].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_49),
        .lopt_10(lopt_55),
        .lopt_11(lopt_56),
        .lopt_2(S117_in),
        .lopt_3(\NLW_Using_FPGA.Incr_PC[8].MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_51),
        .lopt_5(S122_in),
        .lopt_6(lopt_52),
        .lopt_7(lopt_53),
        .lopt_8(S127_in),
        .lopt_9(lopt_54));
  microblaze_v10_0_3_MB_MUXCY_XORCY_301 \Using_FPGA.Incr_PC[9].MUXCY_XOR_I 
       (.CI(\NLW_Using_FPGA.Incr_PC[9].MUXCY_XOR_I_CI_UNCONNECTED ),
        .LO(if_pc_carry[21]),
        .Q(\NLW_Using_FPGA.Incr_PC[9].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[9] (\if_pc_reg[9]_0 ),
        .lopt(lopt_43),
        .lopt_1(lopt_44),
        .lopt_2(lopt_47));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[0] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[31]),
        .Q(ex_pc[0]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[10] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[21]),
        .Q(ex_pc[10]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[11] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[20]),
        .Q(ex_pc[11]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[12] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[19]),
        .Q(ex_pc[12]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[13] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[18]),
        .Q(ex_pc[13]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[14] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[17]),
        .Q(ex_pc[14]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[15] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[16]),
        .Q(ex_pc[15]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[16] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[15]),
        .Q(ex_pc[16]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[17] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[14]),
        .Q(ex_pc[17]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[18] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[13]),
        .Q(ex_pc[18]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[19] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[12]),
        .Q(ex_pc[19]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[1] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[30]),
        .Q(ex_pc[1]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[20] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[11]),
        .Q(ex_pc[20]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[21] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[10]),
        .Q(ex_pc[21]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[22] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[9]),
        .Q(ex_pc[22]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[23] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[8]),
        .Q(ex_pc[23]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[24] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[7]),
        .Q(ex_pc[24]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[25] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[6]),
        .Q(ex_pc[25]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[26] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[5]),
        .Q(ex_pc[26]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[27] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[4]),
        .Q(ex_pc[27]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[28] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[3]),
        .Q(ex_pc[28]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[29] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[2]),
        .Q(ex_pc[29]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[2] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[29]),
        .Q(ex_pc[2]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[30] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[1]),
        .Q(ex_pc[30]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[31] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[0]),
        .Q(ex_pc[31]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[3] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[28]),
        .Q(ex_pc[3]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[4] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[27]),
        .Q(ex_pc[4]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[5] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[26]),
        .Q(ex_pc[5]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[6] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[25]),
        .Q(ex_pc[6]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[7] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[24]),
        .Q(ex_pc[7]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[8] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[23]),
        .Q(ex_pc[8]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[9] 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D[22]),
        .Q(ex_pc[9]),
        .R(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[0] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_3 ),
        .D(\if_pc_reg[0]_0 [31]),
        .Q(S152_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[10] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_3 ),
        .D(\if_pc_reg[0]_0 [21]),
        .Q(S102_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[11] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_3 ),
        .D(\if_pc_reg[0]_0 [20]),
        .Q(S97_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[12] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_3 ),
        .D(\if_pc_reg[0]_0 [19]),
        .Q(S92_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[13] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_3 ),
        .D(\if_pc_reg[0]_0 [18]),
        .Q(S87_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[14] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_3 ),
        .D(\if_pc_reg[0]_0 [17]),
        .Q(S82_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[15] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_3 ),
        .D(\if_pc_reg[0]_0 [16]),
        .Q(S77_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[16] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_3 ),
        .D(\if_pc_reg[0]_0 [15]),
        .Q(S72_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[17] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_3 ),
        .D(\if_pc_reg[0]_0 [14]),
        .Q(S67_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[18] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_3 ),
        .D(\if_pc_reg[0]_0 [13]),
        .Q(S62_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[19] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_3 ),
        .D(\if_pc_reg[0]_0 [12]),
        .Q(S57_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[1] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_3 ),
        .D(\if_pc_reg[0]_0 [30]),
        .Q(S147_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[20] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_3 ),
        .D(\if_pc_reg[0]_0 [11]),
        .Q(S52_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[21] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_3 ),
        .D(\if_pc_reg[0]_0 [10]),
        .Q(S47_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[22] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_3 ),
        .D(\if_pc_reg[0]_0 [9]),
        .Q(S42_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[23] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_3 ),
        .D(\if_pc_reg[0]_0 [8]),
        .Q(S37_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[24] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_3 ),
        .D(\if_pc_reg[0]_0 [7]),
        .Q(S32_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[25] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_3 ),
        .D(\if_pc_reg[0]_0 [6]),
        .Q(S27_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[26] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_3 ),
        .D(\if_pc_reg[0]_0 [5]),
        .Q(S22_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[27] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_3 ),
        .D(\if_pc_reg[0]_0 [4]),
        .Q(S17_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[28] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_3 ),
        .D(\if_pc_reg[0]_0 [3]),
        .Q(S12_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[29] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_3 ),
        .D(\if_pc_reg[0]_0 [2]),
        .Q(S),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[2] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_3 ),
        .D(\if_pc_reg[0]_0 [29]),
        .Q(S142_in),
        .S(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \if_pc_reg[30] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_3 ),
        .D(\if_pc_reg[0]_0 [1]),
        .Q(Q[1]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \if_pc_reg[31] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_3 ),
        .D(\if_pc_reg[0]_0 [0]),
        .Q(Q[0]),
        .R(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[3] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_3 ),
        .D(\if_pc_reg[0]_0 [28]),
        .Q(S137_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[4] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_3 ),
        .D(\if_pc_reg[0]_0 [27]),
        .Q(S132_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[5] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_3 ),
        .D(\if_pc_reg[0]_0 [26]),
        .Q(S127_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[6] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_3 ),
        .D(\if_pc_reg[0]_0 [25]),
        .Q(S122_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[7] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_3 ),
        .D(\if_pc_reg[0]_0 [24]),
        .Q(S117_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[8] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_3 ),
        .D(\if_pc_reg[0]_0 [23]),
        .Q(S112_in),
        .S(sync_reset));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[9] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_3 ),
        .D(\if_pc_reg[0]_0 [22]),
        .Q(S107_in),
        .S(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[0] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[0]),
        .Q(\Using_FPGA.Native [31]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[10] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[10]),
        .Q(\Using_FPGA.Native [21]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[11] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[11]),
        .Q(\Using_FPGA.Native [20]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[12] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[12]),
        .Q(\Using_FPGA.Native [19]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[13] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[13]),
        .Q(\Using_FPGA.Native [18]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[14] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[14]),
        .Q(\Using_FPGA.Native [17]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[15] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[15]),
        .Q(\Using_FPGA.Native [16]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[16] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[16]),
        .Q(\Using_FPGA.Native [15]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[17] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[17]),
        .Q(\Using_FPGA.Native [14]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[18] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[18]),
        .Q(\Using_FPGA.Native [13]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[19] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[19]),
        .Q(\Using_FPGA.Native [12]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[1] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[1]),
        .Q(\Using_FPGA.Native [30]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[20] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[20]),
        .Q(\Using_FPGA.Native [11]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[21] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[21]),
        .Q(\Using_FPGA.Native [10]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[22] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[22]),
        .Q(\Using_FPGA.Native [9]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[23] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[23]),
        .Q(\Using_FPGA.Native [8]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[24] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[24]),
        .Q(\Using_FPGA.Native [7]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[25] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[25]),
        .Q(\Using_FPGA.Native [6]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[26] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[26]),
        .Q(\Using_FPGA.Native [5]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[27] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[27]),
        .Q(\Using_FPGA.Native [4]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[28] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[28]),
        .Q(\Using_FPGA.Native [3]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[29] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[29]),
        .Q(\Using_FPGA.Native [2]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[2] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[2]),
        .Q(\Using_FPGA.Native [29]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[30] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[30]),
        .Q(\Using_FPGA.Native [1]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[31] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[31]),
        .Q(\Using_FPGA.Native [0]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[3] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[3]),
        .Q(\Using_FPGA.Native [28]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[4] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[4]),
        .Q(\Using_FPGA.Native [27]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[5] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[5]),
        .Q(\Using_FPGA.Native [26]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[6] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[6]),
        .Q(\Using_FPGA.Native [25]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[7] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[7]),
        .Q(\Using_FPGA.Native [24]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[8] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[8]),
        .Q(\Using_FPGA.Native [23]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[9] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[9]),
        .Q(\Using_FPGA.Native [22]),
        .R(sync_reset));
endmodule

module PreFetch_Buffer_gti
   (\Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    of_valid,
    of_instr,
    D,
    \ex_gpr_write_addr_reg[2] ,
    \ex_gpr_write_addr_reg[3] ,
    \ex_gpr_write_addr_reg[4] ,
    \ex_instr_reg[11] ,
    \Using_FPGA.Native_1 ,
    of_predecode,
    \EX_Op3_reg[0] ,
    \EX_Op3_reg[31] ,
    \EX_Op3_reg[31]_0 ,
    \EX_Branch_CMP_Op1_reg[0] ,
    \EX_Branch_CMP_Op1_reg[31] ,
    \EX_Branch_CMP_Op1_reg[30] ,
    \EX_Op2_reg[0] ,
    \Serial_Dbg_Intf.status_reg_reg[25] ,
    \Using_FPGA.Native_2 ,
    of_pipe_ctrl_reg0,
    if_pre_buffer_addr,
    ex_op1_cmp_eq,
    ex_op1_cmp_eq1,
    ex_op1_cmp_eq_n5_out,
    ex_is_multi_or_load_instr0,
    use_Reg_Neg_S_reg,
    use_Reg_Neg_S_reg_0,
    ex_move_to_MSR_instr93_out,
    \EX_Op1_reg[30] ,
    \EX_Op1_reg[0] ,
    \EX_Op1_reg[29] ,
    \EX_Op1_reg[28] ,
    I1,
    of_op1_sel_spr,
    of_Sel_SPR_MSR88_out,
    of_Sel_SPR_MSR1,
    use_Reg_Neg_DI1_out,
    force_Val10_out,
    use_Reg_Neg_S3_out,
    force12_out,
    Dbg_Clean_Stop0,
    ex_branch_with_delayslot_reg,
    E,
    ex_enable_sext_shift_i0,
    force_Val2_N_reg,
    \EX_ALU_Op_reg[0] ,
    ex_set_bip,
    \Using_FPGA.Native_3 ,
    if_fetch_for_timing_optimization1,
    \EX_Op3_reg[31]_1 ,
    \EX_Op3_reg[31]_2 ,
    \EX_Branch_CMP_Op1_reg[31]_0 ,
    \EX_Branch_CMP_Op1_reg[30]_0 ,
    ex_mbar_is_sleep_cmb,
    \Performace_Debug_Control.ex_brki_hit_reg ,
    ex_mbar_decode_cmb,
    \EX_Sext_Op_reg[0] ,
    EX_SWAP_Instr,
    ex_load_shift_carry0,
    of_read_imm_reg_ii_reg,
    D224_out,
    \Using_FPGA.Native_4 ,
    D225_out,
    EX_CMP_Op106_out,
    EX_Unsigned_Op105_out,
    ex_load_alu_carry97_out,
    ex_enable_alu_i_reg,
    ex_alu_sel_logic_i103_out,
    D222_out,
    D229_out,
    p_2_in,
    \Using_FPGA.Native_5 ,
    ex_sel_alu_i0,
    if_fetch_in_progress_reg,
    ex_gpr_write_reg,
    ex_is_div_instr_I_reg,
    ex_gpr_write_dbg_reg,
    EX_Use_Carry_reg,
    \Using_FPGA.Native_6 ,
    IReady_1,
    of_pause_reg,
    I5,
    sync_reset,
    Clk,
    I041_out,
    I139_out,
    dbg_stop_i,
    GPR_Op3,
    \wb_exception_kind_i_reg[31] ,
    GPR_Op1,
    mem_ex_result,
    \wb_exception_kind_i_reg[31]_0 ,
    \Using_FPGA.Native_7 ,
    \wb_exception_kind_i_reg[31]_1 ,
    \wb_exception_kind_i_reg[31]_2 ,
    \wb_exception_kind_i_reg[31]_3 ,
    \wb_exception_kind_i_reg[31]_4 ,
    \wb_exception_kind_i_reg[31]_5 ,
    \wb_exception_kind_i_reg[31]_6 ,
    \WB_MEM_Result_reg[16] ,
    \WB_MEM_Result_reg[15] ,
    ex_sel_alu_i_reg,
    ex_sel_alu_i_reg_0,
    \WB_MEM_Result_reg[14] ,
    ex_sel_alu_i_reg_1,
    \WB_MEM_Result_reg[13] ,
    ex_sel_alu_i_reg_2,
    \WB_MEM_Result_reg[12] ,
    ex_sel_alu_i_reg_3,
    \WB_MEM_Result_reg[11] ,
    ex_sel_alu_i_reg_4,
    \Using_FPGA.Native_8 ,
    \WB_MEM_Result_reg[10] ,
    ex_sel_alu_i_reg_5,
    \WB_MEM_Result_reg[9] ,
    ex_sel_alu_i_reg_6,
    \WB_MEM_Result_reg[8] ,
    \WB_MEM_Result_reg[7] ,
    ex_sel_alu_i_reg_7,
    \Using_FPGA.Native_9 ,
    \WB_MEM_Result_reg[6] ,
    ex_sel_alu_i_reg_8,
    \WB_MEM_Result_reg[5] ,
    ex_sel_alu_i_reg_9,
    \WB_MEM_Result_reg[4] ,
    ex_sel_alu_i_reg_10,
    \Using_FPGA.Native_10 ,
    \WB_MEM_Result_reg[3] ,
    ex_sel_alu_i_reg_11,
    \Using_FPGA.Native_11 ,
    \WB_MEM_Result_reg[2] ,
    ex_sel_alu_i_reg_12,
    \WB_MEM_Result_reg[1] ,
    ex_sel_alu_i_reg_13,
    \WB_MEM_Result_reg[0] ,
    ex_sel_alu_i_reg_14,
    ex_jump,
    out,
    \Serial_Dbg_Intf.if_debug_ready_i_reg ,
    if_fetch_in_progress,
    in,
    \Serial_Dbg_Intf.if_debug_ready_i_reg_0 ,
    \Performace_Debug_Control.dbg_freeze_nohalt_reg ,
    wb_Halted,
    IReady,
    if_missed_fetch_reg,
    wb_exception_i_reg,
    \imm_reg_reg[0] ,
    GPR_Op2,
    Q,
    wb_exception,
    in0,
    ex_sel_alu_i_reg_15,
    ex_sel_alu_i_reg_16,
    ex_sel_alu_i_reg_17,
    ex_sel_alu_i_reg_18,
    ex_sel_alu_i_reg_19,
    ex_sel_alu_i_reg_20,
    ex_sel_alu_i_reg_21,
    ex_sel_alu_i_reg_22,
    ex_sel_alu_i_reg_23,
    ex_sel_alu_i_reg_24,
    ex_sel_alu_i_reg_25,
    ex_sel_alu_i_reg_26,
    ex_sel_alu_i_reg_27,
    ex_sel_alu_i_reg_28,
    ex_sel_alu_i_reg_29,
    ex_is_multi_or_load_instr,
    of_read_ex_write_op2_conflict_part2,
    of_read_ex_write_op2_conflict_part1,
    mem_is_multi_or_load_instr,
    of_read_mem_write_op2_conflict_part2,
    of_read_mem_write_op2_conflict_part1,
    ex_MSR,
    \Using_FPGA.Native_12 ,
    ex_jump_nodelay,
    \wb_gpr_write_addr_reg[0] ,
    wb_reset_reg,
    ex_mbar_is_sleep,
    ex_branch_with_delayslot_reg_0,
    ex_mbar_decode,
    \Serial_Dbg_Intf.control_reg_reg[8] ,
    mem_MSR,
    mem_is_msr_instr_reg,
    \mem_gpr_write_addr_reg[0] ,
    mem_valid_instr,
    mem_gpr_write,
    mem_valid_reg,
    \ex_gpr_write_addr_reg[4]_0 ,
    I0,
    \ex_gpr_write_addr_reg[0] ,
    I4,
    ex_valid_reg,
    ex_gpr_write_reg_0,
    ex_valid_reg_0,
    \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ,
    \Performace_Debug_Control.dbg_state_nohalt_reg ,
    EX_Is_Div_Instr,
    ex_gpr_write_dbg);
  output [0:0]\Using_FPGA.Native ;
  output \Using_FPGA.Native_0 ;
  output of_valid;
  output [5:0]of_instr;
  output [1:0]D;
  output \ex_gpr_write_addr_reg[2] ;
  output \ex_gpr_write_addr_reg[3] ;
  output \ex_gpr_write_addr_reg[4] ;
  output [20:0]\ex_instr_reg[11] ;
  output \Using_FPGA.Native_1 ;
  output [9:0]of_predecode;
  output [30:0]\EX_Op3_reg[0] ;
  output \EX_Op3_reg[31] ;
  output \EX_Op3_reg[31]_0 ;
  output [30:0]\EX_Branch_CMP_Op1_reg[0] ;
  output \EX_Branch_CMP_Op1_reg[31] ;
  output \EX_Branch_CMP_Op1_reg[30] ;
  output [31:0]\EX_Op2_reg[0] ;
  output [1:0]\Serial_Dbg_Intf.status_reg_reg[25] ;
  output \Using_FPGA.Native_2 ;
  output of_pipe_ctrl_reg0;
  output [0:0]if_pre_buffer_addr;
  output ex_op1_cmp_eq;
  output ex_op1_cmp_eq1;
  output ex_op1_cmp_eq_n5_out;
  output ex_is_multi_or_load_instr0;
  output use_Reg_Neg_S_reg;
  output use_Reg_Neg_S_reg_0;
  output ex_move_to_MSR_instr93_out;
  output \EX_Op1_reg[30] ;
  output \EX_Op1_reg[0] ;
  output \EX_Op1_reg[29] ;
  output \EX_Op1_reg[28] ;
  output I1;
  output of_op1_sel_spr;
  output of_Sel_SPR_MSR88_out;
  output of_Sel_SPR_MSR1;
  output use_Reg_Neg_DI1_out;
  output force_Val10_out;
  output use_Reg_Neg_S3_out;
  output force12_out;
  output Dbg_Clean_Stop0;
  output ex_branch_with_delayslot_reg;
  output [0:0]E;
  output ex_enable_sext_shift_i0;
  output force_Val2_N_reg;
  output [1:0]\EX_ALU_Op_reg[0] ;
  output ex_set_bip;
  output \Using_FPGA.Native_3 ;
  output if_fetch_for_timing_optimization1;
  output \EX_Op3_reg[31]_1 ;
  output \EX_Op3_reg[31]_2 ;
  output \EX_Branch_CMP_Op1_reg[31]_0 ;
  output \EX_Branch_CMP_Op1_reg[30]_0 ;
  output ex_mbar_is_sleep_cmb;
  output \Performace_Debug_Control.ex_brki_hit_reg ;
  output ex_mbar_decode_cmb;
  output [1:0]\EX_Sext_Op_reg[0] ;
  output EX_SWAP_Instr;
  output ex_load_shift_carry0;
  output of_read_imm_reg_ii_reg;
  output D224_out;
  output \Using_FPGA.Native_4 ;
  output D225_out;
  output EX_CMP_Op106_out;
  output EX_Unsigned_Op105_out;
  output ex_load_alu_carry97_out;
  output ex_enable_alu_i_reg;
  output ex_alu_sel_logic_i103_out;
  output D222_out;
  output D229_out;
  output p_2_in;
  output \Using_FPGA.Native_5 ;
  output ex_sel_alu_i0;
  output if_fetch_in_progress_reg;
  output ex_gpr_write_reg;
  output ex_is_div_instr_I_reg;
  output ex_gpr_write_dbg_reg;
  output EX_Use_Carry_reg;
  output [0:0]\Using_FPGA.Native_6 ;
  input IReady_1;
  input of_pause_reg;
  input I5;
  input sync_reset;
  input Clk;
  input I041_out;
  input I139_out;
  input dbg_stop_i;
  input [30:0]GPR_Op3;
  input \wb_exception_kind_i_reg[31] ;
  input [30:0]GPR_Op1;
  input [0:31]mem_ex_result;
  input \wb_exception_kind_i_reg[31]_0 ;
  input [3:0]\Using_FPGA.Native_7 ;
  input \wb_exception_kind_i_reg[31]_1 ;
  input \wb_exception_kind_i_reg[31]_2 ;
  input \wb_exception_kind_i_reg[31]_3 ;
  input \wb_exception_kind_i_reg[31]_4 ;
  input \wb_exception_kind_i_reg[31]_5 ;
  input \wb_exception_kind_i_reg[31]_6 ;
  input [7:0]\WB_MEM_Result_reg[16] ;
  input \WB_MEM_Result_reg[15] ;
  input ex_sel_alu_i_reg;
  input [15:0]ex_sel_alu_i_reg_0;
  input \WB_MEM_Result_reg[14] ;
  input ex_sel_alu_i_reg_1;
  input \WB_MEM_Result_reg[13] ;
  input ex_sel_alu_i_reg_2;
  input \WB_MEM_Result_reg[12] ;
  input ex_sel_alu_i_reg_3;
  input \WB_MEM_Result_reg[11] ;
  input ex_sel_alu_i_reg_4;
  input \Using_FPGA.Native_8 ;
  input \WB_MEM_Result_reg[10] ;
  input ex_sel_alu_i_reg_5;
  input \WB_MEM_Result_reg[9] ;
  input ex_sel_alu_i_reg_6;
  input \WB_MEM_Result_reg[8] ;
  input \WB_MEM_Result_reg[7] ;
  input ex_sel_alu_i_reg_7;
  input \Using_FPGA.Native_9 ;
  input \WB_MEM_Result_reg[6] ;
  input ex_sel_alu_i_reg_8;
  input \WB_MEM_Result_reg[5] ;
  input ex_sel_alu_i_reg_9;
  input \WB_MEM_Result_reg[4] ;
  input ex_sel_alu_i_reg_10;
  input \Using_FPGA.Native_10 ;
  input \WB_MEM_Result_reg[3] ;
  input ex_sel_alu_i_reg_11;
  input \Using_FPGA.Native_11 ;
  input \WB_MEM_Result_reg[2] ;
  input ex_sel_alu_i_reg_12;
  input \WB_MEM_Result_reg[1] ;
  input ex_sel_alu_i_reg_13;
  input \WB_MEM_Result_reg[0] ;
  input ex_sel_alu_i_reg_14;
  input ex_jump;
  input out;
  input \Serial_Dbg_Intf.if_debug_ready_i_reg ;
  input if_fetch_in_progress;
  input [32:0]in;
  input \Serial_Dbg_Intf.if_debug_ready_i_reg_0 ;
  input \Performace_Debug_Control.dbg_freeze_nohalt_reg ;
  input wb_Halted;
  input IReady;
  input if_missed_fetch_reg;
  input wb_exception_i_reg;
  input [15:0]\imm_reg_reg[0] ;
  input [0:31]GPR_Op2;
  input [1:0]Q;
  input wb_exception;
  input in0;
  input ex_sel_alu_i_reg_15;
  input ex_sel_alu_i_reg_16;
  input ex_sel_alu_i_reg_17;
  input ex_sel_alu_i_reg_18;
  input ex_sel_alu_i_reg_19;
  input ex_sel_alu_i_reg_20;
  input ex_sel_alu_i_reg_21;
  input ex_sel_alu_i_reg_22;
  input ex_sel_alu_i_reg_23;
  input ex_sel_alu_i_reg_24;
  input ex_sel_alu_i_reg_25;
  input ex_sel_alu_i_reg_26;
  input ex_sel_alu_i_reg_27;
  input ex_sel_alu_i_reg_28;
  input ex_sel_alu_i_reg_29;
  input ex_is_multi_or_load_instr;
  input of_read_ex_write_op2_conflict_part2;
  input of_read_ex_write_op2_conflict_part1;
  input mem_is_multi_or_load_instr;
  input of_read_mem_write_op2_conflict_part2;
  input of_read_mem_write_op2_conflict_part1;
  input [2:0]ex_MSR;
  input [3:0]\Using_FPGA.Native_12 ;
  input ex_jump_nodelay;
  input [4:0]\wb_gpr_write_addr_reg[0] ;
  input wb_reset_reg;
  input ex_mbar_is_sleep;
  input ex_branch_with_delayslot_reg_0;
  input ex_mbar_decode;
  input [0:0]\Serial_Dbg_Intf.control_reg_reg[8] ;
  input [2:0]mem_MSR;
  input mem_is_msr_instr_reg;
  input [4:0]\mem_gpr_write_addr_reg[0] ;
  input mem_valid_instr;
  input mem_gpr_write;
  input mem_valid_reg;
  input \ex_gpr_write_addr_reg[4]_0 ;
  input I0;
  input [1:0]\ex_gpr_write_addr_reg[0] ;
  input I4;
  input ex_valid_reg;
  input ex_gpr_write_reg_0;
  input ex_valid_reg_0;
  input \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  input [0:0]\Performace_Debug_Control.dbg_state_nohalt_reg ;
  input EX_Is_Div_Instr;
  input ex_gpr_write_dbg;

  wire Clk;
  wire [1:0]D;
  wire D222_out;
  wire D224_out;
  wire D225_out;
  wire D229_out;
  wire Dbg_Clean_Stop0;
  wire [0:0]E;
  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire [30:0]\EX_Branch_CMP_Op1_reg[0] ;
  wire \EX_Branch_CMP_Op1_reg[30] ;
  wire \EX_Branch_CMP_Op1_reg[30]_0 ;
  wire \EX_Branch_CMP_Op1_reg[31] ;
  wire \EX_Branch_CMP_Op1_reg[31]_0 ;
  wire EX_CMP_Op106_out;
  wire EX_Is_Div_Instr;
  wire \EX_Op1_reg[0] ;
  wire \EX_Op1_reg[28] ;
  wire \EX_Op1_reg[29] ;
  wire \EX_Op1_reg[30] ;
  wire [31:0]\EX_Op2_reg[0] ;
  wire [30:0]\EX_Op3_reg[0] ;
  wire \EX_Op3_reg[31] ;
  wire \EX_Op3_reg[31]_0 ;
  wire \EX_Op3_reg[31]_1 ;
  wire \EX_Op3_reg[31]_2 ;
  wire EX_SWAP_Instr;
  wire [1:0]\EX_Sext_Op_reg[0] ;
  wire EX_Unsigned_Op105_out;
  wire EX_Use_Carry_reg;
  wire [30:0]GPR_Op1;
  wire [0:31]GPR_Op2;
  wire [30:0]GPR_Op3;
  wire I0;
  wire I0101_out;
  wire I0105_out;
  wire I0109_out;
  wire I0113_out;
  wire I0117_out;
  wire I0121_out;
  wire I0125_out;
  wire I0129_out;
  wire I0133_out;
  wire I0137_out;
  wire I013_out;
  wire I0141_out;
  wire I0145_out;
  wire I0149_out;
  wire I0153_out;
  wire I0157_out;
  wire I0161_out;
  wire I0165_out;
  wire I0169_out;
  wire I017_out;
  wire I021_out;
  wire I025_out;
  wire I029_out;
  wire I033_out;
  wire I037_out;
  wire I041_out;
  wire I045_out;
  wire I049_out;
  wire I053_out;
  wire I057_out;
  wire I05_out;
  wire I061_out;
  wire I065_out;
  wire I069_out;
  wire I073_out;
  wire I077_out;
  wire I081_out;
  wire I085_out;
  wire I089_out;
  wire I093_out;
  wire I097_out;
  wire I09_out;
  wire I0_0;
  wire I1;
  wire I1103_out;
  wire I1107_out;
  wire I1111_out;
  wire I1115_out;
  wire I1119_out;
  wire I111_out;
  wire I1123_out;
  wire I1127_out;
  wire I1131_out;
  wire I1135_out;
  wire I1139_out;
  wire I1143_out;
  wire I1147_out;
  wire I1151_out;
  wire I1155_out;
  wire I1159_out;
  wire I115_out;
  wire I1163_out;
  wire I1167_out;
  wire I119_out;
  wire I123_out;
  wire I127_out;
  wire I131_out;
  wire I135_out;
  wire I139_out;
  wire I13_out;
  wire I143_out;
  wire I147_out;
  wire I151_out;
  wire I155_out;
  wire I159_out;
  wire I163_out;
  wire I167_out;
  wire I171_out;
  wire I175_out;
  wire I179_out;
  wire I17_out;
  wire I183_out;
  wire I187_out;
  wire I191_out;
  wire I195_out;
  wire I199_out;
  wire I1_2;
  wire I4;
  wire I4_1;
  wire I5;
  wire IReady;
  wire IReady_1;
  wire \Instruction_Prefetch_Mux[0].Gen_Instr_DFF_n_1 ;
  wire \Instruction_Prefetch_Mux[10].Gen_Instr_DFF_n_1 ;
  wire \Instruction_Prefetch_Mux[11].Gen_Instr_DFF_n_3 ;
  wire \Instruction_Prefetch_Mux[13].Gen_Instr_DFF_n_1 ;
  wire \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_1 ;
  wire \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_10 ;
  wire \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_11 ;
  wire \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_12 ;
  wire \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_13 ;
  wire \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_14 ;
  wire \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_15 ;
  wire \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_2 ;
  wire \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_3 ;
  wire \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_4 ;
  wire \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_5 ;
  wire \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_6 ;
  wire \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_7 ;
  wire \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_8 ;
  wire \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_9 ;
  wire \Instruction_Prefetch_Mux[17].Gen_Instr_DFF_n_2 ;
  wire \Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_12 ;
  wire \Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_5 ;
  wire \Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_6 ;
  wire \Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_7 ;
  wire \Instruction_Prefetch_Mux[27].Gen_Instr_DFF_n_1 ;
  wire \Instruction_Prefetch_Mux[29].Gen_Instr_DFF_n_1 ;
  wire \Instruction_Prefetch_Mux[2].Gen_Instr_DFF_n_1 ;
  wire \Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_10 ;
  wire \Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_11 ;
  wire \Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_12 ;
  wire \Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_13 ;
  wire \Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_14 ;
  wire \Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_15 ;
  wire \Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_16 ;
  wire \Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_17 ;
  wire \Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_18 ;
  wire \Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_19 ;
  wire \Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_2 ;
  wire \Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_20 ;
  wire \Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_21 ;
  wire \Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_22 ;
  wire \Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_23 ;
  wire \Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_24 ;
  wire \Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_25 ;
  wire \Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_26 ;
  wire \Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_27 ;
  wire \Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_4 ;
  wire \Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_5 ;
  wire \Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_6 ;
  wire \Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_7 ;
  wire \Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_8 ;
  wire \Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_9 ;
  wire \Instruction_Prefetch_Mux[36].Gen_Instr_DFF_n_9 ;
  wire \Instruction_Prefetch_Mux[37].Gen_Instr_DFF_n_1 ;
  wire \Instruction_Prefetch_Mux[37].Gen_Instr_DFF_n_2 ;
  wire \Instruction_Prefetch_Mux[38].Gen_Instr_DFF_n_1 ;
  wire \Instruction_Prefetch_Mux[38].Gen_Instr_DFF_n_2 ;
  wire \Instruction_Prefetch_Mux[39].Gen_Instr_DFF_n_1 ;
  wire \Instruction_Prefetch_Mux[3].Gen_Instr_DFF_n_10 ;
  wire \Instruction_Prefetch_Mux[41].Gen_Instr_DFF_n_1 ;
  wire \Instruction_Prefetch_Mux[42].Gen_Instr_DFF_n_32 ;
  wire \Instruction_Prefetch_Mux[42].Gen_Instr_DFF_n_33 ;
  wire \Instruction_Prefetch_Mux[42].Gen_Instr_DFF_n_34 ;
  wire \Instruction_Prefetch_Mux[42].Gen_Instr_DFF_n_35 ;
  wire \Instruction_Prefetch_Mux[4].Gen_Instr_DFF_n_3 ;
  wire \Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_10 ;
  wire \Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_11 ;
  wire \Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_12 ;
  wire \Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_13 ;
  wire \Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_14 ;
  wire \Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_15 ;
  wire \Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_16 ;
  wire \Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_17 ;
  wire \Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_18 ;
  wire \Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_19 ;
  wire \Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_2 ;
  wire \Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_20 ;
  wire \Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_21 ;
  wire \Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_28 ;
  wire \Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_3 ;
  wire \Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_6 ;
  wire \Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_7 ;
  wire \Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_8 ;
  wire \Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_9 ;
  wire \Instruction_Prefetch_Mux[6].Gen_Instr_DFF_n_1 ;
  wire \Instruction_Prefetch_Mux[7].Gen_Instr_DFF_n_36 ;
  wire \Instruction_Prefetch_Mux[8].Gen_Instr_DFF_n_1 ;
  wire \Instruction_Prefetch_Mux[8].Gen_Instr_DFF_n_2 ;
  wire \Instruction_Prefetch_Mux[9].Gen_Instr_DFF_n_2 ;
  wire \Instruction_Prefetch_Mux[9].Gen_Instr_DFF_n_3 ;
  wire \Performace_Debug_Control.dbg_freeze_nohalt_reg ;
  wire [0:0]\Performace_Debug_Control.dbg_state_nohalt_reg ;
  wire \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  wire \Performace_Debug_Control.ex_brki_hit_reg ;
  wire [1:0]Q;
  wire [0:0]\Serial_Dbg_Intf.control_reg_reg[8] ;
  wire \Serial_Dbg_Intf.if_debug_ready_i_reg ;
  wire \Serial_Dbg_Intf.if_debug_ready_i_reg_0 ;
  wire [1:0]\Serial_Dbg_Intf.status_reg_reg[25] ;
  wire [0:0]\Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_10 ;
  wire \Using_FPGA.Native_11 ;
  wire [3:0]\Using_FPGA.Native_12 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;
  wire \Using_FPGA.Native_5 ;
  wire [0:0]\Using_FPGA.Native_6 ;
  wire [3:0]\Using_FPGA.Native_7 ;
  wire \Using_FPGA.Native_8 ;
  wire \Using_FPGA.Native_9 ;
  wire \WB_MEM_Result_reg[0] ;
  wire \WB_MEM_Result_reg[10] ;
  wire \WB_MEM_Result_reg[11] ;
  wire \WB_MEM_Result_reg[12] ;
  wire \WB_MEM_Result_reg[13] ;
  wire \WB_MEM_Result_reg[14] ;
  wire \WB_MEM_Result_reg[15] ;
  wire [7:0]\WB_MEM_Result_reg[16] ;
  wire \WB_MEM_Result_reg[1] ;
  wire \WB_MEM_Result_reg[2] ;
  wire \WB_MEM_Result_reg[3] ;
  wire \WB_MEM_Result_reg[4] ;
  wire \WB_MEM_Result_reg[5] ;
  wire \WB_MEM_Result_reg[6] ;
  wire \WB_MEM_Result_reg[7] ;
  wire \WB_MEM_Result_reg[8] ;
  wire \WB_MEM_Result_reg[9] ;
  wire dbg_stop_i;
  wire [2:0]ex_MSR;
  wire ex_alu_sel_logic_i103_out;
  wire ex_branch_with_delayslot_i;
  wire ex_branch_with_delayslot_reg;
  wire ex_branch_with_delayslot_reg_0;
  wire ex_enable_alu_i_reg;
  wire ex_enable_sext_shift_i0;
  wire [1:0]\ex_gpr_write_addr_reg[0] ;
  wire \ex_gpr_write_addr_reg[2] ;
  wire \ex_gpr_write_addr_reg[3] ;
  wire \ex_gpr_write_addr_reg[4] ;
  wire \ex_gpr_write_addr_reg[4]_0 ;
  wire ex_gpr_write_dbg;
  wire ex_gpr_write_dbg_reg;
  wire ex_gpr_write_reg;
  wire ex_gpr_write_reg_0;
  wire [20:0]\ex_instr_reg[11] ;
  wire ex_is_div_instr_I_reg;
  wire ex_is_multi_or_load_instr;
  wire ex_is_multi_or_load_instr0;
  wire ex_jump;
  wire ex_jump_nodelay;
  wire ex_load_alu_carry97_out;
  wire ex_load_shift_carry0;
  wire ex_mbar_decode;
  wire ex_mbar_decode_cmb;
  wire ex_mbar_is_sleep;
  wire ex_mbar_is_sleep_cmb;
  wire ex_move_to_MSR_instr93_out;
  wire ex_op1_cmp_eq;
  wire ex_op1_cmp_eq1;
  wire ex_op1_cmp_eq_n5_out;
  wire ex_sel_alu_i0;
  wire ex_sel_alu_i_reg;
  wire [15:0]ex_sel_alu_i_reg_0;
  wire ex_sel_alu_i_reg_1;
  wire ex_sel_alu_i_reg_10;
  wire ex_sel_alu_i_reg_11;
  wire ex_sel_alu_i_reg_12;
  wire ex_sel_alu_i_reg_13;
  wire ex_sel_alu_i_reg_14;
  wire ex_sel_alu_i_reg_15;
  wire ex_sel_alu_i_reg_16;
  wire ex_sel_alu_i_reg_17;
  wire ex_sel_alu_i_reg_18;
  wire ex_sel_alu_i_reg_19;
  wire ex_sel_alu_i_reg_2;
  wire ex_sel_alu_i_reg_20;
  wire ex_sel_alu_i_reg_21;
  wire ex_sel_alu_i_reg_22;
  wire ex_sel_alu_i_reg_23;
  wire ex_sel_alu_i_reg_24;
  wire ex_sel_alu_i_reg_25;
  wire ex_sel_alu_i_reg_26;
  wire ex_sel_alu_i_reg_27;
  wire ex_sel_alu_i_reg_28;
  wire ex_sel_alu_i_reg_29;
  wire ex_sel_alu_i_reg_3;
  wire ex_sel_alu_i_reg_4;
  wire ex_sel_alu_i_reg_5;
  wire ex_sel_alu_i_reg_6;
  wire ex_sel_alu_i_reg_7;
  wire ex_sel_alu_i_reg_8;
  wire ex_sel_alu_i_reg_9;
  wire ex_set_bip;
  wire ex_valid_reg;
  wire ex_valid_reg_0;
  wire force12_out;
  wire force_Val10_out;
  wire force_Val2_N_reg;
  wire \ibuffer_reg[3][0]_srl4_n_0 ;
  wire if_fetch_for_timing_optimization1;
  wire if_fetch_in_progress;
  wire if_fetch_in_progress_reg;
  wire if_missed_fetch_reg;
  wire [0:0]if_pre_buffer_addr;
  wire [1:4]if_sel_input;
  wire [15:0]\imm_reg_reg[0] ;
  wire [32:0]in;
  wire in0;
  wire [2:0]mem_MSR;
  wire [0:31]mem_ex_result;
  wire mem_gpr_write;
  wire [4:0]\mem_gpr_write_addr_reg[0] ;
  wire mem_is_msr_instr_reg;
  wire mem_is_multi_or_load_instr;
  wire mem_valid_instr;
  wire mem_valid_reg;
  wire of_Sel_SPR_MSR1;
  wire of_Sel_SPR_MSR88_out;
  wire of_Valid_II;
  wire [5:0]of_instr;
  wire of_instr_ii_0;
  wire of_instr_ii_1;
  wire of_instr_ii_10;
  wire of_instr_ii_11;
  wire of_instr_ii_12;
  wire of_instr_ii_13;
  wire of_instr_ii_14;
  wire of_instr_ii_15;
  wire of_instr_ii_16;
  wire of_instr_ii_17;
  wire of_instr_ii_18;
  wire of_instr_ii_19;
  wire of_instr_ii_2;
  wire of_instr_ii_20;
  wire of_instr_ii_21;
  wire of_instr_ii_22;
  wire of_instr_ii_23;
  wire of_instr_ii_24;
  wire of_instr_ii_25;
  wire of_instr_ii_26;
  wire of_instr_ii_27;
  wire of_instr_ii_28;
  wire of_instr_ii_29;
  wire of_instr_ii_3;
  wire of_instr_ii_30;
  wire of_instr_ii_31;
  wire of_instr_ii_32;
  wire of_instr_ii_33;
  wire of_instr_ii_34;
  wire of_instr_ii_35;
  wire of_instr_ii_36;
  wire of_instr_ii_37;
  wire of_instr_ii_38;
  wire of_instr_ii_39;
  wire of_instr_ii_4;
  wire of_instr_ii_40;
  wire of_instr_ii_41;
  wire of_instr_ii_42;
  wire of_instr_ii_5;
  wire of_instr_ii_6;
  wire of_instr_ii_7;
  wire of_instr_ii_8;
  wire of_instr_ii_9;
  wire of_op1_sel_spr;
  wire of_pause_reg;
  wire of_pipe_ctrl_reg0;
  wire [9:0]of_predecode;
  wire of_read_ex_write_op2_conflict_part1;
  wire of_read_ex_write_op2_conflict_part2;
  wire of_read_imm_reg_ii_reg;
  wire of_read_mem_write_op2_conflict_part1;
  wire of_read_mem_write_op2_conflict_part2;
  wire of_valid;
  wire out;
  wire p_1_in104_in;
  wire p_1_in109_in;
  wire p_1_in114_in;
  wire p_1_in119_in;
  wire p_1_in124_in;
  wire p_1_in129_in;
  wire p_1_in134_in;
  wire p_1_in139_in;
  wire p_1_in144_in;
  wire p_1_in149_in;
  wire p_1_in14_in;
  wire p_1_in154_in;
  wire p_1_in159_in;
  wire p_1_in164_in;
  wire p_1_in169_in;
  wire p_1_in174_in;
  wire p_1_in179_in;
  wire p_1_in184_in;
  wire p_1_in189_in;
  wire p_1_in194_in;
  wire p_1_in199_in;
  wire p_1_in19_in;
  wire p_1_in204_in;
  wire p_1_in209_in;
  wire p_1_in24_in;
  wire p_1_in29_in;
  wire p_1_in34_in;
  wire p_1_in39_in;
  wire p_1_in44_in;
  wire p_1_in4_in;
  wire p_1_in54_in;
  wire p_1_in59_in;
  wire p_1_in64_in;
  wire p_1_in69_in;
  wire p_1_in74_in;
  wire p_1_in79_in;
  wire p_1_in84_in;
  wire p_1_in89_in;
  wire p_1_in94_in;
  wire p_1_in99_in;
  wire p_1_in9_in;
  wire p_2_in;
  wire sel_input_delayslot;
  wire sel_input_i_0;
  wire sel_input_i_1;
  wire sel_input_iii_0;
  wire sel_input_iii_1;
  wire sel_input_iii_2;
  wire sel_input_iii_3;
  wire sync_reset;
  wire use_Reg_Neg_DI1_out;
  wire use_Reg_Neg_S3_out;
  wire use_Reg_Neg_S_reg;
  wire use_Reg_Neg_S_reg_0;
  wire wb_Halted;
  wire wb_exception;
  wire wb_exception_i_reg;
  wire \wb_exception_kind_i_reg[31] ;
  wire \wb_exception_kind_i_reg[31]_0 ;
  wire \wb_exception_kind_i_reg[31]_1 ;
  wire \wb_exception_kind_i_reg[31]_2 ;
  wire \wb_exception_kind_i_reg[31]_3 ;
  wire \wb_exception_kind_i_reg[31]_4 ;
  wire \wb_exception_kind_i_reg[31]_5 ;
  wire \wb_exception_kind_i_reg[31]_6 ;
  wire [4:0]\wb_gpr_write_addr_reg[0] ;
  wire wb_reset_reg;

  MB_FDR_115 \Gen_Mux_Select_LUT6[1].Gen_Sel_DFF 
       (.Clk(Clk),
        .\Performace_Debug_Control.dbg_state_nohalt_reg (\Performace_Debug_Control.dbg_state_nohalt_reg ),
        .\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg (\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .\Serial_Dbg_Intf.if_debug_ready_i_reg (\Serial_Dbg_Intf.if_debug_ready_i_reg ),
        .addr(\Using_FPGA.Native ),
        .ex_jump(ex_jump),
        .if_fetch_for_timing_optimization1(if_fetch_for_timing_optimization1),
        .if_fetch_in_progress(if_fetch_in_progress),
        .if_fetch_in_progress_reg(if_fetch_in_progress_reg),
        .if_sel_input(if_sel_input[1]),
        .out(out),
        .sel_input_iii_3(sel_input_iii_3),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_LUT6 \Gen_Mux_Select_LUT6[1].Mux_Select_LUT6 
       (.I5(I5),
        .IReady_1(IReady_1),
        .addr(\Using_FPGA.Native ),
        .if_sel_input(if_sel_input[1]),
        .of_pause_reg(of_pause_reg),
        .sel_input_iii_3(sel_input_iii_3));
  MB_FDR_116 \Gen_Mux_Select_LUT6[2].Gen_Sel_DFF 
       (.Clk(Clk),
        .\Serial_Dbg_Intf.if_debug_ready_i_reg (\Serial_Dbg_Intf.if_debug_ready_i_reg ),
        .\Serial_Dbg_Intf.status_reg_reg[25] (\Serial_Dbg_Intf.status_reg_reg[25] ),
        .\Using_FPGA.Native_0 (if_pre_buffer_addr),
        .addr(\Using_FPGA.Native ),
        .ex_jump(ex_jump),
        .if_fetch_in_progress(if_fetch_in_progress),
        .if_sel_input(if_sel_input[1]),
        .in0(in0),
        .out(out),
        .sel_input_iii_2(sel_input_iii_2),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_LUT6_117 \Gen_Mux_Select_LUT6[2].Mux_Select_LUT6 
       (.I5(I5),
        .IReady_1(IReady_1),
        .addr(\Using_FPGA.Native ),
        .if_sel_input({if_sel_input[1],if_sel_input[2]}),
        .of_pause_reg(of_pause_reg),
        .sel_input_iii_2(sel_input_iii_2));
  MB_FDR_118 \Gen_Mux_Select_LUT6[3].Gen_Sel_DFF 
       (.Clk(Clk),
        .if_sel_input(if_sel_input[2]),
        .sel_input_iii_1(sel_input_iii_1),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_LUT6_119 \Gen_Mux_Select_LUT6[3].Mux_Select_LUT6 
       (.I5(I5),
        .IReady_1(IReady_1),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .if_sel_input({if_sel_input[1],if_sel_input[2]}),
        .of_pause_reg(of_pause_reg),
        .sel_input_iii_1(sel_input_iii_1));
  MB_FDR_120 \Gen_Mux_Select_LUT6[4].Gen_Sel_DFF 
       (.Clk(Clk),
        .I1103_out(I1103_out),
        .I1107_out(I1107_out),
        .I1111_out(I1111_out),
        .I1115_out(I1115_out),
        .I1119_out(I1119_out),
        .I111_out(I111_out),
        .I1123_out(I1123_out),
        .I1127_out(I1127_out),
        .I1131_out(I1131_out),
        .I1135_out(I1135_out),
        .I1139_out(I1139_out),
        .I1143_out(I1143_out),
        .I1147_out(I1147_out),
        .I1151_out(I1151_out),
        .I1155_out(I1155_out),
        .I1159_out(I1159_out),
        .I115_out(I115_out),
        .I1163_out(I1163_out),
        .I1167_out(I1167_out),
        .I119_out(I119_out),
        .I123_out(I123_out),
        .I127_out(I127_out),
        .I131_out(I131_out),
        .I135_out(I135_out),
        .I13_out(I13_out),
        .I143_out(I143_out),
        .I147_out(I147_out),
        .I151_out(I151_out),
        .I155_out(I155_out),
        .I159_out(I159_out),
        .I163_out(I163_out),
        .I167_out(I167_out),
        .I171_out(I171_out),
        .I175_out(I175_out),
        .I179_out(I179_out),
        .I17_out(I17_out),
        .I183_out(I183_out),
        .I187_out(I187_out),
        .I191_out(I191_out),
        .I195_out(I195_out),
        .I199_out(I199_out),
        .I1_2(I1_2),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .in({in[32:11],in[9:0]}),
        .out({p_1_in209_in,p_1_in204_in,p_1_in199_in,p_1_in194_in,p_1_in189_in,p_1_in184_in,p_1_in179_in,p_1_in174_in,p_1_in169_in,p_1_in164_in,p_1_in159_in,p_1_in154_in,p_1_in149_in,p_1_in144_in,p_1_in139_in,p_1_in134_in,p_1_in129_in,p_1_in124_in,p_1_in119_in,p_1_in114_in,p_1_in109_in,p_1_in104_in,p_1_in99_in,p_1_in94_in,p_1_in89_in,p_1_in84_in,p_1_in79_in,p_1_in74_in,p_1_in69_in,p_1_in64_in,p_1_in59_in,p_1_in54_in,p_1_in44_in,p_1_in39_in,p_1_in34_in,p_1_in29_in,p_1_in24_in,p_1_in19_in,p_1_in14_in,p_1_in9_in,p_1_in4_in,\ibuffer_reg[3][0]_srl4_n_0 }),
        .sel_input_i_1(sel_input_i_1),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_LUT6_121 \Gen_Mux_Select_LUT6[4].Mux_Select_LUT6 
       (.I5(I5),
        .IReady_1(IReady_1),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .if_sel_input({if_sel_input[2],if_sel_input[4]}),
        .of_pause_reg(of_pause_reg),
        .sel_input_iii_0(sel_input_iii_0));
  microblaze_v10_0_3_MB_LUT6__parameterized0 \Gen_Mux_Select_LUT6[4].Using_ExtraMUX.Mux_Select_Delayslot_LUT6 
       (.I5(I5),
        .IReady_1(IReady_1),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .if_sel_input({if_sel_input[2],if_sel_input[4]}),
        .of_pause_reg(of_pause_reg),
        .sel_input_delayslot(sel_input_delayslot));
  microblaze_v10_0_3_MB_MUXF7 \Gen_Mux_Select_LUT6[4].Using_ExtraMUX.Sel_Mux_MUXF7 
       (.I4_1(I4_1),
        .Q(Q),
        .ex_branch_with_delayslot_i(ex_branch_with_delayslot_i),
        .sel_input_delayslot(sel_input_delayslot),
        .sel_input_i_1(sel_input_i_1),
        .sel_input_iii_0(sel_input_iii_0),
        .wb_exception(wb_exception));
  MB_FDR_122 \Instruction_Prefetch_Mux[0].Gen_Instr_DFF 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (of_instr[2]),
        .ex_is_multi_instr2_reg(\Instruction_Prefetch_Mux[0].Gen_Instr_DFF_n_1 ),
        .\ex_opcode_reg[0] (of_instr[5]),
        .of_instr_ii_42(of_instr_ii_42),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_123 \Instruction_Prefetch_Mux[0].Instr_Mux_MUXF7 
       (.I0169_out(I0169_out),
        .I1167_out(I1167_out),
        .of_instr_ii_42(of_instr_ii_42),
        .of_pause_reg(of_pause_reg));
  MB_FDR_124 \Instruction_Prefetch_Mux[10].Gen_Instr_DFF 
       (.Clk(Clk),
        .\EX_Op3_reg[31] (\Instruction_Prefetch_Mux[10].Gen_Instr_DFF_n_1 ),
        .\Using_FPGA.Native_0 (\ex_gpr_write_addr_reg[2] ),
        .\Using_FPGA.Native_1 (D[1]),
        .\ex_gpr_write_addr_reg[4] (\ex_gpr_write_addr_reg[4] ),
        .\mem_gpr_write_addr_reg[0] ({\mem_gpr_write_addr_reg[0] [4],\mem_gpr_write_addr_reg[0] [2],\mem_gpr_write_addr_reg[0] [0]}),
        .of_instr_ii_32(of_instr_ii_32),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_125 \Instruction_Prefetch_Mux[10].Instr_Mux_MUXF7 
       (.I0129_out(I0129_out),
        .I1127_out(I1127_out),
        .of_instr_ii_32(of_instr_ii_32),
        .of_pause_reg(of_pause_reg));
  MB_FDR_126 \Instruction_Prefetch_Mux[11].Gen_Instr_DFF 
       (.Clk(Clk),
        .Dbg_Clean_Stop0(Dbg_Clean_Stop0),
        .E(E),
        .\Using_FPGA.Native_0 (D[1]),
        .\Using_FPGA.Native_1 (of_instr[0]),
        .\Using_FPGA.Native_2 (of_instr[1]),
        .\Using_FPGA.Native_3 (of_instr[3]),
        .ex_branch_with_delayslot_i(ex_branch_with_delayslot_i),
        .ex_branch_with_delayslot_i_reg(\Instruction_Prefetch_Mux[11].Gen_Instr_DFF_n_3 ),
        .ex_branch_with_delayslot_reg(ex_branch_with_delayslot_reg),
        .ex_enable_sext_shift_i0(ex_enable_sext_shift_i0),
        .\ex_instr_reg[11] (\ex_instr_reg[11] [20]),
        .ex_jump(ex_jump),
        .ex_jump_nodelay(ex_jump_nodelay),
        .of_instr_ii_31(of_instr_ii_31),
        .of_pause_reg(of_pause_reg),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_127 \Instruction_Prefetch_Mux[11].Instr_Mux_MUXF7 
       (.I0125_out(I0125_out),
        .I1123_out(I1123_out),
        .of_instr_ii_31(of_instr_ii_31),
        .of_pause_reg(of_pause_reg));
  MB_FDR_128 \Instruction_Prefetch_Mux[12].Gen_Instr_DFF 
       (.Clk(Clk),
        .\ex_instr_reg[12] (\ex_instr_reg[11] [19]),
        .of_instr_ii_30(of_instr_ii_30),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_129 \Instruction_Prefetch_Mux[12].Instr_Mux_MUXF7 
       (.I0121_out(I0121_out),
        .I1119_out(I1119_out),
        .of_instr_ii_30(of_instr_ii_30),
        .of_pause_reg(of_pause_reg));
  MB_FDR_130 \Instruction_Prefetch_Mux[13].Gen_Instr_DFF 
       (.Clk(Clk),
        .\Performace_Debug_Control.ex_brki_hit_reg (\Instruction_Prefetch_Mux[13].Gen_Instr_DFF_n_1 ),
        .\Using_FPGA.Native_0 (\ex_instr_reg[11] [19]),
        .\Using_FPGA.Native_1 (\ex_instr_reg[11] [20]),
        .\Using_FPGA.Native_2 (\ex_instr_reg[11] [8]),
        .\Using_FPGA.Native_3 (\ex_instr_reg[11] [9]),
        .\Using_FPGA.Native_4 (\ex_instr_reg[11] [7]),
        .\ex_instr_reg[13] (\ex_instr_reg[11] [18]),
        .of_instr_ii_29(of_instr_ii_29),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_131 \Instruction_Prefetch_Mux[13].Instr_Mux_MUXF7 
       (.I0117_out(I0117_out),
        .I1115_out(I1115_out),
        .of_instr_ii_29(of_instr_ii_29),
        .of_pause_reg(of_pause_reg));
  MB_FDR_132 \Instruction_Prefetch_Mux[14].Gen_Instr_DFF 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_6 ),
        .ex_branch_with_delayslot_reg(ex_branch_with_delayslot_reg_0),
        .\ex_instr_reg[14] (\ex_instr_reg[11] [17]),
        .ex_mbar_decode(ex_mbar_decode),
        .ex_mbar_decode_reg(ex_mbar_decode_cmb),
        .of_instr_ii_28(of_instr_ii_28),
        .of_pause_reg(of_pause_reg),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_133 \Instruction_Prefetch_Mux[14].Instr_Mux_MUXF7 
       (.I0113_out(I0113_out),
        .I1111_out(I1111_out),
        .of_instr_ii_28(of_instr_ii_28),
        .of_pause_reg(of_pause_reg));
  MB_FDR_134 \Instruction_Prefetch_Mux[15].Gen_Instr_DFF 
       (.Clk(Clk),
        .\ex_instr_reg[15] (\ex_instr_reg[11] [16]),
        .of_instr_ii_27(of_instr_ii_27),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_135 \Instruction_Prefetch_Mux[15].Instr_Mux_MUXF7 
       (.I0109_out(I0109_out),
        .I1107_out(I1107_out),
        .of_instr_ii_27(of_instr_ii_27),
        .of_pause_reg(of_pause_reg));
  MB_FDR_136 \Instruction_Prefetch_Mux[16].Gen_Instr_DFF 
       (.Clk(Clk),
        .\EX_Op2_reg[10] (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_6 ),
        .\EX_Op2_reg[11] (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_5 ),
        .\EX_Op2_reg[12] (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_4 ),
        .\EX_Op2_reg[13] (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_3 ),
        .\EX_Op2_reg[14] (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_2 ),
        .\EX_Op2_reg[15] (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_1 ),
        .\EX_Op2_reg[1] (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_15 ),
        .\EX_Op2_reg[2] (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_14 ),
        .\EX_Op2_reg[3] (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_13 ),
        .\EX_Op2_reg[4] (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_12 ),
        .\EX_Op2_reg[5] (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_11 ),
        .\EX_Op2_reg[6] (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_10 ),
        .\EX_Op2_reg[7] (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_9 ),
        .\EX_Op2_reg[8] (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_8 ),
        .\EX_Op2_reg[9] (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_7 ),
        .GPR_Op2({GPR_Op2[1],GPR_Op2[2],GPR_Op2[3],GPR_Op2[4],GPR_Op2[5],GPR_Op2[6],GPR_Op2[7],GPR_Op2[8],GPR_Op2[9],GPR_Op2[10],GPR_Op2[11],GPR_Op2[12],GPR_Op2[13],GPR_Op2[14],GPR_Op2[15]}),
        .\Using_FPGA.Native_0 (\Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_3 ),
        .\ex_instr_reg[16] (\ex_instr_reg[11] [15]),
        .\imm_reg_reg[1] (\imm_reg_reg[0] [14:0]),
        .of_instr_ii_26(of_instr_ii_26),
        .sync_reset(sync_reset),
        .wb_exception_i_reg(wb_exception_i_reg));
  microblaze_v10_0_3_MB_MUXF7_137 \Instruction_Prefetch_Mux[16].Instr_Mux_MUXF7 
       (.I0105_out(I0105_out),
        .I1103_out(I1103_out),
        .of_instr_ii_26(of_instr_ii_26),
        .of_pause_reg(of_pause_reg));
  MB_FDR_138 \Instruction_Prefetch_Mux[17].Gen_Instr_DFF 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (of_instr[1]),
        .\Using_FPGA.Native_1 (of_instr[3]),
        .\Using_FPGA.Native_2 (of_instr[0]),
        .\Using_FPGA.Native_3 (\Instruction_Prefetch_Mux[0].Gen_Instr_DFF_n_1 ),
        .\Using_FPGA.Native_4 (of_instr[4]),
        .ex_gpr_write_dbg_reg(\Instruction_Prefetch_Mux[17].Gen_Instr_DFF_n_2 ),
        .\ex_instr_reg[17] (\ex_instr_reg[11] [14]),
        .ex_is_multi_or_load_instr0(ex_is_multi_or_load_instr0),
        .of_instr_ii_25(of_instr_ii_25),
        .of_op1_sel_spr(of_op1_sel_spr),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_139 \Instruction_Prefetch_Mux[17].Instr_Mux_MUXF7 
       (.I0101_out(I0101_out),
        .I199_out(I199_out),
        .of_instr_ii_25(of_instr_ii_25),
        .of_pause_reg(of_pause_reg));
  MB_FDR_140 \Instruction_Prefetch_Mux[18].Gen_Instr_DFF 
       (.Clk(Clk),
        .\ex_instr_reg[18] (\ex_instr_reg[11] [13]),
        .of_instr_ii_24(of_instr_ii_24),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_141 \Instruction_Prefetch_Mux[18].Instr_Mux_MUXF7 
       (.I097_out(I097_out),
        .I195_out(I195_out),
        .of_instr_ii_24(of_instr_ii_24),
        .of_pause_reg(of_pause_reg));
  MB_FDR_142 \Instruction_Prefetch_Mux[19].Gen_Instr_DFF 
       (.Clk(Clk),
        .\ex_instr_reg[19] (\ex_instr_reg[11] [12]),
        .of_instr_ii_23(of_instr_ii_23),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_143 \Instruction_Prefetch_Mux[19].Instr_Mux_MUXF7 
       (.I093_out(I093_out),
        .I191_out(I191_out),
        .of_instr_ii_23(of_instr_ii_23),
        .of_pause_reg(of_pause_reg));
  MB_FDR_144 \Instruction_Prefetch_Mux[1].Gen_Instr_DFF 
       (.Clk(Clk),
        .D222_out(D222_out),
        .D225_out(D225_out),
        .\EX_ALU_Op_reg[0] (\EX_ALU_Op_reg[0] ),
        .\EX_ALU_Op_reg[1] (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_5 ),
        .\EX_Op2_reg[15] (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_12 ),
        .EX_Use_Carry_reg(EX_Use_Carry_reg),
        .\Performace_Debug_Control.ex_brki_hit_reg (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_6 ),
        .\Using_FPGA.Native_0 (\ex_instr_reg[11] [14]),
        .\Using_FPGA.Native_1 (\ex_instr_reg[11] [3]),
        .\Using_FPGA.Native_10 (\ex_instr_reg[11] [19]),
        .\Using_FPGA.Native_11 (\Instruction_Prefetch_Mux[3].Gen_Instr_DFF_n_10 ),
        .\Using_FPGA.Native_2 (\ex_instr_reg[11] [2]),
        .\Using_FPGA.Native_3 (\ex_instr_reg[11] [1]),
        .\Using_FPGA.Native_4 (\ex_instr_reg[11] [0]),
        .\Using_FPGA.Native_5 (of_instr[1]),
        .\Using_FPGA.Native_6 (of_instr[3]),
        .\Using_FPGA.Native_7 (of_instr[5]),
        .\Using_FPGA.Native_8 (of_instr[2]),
        .\Using_FPGA.Native_9 (of_instr[0]),
        .ex_alu_sel_logic_i103_out(ex_alu_sel_logic_i103_out),
        .ex_jump(ex_jump),
        .ex_jump_nodelay(ex_jump_nodelay),
        .ex_load_alu_carry97_out(ex_load_alu_carry97_out),
        .ex_move_to_MSR_instr93_out(ex_move_to_MSR_instr93_out),
        .\ex_opcode_reg[1] (of_instr[4]),
        .force_Val2_N_reg(force_Val2_N_reg),
        .\imm_reg_reg[0] (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_7 ),
        .of_instr_ii_41(of_instr_ii_41),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_145 \Instruction_Prefetch_Mux[1].Instr_Mux_MUXF7 
       (.I0165_out(I0165_out),
        .I1163_out(I1163_out),
        .of_instr_ii_41(of_instr_ii_41),
        .of_pause_reg(of_pause_reg));
  MB_FDR_146 \Instruction_Prefetch_Mux[20].Gen_Instr_DFF 
       (.Clk(Clk),
        .\Performace_Debug_Control.ex_brki_hit_reg (\Performace_Debug_Control.ex_brki_hit_reg ),
        .\Using_FPGA.Native_0 (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_6 ),
        .\Using_FPGA.Native_1 (\Instruction_Prefetch_Mux[13].Gen_Instr_DFF_n_1 ),
        .\Using_FPGA.Native_2 (\Instruction_Prefetch_Mux[29].Gen_Instr_DFF_n_1 ),
        .\Using_FPGA.Native_3 (\Instruction_Prefetch_Mux[27].Gen_Instr_DFF_n_1 ),
        .\Using_FPGA.Native_4 (\ex_instr_reg[11] [14]),
        .\Using_FPGA.Native_5 (\ex_instr_reg[11] [13]),
        .\Using_FPGA.Native_6 (\ex_instr_reg[11] [15]),
        .\Using_FPGA.Native_7 (\ex_instr_reg[11] [12]),
        .\Using_FPGA.Native_8 (\ex_instr_reg[11] [3]),
        .\ex_instr_reg[20] (\ex_instr_reg[11] [11]),
        .of_instr_ii_22(of_instr_ii_22),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_147 \Instruction_Prefetch_Mux[20].Instr_Mux_MUXF7 
       (.I089_out(I089_out),
        .I187_out(I187_out),
        .of_instr_ii_22(of_instr_ii_22),
        .of_pause_reg(of_pause_reg));
  MB_FDR_148 \Instruction_Prefetch_Mux[21].Gen_Instr_DFF 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_4 ),
        .\Using_FPGA.Native_1 (of_instr[1]),
        .\Using_FPGA.Native_2 (of_instr[4]),
        .\Using_FPGA.Native_3 (of_instr[2]),
        .\Using_FPGA.Native_4 (\Instruction_Prefetch_Mux[2].Gen_Instr_DFF_n_1 ),
        .\Using_FPGA.Native_5 (of_instr[3]),
        .\Using_FPGA.Native_6 (of_instr[5]),
        .\ex_instr_reg[21] (\ex_instr_reg[11] [10]),
        .ex_sel_alu_i0(ex_sel_alu_i0),
        .of_instr_ii_21(of_instr_ii_21),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_149 \Instruction_Prefetch_Mux[21].Instr_Mux_MUXF7 
       (.I085_out(I085_out),
        .I183_out(I183_out),
        .of_instr_ii_21(of_instr_ii_21),
        .of_pause_reg(of_pause_reg));
  MB_FDR_150 \Instruction_Prefetch_Mux[22].Gen_Instr_DFF 
       (.Clk(Clk),
        .D229_out(D229_out),
        .\Using_FPGA.Native_0 (of_instr[3]),
        .\ex_instr_reg[22] (\ex_instr_reg[11] [9]),
        .of_instr_ii_20(of_instr_ii_20),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_151 \Instruction_Prefetch_Mux[22].Instr_Mux_MUXF7 
       (.I081_out(I081_out),
        .I179_out(I179_out),
        .of_instr_ii_20(of_instr_ii_20),
        .of_pause_reg(of_pause_reg));
  MB_FDR_152 \Instruction_Prefetch_Mux[23].Gen_Instr_DFF 
       (.Clk(Clk),
        .EX_SWAP_Instr(EX_SWAP_Instr),
        .\Using_FPGA.Native_0 (\ex_instr_reg[11] [5]),
        .\Using_FPGA.Native_1 (\ex_instr_reg[11] [6]),
        .\Using_FPGA.Native_2 (\Instruction_Prefetch_Mux[4].Gen_Instr_DFF_n_3 ),
        .\ex_instr_reg[23] (\ex_instr_reg[11] [8]),
        .of_instr_ii_19(of_instr_ii_19),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_153 \Instruction_Prefetch_Mux[23].Instr_Mux_MUXF7 
       (.I077_out(I077_out),
        .I175_out(I175_out),
        .of_instr_ii_19(of_instr_ii_19),
        .of_pause_reg(of_pause_reg));
  MB_FDR_154 \Instruction_Prefetch_Mux[24].Gen_Instr_DFF 
       (.Clk(Clk),
        .\ex_instr_reg[24] (\ex_instr_reg[11] [7]),
        .of_instr_ii_18(of_instr_ii_18),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_155 \Instruction_Prefetch_Mux[24].Instr_Mux_MUXF7 
       (.I073_out(I073_out),
        .I171_out(I171_out),
        .of_instr_ii_18(of_instr_ii_18),
        .of_pause_reg(of_pause_reg));
  MB_FDR_156 \Instruction_Prefetch_Mux[25].Gen_Instr_DFF 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\ex_instr_reg[11] [5]),
        .\Using_FPGA.Native_1 (\Instruction_Prefetch_Mux[4].Gen_Instr_DFF_n_3 ),
        .\ex_instr_reg[25] (\ex_instr_reg[11] [6]),
        .ex_load_shift_carry0(ex_load_shift_carry0),
        .of_instr_ii_17(of_instr_ii_17),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_157 \Instruction_Prefetch_Mux[25].Instr_Mux_MUXF7 
       (.I069_out(I069_out),
        .I167_out(I167_out),
        .of_instr_ii_17(of_instr_ii_17),
        .of_pause_reg(of_pause_reg));
  MB_FDR_158 \Instruction_Prefetch_Mux[26].Gen_Instr_DFF 
       (.Clk(Clk),
        .\EX_Sext_Op_reg[1] (\EX_Sext_Op_reg[0] [0]),
        .\Using_FPGA.Native_0 (\ex_instr_reg[11] [6]),
        .\Using_FPGA.Native_1 (\ex_instr_reg[11] [0]),
        .\Using_FPGA.Native_2 (\Instruction_Prefetch_Mux[4].Gen_Instr_DFF_n_3 ),
        .\ex_instr_reg[26] (\ex_instr_reg[11] [5]),
        .of_instr_ii_16(of_instr_ii_16),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_159 \Instruction_Prefetch_Mux[26].Instr_Mux_MUXF7 
       (.I065_out(I065_out),
        .I163_out(I163_out),
        .of_instr_ii_16(of_instr_ii_16),
        .of_pause_reg(of_pause_reg));
  MB_FDR_160 \Instruction_Prefetch_Mux[27].Gen_Instr_DFF 
       (.Clk(Clk),
        .\Performace_Debug_Control.ex_brki_hit_reg (\Instruction_Prefetch_Mux[27].Gen_Instr_DFF_n_1 ),
        .\Using_FPGA.Native_0 (\ex_instr_reg[11] [6]),
        .\Using_FPGA.Native_1 (\ex_instr_reg[11] [5]),
        .\Using_FPGA.Native_2 (\ex_instr_reg[11] [0]),
        .\ex_instr_reg[27] (\ex_instr_reg[11] [4]),
        .of_instr_ii_15(of_instr_ii_15),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_161 \Instruction_Prefetch_Mux[27].Instr_Mux_MUXF7 
       (.I061_out(I061_out),
        .I159_out(I159_out),
        .of_instr_ii_15(of_instr_ii_15),
        .of_pause_reg(of_pause_reg));
  MB_FDR_162 \Instruction_Prefetch_Mux[28].Gen_Instr_DFF 
       (.Clk(Clk),
        .\ex_instr_reg[28] (\ex_instr_reg[11] [3]),
        .of_instr_ii_14(of_instr_ii_14),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_163 \Instruction_Prefetch_Mux[28].Instr_Mux_MUXF7 
       (.I057_out(I057_out),
        .I155_out(I155_out),
        .of_instr_ii_14(of_instr_ii_14),
        .of_pause_reg(of_pause_reg));
  MB_FDR_164 \Instruction_Prefetch_Mux[29].Gen_Instr_DFF 
       (.Clk(Clk),
        .\Performace_Debug_Control.ex_brki_hit_reg (\Instruction_Prefetch_Mux[29].Gen_Instr_DFF_n_1 ),
        .\Serial_Dbg_Intf.control_reg_reg[8] (\Serial_Dbg_Intf.control_reg_reg[8] ),
        .\Using_FPGA.Native_0 (\ex_instr_reg[11] [1]),
        .\Using_FPGA.Native_1 (\ex_instr_reg[11] [10]),
        .\ex_instr_reg[29] (\ex_instr_reg[11] [2]),
        .of_instr_ii_13(of_instr_ii_13),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_165 \Instruction_Prefetch_Mux[29].Instr_Mux_MUXF7 
       (.I053_out(I053_out),
        .I151_out(I151_out),
        .of_instr_ii_13(of_instr_ii_13),
        .of_pause_reg(of_pause_reg));
  MB_FDR_166 \Instruction_Prefetch_Mux[2].Gen_Instr_DFF 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\Instruction_Prefetch_Mux[2].Gen_Instr_DFF_n_1 ),
        .\Using_FPGA.Native_1 (of_instr[5]),
        .\Using_FPGA.Native_2 (of_instr[0]),
        .\ex_opcode_reg[2] (of_instr[3]),
        .of_instr_ii_40(of_instr_ii_40),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_167 \Instruction_Prefetch_Mux[2].Instr_Mux_MUXF7 
       (.I0161_out(I0161_out),
        .I1159_out(I1159_out),
        .of_instr_ii_40(of_instr_ii_40),
        .of_pause_reg(of_pause_reg));
  MB_FDR_168 \Instruction_Prefetch_Mux[30].Gen_Instr_DFF 
       (.Clk(Clk),
        .EX_Unsigned_Op105_out(EX_Unsigned_Op105_out),
        .\Using_FPGA.Native_0 (of_instr[5]),
        .\Using_FPGA.Native_1 (of_instr[4]),
        .\Using_FPGA.Native_2 (of_instr[3]),
        .\ex_instr_reg[30] (\ex_instr_reg[11] [1]),
        .of_instr_ii_12(of_instr_ii_12),
        .p_2_in(p_2_in),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_169 \Instruction_Prefetch_Mux[30].Instr_Mux_MUXF7 
       (.I049_out(I049_out),
        .I147_out(I147_out),
        .of_instr_ii_12(of_instr_ii_12),
        .of_pause_reg(of_pause_reg));
  MB_FDR_170 \Instruction_Prefetch_Mux[31].Gen_Instr_DFF 
       (.Clk(Clk),
        .EX_CMP_Op106_out(EX_CMP_Op106_out),
        .\Using_FPGA.Native_0 (of_instr[5]),
        .\Using_FPGA.Native_1 (of_instr[4]),
        .\Using_FPGA.Native_2 (of_instr[3]),
        .\ex_instr_reg[31] (\ex_instr_reg[11] [0]),
        .of_instr_ii_11(of_instr_ii_11),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_171 \Instruction_Prefetch_Mux[31].Instr_Mux_MUXF7 
       (.I045_out(I045_out),
        .I143_out(I143_out),
        .of_instr_ii_11(of_instr_ii_11),
        .of_pause_reg(of_pause_reg));
  MB_FDR_172 \Instruction_Prefetch_Mux[32].Gen_Instr_DFF 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .of_instr_ii_10(of_instr_ii_10),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_173 \Instruction_Prefetch_Mux[32].Instr_Mux_MUXF7 
       (.I041_out(I041_out),
        .I139_out(I139_out),
        .of_instr_ii_10(of_instr_ii_10),
        .of_pause_reg(of_pause_reg));
  MB_FDR_174 \Instruction_Prefetch_Mux[33].Gen_Instr_DFF 
       (.Clk(Clk),
        .\EX_Branch_CMP_Op1_reg[0] ({\EX_Branch_CMP_Op1_reg[0] [30],\EX_Branch_CMP_Op1_reg[0] [27:23],\EX_Branch_CMP_Op1_reg[0] [20:18],\EX_Branch_CMP_Op1_reg[0] [15:3],\EX_Branch_CMP_Op1_reg[0] [0]}),
        .\EX_Branch_CMP_Op1_reg[31] (\EX_Branch_CMP_Op1_reg[31] ),
        .\EX_Branch_CMP_Op1_reg[31]_0 (\EX_Branch_CMP_Op1_reg[31]_0 ),
        .GPR_Op1({GPR_Op1[30],GPR_Op1[27:23],GPR_Op1[20:18],GPR_Op1[15:3],GPR_Op1[0]}),
        .\Using_FPGA.Native_0 (of_predecode[9]),
        .\Using_FPGA.Native_1 (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_8 ),
        .\Using_FPGA.Native_10 (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_16 ),
        .\Using_FPGA.Native_11 (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_17 ),
        .\Using_FPGA.Native_12 (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_19 ),
        .\Using_FPGA.Native_13 (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_20 ),
        .\Using_FPGA.Native_14 (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_21 ),
        .\Using_FPGA.Native_15 (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_22 ),
        .\Using_FPGA.Native_16 (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_23 ),
        .\Using_FPGA.Native_17 (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_26 ),
        .\Using_FPGA.Native_18 (\EX_Branch_CMP_Op1_reg[30]_0 ),
        .\Using_FPGA.Native_19 (of_predecode[8]),
        .\Using_FPGA.Native_2 (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_5 ),
        .\Using_FPGA.Native_3 (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_6 ),
        .\Using_FPGA.Native_4 (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_9 ),
        .\Using_FPGA.Native_5 (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_7 ),
        .\Using_FPGA.Native_6 (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_10 ),
        .\Using_FPGA.Native_7 (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_11 ),
        .\Using_FPGA.Native_8 (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_12 ),
        .\Using_FPGA.Native_9 (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_15 ),
        .\WB_MEM_Result_reg[0] (\WB_MEM_Result_reg[0] ),
        .\WB_MEM_Result_reg[10] (\WB_MEM_Result_reg[10] ),
        .\WB_MEM_Result_reg[11] (\WB_MEM_Result_reg[11] ),
        .\WB_MEM_Result_reg[12] (\WB_MEM_Result_reg[12] ),
        .\WB_MEM_Result_reg[15] (\WB_MEM_Result_reg[15] ),
        .\WB_MEM_Result_reg[17] (\WB_MEM_Result_reg[16] [6:0]),
        .\WB_MEM_Result_reg[3] (\WB_MEM_Result_reg[3] ),
        .\WB_MEM_Result_reg[4] (\WB_MEM_Result_reg[4] ),
        .\WB_MEM_Result_reg[5] (\WB_MEM_Result_reg[5] ),
        .\WB_MEM_Result_reg[6] (\WB_MEM_Result_reg[6] ),
        .\WB_MEM_Result_reg[7] (\WB_MEM_Result_reg[7] ),
        .\ex_gpr_write_addr_reg[0] (\ex_gpr_write_addr_reg[0] ),
        .\ex_gpr_write_addr_reg[4] (\Instruction_Prefetch_Mux[37].Gen_Instr_DFF_n_1 ),
        .ex_sel_alu_i_reg(ex_sel_alu_i_reg),
        .ex_sel_alu_i_reg_0(ex_sel_alu_i_reg_3),
        .ex_sel_alu_i_reg_1(ex_sel_alu_i_reg_4),
        .ex_sel_alu_i_reg_10(ex_sel_alu_i_reg_22),
        .ex_sel_alu_i_reg_11(ex_sel_alu_i_reg_21),
        .ex_sel_alu_i_reg_12(ex_sel_alu_i_reg_20),
        .ex_sel_alu_i_reg_13(ex_sel_alu_i_reg_19),
        .ex_sel_alu_i_reg_14(ex_sel_alu_i_reg_18),
        .ex_sel_alu_i_reg_15(ex_sel_alu_i_reg_16),
        .ex_sel_alu_i_reg_16(ex_sel_alu_i_reg_15),
        .ex_sel_alu_i_reg_17(ex_sel_alu_i_reg_17),
        .ex_sel_alu_i_reg_18(ex_sel_alu_i_reg_14),
        .ex_sel_alu_i_reg_2(ex_sel_alu_i_reg_5),
        .ex_sel_alu_i_reg_3(ex_sel_alu_i_reg_7),
        .ex_sel_alu_i_reg_4(ex_sel_alu_i_reg_8),
        .ex_sel_alu_i_reg_5(ex_sel_alu_i_reg_9),
        .ex_sel_alu_i_reg_6(ex_sel_alu_i_reg_10),
        .ex_sel_alu_i_reg_7(ex_sel_alu_i_reg_11),
        .ex_sel_alu_i_reg_8(ex_sel_alu_i_reg_29),
        .ex_sel_alu_i_reg_9(ex_sel_alu_i_reg_24),
        .ex_valid_reg(ex_valid_reg_0),
        .mem_ex_result({mem_ex_result[17],mem_ex_result[18],mem_ex_result[20],mem_ex_result[21],mem_ex_result[22],mem_ex_result[23]}),
        .of_instr_ii_9(of_instr_ii_9),
        .sync_reset(sync_reset),
        .\wb_exception_kind_i_reg[31] (\wb_exception_kind_i_reg[31] ),
        .\wb_exception_kind_i_reg[31]_0 (\wb_exception_kind_i_reg[31]_2 ),
        .\wb_exception_kind_i_reg[31]_1 (\wb_exception_kind_i_reg[31]_3 ),
        .\wb_exception_kind_i_reg[31]_2 (\wb_exception_kind_i_reg[31]_4 ),
        .\wb_exception_kind_i_reg[31]_3 (\wb_exception_kind_i_reg[31]_5 ),
        .\wb_exception_kind_i_reg[31]_4 (\wb_exception_kind_i_reg[31]_6 ),
        .\wb_gpr_write_addr_reg[3] (\EX_Branch_CMP_Op1_reg[30] ),
        .\wb_gpr_write_addr_reg[3]_0 (\Instruction_Prefetch_Mux[36].Gen_Instr_DFF_n_9 ));
  microblaze_v10_0_3_MB_MUXF7_175 \Instruction_Prefetch_Mux[33].Instr_Mux_MUXF7 
       (.I037_out(I037_out),
        .I135_out(I135_out),
        .of_instr_ii_9(of_instr_ii_9),
        .of_pause_reg(of_pause_reg));
  MB_FDR_176 \Instruction_Prefetch_Mux[34].Gen_Instr_DFF 
       (.Clk(Clk),
        .\EX_Branch_CMP_Op1_reg[0] (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_26 ),
        .\EX_Branch_CMP_Op1_reg[10] (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_17 ),
        .\EX_Branch_CMP_Op1_reg[11] (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_16 ),
        .\EX_Branch_CMP_Op1_reg[12] (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_15 ),
        .\EX_Branch_CMP_Op1_reg[13] (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_14 ),
        .\EX_Branch_CMP_Op1_reg[14] (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_13 ),
        .\EX_Branch_CMP_Op1_reg[15] (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_12 ),
        .\EX_Branch_CMP_Op1_reg[19] (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_11 ),
        .\EX_Branch_CMP_Op1_reg[1] (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_25 ),
        .\EX_Branch_CMP_Op1_reg[24] (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_10 ),
        .\EX_Branch_CMP_Op1_reg[25] (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_7 ),
        .\EX_Branch_CMP_Op1_reg[26] (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_9 ),
        .\EX_Branch_CMP_Op1_reg[27] (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_6 ),
        .\EX_Branch_CMP_Op1_reg[28] (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_5 ),
        .\EX_Branch_CMP_Op1_reg[29] (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_4 ),
        .\EX_Branch_CMP_Op1_reg[2] (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_24 ),
        .\EX_Branch_CMP_Op1_reg[30] (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_2 ),
        .\EX_Branch_CMP_Op1_reg[30]_0 (\EX_Branch_CMP_Op1_reg[30]_0 ),
        .\EX_Branch_CMP_Op1_reg[30]_1 (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_27 ),
        .\EX_Branch_CMP_Op1_reg[31] (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_8 ),
        .\EX_Branch_CMP_Op1_reg[3] (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_23 ),
        .\EX_Branch_CMP_Op1_reg[4] (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_22 ),
        .\EX_Branch_CMP_Op1_reg[5] (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_21 ),
        .\EX_Branch_CMP_Op1_reg[6] (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_20 ),
        .\EX_Branch_CMP_Op1_reg[7] (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_19 ),
        .\EX_Branch_CMP_Op1_reg[8] (\EX_Branch_CMP_Op1_reg[0] [22]),
        .\EX_Branch_CMP_Op1_reg[9] (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_18 ),
        .GPR_Op1(GPR_Op1[22]),
        .\Using_FPGA.Native_0 (of_predecode[8]),
        .\Using_FPGA.Native_1 (of_predecode[9]),
        .\Using_FPGA.Native_2 (of_predecode[5]),
        .\WB_MEM_Result_reg[8] (\WB_MEM_Result_reg[8] ),
        .\ex_gpr_write_addr_reg[0] (\EX_Branch_CMP_Op1_reg[31] ),
        .\ex_gpr_write_addr_reg[0]_0 (\EX_Branch_CMP_Op1_reg[31]_0 ),
        .ex_sel_alu_i_reg(ex_sel_alu_i_reg_28),
        .ex_sel_alu_i_reg_0(ex_sel_alu_i_reg_27),
        .ex_sel_alu_i_reg_1(ex_sel_alu_i_reg_26),
        .ex_sel_alu_i_reg_2(ex_sel_alu_i_reg_25),
        .ex_sel_alu_i_reg_3(ex_sel_alu_i_reg_23),
        .ex_sel_alu_i_reg_4(ex_sel_alu_i_reg_0[8]),
        .mem_MSR(mem_MSR),
        .mem_ex_result({mem_ex_result[0],mem_ex_result[1],mem_ex_result[2],mem_ex_result[3],mem_ex_result[4],mem_ex_result[5],mem_ex_result[6],mem_ex_result[7],mem_ex_result[8],mem_ex_result[9],mem_ex_result[10],mem_ex_result[11],mem_ex_result[12],mem_ex_result[13],mem_ex_result[14],mem_ex_result[15],mem_ex_result[19],mem_ex_result[24],mem_ex_result[25],mem_ex_result[26],mem_ex_result[27],mem_ex_result[28],mem_ex_result[29],mem_ex_result[30],mem_ex_result[31]}),
        .\mem_gpr_write_addr_reg[0] (\mem_gpr_write_addr_reg[0] [4:3]),
        .\mem_gpr_write_addr_reg[4] (\Instruction_Prefetch_Mux[37].Gen_Instr_DFF_n_2 ),
        .mem_is_msr_instr_reg(mem_is_msr_instr_reg),
        .mem_valid_reg(mem_valid_reg),
        .of_instr_ii_8(of_instr_ii_8),
        .sync_reset(sync_reset),
        .\wb_gpr_write_addr_reg[0] ({\wb_gpr_write_addr_reg[0] [4:3],\wb_gpr_write_addr_reg[0] [0]}),
        .\wb_gpr_write_addr_reg[3] (\EX_Branch_CMP_Op1_reg[30] ));
  microblaze_v10_0_3_MB_MUXF7_177 \Instruction_Prefetch_Mux[34].Instr_Mux_MUXF7 
       (.I033_out(I033_out),
        .I131_out(I131_out),
        .of_instr_ii_8(of_instr_ii_8),
        .of_pause_reg(of_pause_reg));
  MB_FDR_178 \Instruction_Prefetch_Mux[35].Gen_Instr_DFF 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (of_predecode[7]),
        .of_instr_ii_7(of_instr_ii_7),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_179 \Instruction_Prefetch_Mux[35].Instr_Mux_MUXF7 
       (.I029_out(I029_out),
        .I127_out(I127_out),
        .of_instr_ii_7(of_instr_ii_7),
        .of_pause_reg(of_pause_reg));
  MB_FDR_180 \Instruction_Prefetch_Mux[36].Gen_Instr_DFF 
       (.Clk(Clk),
        .\EX_Branch_CMP_Op1_reg[1] ({\EX_Branch_CMP_Op1_reg[0] [29:28],\EX_Branch_CMP_Op1_reg[0] [21],\EX_Branch_CMP_Op1_reg[0] [17:16],\EX_Branch_CMP_Op1_reg[0] [2:1]}),
        .\EX_Branch_CMP_Op1_reg[30] (\EX_Branch_CMP_Op1_reg[30] ),
        .\EX_Branch_CMP_Op1_reg[30]_0 (\Instruction_Prefetch_Mux[36].Gen_Instr_DFF_n_9 ),
        .GPR_Op1({GPR_Op1[29:28],GPR_Op1[21],GPR_Op1[17:16],GPR_Op1[2:1]}),
        .\Using_FPGA.Native_0 (of_predecode[6]),
        .\Using_FPGA.Native_1 (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_2 ),
        .\Using_FPGA.Native_10 (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_27 ),
        .\Using_FPGA.Native_2 (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_4 ),
        .\Using_FPGA.Native_3 (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_13 ),
        .\Using_FPGA.Native_4 (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_14 ),
        .\Using_FPGA.Native_5 (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_18 ),
        .\Using_FPGA.Native_6 (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_24 ),
        .\Using_FPGA.Native_7 (\Instruction_Prefetch_Mux[34].Gen_Instr_DFF_n_25 ),
        .\Using_FPGA.Native_8 (\EX_Branch_CMP_Op1_reg[30]_0 ),
        .\Using_FPGA.Native_9 (of_predecode[7]),
        .\WB_MEM_Result_reg[13] (\WB_MEM_Result_reg[13] ),
        .\WB_MEM_Result_reg[14] (\WB_MEM_Result_reg[14] ),
        .\WB_MEM_Result_reg[1] (\WB_MEM_Result_reg[1] ),
        .\WB_MEM_Result_reg[2] (\WB_MEM_Result_reg[2] ),
        .\WB_MEM_Result_reg[9] (\WB_MEM_Result_reg[9] ),
        .\ex_gpr_write_addr_reg[0] (\EX_Branch_CMP_Op1_reg[31] ),
        .\ex_gpr_write_addr_reg[0]_0 (\EX_Branch_CMP_Op1_reg[31]_0 ),
        .ex_sel_alu_i_reg(ex_sel_alu_i_reg_1),
        .ex_sel_alu_i_reg_0(ex_sel_alu_i_reg_2),
        .ex_sel_alu_i_reg_1(ex_sel_alu_i_reg_6),
        .ex_sel_alu_i_reg_2(ex_sel_alu_i_reg_12),
        .ex_sel_alu_i_reg_3(ex_sel_alu_i_reg_13),
        .of_instr_ii_6(of_instr_ii_6),
        .sync_reset(sync_reset),
        .\wb_exception_kind_i_reg[31] (\wb_exception_kind_i_reg[31]_0 ),
        .\wb_exception_kind_i_reg[31]_0 (\wb_exception_kind_i_reg[31]_1 ),
        .\wb_gpr_write_addr_reg[2] (\wb_gpr_write_addr_reg[0] [2:1]),
        .wb_reset_reg(wb_reset_reg));
  microblaze_v10_0_3_MB_MUXF7_181 \Instruction_Prefetch_Mux[36].Instr_Mux_MUXF7 
       (.I025_out(I025_out),
        .I123_out(I123_out),
        .of_instr_ii_6(of_instr_ii_6),
        .of_pause_reg(of_pause_reg));
  MB_FDR_182 \Instruction_Prefetch_Mux[37].Gen_Instr_DFF 
       (.Clk(Clk),
        .\EX_Branch_CMP_Op1_reg[30] (\Instruction_Prefetch_Mux[37].Gen_Instr_DFF_n_2 ),
        .\EX_Branch_CMP_Op1_reg[31] (\Instruction_Prefetch_Mux[37].Gen_Instr_DFF_n_1 ),
        .I0(I0),
        .I4(I4),
        .\Using_FPGA.Native_0 (of_predecode[5]),
        .\Using_FPGA.Native_1 (of_predecode[6]),
        .\Using_FPGA.Native_2 (of_predecode[7]),
        .\ex_gpr_write_addr_reg[4] (\ex_gpr_write_addr_reg[4]_0 ),
        .\mem_gpr_write_addr_reg[2] (\mem_gpr_write_addr_reg[0] [2:0]),
        .of_instr_ii_5(of_instr_ii_5),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_183 \Instruction_Prefetch_Mux[37].Instr_Mux_MUXF7 
       (.I021_out(I021_out),
        .I119_out(I119_out),
        .of_instr_ii_5(of_instr_ii_5),
        .of_pause_reg(of_pause_reg));
  MB_FDR_184 \Instruction_Prefetch_Mux[38].Gen_Instr_DFF 
       (.Clk(Clk),
        .\EX_Op2_reg[16] (\Instruction_Prefetch_Mux[38].Gen_Instr_DFF_n_2 ),
        .\EX_Op2_reg[31] (\Instruction_Prefetch_Mux[38].Gen_Instr_DFF_n_1 ),
        .\Using_FPGA.Native_0 (of_predecode[4]),
        .\Using_FPGA.Native_1 (of_predecode[3]),
        .\Using_FPGA.Native_2 (of_predecode[2]),
        .\ex_gpr_write_addr_reg[0] (\ex_gpr_write_addr_reg[0] ),
        .\ex_gpr_write_addr_reg[4] (\Instruction_Prefetch_Mux[42].Gen_Instr_DFF_n_35 ),
        .ex_valid_reg(ex_valid_reg_0),
        .of_instr_ii_4(of_instr_ii_4),
        .sync_reset(sync_reset),
        .\wb_gpr_write_addr_reg[0] (\wb_gpr_write_addr_reg[0] [4:2]));
  microblaze_v10_0_3_MB_MUXF7_185 \Instruction_Prefetch_Mux[38].Instr_Mux_MUXF7 
       (.I017_out(I017_out),
        .I115_out(I115_out),
        .of_instr_ii_4(of_instr_ii_4),
        .of_pause_reg(of_pause_reg));
  MB_FDR_186 \Instruction_Prefetch_Mux[39].Gen_Instr_DFF 
       (.Clk(Clk),
        .\EX_Op2_reg[15] (\Instruction_Prefetch_Mux[39].Gen_Instr_DFF_n_1 ),
        .\Using_FPGA.Native_0 (of_predecode[3]),
        .\Using_FPGA.Native_1 (of_predecode[2]),
        .\Using_FPGA.Native_2 (of_predecode[1]),
        .\mem_gpr_write_addr_reg[1] (\mem_gpr_write_addr_reg[0] [3:1]),
        .of_instr_ii_3(of_instr_ii_3),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_187 \Instruction_Prefetch_Mux[39].Instr_Mux_MUXF7 
       (.I013_out(I013_out),
        .I111_out(I111_out),
        .of_instr_ii_3(of_instr_ii_3),
        .of_pause_reg(of_pause_reg));
  MB_FDR_188 \Instruction_Prefetch_Mux[3].Gen_Instr_DFF 
       (.Clk(Clk),
        .E(E),
        .\EX_ALU_Op_reg[1] (\Instruction_Prefetch_Mux[3].Gen_Instr_DFF_n_10 ),
        .EX_Is_Div_Instr(EX_Is_Div_Instr),
        .\EX_Op1_reg[0] (\EX_Op1_reg[0] ),
        .\EX_Op1_reg[28] (\EX_Op1_reg[28] ),
        .\EX_Op1_reg[29] (\EX_Op1_reg[29] ),
        .\EX_Op1_reg[30] (\EX_Op1_reg[30] ),
        .I1(I1),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_12 ),
        .\Using_FPGA.Native_1 (of_instr[5]),
        .\Using_FPGA.Native_2 (of_instr[4]),
        .\Using_FPGA.Native_3 (of_instr[1]),
        .\Using_FPGA.Native_4 (\ex_instr_reg[11] [0]),
        .\Using_FPGA.Native_5 (of_instr[0]),
        .\Using_FPGA.Native_6 (of_instr[3]),
        .\Using_FPGA.Native_7 (\ex_instr_reg[11] [10]),
        .\Using_FPGA.Native_8 (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_7 ),
        .ex_MSR(ex_MSR),
        .ex_branch_with_delayslot_reg(ex_branch_with_delayslot_reg_0),
        .ex_enable_alu_i_reg(ex_enable_alu_i_reg),
        .ex_enable_sext_shift_i0(ex_enable_sext_shift_i0),
        .ex_is_div_instr_I_reg(ex_is_div_instr_I_reg),
        .\ex_opcode_reg[3] (of_instr[2]),
        .of_instr_ii_39(of_instr_ii_39),
        .of_op1_sel_spr(of_op1_sel_spr),
        .of_pause_reg(of_pause_reg),
        .of_valid(of_valid),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_189 \Instruction_Prefetch_Mux[3].Instr_Mux_MUXF7 
       (.I0157_out(I0157_out),
        .I1155_out(I1155_out),
        .of_instr_ii_39(of_instr_ii_39),
        .of_pause_reg(of_pause_reg));
  MB_FDR_190 \Instruction_Prefetch_Mux[40].Gen_Instr_DFF 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (of_predecode[2]),
        .of_instr_ii_2(of_instr_ii_2),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_191 \Instruction_Prefetch_Mux[40].Instr_Mux_MUXF7 
       (.I09_out(I09_out),
        .I17_out(I17_out),
        .of_instr_ii_2(of_instr_ii_2),
        .of_pause_reg(of_pause_reg));
  MB_FDR_192 \Instruction_Prefetch_Mux[41].Gen_Instr_DFF 
       (.Clk(Clk),
        .\EX_Op2_reg[15] (\Instruction_Prefetch_Mux[41].Gen_Instr_DFF_n_1 ),
        .\Using_FPGA.Native_0 (of_predecode[1]),
        .\Using_FPGA.Native_1 (of_predecode[2]),
        .\mem_gpr_write_addr_reg[2] (\mem_gpr_write_addr_reg[0] [2:1]),
        .of_instr_ii_1(of_instr_ii_1),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_193 \Instruction_Prefetch_Mux[41].Instr_Mux_MUXF7 
       (.I05_out(I05_out),
        .I13_out(I13_out),
        .of_instr_ii_1(of_instr_ii_1),
        .of_pause_reg(of_pause_reg));
  MB_FDR_194 \Instruction_Prefetch_Mux[42].Gen_Instr_DFF 
       (.Clk(Clk),
        .\EX_Op2_reg[0] (\Instruction_Prefetch_Mux[42].Gen_Instr_DFF_n_34 ),
        .\EX_Op2_reg[15] (\Instruction_Prefetch_Mux[42].Gen_Instr_DFF_n_32 ),
        .\EX_Op2_reg[15]_0 (\Instruction_Prefetch_Mux[42].Gen_Instr_DFF_n_33 ),
        .\EX_Op2_reg[1] (\EX_Op2_reg[0] [30:0]),
        .\EX_Op2_reg[31] (\Instruction_Prefetch_Mux[42].Gen_Instr_DFF_n_35 ),
        .I0(I0),
        .I4(I4),
        .\Using_FPGA.Native_0 (of_predecode[0]),
        .\Using_FPGA.Native_1 (\Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_28 ),
        .\Using_FPGA.Native_10 (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_6 ),
        .\Using_FPGA.Native_11 (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_7 ),
        .\Using_FPGA.Native_12 (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_8 ),
        .\Using_FPGA.Native_13 (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_9 ),
        .\Using_FPGA.Native_14 (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_10 ),
        .\Using_FPGA.Native_15 (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_11 ),
        .\Using_FPGA.Native_16 (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_12 ),
        .\Using_FPGA.Native_17 (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_13 ),
        .\Using_FPGA.Native_18 (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_14 ),
        .\Using_FPGA.Native_19 (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_15 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_7 ),
        .\Using_FPGA.Native_20 (\Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_6 ),
        .\Using_FPGA.Native_21 (\Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_7 ),
        .\Using_FPGA.Native_22 (\Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_8 ),
        .\Using_FPGA.Native_23 (\Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_9 ),
        .\Using_FPGA.Native_24 (\Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_10 ),
        .\Using_FPGA.Native_25 (\Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_11 ),
        .\Using_FPGA.Native_26 (\Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_12 ),
        .\Using_FPGA.Native_27 (\Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_13 ),
        .\Using_FPGA.Native_28 (\Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_14 ),
        .\Using_FPGA.Native_29 (\Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_15 ),
        .\Using_FPGA.Native_3 (\Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_2 ),
        .\Using_FPGA.Native_30 (\Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_16 ),
        .\Using_FPGA.Native_31 (\Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_17 ),
        .\Using_FPGA.Native_32 (\Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_18 ),
        .\Using_FPGA.Native_33 (\Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_19 ),
        .\Using_FPGA.Native_34 (\Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_20 ),
        .\Using_FPGA.Native_35 (\Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_21 ),
        .\Using_FPGA.Native_36 (\Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_3 ),
        .\Using_FPGA.Native_37 (\Instruction_Prefetch_Mux[4].Gen_Instr_DFF_n_3 ),
        .\Using_FPGA.Native_38 (of_predecode[1]),
        .\Using_FPGA.Native_39 (\Instruction_Prefetch_Mux[38].Gen_Instr_DFF_n_2 ),
        .\Using_FPGA.Native_4 (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_1 ),
        .\Using_FPGA.Native_5 (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_12 ),
        .\Using_FPGA.Native_6 (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_2 ),
        .\Using_FPGA.Native_7 (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_3 ),
        .\Using_FPGA.Native_8 (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_4 ),
        .\Using_FPGA.Native_9 (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_5 ),
        .\WB_MEM_Result_reg[0] (\WB_MEM_Result_reg[0] ),
        .\WB_MEM_Result_reg[10] (\WB_MEM_Result_reg[10] ),
        .\WB_MEM_Result_reg[11] (\WB_MEM_Result_reg[11] ),
        .\WB_MEM_Result_reg[12] (\WB_MEM_Result_reg[12] ),
        .\WB_MEM_Result_reg[13] (\WB_MEM_Result_reg[13] ),
        .\WB_MEM_Result_reg[14] (\WB_MEM_Result_reg[14] ),
        .\WB_MEM_Result_reg[15] (\WB_MEM_Result_reg[15] ),
        .\WB_MEM_Result_reg[16] (\WB_MEM_Result_reg[16] ),
        .\WB_MEM_Result_reg[1] (\WB_MEM_Result_reg[1] ),
        .\WB_MEM_Result_reg[2] (\WB_MEM_Result_reg[2] ),
        .\WB_MEM_Result_reg[3] (\WB_MEM_Result_reg[3] ),
        .\WB_MEM_Result_reg[4] (\WB_MEM_Result_reg[4] ),
        .\WB_MEM_Result_reg[5] (\WB_MEM_Result_reg[5] ),
        .\WB_MEM_Result_reg[6] (\WB_MEM_Result_reg[6] ),
        .\WB_MEM_Result_reg[7] (\WB_MEM_Result_reg[7] ),
        .\WB_MEM_Result_reg[8] (\WB_MEM_Result_reg[8] ),
        .\WB_MEM_Result_reg[9] (\WB_MEM_Result_reg[9] ),
        .\ex_gpr_write_addr_reg[0] (\Instruction_Prefetch_Mux[38].Gen_Instr_DFF_n_1 ),
        .\ex_gpr_write_addr_reg[4] (\ex_gpr_write_addr_reg[4]_0 ),
        .ex_sel_alu_i_reg(ex_sel_alu_i_reg_0),
        .ex_sel_alu_i_reg_0(ex_sel_alu_i_reg_15),
        .ex_sel_alu_i_reg_1(ex_sel_alu_i_reg_16),
        .ex_sel_alu_i_reg_10(ex_sel_alu_i_reg_25),
        .ex_sel_alu_i_reg_11(ex_sel_alu_i_reg_26),
        .ex_sel_alu_i_reg_12(ex_sel_alu_i_reg_27),
        .ex_sel_alu_i_reg_13(ex_sel_alu_i_reg_28),
        .ex_sel_alu_i_reg_14(ex_sel_alu_i_reg_29),
        .ex_sel_alu_i_reg_2(ex_sel_alu_i_reg_17),
        .ex_sel_alu_i_reg_3(ex_sel_alu_i_reg_18),
        .ex_sel_alu_i_reg_4(ex_sel_alu_i_reg_19),
        .ex_sel_alu_i_reg_5(ex_sel_alu_i_reg_20),
        .ex_sel_alu_i_reg_6(ex_sel_alu_i_reg_21),
        .ex_sel_alu_i_reg_7(ex_sel_alu_i_reg_22),
        .ex_sel_alu_i_reg_8(ex_sel_alu_i_reg_23),
        .ex_sel_alu_i_reg_9(ex_sel_alu_i_reg_24),
        .mem_ex_result({mem_ex_result[1],mem_ex_result[2],mem_ex_result[3],mem_ex_result[4],mem_ex_result[5],mem_ex_result[6],mem_ex_result[7],mem_ex_result[8],mem_ex_result[9],mem_ex_result[10],mem_ex_result[11],mem_ex_result[12],mem_ex_result[13],mem_ex_result[14],mem_ex_result[15],mem_ex_result[16],mem_ex_result[17],mem_ex_result[18],mem_ex_result[19],mem_ex_result[20],mem_ex_result[21],mem_ex_result[22],mem_ex_result[23],mem_ex_result[24],mem_ex_result[25],mem_ex_result[26],mem_ex_result[27],mem_ex_result[31]}),
        .\mem_gpr_write_addr_reg[0] ({\mem_gpr_write_addr_reg[0] [4],\mem_gpr_write_addr_reg[0] [0]}),
        .\mem_gpr_write_addr_reg[1] (\Instruction_Prefetch_Mux[39].Gen_Instr_DFF_n_1 ),
        .\mem_gpr_write_addr_reg[3] (\Instruction_Prefetch_Mux[41].Gen_Instr_DFF_n_1 ),
        .mem_valid_reg(mem_valid_reg),
        .of_instr_ii_0(of_instr_ii_0),
        .of_predecode({of_predecode[4],of_predecode[2]}),
        .sync_reset(sync_reset),
        .\wb_exception_kind_i_reg[31] (\wb_exception_kind_i_reg[31] ),
        .\wb_exception_kind_i_reg[31]_0 (\wb_exception_kind_i_reg[31]_0 ),
        .\wb_exception_kind_i_reg[31]_1 (\wb_exception_kind_i_reg[31]_1 ),
        .\wb_exception_kind_i_reg[31]_2 (\wb_exception_kind_i_reg[31]_2 ),
        .\wb_exception_kind_i_reg[31]_3 (\wb_exception_kind_i_reg[31]_3 ),
        .\wb_exception_kind_i_reg[31]_4 (\wb_exception_kind_i_reg[31]_4 ),
        .\wb_exception_kind_i_reg[31]_5 (\wb_exception_kind_i_reg[31]_5 ),
        .\wb_exception_kind_i_reg[31]_6 (\wb_exception_kind_i_reg[31]_6 ),
        .\wb_gpr_write_addr_reg[3] (\wb_gpr_write_addr_reg[0] [1:0]),
        .wb_reset_reg(wb_reset_reg));
  microblaze_v10_0_3_MB_MUXF7_195 \Instruction_Prefetch_Mux[42].Instr_Mux_MUXF7 
       (.I0_0(I0_0),
        .I1_2(I1_2),
        .of_instr_ii_0(of_instr_ii_0),
        .of_pause_reg(of_pause_reg));
  MB_FDR_196 \Instruction_Prefetch_Mux[4].Gen_Instr_DFF 
       (.Clk(Clk),
        .\EX_Sext_Op_reg[0] (\Instruction_Prefetch_Mux[4].Gen_Instr_DFF_n_3 ),
        .\EX_Sext_Op_reg[0]_0 (\EX_Sext_Op_reg[0] [1]),
        .\Using_FPGA.Native_0 (\ex_gpr_write_addr_reg[2] ),
        .\Using_FPGA.Native_1 (\ex_gpr_write_addr_reg[4] ),
        .\Using_FPGA.Native_10 (of_instr[5]),
        .\Using_FPGA.Native_11 (of_instr[2]),
        .\Using_FPGA.Native_12 (\ex_instr_reg[11] [6]),
        .\Using_FPGA.Native_13 (\ex_instr_reg[11] [5]),
        .\Using_FPGA.Native_14 (of_instr[3]),
        .\Using_FPGA.Native_15 (\Instruction_Prefetch_Mux[6].Gen_Instr_DFF_n_1 ),
        .\Using_FPGA.Native_2 (\ex_gpr_write_addr_reg[3] ),
        .\Using_FPGA.Native_3 (\ex_instr_reg[11] [2]),
        .\Using_FPGA.Native_4 (\ex_instr_reg[11] [3]),
        .\Using_FPGA.Native_5 (\Instruction_Prefetch_Mux[17].Gen_Instr_DFF_n_2 ),
        .\Using_FPGA.Native_6 (\ex_instr_reg[11] [18]),
        .\Using_FPGA.Native_7 (\Instruction_Prefetch_Mux[1].Gen_Instr_DFF_n_5 ),
        .\Using_FPGA.Native_8 (of_instr[0]),
        .\Using_FPGA.Native_9 (of_instr[4]),
        .ex_branch_with_delayslot_reg(ex_branch_with_delayslot_reg_0),
        .ex_gpr_write_dbg(ex_gpr_write_dbg),
        .ex_gpr_write_dbg_reg(ex_gpr_write_dbg_reg),
        .ex_gpr_write_reg(ex_gpr_write_reg),
        .ex_gpr_write_reg_0(ex_gpr_write_reg_0),
        .ex_op1_cmp_eq_n5_out(ex_op1_cmp_eq_n5_out),
        .\ex_opcode_reg[4] (of_instr[1]),
        .force12_out(force12_out),
        .force2_reg(ex_op1_cmp_eq1),
        .force_Val10_out(force_Val10_out),
        .of_instr_ii_38(of_instr_ii_38),
        .of_pause_reg(of_pause_reg),
        .of_read_imm_reg_ii_reg(of_read_imm_reg_ii_reg),
        .sync_reset(sync_reset),
        .use_Reg_Neg_DI1_out(use_Reg_Neg_DI1_out),
        .use_Reg_Neg_S3_out(use_Reg_Neg_S3_out),
        .wb_exception(wb_exception));
  microblaze_v10_0_3_MB_MUXF7_197 \Instruction_Prefetch_Mux[4].Instr_Mux_MUXF7 
       (.I0153_out(I0153_out),
        .I1151_out(I1151_out),
        .of_instr_ii_38(of_instr_ii_38),
        .of_pause_reg(of_pause_reg));
  MB_FDR_198 \Instruction_Prefetch_Mux[5].Gen_Instr_DFF 
       (.Clk(Clk),
        .D224_out(D224_out),
        .\EX_Op2_reg[0] (\EX_Op2_reg[0] [31]),
        .\EX_Op2_reg[0]_0 (\Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_2 ),
        .\EX_Op2_reg[0]_1 (\Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_3 ),
        .\EX_Op2_reg[16] (\Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_6 ),
        .\EX_Op2_reg[17] (\Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_7 ),
        .\EX_Op2_reg[18] (\Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_8 ),
        .\EX_Op2_reg[19] (\Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_9 ),
        .\EX_Op2_reg[20] (\Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_10 ),
        .\EX_Op2_reg[21] (\Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_11 ),
        .\EX_Op2_reg[22] (\Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_12 ),
        .\EX_Op2_reg[23] (\Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_13 ),
        .\EX_Op2_reg[24] (\Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_14 ),
        .\EX_Op2_reg[25] (\Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_15 ),
        .\EX_Op2_reg[26] (\Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_16 ),
        .\EX_Op2_reg[27] (\Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_17 ),
        .\EX_Op2_reg[28] (\Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_18 ),
        .\EX_Op2_reg[29] (\Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_19 ),
        .\EX_Op2_reg[30] (\Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_20 ),
        .\EX_Op2_reg[31] (\Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_21 ),
        .\EX_Op2_reg[31]_0 (\Instruction_Prefetch_Mux[5].Gen_Instr_DFF_n_28 ),
        .GPR_Op2({GPR_Op2[0],GPR_Op2[16],GPR_Op2[17],GPR_Op2[18],GPR_Op2[19],GPR_Op2[20],GPR_Op2[21],GPR_Op2[22],GPR_Op2[23],GPR_Op2[24],GPR_Op2[25],GPR_Op2[26],GPR_Op2[27],GPR_Op2[28],GPR_Op2[29],GPR_Op2[30],GPR_Op2[31]}),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_3 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_5 ),
        .\Using_FPGA.Native_10 (\Instruction_Prefetch_Mux[0].Gen_Instr_DFF_n_1 ),
        .\Using_FPGA.Native_11 (of_instr[3]),
        .\Using_FPGA.Native_12 (of_instr[1]),
        .\Using_FPGA.Native_13 (of_instr[4]),
        .\Using_FPGA.Native_14 (of_instr[2]),
        .\Using_FPGA.Native_15 (of_instr[5]),
        .\Using_FPGA.Native_2 (\Instruction_Prefetch_Mux[42].Gen_Instr_DFF_n_32 ),
        .\Using_FPGA.Native_3 (\Instruction_Prefetch_Mux[42].Gen_Instr_DFF_n_34 ),
        .\Using_FPGA.Native_4 (\ex_instr_reg[11] [15]),
        .\Using_FPGA.Native_5 (\Instruction_Prefetch_Mux[4].Gen_Instr_DFF_n_3 ),
        .\Using_FPGA.Native_6 (\ex_instr_reg[11] [14]),
        .\Using_FPGA.Native_7 (\ex_instr_reg[11] [13]),
        .\Using_FPGA.Native_8 (\ex_instr_reg[11] [12]),
        .\Using_FPGA.Native_9 ({\ex_instr_reg[11] [20:18],\ex_instr_reg[11] [11:0]}),
        .ex_enable_sext_shift_i0(ex_enable_sext_shift_i0),
        .\ex_gpr_write_addr_reg[0] (\Instruction_Prefetch_Mux[38].Gen_Instr_DFF_n_1 ),
        .ex_is_multi_or_load_instr(ex_is_multi_or_load_instr),
        .\ex_opcode_reg[5] (of_instr[0]),
        .ex_sel_alu_i_reg(ex_sel_alu_i_reg_14),
        .ex_set_bip(ex_set_bip),
        .\imm_reg_reg[0] (\imm_reg_reg[0] [15]),
        .\mem_gpr_write_addr_reg[4] (\Instruction_Prefetch_Mux[42].Gen_Instr_DFF_n_33 ),
        .mem_is_multi_or_load_instr(mem_is_multi_or_load_instr),
        .of_Sel_SPR_MSR1(of_Sel_SPR_MSR1),
        .of_Sel_SPR_MSR88_out(of_Sel_SPR_MSR88_out),
        .of_instr_ii_37(of_instr_ii_37),
        .of_read_ex_write_op2_conflict_part1(of_read_ex_write_op2_conflict_part1),
        .of_read_ex_write_op2_conflict_part2(of_read_ex_write_op2_conflict_part2),
        .of_read_mem_write_op2_conflict_part1(of_read_mem_write_op2_conflict_part1),
        .of_read_mem_write_op2_conflict_part2(of_read_mem_write_op2_conflict_part2),
        .sync_reset(sync_reset),
        .use_Reg_Neg_S_reg(use_Reg_Neg_S_reg),
        .use_Reg_Neg_S_reg_0(use_Reg_Neg_S_reg_0),
        .wb_exception_i_reg(wb_exception_i_reg));
  microblaze_v10_0_3_MB_MUXF7_199 \Instruction_Prefetch_Mux[5].Instr_Mux_MUXF7 
       (.I0149_out(I0149_out),
        .I1147_out(I1147_out),
        .of_instr_ii_37(of_instr_ii_37),
        .of_pause_reg(of_pause_reg));
  MB_FDR_200 \Instruction_Prefetch_Mux[6].Gen_Instr_DFF 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (D[0]),
        .\Using_FPGA.Native_1 (\ex_gpr_write_addr_reg[2] ),
        .\Using_FPGA.Native_2 (\ex_gpr_write_addr_reg[3] ),
        .\Using_FPGA.Native_3 (\ex_gpr_write_addr_reg[4] ),
        .\ex_gpr_write_addr_reg[0] (D[1]),
        .ex_gpr_write_reg(\Instruction_Prefetch_Mux[6].Gen_Instr_DFF_n_1 ),
        .ex_mbar_is_sleep(ex_mbar_is_sleep),
        .ex_mbar_is_sleep_reg(ex_mbar_is_sleep_cmb),
        .of_instr_ii_36(of_instr_ii_36),
        .of_pause_reg(of_pause_reg),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_201 \Instruction_Prefetch_Mux[6].Instr_Mux_MUXF7 
       (.I0145_out(I0145_out),
        .I1143_out(I1143_out),
        .of_instr_ii_36(of_instr_ii_36),
        .of_pause_reg(of_pause_reg));
  MB_FDR_202 \Instruction_Prefetch_Mux[7].Gen_Instr_DFF 
       (.Clk(Clk),
        .\EX_Op3_reg[0] (\EX_Op3_reg[0] ),
        .\EX_Op3_reg[31] (\EX_Op3_reg[31] ),
        .\EX_Op3_reg[31]_0 (\EX_Op3_reg[31]_0 ),
        .\EX_Op3_reg[31]_1 (\EX_Op3_reg[31]_1 ),
        .\EX_Op3_reg[31]_2 (\EX_Op3_reg[31]_2 ),
        .\EX_Op3_reg[31]_3 (\Instruction_Prefetch_Mux[7].Gen_Instr_DFF_n_36 ),
        .GPR_Op3(GPR_Op3),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_8 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_9 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_10 ),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_11 ),
        .\Using_FPGA.Native_4 (\Instruction_Prefetch_Mux[8].Gen_Instr_DFF_n_2 ),
        .\Using_FPGA.Native_5 (D[1]),
        .\Using_FPGA.Native_6 (\Using_FPGA.Native_1 ),
        .\Using_FPGA.Native_7 (\ex_gpr_write_addr_reg[4] ),
        .\Using_FPGA.Native_8 (\Instruction_Prefetch_Mux[9].Gen_Instr_DFF_n_3 ),
        .\WB_MEM_Result_reg[0] (\WB_MEM_Result_reg[0] ),
        .\WB_MEM_Result_reg[10] (\WB_MEM_Result_reg[10] ),
        .\WB_MEM_Result_reg[11] (\WB_MEM_Result_reg[11] ),
        .\WB_MEM_Result_reg[12] (\WB_MEM_Result_reg[12] ),
        .\WB_MEM_Result_reg[13] (\WB_MEM_Result_reg[13] ),
        .\WB_MEM_Result_reg[14] (\WB_MEM_Result_reg[14] ),
        .\WB_MEM_Result_reg[15] (\WB_MEM_Result_reg[15] ),
        .\WB_MEM_Result_reg[17] (\WB_MEM_Result_reg[16] [6:0]),
        .\WB_MEM_Result_reg[1] (\WB_MEM_Result_reg[1] ),
        .\WB_MEM_Result_reg[2] (\WB_MEM_Result_reg[2] ),
        .\WB_MEM_Result_reg[3] (\WB_MEM_Result_reg[3] ),
        .\WB_MEM_Result_reg[4] (\WB_MEM_Result_reg[4] ),
        .\WB_MEM_Result_reg[5] (\WB_MEM_Result_reg[5] ),
        .\WB_MEM_Result_reg[6] (\WB_MEM_Result_reg[6] ),
        .\WB_MEM_Result_reg[7] (\WB_MEM_Result_reg[7] ),
        .\WB_MEM_Result_reg[8] (\WB_MEM_Result_reg[8] ),
        .\WB_MEM_Result_reg[9] (\WB_MEM_Result_reg[9] ),
        .\ex_gpr_write_addr_reg[1] (D[0]),
        .\ex_gpr_write_addr_reg[1]_0 (\ex_gpr_write_addr_reg[0] [0]),
        .\ex_gpr_write_addr_reg[2] (\Instruction_Prefetch_Mux[8].Gen_Instr_DFF_n_1 ),
        .\ex_gpr_write_addr_reg[4] (\ex_gpr_write_addr_reg[4]_0 ),
        .ex_gpr_write_reg(ex_gpr_write_reg_0),
        .ex_sel_alu_i_reg(ex_sel_alu_i_reg_29),
        .ex_sel_alu_i_reg_0(ex_sel_alu_i_reg_28),
        .ex_sel_alu_i_reg_1(ex_sel_alu_i_reg_27),
        .ex_sel_alu_i_reg_10(ex_sel_alu_i_reg_16),
        .ex_sel_alu_i_reg_11(ex_sel_alu_i_reg_15),
        .ex_sel_alu_i_reg_12(ex_sel_alu_i_reg_20),
        .ex_sel_alu_i_reg_13(ex_sel_alu_i_reg_18),
        .ex_sel_alu_i_reg_14({ex_sel_alu_i_reg_0[15],ex_sel_alu_i_reg_0[12:11],ex_sel_alu_i_reg_0[9:7],ex_sel_alu_i_reg_0[5:1]}),
        .ex_sel_alu_i_reg_15(ex_sel_alu_i_reg_14),
        .ex_sel_alu_i_reg_2(ex_sel_alu_i_reg_26),
        .ex_sel_alu_i_reg_3(ex_sel_alu_i_reg_25),
        .ex_sel_alu_i_reg_4(ex_sel_alu_i_reg_24),
        .ex_sel_alu_i_reg_5(ex_sel_alu_i_reg_23),
        .ex_sel_alu_i_reg_6(ex_sel_alu_i_reg_22),
        .ex_sel_alu_i_reg_7(ex_sel_alu_i_reg_21),
        .ex_sel_alu_i_reg_8(ex_sel_alu_i_reg_19),
        .ex_sel_alu_i_reg_9(ex_sel_alu_i_reg_17),
        .ex_valid_reg(ex_valid_reg),
        .mem_MSR(mem_MSR),
        .mem_ex_result({mem_ex_result[0],mem_ex_result[1],mem_ex_result[4],mem_ex_result[5],mem_ex_result[7],mem_ex_result[8],mem_ex_result[9],mem_ex_result[11],mem_ex_result[12],mem_ex_result[13],mem_ex_result[14],mem_ex_result[15],mem_ex_result[17],mem_ex_result[18],mem_ex_result[19],mem_ex_result[20],mem_ex_result[21],mem_ex_result[22],mem_ex_result[23],mem_ex_result[24],mem_ex_result[25],mem_ex_result[26],mem_ex_result[27],mem_ex_result[28],mem_ex_result[29],mem_ex_result[30],mem_ex_result[31]}),
        .mem_gpr_write(mem_gpr_write),
        .\mem_gpr_write_addr_reg[0] (\mem_gpr_write_addr_reg[0] [4:3]),
        .\mem_gpr_write_addr_reg[3] (\Instruction_Prefetch_Mux[9].Gen_Instr_DFF_n_2 ),
        .\mem_gpr_write_addr_reg[4] (\Instruction_Prefetch_Mux[10].Gen_Instr_DFF_n_1 ),
        .mem_is_msr_instr_reg(mem_is_msr_instr_reg),
        .mem_valid_instr(mem_valid_instr),
        .of_instr_ii_35(of_instr_ii_35),
        .sync_reset(sync_reset),
        .\wb_exception_kind_i_reg[31] (\wb_exception_kind_i_reg[31] ),
        .\wb_exception_kind_i_reg[31]_0 (\wb_exception_kind_i_reg[31]_0 ),
        .\wb_exception_kind_i_reg[31]_1 (\wb_exception_kind_i_reg[31]_1 ),
        .\wb_exception_kind_i_reg[31]_2 (\wb_exception_kind_i_reg[31]_2 ),
        .\wb_exception_kind_i_reg[31]_3 (\wb_exception_kind_i_reg[31]_3 ),
        .\wb_exception_kind_i_reg[31]_4 (\wb_exception_kind_i_reg[31]_4 ),
        .\wb_exception_kind_i_reg[31]_5 (\wb_exception_kind_i_reg[31]_5 ),
        .\wb_exception_kind_i_reg[31]_6 (\wb_exception_kind_i_reg[31]_6 ),
        .\wb_gpr_write_addr_reg[1] (\wb_gpr_write_addr_reg[0] [3]));
  microblaze_v10_0_3_MB_MUXF7_203 \Instruction_Prefetch_Mux[7].Instr_Mux_MUXF7 
       (.I0141_out(I0141_out),
        .I1139_out(I1139_out),
        .of_instr_ii_35(of_instr_ii_35),
        .of_pause_reg(of_pause_reg));
  MB_FDR_204 \Instruction_Prefetch_Mux[8].Gen_Instr_DFF 
       (.Clk(Clk),
        .\EX_Op3_reg[31] (\Instruction_Prefetch_Mux[8].Gen_Instr_DFF_n_1 ),
        .\EX_Op3_reg[31]_0 (\Instruction_Prefetch_Mux[8].Gen_Instr_DFF_n_2 ),
        .I0(I0),
        .I4(I4),
        .\Using_FPGA.Native_0 (D[1]),
        .\Using_FPGA.Native_1 (\ex_gpr_write_addr_reg[3] ),
        .\Using_FPGA.Native_2 (\ex_gpr_write_addr_reg[4] ),
        .\Using_FPGA.Native_3 (\Instruction_Prefetch_Mux[7].Gen_Instr_DFF_n_36 ),
        .\Using_FPGA.Native_4 (\Using_FPGA.Native_1 ),
        .\ex_gpr_write_addr_reg[0] (\ex_gpr_write_addr_reg[0] [1]),
        .\ex_gpr_write_addr_reg[2] (\ex_gpr_write_addr_reg[2] ),
        .of_instr_ii_34(of_instr_ii_34),
        .sync_reset(sync_reset),
        .\wb_gpr_write_addr_reg[0] ({\wb_gpr_write_addr_reg[0] [4],\wb_gpr_write_addr_reg[0] [2:0]}),
        .wb_reset_reg(wb_reset_reg));
  microblaze_v10_0_3_MB_MUXF7_205 \Instruction_Prefetch_Mux[8].Instr_Mux_MUXF7 
       (.I0137_out(I0137_out),
        .I1135_out(I1135_out),
        .of_instr_ii_34(of_instr_ii_34),
        .of_pause_reg(of_pause_reg));
  MB_FDR_206 \Instruction_Prefetch_Mux[9].Gen_Instr_DFF 
       (.Clk(Clk),
        .\EX_Op3_reg[31] (\Instruction_Prefetch_Mux[9].Gen_Instr_DFF_n_2 ),
        .\EX_Op3_reg[31]_0 (\Instruction_Prefetch_Mux[9].Gen_Instr_DFF_n_3 ),
        .I0(I0),
        .\Using_FPGA.Native_0 (\ex_gpr_write_addr_reg[4] ),
        .\Using_FPGA.Native_1 (\ex_gpr_write_addr_reg[2] ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_1 ),
        .\Using_FPGA.Native_3 (D[1]),
        .\ex_gpr_write_addr_reg[0] (\ex_gpr_write_addr_reg[0] [1]),
        .\ex_gpr_write_addr_reg[3] (\ex_gpr_write_addr_reg[3] ),
        .ex_op1_cmp_eq(ex_op1_cmp_eq),
        .ex_op1_cmp_eq1(ex_op1_cmp_eq1),
        .\mem_gpr_write_addr_reg[3] (\mem_gpr_write_addr_reg[0] [1:0]),
        .of_instr_ii_33(of_instr_ii_33),
        .sync_reset(sync_reset));
  microblaze_v10_0_3_MB_MUXF7_207 \Instruction_Prefetch_Mux[9].Instr_Mux_MUXF7 
       (.I0133_out(I0133_out),
        .I1131_out(I1131_out),
        .of_instr_ii_33(of_instr_ii_33),
        .of_pause_reg(of_pause_reg));
  MB_FDS Last_Sel_DFF
       (.Clk(Clk),
        .D(D[0]),
        .I0101_out(I0101_out),
        .I0105_out(I0105_out),
        .I0109_out(I0109_out),
        .I0113_out(I0113_out),
        .I0117_out(I0117_out),
        .I0121_out(I0121_out),
        .I0125_out(I0125_out),
        .I0129_out(I0129_out),
        .I0133_out(I0133_out),
        .I0137_out(I0137_out),
        .I013_out(I013_out),
        .I0141_out(I0141_out),
        .I0145_out(I0145_out),
        .I0149_out(I0149_out),
        .I0153_out(I0153_out),
        .I0157_out(I0157_out),
        .I0161_out(I0161_out),
        .I0165_out(I0165_out),
        .I0169_out(I0169_out),
        .I017_out(I017_out),
        .I021_out(I021_out),
        .I025_out(I025_out),
        .I029_out(I029_out),
        .I033_out(I033_out),
        .I037_out(I037_out),
        .I045_out(I045_out),
        .I049_out(I049_out),
        .I053_out(I053_out),
        .I057_out(I057_out),
        .I05_out(I05_out),
        .I061_out(I061_out),
        .I065_out(I065_out),
        .I069_out(I069_out),
        .I073_out(I073_out),
        .I077_out(I077_out),
        .I081_out(I081_out),
        .I085_out(I085_out),
        .I089_out(I089_out),
        .I093_out(I093_out),
        .I097_out(I097_out),
        .I09_out(I09_out),
        .I0_0(I0_0),
        .IReady(IReady),
        .\Performace_Debug_Control.dbg_freeze_nohalt_reg (\Performace_Debug_Control.dbg_freeze_nohalt_reg ),
        .\Serial_Dbg_Intf.if_debug_ready_i_reg (\Serial_Dbg_Intf.if_debug_ready_i_reg_0 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_2 ),
        .\Using_FPGA.Native_1 (of_instr[5]),
        .\Using_FPGA.Native_10 (\ex_gpr_write_addr_reg[4] ),
        .\Using_FPGA.Native_11 ({\ex_instr_reg[11] [20:18],\ex_instr_reg[11] [11:0]}),
        .\Using_FPGA.Native_12 (\ex_instr_reg[11] [17:12]),
        .\Using_FPGA.Native_2 (of_instr[4]),
        .\Using_FPGA.Native_3 (of_instr[3]),
        .\Using_FPGA.Native_4 (of_instr[2]),
        .\Using_FPGA.Native_5 (of_instr[1]),
        .\Using_FPGA.Native_6 (of_instr[0]),
        .\Using_FPGA.Native_7 (D[1]),
        .\Using_FPGA.Native_8 (\ex_gpr_write_addr_reg[2] ),
        .\Using_FPGA.Native_9 (\ex_gpr_write_addr_reg[3] ),
        .if_missed_fetch_reg(if_missed_fetch_reg),
        .if_sel_input(if_sel_input[4]),
        .in({in[32:11],in[9:0]}),
        .of_predecode(of_predecode),
        .sel_input_i_0(sel_input_i_0),
        .sync_reset(sync_reset),
        .wb_Halted(wb_Halted));
  microblaze_v10_0_3_MB_LUT6__parameterized1 Mux_Select_Empty_LUT6
       (.I4_1(I4_1),
        .I5(I5),
        .IReady_1(IReady_1),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .if_sel_input(if_sel_input[4]),
        .of_pause_reg(of_pause_reg),
        .sel_input_i_0(sel_input_i_0));
  microblaze_v10_0_3_MB_LUT6__parameterized2 Mux_Select_OF_Valid_LUT6
       (.I4_1(I4_1),
        .I5(I5),
        .IReady_1(IReady_1),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .if_sel_input(if_sel_input[4]),
        .of_Valid_II(of_Valid_II),
        .of_pause_reg(of_pause_reg));
  MB_FDR_208 OF_Valid_DFF
       (.Clk(Clk),
        .Q(Q),
        .of_Valid_II(of_Valid_II),
        .of_pipe_ctrl_reg0(of_pipe_ctrl_reg0),
        .of_valid(of_valid),
        .sync_reset(sync_reset),
        .wb_exception(wb_exception));
  FDRE #(
    .INIT(1'b0)) 
    ex_branch_with_delayslot_i_reg
       (.C(Clk),
        .CE(1'b1),
        .D(\Instruction_Prefetch_Mux[11].Gen_Instr_DFF_n_3 ),
        .Q(ex_branch_with_delayslot_i),
        .R(dbg_stop_i));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][0]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][0]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(in[0]),
        .Q(\ibuffer_reg[3][0]_srl4_n_0 ));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][10]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][10]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(in[10]),
        .Q(\Using_FPGA.Native_6 ));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][11]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][11]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(in[11]),
        .Q(p_1_in54_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][12]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][12]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(in[12]),
        .Q(p_1_in59_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][13]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][13]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(in[13]),
        .Q(p_1_in64_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][14]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][14]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(in[14]),
        .Q(p_1_in69_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][15]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][15]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(in[15]),
        .Q(p_1_in74_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][16]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][16]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(in[16]),
        .Q(p_1_in79_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][17]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][17]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(in[17]),
        .Q(p_1_in84_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][18]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][18]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(in[18]),
        .Q(p_1_in89_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][19]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][19]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(in[19]),
        .Q(p_1_in94_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][1]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][1]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(in[1]),
        .Q(p_1_in4_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][20]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][20]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(in[20]),
        .Q(p_1_in99_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][21]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][21]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(in[21]),
        .Q(p_1_in104_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][22]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][22]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(in[0]),
        .Q(p_1_in109_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][23]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][23]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(in[1]),
        .Q(p_1_in114_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][24]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][24]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(in[2]),
        .Q(p_1_in119_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][25]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][25]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(in[3]),
        .Q(p_1_in124_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][26]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][26]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(in[4]),
        .Q(p_1_in129_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][27]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][27]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(in[5]),
        .Q(p_1_in134_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][28]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][28]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(in[6]),
        .Q(p_1_in139_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][29]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][29]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(in[7]),
        .Q(p_1_in144_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][2]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][2]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(in[2]),
        .Q(p_1_in9_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][30]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][30]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(in[8]),
        .Q(p_1_in149_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][31]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][31]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(in[9]),
        .Q(p_1_in154_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][32]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][32]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(in[22]),
        .Q(p_1_in159_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][33]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][33]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(in[23]),
        .Q(p_1_in164_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][34]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][34]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(in[24]),
        .Q(p_1_in169_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][35]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][35]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(in[25]),
        .Q(p_1_in174_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][36]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][36]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(in[26]),
        .Q(p_1_in179_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][37]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][37]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(in[27]),
        .Q(p_1_in184_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][38]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][38]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(in[28]),
        .Q(p_1_in189_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][39]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][39]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(in[29]),
        .Q(p_1_in194_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][3]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][3]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(in[3]),
        .Q(p_1_in14_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][40]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][40]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(in[30]),
        .Q(p_1_in199_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][41]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][41]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(in[31]),
        .Q(p_1_in204_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][42]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][42]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(in[32]),
        .Q(p_1_in209_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][4]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][4]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(in[4]),
        .Q(p_1_in19_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][5]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][5]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(in[5]),
        .Q(p_1_in24_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][6]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][6]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(in[6]),
        .Q(p_1_in29_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][7]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][7]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(in[7]),
        .Q(p_1_in34_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][8]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][8]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(in[8]),
        .Q(p_1_in39_in));
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3] " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[3][9]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[3][9]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native ),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_1),
        .CLK(Clk),
        .D(in[9]),
        .Q(p_1_in44_in));
endmodule

module Register_File_gti
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    DID,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    \wb_gpr_write_addr_reg[0] ,
    \WB_MEM_Result_reg[2] ,
    \WB_MEM_Result_reg[4] ,
    \WB_MEM_Result_reg[6] ,
    \WB_MEM_Result_reg[8] ,
    \WB_MEM_Result_reg[10] ,
    \WB_MEM_Result_reg[12] ,
    \WB_MEM_Result_reg[14] ,
    \WB_MEM_Result_reg[16] ,
    \WB_MEM_Result_reg[18] ,
    \WB_MEM_Result_reg[20] ,
    \WB_MEM_Result_reg[22] ,
    \wb_exception_kind_i_reg[31] ,
    \wb_exception_kind_i_reg[31]_0 ,
    \wb_exception_kind_i_reg[31]_1 ,
    \wb_exception_kind_i_reg[31]_2 );
  output [0:31]GPR_Op1;
  output [0:31]GPR_Op2;
  output [0:31]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]DID;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]\wb_gpr_write_addr_reg[0] ;
  input [1:0]\WB_MEM_Result_reg[2] ;
  input [1:0]\WB_MEM_Result_reg[4] ;
  input [1:0]\WB_MEM_Result_reg[6] ;
  input [1:0]\WB_MEM_Result_reg[8] ;
  input [1:0]\WB_MEM_Result_reg[10] ;
  input [1:0]\WB_MEM_Result_reg[12] ;
  input [1:0]\WB_MEM_Result_reg[14] ;
  input [1:0]\WB_MEM_Result_reg[16] ;
  input [1:0]\WB_MEM_Result_reg[18] ;
  input [1:0]\WB_MEM_Result_reg[20] ;
  input [1:0]\WB_MEM_Result_reg[22] ;
  input [1:0]\wb_exception_kind_i_reg[31] ;
  input [1:0]\wb_exception_kind_i_reg[31]_0 ;
  input [1:0]\wb_exception_kind_i_reg[31]_1 ;
  input [1:0]\wb_exception_kind_i_reg[31]_2 ;

  wire Clk;
  wire [1:0]DID;
  wire [0:31]GPR_Op1;
  wire [0:31]GPR_Op2;
  wire [0:31]GPR_Op3;
  wire WB_GPR_Wr;
  wire [1:0]\WB_MEM_Result_reg[10] ;
  wire [1:0]\WB_MEM_Result_reg[12] ;
  wire [1:0]\WB_MEM_Result_reg[14] ;
  wire [1:0]\WB_MEM_Result_reg[16] ;
  wire [1:0]\WB_MEM_Result_reg[18] ;
  wire [1:0]\WB_MEM_Result_reg[20] ;
  wire [1:0]\WB_MEM_Result_reg[22] ;
  wire [1:0]\WB_MEM_Result_reg[2] ;
  wire [1:0]\WB_MEM_Result_reg[4] ;
  wire [1:0]\WB_MEM_Result_reg[6] ;
  wire [1:0]\WB_MEM_Result_reg[8] ;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;
  wire [1:0]\wb_exception_kind_i_reg[31] ;
  wire [1:0]\wb_exception_kind_i_reg[31]_0 ;
  wire [1:0]\wb_exception_kind_i_reg[31]_1 ;
  wire [1:0]\wb_exception_kind_i_reg[31]_2 ;
  wire [4:0]\wb_gpr_write_addr_reg[0] ;

  MB_RAM32M \Using_LUT6.All_RAM32M[0].ram32m_i 
       (.Clk(Clk),
        .DID(DID),
        .GPR_Op1({GPR_Op1[0],GPR_Op1[1]}),
        .GPR_Op2({GPR_Op2[0],GPR_Op2[1]}),
        .GPR_Op3({GPR_Op3[0],GPR_Op3[1]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data),
        .\wb_gpr_write_addr_reg[0] (\wb_gpr_write_addr_reg[0] ));
  MB_RAM32M_412 \Using_LUT6.All_RAM32M[10].ram32m_i 
       (.Clk(Clk),
        .GPR_Op1({GPR_Op1[20],GPR_Op1[21]}),
        .GPR_Op2({GPR_Op2[20],GPR_Op2[21]}),
        .GPR_Op3({GPR_Op3[20],GPR_Op3[21]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .\WB_MEM_Result_reg[20] (\WB_MEM_Result_reg[20] ),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data),
        .\wb_gpr_write_addr_reg[0] (\wb_gpr_write_addr_reg[0] ));
  MB_RAM32M_413 \Using_LUT6.All_RAM32M[11].ram32m_i 
       (.Clk(Clk),
        .GPR_Op1({GPR_Op1[22],GPR_Op1[23]}),
        .GPR_Op2({GPR_Op2[22],GPR_Op2[23]}),
        .GPR_Op3({GPR_Op3[22],GPR_Op3[23]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .\WB_MEM_Result_reg[22] (\WB_MEM_Result_reg[22] ),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data),
        .\wb_gpr_write_addr_reg[0] (\wb_gpr_write_addr_reg[0] ));
  MB_RAM32M_414 \Using_LUT6.All_RAM32M[12].ram32m_i 
       (.Clk(Clk),
        .GPR_Op1({GPR_Op1[24],GPR_Op1[25]}),
        .GPR_Op2({GPR_Op2[24],GPR_Op2[25]}),
        .GPR_Op3({GPR_Op3[24],GPR_Op3[25]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data),
        .\wb_exception_kind_i_reg[31] (\wb_exception_kind_i_reg[31] ),
        .\wb_gpr_write_addr_reg[0] (\wb_gpr_write_addr_reg[0] ));
  MB_RAM32M_415 \Using_LUT6.All_RAM32M[13].ram32m_i 
       (.Clk(Clk),
        .GPR_Op1({GPR_Op1[26],GPR_Op1[27]}),
        .GPR_Op2({GPR_Op2[26],GPR_Op2[27]}),
        .GPR_Op3({GPR_Op3[26],GPR_Op3[27]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data),
        .\wb_exception_kind_i_reg[31] (\wb_exception_kind_i_reg[31]_0 ),
        .\wb_gpr_write_addr_reg[0] (\wb_gpr_write_addr_reg[0] ));
  MB_RAM32M_416 \Using_LUT6.All_RAM32M[14].ram32m_i 
       (.Clk(Clk),
        .GPR_Op1({GPR_Op1[28],GPR_Op1[29]}),
        .GPR_Op2({GPR_Op2[28],GPR_Op2[29]}),
        .GPR_Op3({GPR_Op3[28],GPR_Op3[29]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data),
        .\wb_exception_kind_i_reg[31] (\wb_exception_kind_i_reg[31]_1 ),
        .\wb_gpr_write_addr_reg[0] (\wb_gpr_write_addr_reg[0] ));
  MB_RAM32M_417 \Using_LUT6.All_RAM32M[15].ram32m_i 
       (.Clk(Clk),
        .GPR_Op1({GPR_Op1[30],GPR_Op1[31]}),
        .GPR_Op2({GPR_Op2[30],GPR_Op2[31]}),
        .GPR_Op3({GPR_Op3[30],GPR_Op3[31]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data),
        .\wb_exception_kind_i_reg[31] (\wb_exception_kind_i_reg[31]_2 ),
        .\wb_gpr_write_addr_reg[0] (\wb_gpr_write_addr_reg[0] ));
  MB_RAM32M_418 \Using_LUT6.All_RAM32M[1].ram32m_i 
       (.Clk(Clk),
        .GPR_Op1({GPR_Op1[2],GPR_Op1[3]}),
        .GPR_Op2({GPR_Op2[2],GPR_Op2[3]}),
        .GPR_Op3({GPR_Op3[2],GPR_Op3[3]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .\WB_MEM_Result_reg[2] (\WB_MEM_Result_reg[2] ),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data),
        .\wb_gpr_write_addr_reg[0] (\wb_gpr_write_addr_reg[0] ));
  MB_RAM32M_419 \Using_LUT6.All_RAM32M[2].ram32m_i 
       (.Clk(Clk),
        .GPR_Op1({GPR_Op1[4],GPR_Op1[5]}),
        .GPR_Op2({GPR_Op2[4],GPR_Op2[5]}),
        .GPR_Op3({GPR_Op3[4],GPR_Op3[5]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .\WB_MEM_Result_reg[4] (\WB_MEM_Result_reg[4] ),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data),
        .\wb_gpr_write_addr_reg[0] (\wb_gpr_write_addr_reg[0] ));
  MB_RAM32M_420 \Using_LUT6.All_RAM32M[3].ram32m_i 
       (.Clk(Clk),
        .GPR_Op1({GPR_Op1[6],GPR_Op1[7]}),
        .GPR_Op2({GPR_Op2[6],GPR_Op2[7]}),
        .GPR_Op3({GPR_Op3[6],GPR_Op3[7]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .\WB_MEM_Result_reg[6] (\WB_MEM_Result_reg[6] ),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data),
        .\wb_gpr_write_addr_reg[0] (\wb_gpr_write_addr_reg[0] ));
  MB_RAM32M_421 \Using_LUT6.All_RAM32M[4].ram32m_i 
       (.Clk(Clk),
        .GPR_Op1({GPR_Op1[8],GPR_Op1[9]}),
        .GPR_Op2({GPR_Op2[8],GPR_Op2[9]}),
        .GPR_Op3({GPR_Op3[8],GPR_Op3[9]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .\WB_MEM_Result_reg[8] (\WB_MEM_Result_reg[8] ),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data),
        .\wb_gpr_write_addr_reg[0] (\wb_gpr_write_addr_reg[0] ));
  MB_RAM32M_422 \Using_LUT6.All_RAM32M[5].ram32m_i 
       (.Clk(Clk),
        .GPR_Op1({GPR_Op1[10],GPR_Op1[11]}),
        .GPR_Op2({GPR_Op2[10],GPR_Op2[11]}),
        .GPR_Op3({GPR_Op3[10],GPR_Op3[11]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .\WB_MEM_Result_reg[10] (\WB_MEM_Result_reg[10] ),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data),
        .\wb_gpr_write_addr_reg[0] (\wb_gpr_write_addr_reg[0] ));
  MB_RAM32M_423 \Using_LUT6.All_RAM32M[6].ram32m_i 
       (.Clk(Clk),
        .GPR_Op1({GPR_Op1[12],GPR_Op1[13]}),
        .GPR_Op2({GPR_Op2[12],GPR_Op2[13]}),
        .GPR_Op3({GPR_Op3[12],GPR_Op3[13]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .\WB_MEM_Result_reg[12] (\WB_MEM_Result_reg[12] ),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data),
        .\wb_gpr_write_addr_reg[0] (\wb_gpr_write_addr_reg[0] ));
  MB_RAM32M_424 \Using_LUT6.All_RAM32M[7].ram32m_i 
       (.Clk(Clk),
        .GPR_Op1({GPR_Op1[14],GPR_Op1[15]}),
        .GPR_Op2({GPR_Op2[14],GPR_Op2[15]}),
        .GPR_Op3({GPR_Op3[14],GPR_Op3[15]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .\WB_MEM_Result_reg[14] (\WB_MEM_Result_reg[14] ),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data),
        .\wb_gpr_write_addr_reg[0] (\wb_gpr_write_addr_reg[0] ));
  MB_RAM32M_425 \Using_LUT6.All_RAM32M[8].ram32m_i 
       (.Clk(Clk),
        .GPR_Op1({GPR_Op1[16],GPR_Op1[17]}),
        .GPR_Op2({GPR_Op2[16],GPR_Op2[17]}),
        .GPR_Op3({GPR_Op3[16],GPR_Op3[17]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .\WB_MEM_Result_reg[16] (\WB_MEM_Result_reg[16] ),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data),
        .\wb_gpr_write_addr_reg[0] (\wb_gpr_write_addr_reg[0] ));
  MB_RAM32M_426 \Using_LUT6.All_RAM32M[9].ram32m_i 
       (.Clk(Clk),
        .GPR_Op1({GPR_Op1[18],GPR_Op1[19]}),
        .GPR_Op2({GPR_Op2[18],GPR_Op2[19]}),
        .GPR_Op3({GPR_Op3[18],GPR_Op3[19]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .\WB_MEM_Result_reg[18] (\WB_MEM_Result_reg[18] ),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data),
        .\wb_gpr_write_addr_reg[0] (\wb_gpr_write_addr_reg[0] ));
endmodule

module Shift_Logic_Module_gti
   (out,
    \Using_FPGA.Native ,
    in0,
    \EX_Op1_reg[24] );
  output out;
  output \Using_FPGA.Native ;
  input in0;
  input \EX_Op1_reg[24] ;

  (* RTL_KEEP = "true" *) wire sign_0_15;
  (* RTL_KEEP = "true" *) wire sign_16_23;

  assign \Using_FPGA.Native  = sign_0_15;
  assign out = sign_16_23;
  assign sign_0_15 = \EX_Op1_reg[24] ;
  assign sign_16_23 = in0;
endmodule

module Zero_Detect_gti
   (ex_op1_zero,
    ex_op1_cmp_equal,
    \Zero_Detecting[0].nibble_Zero_reg ,
    ex_op1_cmp_equal_n,
    \EX_Branch_CMP_Op1_reg[0] ,
    lopt,
    lopt_1,
    lopt_2);
  output ex_op1_zero;
  input ex_op1_cmp_equal;
  input \Zero_Detecting[0].nibble_Zero_reg ;
  input ex_op1_cmp_equal_n;
  input [29:0]\EX_Branch_CMP_Op1_reg[0] ;
  output lopt;
  input lopt_1;
  input lopt_2;

  wire [29:0]\EX_Branch_CMP_Op1_reg[0] ;
  wire S;
  wire \Zero_Detecting[0].nibble_Zero_reg ;
  wire \Zero_Detecting[2].nibble_Zero_reg ;
  wire \Zero_Detecting[3].nibble_Zero_reg ;
  wire \Zero_Detecting[4].nibble_Zero_reg ;
  wire \Zero_Detecting[5].nibble_Zero_reg ;
  wire ex_op1_cmp_equal;
  wire ex_op1_cmp_equal_n;
  wire \^lopt_2 ;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire zero_CI_3;
  wire NLW_Part_Of_Zero_Carry_Start_lopt_UNCONNECTED;
  wire NLW_Part_Of_Zero_Carry_Start_lopt_3_UNCONNECTED;
  wire NLW_Part_Of_Zero_Carry_Start_zero_CI_0_UNCONNECTED;
  wire \NLW_Zero_Detecting[2].I_Part_Of_Zero_Detect_Zero_Detecting[2].nibble_Zero_reg_UNCONNECTED ;
  wire \NLW_Zero_Detecting[2].I_Part_Of_Zero_Detect_ex_op1_cmp_equal_n_UNCONNECTED ;
  wire \NLW_Zero_Detecting[2].I_Part_Of_Zero_Detect_zero_CI_2_UNCONNECTED ;
  wire \NLW_Zero_Detecting[3].I_Part_Of_Zero_Detect_lopt_UNCONNECTED ;
  wire \NLW_Zero_Detecting[3].I_Part_Of_Zero_Detect_lopt_2_UNCONNECTED ;
  wire \NLW_Zero_Detecting[3].I_Part_Of_Zero_Detect_zero_CI_4_UNCONNECTED ;

  assign lopt = lopt_5;
  assign lopt_6 = lopt_1;
  assign lopt_7 = lopt_2;
  microblaze_v10_0_3_MB_MUXCY_405 Part_Of_Zero_Carry_Start
       (.ex_op1_cmp_equal(ex_op1_cmp_equal),
        .lopt(NLW_Part_Of_Zero_Carry_Start_lopt_UNCONNECTED),
        .lopt_1(ex_op1_cmp_equal_n),
        .lopt_2(\Zero_Detecting[0].nibble_Zero_reg ),
        .lopt_3(NLW_Part_Of_Zero_Carry_Start_lopt_3_UNCONNECTED),
        .lopt_4(S),
        .lopt_5(\^lopt_2 ),
        .lopt_6(\Zero_Detecting[2].nibble_Zero_reg ),
        .zero_CI_0(NLW_Part_Of_Zero_Carry_Start_zero_CI_0_UNCONNECTED));
  microblaze_v10_0_3_MB_MUXCY_408 \Zero_Detecting[2].I_Part_Of_Zero_Detect 
       (.\Zero_Detecting[2].nibble_Zero_reg (\NLW_Zero_Detecting[2].I_Part_Of_Zero_Detect_Zero_Detecting[2].nibble_Zero_reg_UNCONNECTED ),
        .ex_op1_cmp_equal_n(\NLW_Zero_Detecting[2].I_Part_Of_Zero_Detect_ex_op1_cmp_equal_n_UNCONNECTED ),
        .lopt(\^lopt_2 ),
        .zero_CI_2(\NLW_Zero_Detecting[2].I_Part_Of_Zero_Detect_zero_CI_2_UNCONNECTED ),
        .zero_CI_3(zero_CI_3));
  microblaze_v10_0_3_MB_MUXCY_409 \Zero_Detecting[3].I_Part_Of_Zero_Detect 
       (.\Zero_Detecting[3].nibble_Zero_reg (\Zero_Detecting[3].nibble_Zero_reg ),
        .ex_op1_cmp_equal_n(ex_op1_cmp_equal_n),
        .lopt(\NLW_Zero_Detecting[3].I_Part_Of_Zero_Detect_lopt_UNCONNECTED ),
        .lopt_1(\Zero_Detecting[4].nibble_Zero_reg ),
        .lopt_2(\NLW_Zero_Detecting[3].I_Part_Of_Zero_Detect_lopt_2_UNCONNECTED ),
        .lopt_3(\Zero_Detecting[5].nibble_Zero_reg ),
        .lopt_4(lopt_5),
        .lopt_5(lopt_6),
        .lopt_6(lopt_7),
        .zero_CI_3(zero_CI_3),
        .zero_CI_4(\NLW_Zero_Detecting[3].I_Part_Of_Zero_Detect_zero_CI_4_UNCONNECTED ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \nibble_Zero0_inferred__0/i_ 
       (.I0(\EX_Branch_CMP_Op1_reg[0] [1]),
        .I1(\EX_Branch_CMP_Op1_reg[0] [2]),
        .I2(\EX_Branch_CMP_Op1_reg[0] [5]),
        .I3(\EX_Branch_CMP_Op1_reg[0] [0]),
        .I4(\EX_Branch_CMP_Op1_reg[0] [3]),
        .I5(\EX_Branch_CMP_Op1_reg[0] [4]),
        .O(S));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \nibble_Zero0_inferred__1/i_ 
       (.I0(\EX_Branch_CMP_Op1_reg[0] [7]),
        .I1(\EX_Branch_CMP_Op1_reg[0] [8]),
        .I2(\EX_Branch_CMP_Op1_reg[0] [11]),
        .I3(\EX_Branch_CMP_Op1_reg[0] [6]),
        .I4(\EX_Branch_CMP_Op1_reg[0] [9]),
        .I5(\EX_Branch_CMP_Op1_reg[0] [10]),
        .O(\Zero_Detecting[2].nibble_Zero_reg ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \nibble_Zero0_inferred__2/i_ 
       (.I0(\EX_Branch_CMP_Op1_reg[0] [13]),
        .I1(\EX_Branch_CMP_Op1_reg[0] [14]),
        .I2(\EX_Branch_CMP_Op1_reg[0] [17]),
        .I3(\EX_Branch_CMP_Op1_reg[0] [12]),
        .I4(\EX_Branch_CMP_Op1_reg[0] [15]),
        .I5(\EX_Branch_CMP_Op1_reg[0] [16]),
        .O(\Zero_Detecting[3].nibble_Zero_reg ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \nibble_Zero0_inferred__3/i_ 
       (.I0(\EX_Branch_CMP_Op1_reg[0] [19]),
        .I1(\EX_Branch_CMP_Op1_reg[0] [20]),
        .I2(\EX_Branch_CMP_Op1_reg[0] [23]),
        .I3(\EX_Branch_CMP_Op1_reg[0] [18]),
        .I4(\EX_Branch_CMP_Op1_reg[0] [21]),
        .I5(\EX_Branch_CMP_Op1_reg[0] [22]),
        .O(\Zero_Detecting[4].nibble_Zero_reg ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \nibble_Zero0_inferred__4/i_ 
       (.I0(\EX_Branch_CMP_Op1_reg[0] [25]),
        .I1(\EX_Branch_CMP_Op1_reg[0] [26]),
        .I2(\EX_Branch_CMP_Op1_reg[0] [29]),
        .I3(\EX_Branch_CMP_Op1_reg[0] [24]),
        .I4(\EX_Branch_CMP_Op1_reg[0] [27]),
        .I5(\EX_Branch_CMP_Op1_reg[0] [28]),
        .O(\Zero_Detecting[5].nibble_Zero_reg ));
endmodule

module address_hit
   (Hit,
    \Serial_Dbg_Intf.Instr_Insert_Reg_En_1_reg ,
    \Performace_Debug_Control.ex_dbg_pc_hit_i_reg ,
    \Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg ,
    of_pause_reg,
    force_stop_i,
    \Performace_Debug_Control.dbg_stop_i_reg ,
    single_Step_N,
    \Using_FPGA.Native ,
    \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ,
    normal_stop_i,
    dbg_clean_stop,
    Dbg_Reg_En,
    \Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg_0 ,
    mem_Exception_Taken,
    \Performace_Debug_Control.dbg_stop_if_delay_i_reg ,
    ex_branch_with_delayslot_reg,
    \Performace_Debug_Control.ex_dbg_pc_hit_i_reg_0 ,
    Dbg_TDI,
    Address,
    Dbg_Clk,
    Q);
  output Hit;
  output \Serial_Dbg_Intf.Instr_Insert_Reg_En_1_reg ;
  output \Performace_Debug_Control.ex_dbg_pc_hit_i_reg ;
  output \Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg ;
  input of_pause_reg;
  input force_stop_i;
  input \Performace_Debug_Control.dbg_stop_i_reg ;
  input single_Step_N;
  input \Using_FPGA.Native ;
  input \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  input normal_stop_i;
  input dbg_clean_stop;
  input [0:7]Dbg_Reg_En;
  input \Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg_0 ;
  input mem_Exception_Taken;
  input \Performace_Debug_Control.dbg_stop_if_delay_i_reg ;
  input ex_branch_with_delayslot_reg;
  input \Performace_Debug_Control.ex_dbg_pc_hit_i_reg_0 ;
  input Dbg_TDI;
  input [0:31]Address;
  input Dbg_Clk;
  input [0:0]Q;

  wire [0:31]Address;
  wire Dbg_Clk;
  wire [0:7]Dbg_Reg_En;
  wire Dbg_TDI;
  wire Hit;
  wire \Performace_Debug_Control.dbg_stop_i_reg ;
  wire \Performace_Debug_Control.dbg_stop_if_delay_i_reg ;
  wire \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  wire \Performace_Debug_Control.ex_dbg_pc_hit_i_reg ;
  wire \Performace_Debug_Control.ex_dbg_pc_hit_i_reg_0 ;
  wire \Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg ;
  wire \Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg_0 ;
  wire [0:0]Q;
  wire SRL16_MC15_1;
  wire SRL16_MC15_2;
  wire SRL16_MC15_3;
  wire SRL16_MC15_4;
  wire SRL16_MC15_5;
  wire SRL16_MC15_6;
  wire SRL16_MC15_7;
  wire SRL16_Sel_0;
  wire SRL16_Sel_1;
  wire SRL16_Sel_2;
  wire SRL16_Sel_3;
  wire SRL16_Sel_4;
  wire SRL16_Sel_5;
  wire SRL16_Sel_6;
  wire SRL16_Sel_7;
  wire \Serial_Dbg_Intf.Instr_Insert_Reg_En_1_reg ;
  wire \Using_FPGA.Native ;
  wire carry_0;
  wire carry_4;
  wire dbg_clean_stop;
  wire ex_branch_with_delayslot_reg;
  wire force_stop_i;
  wire lopt_1;
  wire lopt_10;
  wire lopt_11;
  wire lopt_3;
  wire lopt_4;
  wire lopt_5;
  wire lopt_7;
  wire lopt_9;
  wire mem_Exception_Taken;
  wire normal_stop_i;
  wire of_pause_reg;
  wire single_Step_N;
  wire which_pc;
  wire \NLW_Compare[0].MUXCY_I_carry_7_UNCONNECTED ;
  wire \NLW_Compare[0].MUXCY_I_lopt_UNCONNECTED ;
  wire \NLW_Compare[0].MUXCY_I_lopt_3_UNCONNECTED ;
  wire \NLW_Compare[1].MUXCY_I_SRL16_Sel_6_UNCONNECTED ;
  wire \NLW_Compare[1].MUXCY_I_carry_6_UNCONNECTED ;
  wire \NLW_Compare[1].MUXCY_I_carry_7_UNCONNECTED ;
  wire \NLW_Compare[1].MUXCY_I_lopt_UNCONNECTED ;
  wire \NLW_Compare[2].MUXCY_I_SRL16_Sel_5_UNCONNECTED ;
  wire \NLW_Compare[2].MUXCY_I_carry_5_UNCONNECTED ;
  wire \NLW_Compare[2].MUXCY_I_carry_6_UNCONNECTED ;
  wire \NLW_Compare[2].MUXCY_I_lopt_UNCONNECTED ;
  wire \NLW_Compare[3].MUXCY_I_SRL16_Sel_4_UNCONNECTED ;
  wire \NLW_Compare[3].MUXCY_I_carry_5_UNCONNECTED ;
  wire \NLW_Compare[4].MUXCY_I_carry_3_UNCONNECTED ;
  wire \NLW_Compare[4].MUXCY_I_lopt_UNCONNECTED ;
  wire \NLW_Compare[4].MUXCY_I_lopt_3_UNCONNECTED ;
  wire \NLW_Compare[5].MUXCY_I_SRL16_Sel_2_UNCONNECTED ;
  wire \NLW_Compare[5].MUXCY_I_carry_2_UNCONNECTED ;
  wire \NLW_Compare[5].MUXCY_I_carry_3_UNCONNECTED ;
  wire \NLW_Compare[5].MUXCY_I_lopt_UNCONNECTED ;
  wire \NLW_Compare[6].MUXCY_I_SRL16_Sel_1_UNCONNECTED ;
  wire \NLW_Compare[6].MUXCY_I_carry_1_UNCONNECTED ;
  wire \NLW_Compare[6].MUXCY_I_carry_2_UNCONNECTED ;
  wire \NLW_Compare[6].MUXCY_I_lopt_UNCONNECTED ;
  wire \NLW_Compare[7].MUXCY_I_SRL16_Sel_0_UNCONNECTED ;
  wire \NLW_Compare[7].MUXCY_I_carry_1_UNCONNECTED ;

  microblaze_v10_0_3_MB_MUXCY_32 \Compare[0].MUXCY_I 
       (.Q(Q),
        .SRL16_Sel_7(SRL16_Sel_7),
        .carry_7(\NLW_Compare[0].MUXCY_I_carry_7_UNCONNECTED ),
        .lopt(\NLW_Compare[0].MUXCY_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_1),
        .lopt_2(SRL16_Sel_6),
        .lopt_3(\NLW_Compare[0].MUXCY_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_3),
        .lopt_5(SRL16_Sel_5),
        .lopt_6(lopt_4),
        .lopt_7(lopt_5),
        .lopt_8(SRL16_Sel_4));
  MB_SRLC16E \Compare[0].SRLC16E_I 
       (.Address({Address[28],Address[29],Address[30],Address[31]}),
        .Dbg_Clk(Dbg_Clk),
        .Dbg_Reg_En(Dbg_Reg_En),
        .SRL16_MC15_7(SRL16_MC15_7),
        .SRL16_Sel_7(SRL16_Sel_7),
        .\Serial_Dbg_Intf.Instr_Insert_Reg_En_1_reg (\Serial_Dbg_Intf.Instr_Insert_Reg_En_1_reg ),
        .which_pc(which_pc));
  microblaze_v10_0_3_MB_MUXCY_33 \Compare[1].MUXCY_I 
       (.SRL16_Sel_6(\NLW_Compare[1].MUXCY_I_SRL16_Sel_6_UNCONNECTED ),
        .carry_6(\NLW_Compare[1].MUXCY_I_carry_6_UNCONNECTED ),
        .carry_7(\NLW_Compare[1].MUXCY_I_carry_7_UNCONNECTED ),
        .lopt(\NLW_Compare[1].MUXCY_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_1));
  MB_SRLC16E_34 \Compare[1].SRLC16E_I 
       (.Address({Address[24],Address[25],Address[26],Address[27]}),
        .Dbg_Clk(Dbg_Clk),
        .SRL16_MC15_6(SRL16_MC15_6),
        .SRL16_MC15_7(SRL16_MC15_7),
        .SRL16_Sel_6(SRL16_Sel_6),
        .which_pc(which_pc));
  microblaze_v10_0_3_MB_MUXCY_35 \Compare[2].MUXCY_I 
       (.SRL16_Sel_5(\NLW_Compare[2].MUXCY_I_SRL16_Sel_5_UNCONNECTED ),
        .carry_5(\NLW_Compare[2].MUXCY_I_carry_5_UNCONNECTED ),
        .carry_6(\NLW_Compare[2].MUXCY_I_carry_6_UNCONNECTED ),
        .lopt(\NLW_Compare[2].MUXCY_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_3));
  MB_SRLC16E_36 \Compare[2].SRLC16E_I 
       (.Address({Address[20],Address[21],Address[22],Address[23]}),
        .Dbg_Clk(Dbg_Clk),
        .SRL16_MC15_5(SRL16_MC15_5),
        .SRL16_MC15_6(SRL16_MC15_6),
        .SRL16_Sel_5(SRL16_Sel_5),
        .which_pc(which_pc));
  microblaze_v10_0_3_MB_MUXCY_37 \Compare[3].MUXCY_I 
       (.SRL16_Sel_4(\NLW_Compare[3].MUXCY_I_SRL16_Sel_4_UNCONNECTED ),
        .carry_4(carry_4),
        .carry_5(\NLW_Compare[3].MUXCY_I_carry_5_UNCONNECTED ),
        .lopt(lopt_4),
        .lopt_1(lopt_5));
  MB_SRLC16E_38 \Compare[3].SRLC16E_I 
       (.Address({Address[16],Address[17],Address[18],Address[19]}),
        .Dbg_Clk(Dbg_Clk),
        .SRL16_MC15_4(SRL16_MC15_4),
        .SRL16_MC15_5(SRL16_MC15_5),
        .SRL16_Sel_4(SRL16_Sel_4),
        .which_pc(which_pc));
  microblaze_v10_0_3_MB_MUXCY_39 \Compare[4].MUXCY_I 
       (.SRL16_Sel_3(SRL16_Sel_3),
        .carry_3(\NLW_Compare[4].MUXCY_I_carry_3_UNCONNECTED ),
        .carry_4(carry_4),
        .lopt(\NLW_Compare[4].MUXCY_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_7),
        .lopt_2(SRL16_Sel_2),
        .lopt_3(\NLW_Compare[4].MUXCY_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_9),
        .lopt_5(SRL16_Sel_1),
        .lopt_6(lopt_10),
        .lopt_7(lopt_11),
        .lopt_8(SRL16_Sel_0));
  MB_SRLC16E_40 \Compare[4].SRLC16E_I 
       (.Address({Address[12],Address[13],Address[14],Address[15]}),
        .Dbg_Clk(Dbg_Clk),
        .SRL16_MC15_3(SRL16_MC15_3),
        .SRL16_MC15_4(SRL16_MC15_4),
        .SRL16_Sel_3(SRL16_Sel_3),
        .which_pc(which_pc));
  microblaze_v10_0_3_MB_MUXCY_41 \Compare[5].MUXCY_I 
       (.SRL16_Sel_2(\NLW_Compare[5].MUXCY_I_SRL16_Sel_2_UNCONNECTED ),
        .carry_2(\NLW_Compare[5].MUXCY_I_carry_2_UNCONNECTED ),
        .carry_3(\NLW_Compare[5].MUXCY_I_carry_3_UNCONNECTED ),
        .lopt(\NLW_Compare[5].MUXCY_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_7));
  MB_SRLC16E_42 \Compare[5].SRLC16E_I 
       (.Address({Address[8],Address[9],Address[10],Address[11]}),
        .Dbg_Clk(Dbg_Clk),
        .SRL16_MC15_2(SRL16_MC15_2),
        .SRL16_MC15_3(SRL16_MC15_3),
        .SRL16_Sel_2(SRL16_Sel_2),
        .which_pc(which_pc));
  microblaze_v10_0_3_MB_MUXCY_43 \Compare[6].MUXCY_I 
       (.SRL16_Sel_1(\NLW_Compare[6].MUXCY_I_SRL16_Sel_1_UNCONNECTED ),
        .carry_1(\NLW_Compare[6].MUXCY_I_carry_1_UNCONNECTED ),
        .carry_2(\NLW_Compare[6].MUXCY_I_carry_2_UNCONNECTED ),
        .lopt(\NLW_Compare[6].MUXCY_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_9));
  MB_SRLC16E_44 \Compare[6].SRLC16E_I 
       (.Address({Address[4],Address[5],Address[6],Address[7]}),
        .Dbg_Clk(Dbg_Clk),
        .SRL16_MC15_1(SRL16_MC15_1),
        .SRL16_MC15_2(SRL16_MC15_2),
        .SRL16_Sel_1(SRL16_Sel_1),
        .which_pc(which_pc));
  microblaze_v10_0_3_MB_MUXCY_45 \Compare[7].MUXCY_I 
       (.SRL16_Sel_0(\NLW_Compare[7].MUXCY_I_SRL16_Sel_0_UNCONNECTED ),
        .carry_0(carry_0),
        .carry_1(\NLW_Compare[7].MUXCY_I_carry_1_UNCONNECTED ),
        .lopt(lopt_10),
        .lopt_1(lopt_11));
  MB_SRLC16E_46 \Compare[7].SRLC16E_I 
       (.Address({Address[0],Address[1],Address[2],Address[3]}),
        .Dbg_Clk(Dbg_Clk),
        .Dbg_TDI(Dbg_TDI),
        .SRL16_MC15_1(SRL16_MC15_1),
        .SRL16_Sel_0(SRL16_Sel_0),
        .which_pc(which_pc));
  microblaze_v10_0_3_MB_MUXCY_47 \The_First_BreakPoints.MUXCY_Post 
       (.Hit(Hit),
        .\Performace_Debug_Control.dbg_stop_i_reg (\Performace_Debug_Control.dbg_stop_i_reg ),
        .\Performace_Debug_Control.dbg_stop_if_delay_i_reg (\Performace_Debug_Control.dbg_stop_if_delay_i_reg ),
        .\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg (\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .\Performace_Debug_Control.ex_dbg_pc_hit_i_reg (\Performace_Debug_Control.ex_dbg_pc_hit_i_reg ),
        .\Performace_Debug_Control.ex_dbg_pc_hit_i_reg_0 (\Performace_Debug_Control.ex_dbg_pc_hit_i_reg_0 ),
        .\Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg (\Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg ),
        .\Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg_0 (\Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg_0 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .carry_0(carry_0),
        .dbg_clean_stop(dbg_clean_stop),
        .ex_branch_with_delayslot_reg(ex_branch_with_delayslot_reg),
        .force_stop_i(force_stop_i),
        .mem_Exception_Taken(mem_Exception_Taken),
        .normal_stop_i(normal_stop_i),
        .of_pause_reg(of_pause_reg),
        .single_Step_N(single_Step_N));
endmodule

module blk_mem_gen_generic_cstr
   (douta,
    doutb,
    clka,
    clkb,
    ena,
    enb,
    rsta,
    rstb,
    addra,
    addrb,
    dina,
    dinb,
    wea,
    web);
  output [31:0]douta;
  output [31:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input rsta;
  input rstb;
  input [11:0]addra;
  input [11:0]addrb;
  input [31:0]dina;
  input [31:0]dinb;
  input [3:0]wea;
  input [3:0]web;

  wire [11:0]addra;
  wire [11:0]addrb;
  wire clka;
  wire clkb;
  wire [31:0]dina;
  wire [31:0]dinb;
  wire [31:0]douta;
  wire [31:0]doutb;
  wire ena;
  wire enb;
  wire rsta;
  wire rstb;
  wire [3:0]wea;
  wire [3:0]web;

  blk_mem_gen_prim_width \ramloop[0].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina[7:0]),
        .dinb(dinb[7:0]),
        .douta(douta[7:0]),
        .doutb(doutb[7:0]),
        .ena(ena),
        .enb(enb),
        .rsta(rsta),
        .rstb(rstb),
        .wea(wea[0]),
        .web(web[0]));
  blk_mem_gen_prim_width__parameterized0 \ramloop[1].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina[15:8]),
        .dinb(dinb[15:8]),
        .douta(douta[15:8]),
        .doutb(doutb[15:8]),
        .ena(ena),
        .enb(enb),
        .rsta(rsta),
        .rstb(rstb),
        .wea(wea[1]),
        .web(web[1]));
  blk_mem_gen_prim_width__parameterized1 \ramloop[2].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina[23:16]),
        .dinb(dinb[23:16]),
        .douta(douta[23:16]),
        .doutb(doutb[23:16]),
        .ena(ena),
        .enb(enb),
        .rsta(rsta),
        .rstb(rstb),
        .wea(wea[2]),
        .web(web[2]));
  blk_mem_gen_prim_width__parameterized2 \ramloop[3].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina[31:24]),
        .dinb(dinb[31:24]),
        .douta(douta[31:24]),
        .doutb(doutb[31:24]),
        .ena(ena),
        .enb(enb),
        .rsta(rsta),
        .rstb(rstb),
        .wea(wea[3]),
        .web(web[3]));
endmodule

module blk_mem_gen_prim_width
   (douta,
    doutb,
    clka,
    clkb,
    ena,
    enb,
    rsta,
    rstb,
    addra,
    addrb,
    dina,
    dinb,
    wea,
    web);
  output [7:0]douta;
  output [7:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input rsta;
  input rstb;
  input [11:0]addra;
  input [11:0]addrb;
  input [7:0]dina;
  input [7:0]dinb;
  input [0:0]wea;
  input [0:0]web;

  wire [11:0]addra;
  wire [11:0]addrb;
  wire clka;
  wire clkb;
  wire [7:0]dina;
  wire [7:0]dinb;
  wire [7:0]douta;
  wire [7:0]doutb;
  wire ena;
  wire enb;
  wire rsta;
  wire rstb;
  wire [0:0]wea;
  wire [0:0]web;

  blk_mem_gen_prim_wrapper \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .dinb(dinb),
        .douta(douta),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .rsta(rsta),
        .rstb(rstb),
        .wea(wea),
        .web(web));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module blk_mem_gen_prim_width__parameterized0
   (douta,
    doutb,
    clka,
    clkb,
    ena,
    enb,
    rsta,
    rstb,
    addra,
    addrb,
    dina,
    dinb,
    wea,
    web);
  output [7:0]douta;
  output [7:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input rsta;
  input rstb;
  input [11:0]addra;
  input [11:0]addrb;
  input [7:0]dina;
  input [7:0]dinb;
  input [0:0]wea;
  input [0:0]web;

  wire [11:0]addra;
  wire [11:0]addrb;
  wire clka;
  wire clkb;
  wire [7:0]dina;
  wire [7:0]dinb;
  wire [7:0]douta;
  wire [7:0]doutb;
  wire ena;
  wire enb;
  wire rsta;
  wire rstb;
  wire [0:0]wea;
  wire [0:0]web;

  blk_mem_gen_prim_wrapper__parameterized0 \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .dinb(dinb),
        .douta(douta),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .rsta(rsta),
        .rstb(rstb),
        .wea(wea),
        .web(web));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module blk_mem_gen_prim_width__parameterized1
   (douta,
    doutb,
    clka,
    clkb,
    ena,
    enb,
    rsta,
    rstb,
    addra,
    addrb,
    dina,
    dinb,
    wea,
    web);
  output [7:0]douta;
  output [7:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input rsta;
  input rstb;
  input [11:0]addra;
  input [11:0]addrb;
  input [7:0]dina;
  input [7:0]dinb;
  input [0:0]wea;
  input [0:0]web;

  wire [11:0]addra;
  wire [11:0]addrb;
  wire clka;
  wire clkb;
  wire [7:0]dina;
  wire [7:0]dinb;
  wire [7:0]douta;
  wire [7:0]doutb;
  wire ena;
  wire enb;
  wire rsta;
  wire rstb;
  wire [0:0]wea;
  wire [0:0]web;

  blk_mem_gen_prim_wrapper__parameterized1 \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .dinb(dinb),
        .douta(douta),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .rsta(rsta),
        .rstb(rstb),
        .wea(wea),
        .web(web));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module blk_mem_gen_prim_width__parameterized2
   (douta,
    doutb,
    clka,
    clkb,
    ena,
    enb,
    rsta,
    rstb,
    addra,
    addrb,
    dina,
    dinb,
    wea,
    web);
  output [7:0]douta;
  output [7:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input rsta;
  input rstb;
  input [11:0]addra;
  input [11:0]addrb;
  input [7:0]dina;
  input [7:0]dinb;
  input [0:0]wea;
  input [0:0]web;

  wire [11:0]addra;
  wire [11:0]addrb;
  wire clka;
  wire clkb;
  wire [7:0]dina;
  wire [7:0]dinb;
  wire [7:0]douta;
  wire [7:0]doutb;
  wire ena;
  wire enb;
  wire rsta;
  wire rstb;
  wire [0:0]wea;
  wire [0:0]web;

  blk_mem_gen_prim_wrapper__parameterized2 \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .dinb(dinb),
        .douta(douta),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .rsta(rsta),
        .rstb(rstb),
        .wea(wea),
        .web(web));
endmodule

module blk_mem_gen_prim_wrapper
   (douta,
    doutb,
    clka,
    clkb,
    ena,
    enb,
    rsta,
    rstb,
    addra,
    addrb,
    dina,
    dinb,
    wea,
    web);
  output [7:0]douta;
  output [7:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input rsta;
  input rstb;
  input [11:0]addra;
  input [11:0]addrb;
  input [7:0]dina;
  input [7:0]dinb;
  input [0:0]wea;
  input [0:0]web;

  wire [11:0]addra;
  wire [11:0]addrb;
  wire clka;
  wire clkb;
  wire [7:0]dina;
  wire [7:0]dinb;
  wire [7:0]douta;
  wire [7:0]doutb;
  wire ena;
  wire enb;
  wire rsta;
  wire rstb;
  wire [0:0]wea;
  wire [0:0]web;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DBITERR_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_SBITERR_UNCONNECTED ;
  wire [31:8]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOADO_UNCONNECTED ;
  wire [31:8]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOBDO_UNCONNECTED ;
  wire [3:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPADOP_UNCONNECTED ;
  wire [3:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_RDADDRECC_UNCONNECTED ;
  wire [3:1]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_WEBWE_UNCONNECTED ;

  (* bmm_info_memory_device = "[7:0][0:4095]" *) 
  (* box_type = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(9),
    .READ_WIDTH_B(9),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(9),
    .WRITE_WIDTH_B(9)) 
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram 
       (.ADDRARDADDR({1'b1,addra,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,addrb,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DBITERR(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DBITERR_UNCONNECTED ),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dinb}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO({\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOADO_UNCONNECTED [31:8],douta}),
        .DOBDO({\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOBDO_UNCONNECTED [31:8],doutb}),
        .DOPADOP(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPBDOP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(ena),
        .ENBWREN(enb),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(rsta),
        .RSTRAMB(rstb),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_SBITERR_UNCONNECTED ),
        .WEA({1'b0,1'b0,1'b0,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_WEBWE_UNCONNECTED [3:1],web}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module blk_mem_gen_prim_wrapper__parameterized0
   (douta,
    doutb,
    clka,
    clkb,
    ena,
    enb,
    rsta,
    rstb,
    addra,
    addrb,
    dina,
    dinb,
    wea,
    web);
  output [7:0]douta;
  output [7:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input rsta;
  input rstb;
  input [11:0]addra;
  input [11:0]addrb;
  input [7:0]dina;
  input [7:0]dinb;
  input [0:0]wea;
  input [0:0]web;

  wire [11:0]addra;
  wire [11:0]addrb;
  wire clka;
  wire clkb;
  wire [7:0]dina;
  wire [7:0]dinb;
  wire [7:0]douta;
  wire [7:0]doutb;
  wire ena;
  wire enb;
  wire rsta;
  wire rstb;
  wire [0:0]wea;
  wire [0:0]web;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DBITERR_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_SBITERR_UNCONNECTED ;
  wire [31:8]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOADO_UNCONNECTED ;
  wire [31:8]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOBDO_UNCONNECTED ;
  wire [3:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPADOP_UNCONNECTED ;
  wire [3:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_RDADDRECC_UNCONNECTED ;
  wire [3:1]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_WEBWE_UNCONNECTED ;

  (* bmm_info_memory_device = "[15:8][0:4095]" *) 
  (* box_type = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(9),
    .READ_WIDTH_B(9),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(9),
    .WRITE_WIDTH_B(9)) 
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram 
       (.ADDRARDADDR({1'b1,addra,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,addrb,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DBITERR(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DBITERR_UNCONNECTED ),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dinb}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO({\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOADO_UNCONNECTED [31:8],douta}),
        .DOBDO({\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOBDO_UNCONNECTED [31:8],doutb}),
        .DOPADOP(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPBDOP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(ena),
        .ENBWREN(enb),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(rsta),
        .RSTRAMB(rstb),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_SBITERR_UNCONNECTED ),
        .WEA({1'b0,1'b0,1'b0,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_WEBWE_UNCONNECTED [3:1],web}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module blk_mem_gen_prim_wrapper__parameterized1
   (douta,
    doutb,
    clka,
    clkb,
    ena,
    enb,
    rsta,
    rstb,
    addra,
    addrb,
    dina,
    dinb,
    wea,
    web);
  output [7:0]douta;
  output [7:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input rsta;
  input rstb;
  input [11:0]addra;
  input [11:0]addrb;
  input [7:0]dina;
  input [7:0]dinb;
  input [0:0]wea;
  input [0:0]web;

  wire [11:0]addra;
  wire [11:0]addrb;
  wire clka;
  wire clkb;
  wire [7:0]dina;
  wire [7:0]dinb;
  wire [7:0]douta;
  wire [7:0]doutb;
  wire ena;
  wire enb;
  wire rsta;
  wire rstb;
  wire [0:0]wea;
  wire [0:0]web;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DBITERR_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_SBITERR_UNCONNECTED ;
  wire [31:8]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOADO_UNCONNECTED ;
  wire [31:8]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOBDO_UNCONNECTED ;
  wire [3:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPADOP_UNCONNECTED ;
  wire [3:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_RDADDRECC_UNCONNECTED ;
  wire [3:1]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_WEBWE_UNCONNECTED ;

  (* bmm_info_memory_device = "[23:16][0:4095]" *) 
  (* box_type = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(9),
    .READ_WIDTH_B(9),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(9),
    .WRITE_WIDTH_B(9)) 
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram 
       (.ADDRARDADDR({1'b1,addra,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,addrb,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DBITERR(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DBITERR_UNCONNECTED ),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dinb}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO({\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOADO_UNCONNECTED [31:8],douta}),
        .DOBDO({\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOBDO_UNCONNECTED [31:8],doutb}),
        .DOPADOP(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPBDOP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(ena),
        .ENBWREN(enb),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(rsta),
        .RSTRAMB(rstb),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_SBITERR_UNCONNECTED ),
        .WEA({1'b0,1'b0,1'b0,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_WEBWE_UNCONNECTED [3:1],web}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module blk_mem_gen_prim_wrapper__parameterized2
   (douta,
    doutb,
    clka,
    clkb,
    ena,
    enb,
    rsta,
    rstb,
    addra,
    addrb,
    dina,
    dinb,
    wea,
    web);
  output [7:0]douta;
  output [7:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input rsta;
  input rstb;
  input [11:0]addra;
  input [11:0]addrb;
  input [7:0]dina;
  input [7:0]dinb;
  input [0:0]wea;
  input [0:0]web;

  wire [11:0]addra;
  wire [11:0]addrb;
  wire clka;
  wire clkb;
  wire [7:0]dina;
  wire [7:0]dinb;
  wire [7:0]douta;
  wire [7:0]doutb;
  wire ena;
  wire enb;
  wire rsta;
  wire rstb;
  wire [0:0]wea;
  wire [0:0]web;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DBITERR_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_SBITERR_UNCONNECTED ;
  wire [31:8]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOADO_UNCONNECTED ;
  wire [31:8]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOBDO_UNCONNECTED ;
  wire [3:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPADOP_UNCONNECTED ;
  wire [3:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_RDADDRECC_UNCONNECTED ;
  wire [3:1]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_WEBWE_UNCONNECTED ;

  (* bmm_info_memory_device = "[31:24][0:4095]" *) 
  (* box_type = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h00000000000000000000000000000000000000000000000000000000000000B8),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(9),
    .READ_WIDTH_B(9),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(9),
    .WRITE_WIDTH_B(9)) 
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram 
       (.ADDRARDADDR({1'b1,addra,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,addrb,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DBITERR(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DBITERR_UNCONNECTED ),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dinb}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO({\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOADO_UNCONNECTED [31:8],douta}),
        .DOBDO({\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOBDO_UNCONNECTED [31:8],doutb}),
        .DOPADOP(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPBDOP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(ena),
        .ENBWREN(enb),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(rsta),
        .RSTRAMB(rstb),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_SBITERR_UNCONNECTED ),
        .WEA({1'b0,1'b0,1'b0,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_WEBWE_UNCONNECTED [3:1],web}));
endmodule

module blk_mem_gen_top
   (douta,
    doutb,
    clka,
    clkb,
    ena,
    enb,
    rsta,
    rstb,
    addra,
    addrb,
    dina,
    dinb,
    wea,
    web);
  output [31:0]douta;
  output [31:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input rsta;
  input rstb;
  input [11:0]addra;
  input [11:0]addrb;
  input [31:0]dina;
  input [31:0]dinb;
  input [3:0]wea;
  input [3:0]web;

  wire [11:0]addra;
  wire [11:0]addrb;
  wire clka;
  wire clkb;
  wire [31:0]dina;
  wire [31:0]dinb;
  wire [31:0]douta;
  wire [31:0]doutb;
  wire ena;
  wire enb;
  wire rsta;
  wire rstb;
  wire [3:0]wea;
  wire [3:0]web;

  blk_mem_gen_generic_cstr \valid.cstr 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .dinb(dinb),
        .douta(douta),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .rsta(rsta),
        .rstb(rstb),
        .wea(wea),
        .web(web));
endmodule

(* C_ADDRA_WIDTH = "32" *) (* C_ADDRB_WIDTH = "32" *) (* C_ALGORITHM = "1" *) 
(* C_AXI_ID_WIDTH = "4" *) (* C_AXI_SLAVE_TYPE = "0" *) (* C_AXI_TYPE = "1" *) 
(* C_BYTE_SIZE = "8" *) (* C_COMMON_CLK = "0" *) (* C_COUNT_18K_BRAM = "0" *) 
(* C_COUNT_36K_BRAM = "4" *) (* C_CTRL_ECC_ALGO = "NONE" *) (* C_DEFAULT_DATA = "0" *) 
(* C_DISABLE_WARN_BHV_COLL = "0" *) (* C_DISABLE_WARN_BHV_RANGE = "0" *) (* C_ELABORATION_DIR = "./" *) 
(* C_ENABLE_32BIT_ADDRESS = "1" *) (* C_EN_DEEPSLEEP_PIN = "0" *) (* C_EN_ECC_PIPE = "0" *) 
(* C_EN_RDADDRA_CHG = "0" *) (* C_EN_RDADDRB_CHG = "0" *) (* C_EN_SAFETY_CKT = "0" *) 
(* C_EN_SHUTDOWN_PIN = "0" *) (* C_EN_SLEEP_PIN = "0" *) (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     20.388 mW" *) 
(* C_FAMILY = "zynq" *) (* C_HAS_AXI_ID = "0" *) (* C_HAS_ENA = "1" *) 
(* C_HAS_ENB = "1" *) (* C_HAS_INJECTERR = "0" *) (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
(* C_HAS_MEM_OUTPUT_REGS_B = "0" *) (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
(* C_HAS_REGCEA = "0" *) (* C_HAS_REGCEB = "0" *) (* C_HAS_RSTA = "1" *) 
(* C_HAS_RSTB = "1" *) (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
(* C_INITA_VAL = "0" *) (* C_INITB_VAL = "0" *) (* C_INIT_FILE = "design_gol_lmb_bram_0.mem" *) 
(* C_INIT_FILE_NAME = "no_coe_file_loaded" *) (* C_INTERFACE_TYPE = "0" *) (* C_LOAD_INIT_FILE = "0" *) 
(* C_MEM_TYPE = "2" *) (* C_MUX_PIPELINE_STAGES = "0" *) (* C_PRIM_TYPE = "1" *) 
(* C_READ_DEPTH_A = "4096" *) (* C_READ_DEPTH_B = "4096" *) (* C_READ_WIDTH_A = "32" *) 
(* C_READ_WIDTH_B = "32" *) (* C_RSTRAM_A = "0" *) (* C_RSTRAM_B = "0" *) 
(* C_RST_PRIORITY_A = "CE" *) (* C_RST_PRIORITY_B = "CE" *) (* C_SIM_COLLISION_CHECK = "ALL" *) 
(* C_USE_BRAM_BLOCK = "1" *) (* C_USE_BYTE_WEA = "1" *) (* C_USE_BYTE_WEB = "1" *) 
(* C_USE_DEFAULT_DATA = "0" *) (* C_USE_ECC = "0" *) (* C_USE_SOFTECC = "0" *) 
(* C_USE_URAM = "0" *) (* C_WEA_WIDTH = "4" *) (* C_WEB_WIDTH = "4" *) 
(* C_WRITE_DEPTH_A = "4096" *) (* C_WRITE_DEPTH_B = "4096" *) (* C_WRITE_MODE_A = "WRITE_FIRST" *) 
(* C_WRITE_MODE_B = "WRITE_FIRST" *) (* C_WRITE_WIDTH_A = "32" *) (* C_WRITE_WIDTH_B = "32" *) 
(* C_XDEVICEFAMILY = "zynq" *) (* DowngradeIPIdentifiedWarnings = "yes" *) 
module blk_mem_gen_v8_3_6
   (clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    douta,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    doutb,
    injectsbiterr,
    injectdbiterr,
    eccpipece,
    sbiterr,
    dbiterr,
    rdaddrecc,
    sleep,
    deepsleep,
    shutdown,
    rsta_busy,
    rstb_busy,
    s_aclk,
    s_aresetn,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    s_axi_rready,
    s_axi_injectsbiterr,
    s_axi_injectdbiterr,
    s_axi_sbiterr,
    s_axi_dbiterr,
    s_axi_rdaddrecc);
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [3:0]wea;
  input [31:0]addra;
  input [31:0]dina;
  output [31:0]douta;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [3:0]web;
  input [31:0]addrb;
  input [31:0]dinb;
  output [31:0]doutb;
  input injectsbiterr;
  input injectdbiterr;
  input eccpipece;
  output sbiterr;
  output dbiterr;
  output [31:0]rdaddrecc;
  input sleep;
  input deepsleep;
  input shutdown;
  output rsta_busy;
  output rstb_busy;
  input s_aclk;
  input s_aresetn;
  input [3:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input s_axi_awvalid;
  output s_axi_awready;
  input [31:0]s_axi_wdata;
  input [3:0]s_axi_wstrb;
  input s_axi_wlast;
  input s_axi_wvalid;
  output s_axi_wready;
  output [3:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [3:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input s_axi_arvalid;
  output s_axi_arready;
  output [3:0]s_axi_rid;
  output [31:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output s_axi_rvalid;
  input s_axi_rready;
  input s_axi_injectsbiterr;
  input s_axi_injectdbiterr;
  output s_axi_sbiterr;
  output s_axi_dbiterr;
  output [31:0]s_axi_rdaddrecc;

  wire [31:0]addra;
  wire [31:0]addrb;
  wire clka;
  wire clkb;
  wire [31:0]dina;
  wire [31:0]dinb;
  wire [31:0]douta;
  wire [31:0]doutb;
  wire ena;
  wire enb;
  wire rsta;
  wire rstb;
  wire [3:0]wea;
  wire [3:0]web;

  blk_mem_gen_v8_3_6_synth inst_blk_mem_gen
       (.addra(addra[13:2]),
        .addrb(addrb[13:2]),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .dinb(dinb),
        .douta(douta),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .rsta(rsta),
        .rstb(rstb),
        .wea(wea),
        .web(web));
endmodule

module blk_mem_gen_v8_3_6_synth
   (douta,
    doutb,
    clka,
    clkb,
    ena,
    enb,
    rsta,
    rstb,
    addra,
    addrb,
    dina,
    dinb,
    wea,
    web);
  output [31:0]douta;
  output [31:0]doutb;
  input clka;
  input clkb;
  input ena;
  input enb;
  input rsta;
  input rstb;
  input [11:0]addra;
  input [11:0]addrb;
  input [31:0]dina;
  input [31:0]dinb;
  input [3:0]wea;
  input [3:0]web;

  wire [11:0]addra;
  wire [11:0]addrb;
  wire clka;
  wire clkb;
  wire [31:0]dina;
  wire [31:0]dinb;
  wire [31:0]douta;
  wire [31:0]doutb;
  wire ena;
  wire enb;
  wire rsta;
  wire rstb;
  wire [3:0]wea;
  wire [3:0]web;

  blk_mem_gen_top \gnbram.gnative_mem_map_bmg.native_mem_map_blk_mem_gen 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .dinb(dinb),
        .douta(douta),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .rsta(rsta),
        .rstb(rstb),
        .wea(wea),
        .web(web));
endmodule

module exception_registers_gti
   (DI,
    \LOCKSTEP_Out_reg[2944] ,
    \LOCKSTEP_Out_reg[2943] ,
    \LOCKSTEP_Out_reg[2942] ,
    \LOCKSTEP_Out_reg[2941] ,
    \LOCKSTEP_Out_reg[2940] ,
    \LOCKSTEP_Out_reg[2939] ,
    \LOCKSTEP_Out_reg[2938] ,
    \LOCKSTEP_Out_reg[2937] ,
    \LOCKSTEP_Out_reg[2936] ,
    \LOCKSTEP_Out_reg[2935] ,
    \LOCKSTEP_Out_reg[2934] ,
    \LOCKSTEP_Out_reg[2933] ,
    \LOCKSTEP_Out_reg[2932] ,
    \LOCKSTEP_Out_reg[2931] ,
    \LOCKSTEP_Out_reg[2930] ,
    \LOCKSTEP_Out_reg[2929] ,
    \LOCKSTEP_Out_reg[2928] ,
    \LOCKSTEP_Out_reg[2927] ,
    \LOCKSTEP_Out_reg[2926] ,
    \LOCKSTEP_Out_reg[2925] ,
    \LOCKSTEP_Out_reg[2924] ,
    \LOCKSTEP_Out_reg[2923] ,
    \LOCKSTEP_Out_reg[2922] ,
    \LOCKSTEP_Out_reg[2921] ,
    \LOCKSTEP_Out_reg[2920] ,
    \LOCKSTEP_Out_reg[2919] ,
    \LOCKSTEP_Out_reg[2918] ,
    \LOCKSTEP_Out_reg[2917] ,
    \LOCKSTEP_Out_reg[2916] ,
    \LOCKSTEP_Out_reg[2915] ,
    \LOCKSTEP_Out_reg[2914] ,
    \LOCKSTEP_Out_reg[3007] ,
    \data_rd_reg_reg[16] ,
    \EX_Op3_reg[16] ,
    D,
    \wb_exception_kind_i_reg[28] ,
    \mem_pc_i_reg[0] ,
    MEM_WB_Sel_Mem_PC,
    mem_valid_reg,
    Clk,
    I1_0,
    \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ,
    wb_gpr_write_dbg,
    read_register_MSR_1,
    \wb_exception_kind_i_reg[31] ,
    Q,
    \wb_read_lsb_1_sel_reg[0] ,
    wb_byte_access,
    \wb_read_lsb_1_sel_reg[0]_0 ,
    \wb_read_lsb_1_sel_reg[0]_1 ,
    \wb_read_lsb_1_sel_reg[0]_2 ,
    \wb_read_lsb_1_sel_reg[0]_3 ,
    \wb_read_lsb_1_sel_reg[0]_4 ,
    \wb_read_lsb_1_sel_reg[0]_5 ,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    GPR_Op3,
    \Using_FPGA.Native_1 ,
    \wb_gpr_write_addr_reg[3] ,
    \Using_FPGA.Native_2 ,
    GPR_Op1,
    \ex_gpr_write_addr_reg[0] ,
    \wb_read_lsb_1_sel_reg[0]_6 );
  output DI;
  output \LOCKSTEP_Out_reg[2944] ;
  output \LOCKSTEP_Out_reg[2943] ;
  output \LOCKSTEP_Out_reg[2942] ;
  output \LOCKSTEP_Out_reg[2941] ;
  output \LOCKSTEP_Out_reg[2940] ;
  output \LOCKSTEP_Out_reg[2939] ;
  output \LOCKSTEP_Out_reg[2938] ;
  output \LOCKSTEP_Out_reg[2937] ;
  output \LOCKSTEP_Out_reg[2936] ;
  output \LOCKSTEP_Out_reg[2935] ;
  output \LOCKSTEP_Out_reg[2934] ;
  output \LOCKSTEP_Out_reg[2933] ;
  output \LOCKSTEP_Out_reg[2932] ;
  output \LOCKSTEP_Out_reg[2931] ;
  output \LOCKSTEP_Out_reg[2930] ;
  output \LOCKSTEP_Out_reg[2929] ;
  output \LOCKSTEP_Out_reg[2928] ;
  output \LOCKSTEP_Out_reg[2927] ;
  output \LOCKSTEP_Out_reg[2926] ;
  output \LOCKSTEP_Out_reg[2925] ;
  output \LOCKSTEP_Out_reg[2924] ;
  output \LOCKSTEP_Out_reg[2923] ;
  output \LOCKSTEP_Out_reg[2922] ;
  output \LOCKSTEP_Out_reg[2921] ;
  output \LOCKSTEP_Out_reg[2920] ;
  output \LOCKSTEP_Out_reg[2919] ;
  output \LOCKSTEP_Out_reg[2918] ;
  output \LOCKSTEP_Out_reg[2917] ;
  output \LOCKSTEP_Out_reg[2916] ;
  output \LOCKSTEP_Out_reg[2915] ;
  output [8:0]\LOCKSTEP_Out_reg[2914] ;
  output [23:0]\LOCKSTEP_Out_reg[3007] ;
  output [7:0]\data_rd_reg_reg[16] ;
  output [0:0]\EX_Op3_reg[16] ;
  output [0:0]D;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  input [31:0]\mem_pc_i_reg[0] ;
  input MEM_WB_Sel_Mem_PC;
  input mem_valid_reg;
  input Clk;
  input I1_0;
  input \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  input wb_gpr_write_dbg;
  input read_register_MSR_1;
  input \wb_exception_kind_i_reg[31] ;
  input [7:0]Q;
  input \wb_read_lsb_1_sel_reg[0] ;
  input wb_byte_access;
  input \wb_read_lsb_1_sel_reg[0]_0 ;
  input \wb_read_lsb_1_sel_reg[0]_1 ;
  input \wb_read_lsb_1_sel_reg[0]_2 ;
  input \wb_read_lsb_1_sel_reg[0]_3 ;
  input \wb_read_lsb_1_sel_reg[0]_4 ;
  input \wb_read_lsb_1_sel_reg[0]_5 ;
  input \Using_FPGA.Native ;
  input \Using_FPGA.Native_0 ;
  input [0:0]GPR_Op3;
  input \Using_FPGA.Native_1 ;
  input \wb_gpr_write_addr_reg[3] ;
  input \Using_FPGA.Native_2 ;
  input [0:0]GPR_Op1;
  input \ex_gpr_write_addr_reg[0] ;
  input \wb_read_lsb_1_sel_reg[0]_6 ;

  wire Clk;
  wire [0:0]D;
  wire DI;
  wire [0:0]\EX_Op3_reg[16] ;
  wire [0:0]GPR_Op1;
  wire [0:0]GPR_Op3;
  wire I1_0;
  wire [8:0]\LOCKSTEP_Out_reg[2914] ;
  wire \LOCKSTEP_Out_reg[2915] ;
  wire \LOCKSTEP_Out_reg[2916] ;
  wire \LOCKSTEP_Out_reg[2917] ;
  wire \LOCKSTEP_Out_reg[2918] ;
  wire \LOCKSTEP_Out_reg[2919] ;
  wire \LOCKSTEP_Out_reg[2920] ;
  wire \LOCKSTEP_Out_reg[2921] ;
  wire \LOCKSTEP_Out_reg[2922] ;
  wire \LOCKSTEP_Out_reg[2923] ;
  wire \LOCKSTEP_Out_reg[2924] ;
  wire \LOCKSTEP_Out_reg[2925] ;
  wire \LOCKSTEP_Out_reg[2926] ;
  wire \LOCKSTEP_Out_reg[2927] ;
  wire \LOCKSTEP_Out_reg[2928] ;
  wire \LOCKSTEP_Out_reg[2929] ;
  wire \^LOCKSTEP_Out_reg[2930] ;
  wire \^LOCKSTEP_Out_reg[2931] ;
  wire \^LOCKSTEP_Out_reg[2932] ;
  wire \^LOCKSTEP_Out_reg[2933] ;
  wire \^LOCKSTEP_Out_reg[2934] ;
  wire \^LOCKSTEP_Out_reg[2935] ;
  wire \^LOCKSTEP_Out_reg[2936] ;
  wire \^LOCKSTEP_Out_reg[2937] ;
  wire \LOCKSTEP_Out_reg[2938] ;
  wire \LOCKSTEP_Out_reg[2939] ;
  wire \LOCKSTEP_Out_reg[2940] ;
  wire \LOCKSTEP_Out_reg[2941] ;
  wire \LOCKSTEP_Out_reg[2942] ;
  wire \LOCKSTEP_Out_reg[2943] ;
  wire \LOCKSTEP_Out_reg[2944] ;
  wire [23:0]\LOCKSTEP_Out_reg[3007] ;
  wire MEM_WB_Sel_Mem_PC;
  wire \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  wire [7:0]Q;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire addr_AddSub_0;
  wire addr_AddSub_1;
  wire addr_AddSub_10;
  wire addr_AddSub_11;
  wire addr_AddSub_12;
  wire addr_AddSub_13;
  wire addr_AddSub_14;
  wire addr_AddSub_15;
  wire addr_AddSub_16;
  wire addr_AddSub_17;
  wire addr_AddSub_18;
  wire addr_AddSub_19;
  wire addr_AddSub_2;
  wire addr_AddSub_20;
  wire addr_AddSub_21;
  wire addr_AddSub_22;
  wire addr_AddSub_23;
  wire addr_AddSub_24;
  wire addr_AddSub_25;
  wire addr_AddSub_26;
  wire addr_AddSub_27;
  wire addr_AddSub_28;
  wire addr_AddSub_29;
  wire addr_AddSub_3;
  wire addr_AddSub_30;
  wire addr_AddSub_31;
  wire addr_AddSub_4;
  wire addr_AddSub_5;
  wire addr_AddSub_6;
  wire addr_AddSub_7;
  wire addr_AddSub_8;
  wire addr_AddSub_9;
  wire carry_11;
  wire carry_15;
  wire carry_19;
  wire carry_23;
  wire carry_27;
  wire carry_3;
  wire carry_31;
  wire carry_7;
  wire [7:0]\data_rd_reg_reg[16] ;
  wire \ex_gpr_write_addr_reg[0] ;
  wire lopt_10;
  wire lopt_11;
  wire lopt_14;
  wire lopt_15;
  wire lopt_16;
  wire lopt_17;
  wire lopt_2;
  wire lopt_20;
  wire lopt_21;
  wire lopt_22;
  wire lopt_23;
  wire lopt_26;
  wire lopt_27;
  wire lopt_28;
  wire lopt_29;
  wire lopt_3;
  wire lopt_32;
  wire lopt_33;
  wire lopt_34;
  wire lopt_35;
  wire lopt_38;
  wire lopt_39;
  wire lopt_4;
  wire lopt_40;
  wire lopt_41;
  wire lopt_44;
  wire lopt_45;
  wire lopt_46;
  wire lopt_47;
  wire lopt_5;
  wire lopt_8;
  wire lopt_9;
  wire [31:0]\mem_pc_i_reg[0] ;
  wire mem_valid_reg;
  wire read_register_MSR_1;
  wire wb_PC_II_0;
  wire wb_PC_II_1;
  wire wb_PC_II_10;
  wire wb_PC_II_11;
  wire wb_PC_II_12;
  wire wb_PC_II_13;
  wire wb_PC_II_14;
  wire wb_PC_II_15;
  wire wb_PC_II_16;
  wire wb_PC_II_17;
  wire wb_PC_II_18;
  wire wb_PC_II_19;
  wire wb_PC_II_2;
  wire wb_PC_II_20;
  wire wb_PC_II_21;
  wire wb_PC_II_22;
  wire wb_PC_II_23;
  wire wb_PC_II_24;
  wire wb_PC_II_25;
  wire wb_PC_II_26;
  wire wb_PC_II_27;
  wire wb_PC_II_28;
  wire wb_PC_II_29;
  wire wb_PC_II_3;
  wire wb_PC_II_30;
  wire wb_PC_II_31;
  wire wb_PC_II_4;
  wire wb_PC_II_5;
  wire wb_PC_II_6;
  wire wb_PC_II_7;
  wire wb_PC_II_8;
  wire wb_PC_II_9;
  wire wb_byte_access;
  wire [0:0]\wb_exception_kind_i_reg[28] ;
  wire \wb_exception_kind_i_reg[31] ;
  wire \wb_gpr_write_addr_reg[3] ;
  wire wb_gpr_write_dbg;
  wire \wb_read_lsb_1_sel_reg[0] ;
  wire \wb_read_lsb_1_sel_reg[0]_0 ;
  wire \wb_read_lsb_1_sel_reg[0]_1 ;
  wire \wb_read_lsb_1_sel_reg[0]_2 ;
  wire \wb_read_lsb_1_sel_reg[0]_3 ;
  wire \wb_read_lsb_1_sel_reg[0]_4 ;
  wire \wb_read_lsb_1_sel_reg[0]_5 ;
  wire \wb_read_lsb_1_sel_reg[0]_6 ;
  wire NLW_CarryIn_MUXCY_CI_UNCONNECTED;
  wire NLW_CarryIn_MUXCY_lopt_UNCONNECTED;
  wire NLW_CarryIn_MUXCY_lopt_3_UNCONNECTED;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[10].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[10].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[10].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[10].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[10].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[11].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[11].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[11].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[11].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[11].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[12].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[12].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[12].MUXCY_XOR_I_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[13].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[13].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[13].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[14].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[14].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[14].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[14].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[14].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[15].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[15].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[15].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[15].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[15].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[16].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[16].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[16].MUXCY_XOR_I_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[17].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[17].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[18].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[18].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[18].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[18].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[19].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[19].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[19].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[19].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[1].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[1].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[1].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[20].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[20].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[20].MUXCY_XOR_I_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[21].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[21].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[22].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[22].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[22].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[22].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[23].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[23].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[23].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[23].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[24].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[24].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[24].MUXCY_XOR_I_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[25].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[25].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[25].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[26].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[26].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[26].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[26].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[26].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[27].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[27].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[27].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[27].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[27].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[28].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[28].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[28].MUXCY_XOR_I_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[29].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[29].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[29].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[2].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[2].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[2].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[2].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[2].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[30].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[30].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[30].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[30].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[30].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[31].MUXCY_XOR_I_CI_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[31].MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[31].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[31].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[31].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[3].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[3].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[3].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[3].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[3].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[4].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[4].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[4].MUXCY_XOR_I_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[5].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[5].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[5].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[6].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[6].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[6].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[6].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[6].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[7].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[7].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[7].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[7].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[7].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[8].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[8].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[8].MUXCY_XOR_I_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[9].MUXCY_XOR_I_CI_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[9].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[9].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ;

  microblaze_v10_0_3_MB_MUXCY_310 CarryIn_MUXCY
       (.CI(NLW_CarryIn_MUXCY_CI_UNCONNECTED),
        .lopt(NLW_CarryIn_MUXCY_lopt_UNCONNECTED),
        .lopt_1(DI),
        .lopt_10(lopt_4),
        .lopt_11(lopt_5),
        .lopt_2(addr_AddSub_0),
        .lopt_3(NLW_CarryIn_MUXCY_lopt_3_UNCONNECTED),
        .lopt_4(\LOCKSTEP_Out_reg[2944] ),
        .lopt_5(addr_AddSub_1),
        .lopt_6(lopt_2),
        .lopt_7(\LOCKSTEP_Out_reg[2943] ),
        .lopt_8(addr_AddSub_2),
        .lopt_9(lopt_3),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  MB_LUT6_2__parameterized5 \Using_FPGA_LUT6.Gen_Ret_Addr[0].I_RET_ADDR_WB 
       (.MEM_WB_Sel_Mem_PC(MEM_WB_Sel_Mem_PC),
        .\Using_FPGA.Native_0 (\LOCKSTEP_Out_reg[2914] [8]),
        .addr_AddSub_31(addr_AddSub_31),
        .\mem_pc_i_reg[0] (\mem_pc_i_reg[0] [31]),
        .wb_PC_II_31(wb_PC_II_31),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  microblaze_v10_0_3_MB_MUXCY_XORCY_311 \Using_FPGA_LUT6.Gen_Ret_Addr[0].MUXCY_XOR_I 
       (.LO(carry_31),
        .\LOCKSTEP_Out_reg[3007] (\LOCKSTEP_Out_reg[3007] [23]),
        .addr_AddSub_31(addr_AddSub_31));
  MB_FDE \Using_FPGA_LUT6.Gen_Ret_Addr[0].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2914] (\LOCKSTEP_Out_reg[2914] [8]),
        .mem_valid_reg(mem_valid_reg),
        .wb_PC_II_31(wb_PC_II_31));
  MB_LUT6_2__parameterized5_312 \Using_FPGA_LUT6.Gen_Ret_Addr[10].I_RET_ADDR_WB 
       (.MEM_WB_Sel_Mem_PC(MEM_WB_Sel_Mem_PC),
        .S(addr_AddSub_21),
        .\Using_FPGA.Native_0 (\LOCKSTEP_Out_reg[2924] ),
        .\mem_pc_i_reg[10] (\mem_pc_i_reg[0] [21]),
        .wb_PC_II_21(wb_PC_II_21),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  microblaze_v10_0_3_MB_MUXCY_XORCY_313 \Using_FPGA_LUT6.Gen_Ret_Addr[10].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[10].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3017] (\LOCKSTEP_Out_reg[3007] [13]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[10].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[10].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ),
        .\Using_FPGA.Native_0 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[10].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[10].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_34));
  MB_FDE_314 \Using_FPGA_LUT6.Gen_Ret_Addr[10].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2924] (\LOCKSTEP_Out_reg[2924] ),
        .mem_valid_reg(mem_valid_reg),
        .wb_PC_II_21(wb_PC_II_21));
  MB_LUT6_2__parameterized5_315 \Using_FPGA_LUT6.Gen_Ret_Addr[11].I_RET_ADDR_WB 
       (.MEM_WB_Sel_Mem_PC(MEM_WB_Sel_Mem_PC),
        .S(addr_AddSub_20),
        .\Using_FPGA.Native_0 (\LOCKSTEP_Out_reg[2925] ),
        .\mem_pc_i_reg[11] (\mem_pc_i_reg[0] [20]),
        .wb_PC_II_20(wb_PC_II_20),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  microblaze_v10_0_3_MB_MUXCY_XORCY_316 \Using_FPGA_LUT6.Gen_Ret_Addr[11].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[11].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3018] (\LOCKSTEP_Out_reg[3007] [12]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[11].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[11].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ),
        .\Using_FPGA.Native_0 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[11].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[11].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_33));
  MB_FDE_317 \Using_FPGA_LUT6.Gen_Ret_Addr[11].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2925] (\LOCKSTEP_Out_reg[2925] ),
        .mem_valid_reg(mem_valid_reg),
        .wb_PC_II_20(wb_PC_II_20));
  MB_LUT6_2__parameterized5_318 \Using_FPGA_LUT6.Gen_Ret_Addr[12].I_RET_ADDR_WB 
       (.MEM_WB_Sel_Mem_PC(MEM_WB_Sel_Mem_PC),
        .S(addr_AddSub_19),
        .\Using_FPGA.Native_0 (\LOCKSTEP_Out_reg[2926] ),
        .\mem_pc_i_reg[12] (\mem_pc_i_reg[0] [19]),
        .wb_PC_II_19(wb_PC_II_19),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  microblaze_v10_0_3_MB_MUXCY_XORCY_319 \Using_FPGA_LUT6.Gen_Ret_Addr[12].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[12].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3019] (\LOCKSTEP_Out_reg[3007] [11]),
        .S(addr_AddSub_19),
        .\Using_FPGA.Native (\LOCKSTEP_Out_reg[2926] ),
        .\Using_FPGA.Native_0 (carry_19),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[12].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\LOCKSTEP_Out_reg[2925] ),
        .lopt_10(lopt_34),
        .lopt_11(lopt_35),
        .lopt_2(addr_AddSub_20),
        .lopt_3(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[12].MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(\LOCKSTEP_Out_reg[2924] ),
        .lopt_5(addr_AddSub_21),
        .lopt_6(lopt_32),
        .lopt_7(\LOCKSTEP_Out_reg[2923] ),
        .lopt_8(addr_AddSub_22),
        .lopt_9(lopt_33));
  MB_FDE_320 \Using_FPGA_LUT6.Gen_Ret_Addr[12].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2926] (\LOCKSTEP_Out_reg[2926] ),
        .mem_valid_reg(mem_valid_reg),
        .wb_PC_II_19(wb_PC_II_19));
  MB_LUT6_2__parameterized5_321 \Using_FPGA_LUT6.Gen_Ret_Addr[13].I_RET_ADDR_WB 
       (.MEM_WB_Sel_Mem_PC(MEM_WB_Sel_Mem_PC),
        .S(addr_AddSub_18),
        .\Using_FPGA.Native_0 (\LOCKSTEP_Out_reg[2927] ),
        .\mem_pc_i_reg[13] (\mem_pc_i_reg[0] [18]),
        .wb_PC_II_18(wb_PC_II_18),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  microblaze_v10_0_3_MB_MUXCY_XORCY_322 \Using_FPGA_LUT6.Gen_Ret_Addr[13].MUXCY_XOR_I 
       (.LO(carry_19),
        .\LOCKSTEP_Out_reg[3020] (\LOCKSTEP_Out_reg[3007] [10]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[13].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[13].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ),
        .\Using_FPGA.Native_0 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[13].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ),
        .lopt(lopt_26),
        .lopt_1(lopt_29));
  MB_FDE_323 \Using_FPGA_LUT6.Gen_Ret_Addr[13].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2927] (\LOCKSTEP_Out_reg[2927] ),
        .mem_valid_reg(mem_valid_reg),
        .wb_PC_II_18(wb_PC_II_18));
  MB_LUT6_2__parameterized5_324 \Using_FPGA_LUT6.Gen_Ret_Addr[14].I_RET_ADDR_WB 
       (.MEM_WB_Sel_Mem_PC(MEM_WB_Sel_Mem_PC),
        .S(addr_AddSub_17),
        .\Using_FPGA.Native_0 (\LOCKSTEP_Out_reg[2928] ),
        .\mem_pc_i_reg[14] (\mem_pc_i_reg[0] [17]),
        .wb_PC_II_17(wb_PC_II_17),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  microblaze_v10_0_3_MB_MUXCY_XORCY_325 \Using_FPGA_LUT6.Gen_Ret_Addr[14].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[14].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3021] (\LOCKSTEP_Out_reg[3007] [9]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[14].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[14].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ),
        .\Using_FPGA.Native_0 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[14].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[14].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_28));
  MB_FDE_326 \Using_FPGA_LUT6.Gen_Ret_Addr[14].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2928] (\LOCKSTEP_Out_reg[2928] ),
        .mem_valid_reg(mem_valid_reg),
        .wb_PC_II_17(wb_PC_II_17));
  MB_LUT6_2__parameterized5_327 \Using_FPGA_LUT6.Gen_Ret_Addr[15].I_RET_ADDR_WB 
       (.MEM_WB_Sel_Mem_PC(MEM_WB_Sel_Mem_PC),
        .S(addr_AddSub_16),
        .\Using_FPGA.Native_0 (\LOCKSTEP_Out_reg[2929] ),
        .\mem_pc_i_reg[15] (\mem_pc_i_reg[0] [16]),
        .wb_PC_II_16(wb_PC_II_16),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  microblaze_v10_0_3_MB_MUXCY_XORCY_328 \Using_FPGA_LUT6.Gen_Ret_Addr[15].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[15].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3022] (\LOCKSTEP_Out_reg[3007] [8]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[15].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[15].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ),
        .\Using_FPGA.Native_0 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[15].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[15].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_27));
  MB_FDE_329 \Using_FPGA_LUT6.Gen_Ret_Addr[15].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2929] (\LOCKSTEP_Out_reg[2929] ),
        .mem_valid_reg(mem_valid_reg),
        .wb_PC_II_16(wb_PC_II_16));
  MB_LUT6_2__parameterized5_330 \Using_FPGA_LUT6.Gen_Ret_Addr[16].I_RET_ADDR_WB 
       (.DI(\^LOCKSTEP_Out_reg[2930] ),
        .MEM_WB_Sel_Mem_PC(MEM_WB_Sel_Mem_PC),
        .S(addr_AddSub_15),
        .\mem_pc_i_reg[16] (\mem_pc_i_reg[0] [15]),
        .wb_PC_II_15(wb_PC_II_15),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  microblaze_v10_0_3_MB_MUXCY_XORCY_331 \Using_FPGA_LUT6.Gen_Ret_Addr[16].MUXCY_XOR_I 
       (.D(D),
        .DI(\^LOCKSTEP_Out_reg[2930] ),
        .\EX_Op3_reg[16] (\EX_Op3_reg[16] ),
        .GPR_Op1(GPR_Op1),
        .GPR_Op3(GPR_Op3),
        .LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[16].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3023] (\LOCKSTEP_Out_reg[2914] [7]),
        .\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg (\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .Q(Q[7]),
        .S(addr_AddSub_15),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_2 ),
        .\Using_FPGA.Native_3 (carry_15),
        .\data_rd_reg_reg[16] (\data_rd_reg_reg[16] [7]),
        .\ex_gpr_write_addr_reg[0] (\ex_gpr_write_addr_reg[0] ),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[16].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\LOCKSTEP_Out_reg[2929] ),
        .lopt_10(lopt_28),
        .lopt_11(lopt_29),
        .lopt_2(addr_AddSub_16),
        .lopt_3(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[16].MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(\LOCKSTEP_Out_reg[2928] ),
        .lopt_5(addr_AddSub_17),
        .lopt_6(lopt_26),
        .lopt_7(\LOCKSTEP_Out_reg[2927] ),
        .lopt_8(addr_AddSub_18),
        .lopt_9(lopt_27),
        .read_register_MSR_1(read_register_MSR_1),
        .wb_byte_access(wb_byte_access),
        .\wb_exception_kind_i_reg[31] (\wb_exception_kind_i_reg[31] ),
        .\wb_gpr_write_addr_reg[3] (\wb_gpr_write_addr_reg[3] ),
        .wb_gpr_write_dbg(wb_gpr_write_dbg),
        .\wb_read_lsb_1_sel_reg[0] (\wb_read_lsb_1_sel_reg[0]_6 ));
  MB_FDE_332 \Using_FPGA_LUT6.Gen_Ret_Addr[16].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2930] (\^LOCKSTEP_Out_reg[2930] ),
        .mem_valid_reg(mem_valid_reg),
        .wb_PC_II_15(wb_PC_II_15));
  MB_LUT6_2__parameterized5_333 \Using_FPGA_LUT6.Gen_Ret_Addr[17].I_RET_ADDR_WB 
       (.DI(\^LOCKSTEP_Out_reg[2931] ),
        .MEM_WB_Sel_Mem_PC(MEM_WB_Sel_Mem_PC),
        .S(addr_AddSub_14),
        .\mem_pc_i_reg[17] (\mem_pc_i_reg[0] [14]),
        .wb_PC_II_14(wb_PC_II_14),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  microblaze_v10_0_3_MB_MUXCY_XORCY_334 \Using_FPGA_LUT6.Gen_Ret_Addr[17].MUXCY_XOR_I 
       (.DI(\^LOCKSTEP_Out_reg[2931] ),
        .LO(carry_15),
        .\LOCKSTEP_Out_reg[3024] (\LOCKSTEP_Out_reg[2914] [6]),
        .\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg (\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .Q(Q[6]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[17].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[17].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ),
        .\data_rd_reg_reg[17] (\data_rd_reg_reg[16] [6]),
        .lopt(lopt_20),
        .lopt_1(lopt_23),
        .read_register_MSR_1(read_register_MSR_1),
        .wb_byte_access(wb_byte_access),
        .\wb_exception_kind_i_reg[31] (\wb_exception_kind_i_reg[31] ),
        .wb_gpr_write_dbg(wb_gpr_write_dbg),
        .\wb_read_lsb_1_sel_reg[0] (\wb_read_lsb_1_sel_reg[0]_5 ));
  MB_FDE_335 \Using_FPGA_LUT6.Gen_Ret_Addr[17].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2931] (\^LOCKSTEP_Out_reg[2931] ),
        .mem_valid_reg(mem_valid_reg),
        .wb_PC_II_14(wb_PC_II_14));
  MB_LUT6_2__parameterized5_336 \Using_FPGA_LUT6.Gen_Ret_Addr[18].I_RET_ADDR_WB 
       (.DI(\^LOCKSTEP_Out_reg[2932] ),
        .MEM_WB_Sel_Mem_PC(MEM_WB_Sel_Mem_PC),
        .S(addr_AddSub_13),
        .\mem_pc_i_reg[18] (\mem_pc_i_reg[0] [13]),
        .wb_PC_II_13(wb_PC_II_13),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  microblaze_v10_0_3_MB_MUXCY_XORCY_337 \Using_FPGA_LUT6.Gen_Ret_Addr[18].MUXCY_XOR_I 
       (.DI(\^LOCKSTEP_Out_reg[2932] ),
        .LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[18].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3025] (\LOCKSTEP_Out_reg[2914] [5]),
        .\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg (\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .Q(Q[5]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[18].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[18].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ),
        .\data_rd_reg_reg[18] (\data_rd_reg_reg[16] [5]),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[18].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_22),
        .read_register_MSR_1(read_register_MSR_1),
        .wb_byte_access(wb_byte_access),
        .\wb_exception_kind_i_reg[31] (\wb_exception_kind_i_reg[31] ),
        .wb_gpr_write_dbg(wb_gpr_write_dbg),
        .\wb_read_lsb_1_sel_reg[0] (\wb_read_lsb_1_sel_reg[0]_4 ));
  MB_FDE_338 \Using_FPGA_LUT6.Gen_Ret_Addr[18].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2932] (\^LOCKSTEP_Out_reg[2932] ),
        .mem_valid_reg(mem_valid_reg),
        .wb_PC_II_13(wb_PC_II_13));
  MB_LUT6_2__parameterized5_339 \Using_FPGA_LUT6.Gen_Ret_Addr[19].I_RET_ADDR_WB 
       (.DI(\^LOCKSTEP_Out_reg[2933] ),
        .MEM_WB_Sel_Mem_PC(MEM_WB_Sel_Mem_PC),
        .S(addr_AddSub_12),
        .\mem_pc_i_reg[19] (\mem_pc_i_reg[0] [12]),
        .wb_PC_II_12(wb_PC_II_12),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  microblaze_v10_0_3_MB_MUXCY_XORCY_340 \Using_FPGA_LUT6.Gen_Ret_Addr[19].MUXCY_XOR_I 
       (.DI(\^LOCKSTEP_Out_reg[2933] ),
        .LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[19].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3026] (\LOCKSTEP_Out_reg[2914] [4]),
        .\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg (\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .Q(Q[4]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[19].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[19].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ),
        .\data_rd_reg_reg[19] (\data_rd_reg_reg[16] [4]),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[19].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_21),
        .read_register_MSR_1(read_register_MSR_1),
        .wb_byte_access(wb_byte_access),
        .\wb_exception_kind_i_reg[31] (\wb_exception_kind_i_reg[31] ),
        .wb_gpr_write_dbg(wb_gpr_write_dbg),
        .\wb_read_lsb_1_sel_reg[0] (\wb_read_lsb_1_sel_reg[0]_3 ));
  MB_FDE_341 \Using_FPGA_LUT6.Gen_Ret_Addr[19].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2933] (\^LOCKSTEP_Out_reg[2933] ),
        .mem_valid_reg(mem_valid_reg),
        .wb_PC_II_12(wb_PC_II_12));
  MB_LUT6_2__parameterized5_342 \Using_FPGA_LUT6.Gen_Ret_Addr[1].I_RET_ADDR_WB 
       (.MEM_WB_Sel_Mem_PC(MEM_WB_Sel_Mem_PC),
        .S(addr_AddSub_30),
        .\Using_FPGA.Native_0 (\LOCKSTEP_Out_reg[2915] ),
        .\mem_pc_i_reg[1] (\mem_pc_i_reg[0] [30]),
        .wb_PC_II_30(wb_PC_II_30),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  microblaze_v10_0_3_MB_MUXCY_XORCY_343 \Using_FPGA_LUT6.Gen_Ret_Addr[1].MUXCY_XOR_I 
       (.LO(carry_31),
        .\LOCKSTEP_Out_reg[3008] (\LOCKSTEP_Out_reg[3007] [22]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[1].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[1].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ),
        .\Using_FPGA.Native_0 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[1].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ),
        .lopt(lopt_44),
        .lopt_1(lopt_47));
  MB_FDE_344 \Using_FPGA_LUT6.Gen_Ret_Addr[1].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2915] (\LOCKSTEP_Out_reg[2915] ),
        .mem_valid_reg(mem_valid_reg),
        .wb_PC_II_30(wb_PC_II_30));
  MB_LUT6_2__parameterized5_345 \Using_FPGA_LUT6.Gen_Ret_Addr[20].I_RET_ADDR_WB 
       (.DI(\^LOCKSTEP_Out_reg[2934] ),
        .MEM_WB_Sel_Mem_PC(MEM_WB_Sel_Mem_PC),
        .S(addr_AddSub_11),
        .\mem_pc_i_reg[20] (\mem_pc_i_reg[0] [11]),
        .wb_PC_II_11(wb_PC_II_11),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  microblaze_v10_0_3_MB_MUXCY_XORCY_346 \Using_FPGA_LUT6.Gen_Ret_Addr[20].MUXCY_XOR_I 
       (.DI(\^LOCKSTEP_Out_reg[2934] ),
        .LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[20].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3027] (\LOCKSTEP_Out_reg[2914] [3]),
        .\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg (\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .Q(Q[3]),
        .S(addr_AddSub_11),
        .\Using_FPGA.Native (carry_11),
        .\data_rd_reg_reg[20] (\data_rd_reg_reg[16] [3]),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[20].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^LOCKSTEP_Out_reg[2933] ),
        .lopt_10(lopt_22),
        .lopt_11(lopt_23),
        .lopt_2(addr_AddSub_12),
        .lopt_3(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[20].MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(\^LOCKSTEP_Out_reg[2932] ),
        .lopt_5(addr_AddSub_13),
        .lopt_6(lopt_20),
        .lopt_7(\^LOCKSTEP_Out_reg[2931] ),
        .lopt_8(addr_AddSub_14),
        .lopt_9(lopt_21),
        .read_register_MSR_1(read_register_MSR_1),
        .wb_byte_access(wb_byte_access),
        .\wb_exception_kind_i_reg[31] (\wb_exception_kind_i_reg[31] ),
        .wb_gpr_write_dbg(wb_gpr_write_dbg),
        .\wb_read_lsb_1_sel_reg[0] (\wb_read_lsb_1_sel_reg[0]_2 ));
  MB_FDE_347 \Using_FPGA_LUT6.Gen_Ret_Addr[20].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2934] (\^LOCKSTEP_Out_reg[2934] ),
        .mem_valid_reg(mem_valid_reg),
        .wb_PC_II_11(wb_PC_II_11));
  MB_LUT6_2__parameterized5_348 \Using_FPGA_LUT6.Gen_Ret_Addr[21].I_RET_ADDR_WB 
       (.DI(\^LOCKSTEP_Out_reg[2935] ),
        .MEM_WB_Sel_Mem_PC(MEM_WB_Sel_Mem_PC),
        .S(addr_AddSub_10),
        .\mem_pc_i_reg[21] (\mem_pc_i_reg[0] [10]),
        .wb_PC_II_10(wb_PC_II_10),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  microblaze_v10_0_3_MB_MUXCY_XORCY_349 \Using_FPGA_LUT6.Gen_Ret_Addr[21].MUXCY_XOR_I 
       (.DI(\^LOCKSTEP_Out_reg[2935] ),
        .LO(carry_11),
        .\LOCKSTEP_Out_reg[3028] (\LOCKSTEP_Out_reg[2914] [2]),
        .\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg (\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .Q(Q[2]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[21].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[21].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ),
        .\data_rd_reg_reg[21] (\data_rd_reg_reg[16] [2]),
        .lopt(lopt_14),
        .lopt_1(lopt_17),
        .read_register_MSR_1(read_register_MSR_1),
        .wb_byte_access(wb_byte_access),
        .\wb_exception_kind_i_reg[31] (\wb_exception_kind_i_reg[31] ),
        .wb_gpr_write_dbg(wb_gpr_write_dbg),
        .\wb_read_lsb_1_sel_reg[0] (\wb_read_lsb_1_sel_reg[0]_1 ));
  MB_FDE_350 \Using_FPGA_LUT6.Gen_Ret_Addr[21].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2935] (\^LOCKSTEP_Out_reg[2935] ),
        .mem_valid_reg(mem_valid_reg),
        .wb_PC_II_10(wb_PC_II_10));
  MB_LUT6_2__parameterized5_351 \Using_FPGA_LUT6.Gen_Ret_Addr[22].I_RET_ADDR_WB 
       (.DI(\^LOCKSTEP_Out_reg[2936] ),
        .MEM_WB_Sel_Mem_PC(MEM_WB_Sel_Mem_PC),
        .S(addr_AddSub_9),
        .\mem_pc_i_reg[22] (\mem_pc_i_reg[0] [9]),
        .wb_PC_II_9(wb_PC_II_9),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  microblaze_v10_0_3_MB_MUXCY_XORCY_352 \Using_FPGA_LUT6.Gen_Ret_Addr[22].MUXCY_XOR_I 
       (.DI(\^LOCKSTEP_Out_reg[2936] ),
        .LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[22].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3029] (\LOCKSTEP_Out_reg[2914] [1]),
        .\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg (\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .Q(Q[1]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[22].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[22].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ),
        .\data_rd_reg_reg[22] (\data_rd_reg_reg[16] [1]),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[22].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_16),
        .read_register_MSR_1(read_register_MSR_1),
        .wb_byte_access(wb_byte_access),
        .\wb_exception_kind_i_reg[31] (\wb_exception_kind_i_reg[31] ),
        .wb_gpr_write_dbg(wb_gpr_write_dbg),
        .\wb_read_lsb_1_sel_reg[0] (\wb_read_lsb_1_sel_reg[0]_0 ));
  MB_FDE_353 \Using_FPGA_LUT6.Gen_Ret_Addr[22].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2936] (\^LOCKSTEP_Out_reg[2936] ),
        .mem_valid_reg(mem_valid_reg),
        .wb_PC_II_9(wb_PC_II_9));
  MB_LUT6_2__parameterized5_354 \Using_FPGA_LUT6.Gen_Ret_Addr[23].I_RET_ADDR_WB 
       (.DI(\^LOCKSTEP_Out_reg[2937] ),
        .MEM_WB_Sel_Mem_PC(MEM_WB_Sel_Mem_PC),
        .S(addr_AddSub_8),
        .\mem_pc_i_reg[23] (\mem_pc_i_reg[0] [8]),
        .wb_PC_II_8(wb_PC_II_8),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  microblaze_v10_0_3_MB_MUXCY_XORCY_355 \Using_FPGA_LUT6.Gen_Ret_Addr[23].MUXCY_XOR_I 
       (.DI(\^LOCKSTEP_Out_reg[2937] ),
        .LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[23].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3030] (\LOCKSTEP_Out_reg[2914] [0]),
        .\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg (\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .Q(Q[0]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[23].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[23].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ),
        .\data_rd_reg_reg[23] (\data_rd_reg_reg[16] [0]),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[23].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_15),
        .read_register_MSR_1(read_register_MSR_1),
        .wb_byte_access(wb_byte_access),
        .\wb_exception_kind_i_reg[31] (\wb_exception_kind_i_reg[31] ),
        .wb_gpr_write_dbg(wb_gpr_write_dbg),
        .\wb_read_lsb_1_sel_reg[0] (\wb_read_lsb_1_sel_reg[0] ));
  MB_FDE_356 \Using_FPGA_LUT6.Gen_Ret_Addr[23].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2937] (\^LOCKSTEP_Out_reg[2937] ),
        .mem_valid_reg(mem_valid_reg),
        .wb_PC_II_8(wb_PC_II_8));
  MB_LUT6_2__parameterized5_357 \Using_FPGA_LUT6.Gen_Ret_Addr[24].I_RET_ADDR_WB 
       (.MEM_WB_Sel_Mem_PC(MEM_WB_Sel_Mem_PC),
        .S(addr_AddSub_7),
        .\Using_FPGA.Native_0 (\LOCKSTEP_Out_reg[2938] ),
        .\mem_pc_i_reg[24] (\mem_pc_i_reg[0] [7]),
        .wb_PC_II_7(wb_PC_II_7),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  microblaze_v10_0_3_MB_MUXCY_XORCY_358 \Using_FPGA_LUT6.Gen_Ret_Addr[24].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[24].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3031] (\LOCKSTEP_Out_reg[3007] [7]),
        .S(addr_AddSub_7),
        .\Using_FPGA.Native (\LOCKSTEP_Out_reg[2938] ),
        .\Using_FPGA.Native_0 (carry_7),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[24].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^LOCKSTEP_Out_reg[2937] ),
        .lopt_10(lopt_16),
        .lopt_11(lopt_17),
        .lopt_2(addr_AddSub_8),
        .lopt_3(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[24].MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(\^LOCKSTEP_Out_reg[2936] ),
        .lopt_5(addr_AddSub_9),
        .lopt_6(lopt_14),
        .lopt_7(\^LOCKSTEP_Out_reg[2935] ),
        .lopt_8(addr_AddSub_10),
        .lopt_9(lopt_15));
  MB_FDE_359 \Using_FPGA_LUT6.Gen_Ret_Addr[24].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2938] (\LOCKSTEP_Out_reg[2938] ),
        .mem_valid_reg(mem_valid_reg),
        .wb_PC_II_7(wb_PC_II_7));
  MB_LUT6_2__parameterized5_360 \Using_FPGA_LUT6.Gen_Ret_Addr[25].I_RET_ADDR_WB 
       (.MEM_WB_Sel_Mem_PC(MEM_WB_Sel_Mem_PC),
        .S(addr_AddSub_6),
        .\Using_FPGA.Native_0 (\LOCKSTEP_Out_reg[2939] ),
        .\mem_pc_i_reg[25] (\mem_pc_i_reg[0] [6]),
        .wb_PC_II_6(wb_PC_II_6),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  microblaze_v10_0_3_MB_MUXCY_XORCY_361 \Using_FPGA_LUT6.Gen_Ret_Addr[25].MUXCY_XOR_I 
       (.LO(carry_7),
        .\LOCKSTEP_Out_reg[3032] (\LOCKSTEP_Out_reg[3007] [6]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[25].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[25].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ),
        .\Using_FPGA.Native_0 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[25].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ),
        .lopt(lopt_8),
        .lopt_1(lopt_11));
  MB_FDE_362 \Using_FPGA_LUT6.Gen_Ret_Addr[25].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2939] (\LOCKSTEP_Out_reg[2939] ),
        .mem_valid_reg(mem_valid_reg),
        .wb_PC_II_6(wb_PC_II_6));
  MB_LUT6_2__parameterized5_363 \Using_FPGA_LUT6.Gen_Ret_Addr[26].I_RET_ADDR_WB 
       (.MEM_WB_Sel_Mem_PC(MEM_WB_Sel_Mem_PC),
        .S(addr_AddSub_5),
        .\Using_FPGA.Native_0 (\LOCKSTEP_Out_reg[2940] ),
        .\mem_pc_i_reg[26] (\mem_pc_i_reg[0] [5]),
        .wb_PC_II_5(wb_PC_II_5),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  microblaze_v10_0_3_MB_MUXCY_XORCY_364 \Using_FPGA_LUT6.Gen_Ret_Addr[26].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[26].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3033] (\LOCKSTEP_Out_reg[3007] [5]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[26].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[26].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ),
        .\Using_FPGA.Native_0 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[26].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[26].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_10));
  MB_FDE_365 \Using_FPGA_LUT6.Gen_Ret_Addr[26].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2940] (\LOCKSTEP_Out_reg[2940] ),
        .mem_valid_reg(mem_valid_reg),
        .wb_PC_II_5(wb_PC_II_5));
  MB_LUT6_2__parameterized5_366 \Using_FPGA_LUT6.Gen_Ret_Addr[27].I_RET_ADDR_WB 
       (.MEM_WB_Sel_Mem_PC(MEM_WB_Sel_Mem_PC),
        .S(addr_AddSub_4),
        .\Using_FPGA.Native_0 (\LOCKSTEP_Out_reg[2941] ),
        .\mem_pc_i_reg[27] (\mem_pc_i_reg[0] [4]),
        .wb_PC_II_4(wb_PC_II_4),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  microblaze_v10_0_3_MB_MUXCY_XORCY_367 \Using_FPGA_LUT6.Gen_Ret_Addr[27].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[27].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3034] (\LOCKSTEP_Out_reg[3007] [4]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[27].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[27].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ),
        .\Using_FPGA.Native_0 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[27].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[27].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_9));
  MB_FDE_368 \Using_FPGA_LUT6.Gen_Ret_Addr[27].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2941] (\LOCKSTEP_Out_reg[2941] ),
        .mem_valid_reg(mem_valid_reg),
        .wb_PC_II_4(wb_PC_II_4));
  MB_LUT6_2__parameterized5_369 \Using_FPGA_LUT6.Gen_Ret_Addr[28].I_RET_ADDR_WB 
       (.MEM_WB_Sel_Mem_PC(MEM_WB_Sel_Mem_PC),
        .S(addr_AddSub_3),
        .\Using_FPGA.Native_0 (\LOCKSTEP_Out_reg[2942] ),
        .\mem_pc_i_reg[28] (\mem_pc_i_reg[0] [3]),
        .wb_PC_II_3(wb_PC_II_3),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  microblaze_v10_0_3_MB_MUXCY_XORCY_370 \Using_FPGA_LUT6.Gen_Ret_Addr[28].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[28].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3035] (\LOCKSTEP_Out_reg[3007] [3]),
        .S(addr_AddSub_3),
        .\Using_FPGA.Native (\LOCKSTEP_Out_reg[2942] ),
        .\Using_FPGA.Native_0 (carry_3),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[28].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\LOCKSTEP_Out_reg[2941] ),
        .lopt_10(lopt_10),
        .lopt_11(lopt_11),
        .lopt_2(addr_AddSub_4),
        .lopt_3(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[28].MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(\LOCKSTEP_Out_reg[2940] ),
        .lopt_5(addr_AddSub_5),
        .lopt_6(lopt_8),
        .lopt_7(\LOCKSTEP_Out_reg[2939] ),
        .lopt_8(addr_AddSub_6),
        .lopt_9(lopt_9));
  MB_FDE_371 \Using_FPGA_LUT6.Gen_Ret_Addr[28].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2942] (\LOCKSTEP_Out_reg[2942] ),
        .mem_valid_reg(mem_valid_reg),
        .wb_PC_II_3(wb_PC_II_3));
  MB_LUT6_2__parameterized5_372 \Using_FPGA_LUT6.Gen_Ret_Addr[29].I_RET_ADDR_WB 
       (.I1_0(I1_0),
        .MEM_WB_Sel_Mem_PC(MEM_WB_Sel_Mem_PC),
        .S(addr_AddSub_2),
        .\Using_FPGA.Native_0 (\LOCKSTEP_Out_reg[2943] ),
        .\mem_pc_i_reg[29] (\mem_pc_i_reg[0] [2]),
        .wb_PC_II_2(wb_PC_II_2),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  microblaze_v10_0_3_MB_MUXCY_XORCY_373 \Using_FPGA_LUT6.Gen_Ret_Addr[29].MUXCY_XOR_I 
       (.LO(carry_3),
        .\LOCKSTEP_Out_reg[3036] (\LOCKSTEP_Out_reg[3007] [2]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[29].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[29].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ),
        .\Using_FPGA.Native_0 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[29].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ),
        .lopt(lopt_2),
        .lopt_1(lopt_5));
  MB_FDE_374 \Using_FPGA_LUT6.Gen_Ret_Addr[29].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2943] (\LOCKSTEP_Out_reg[2943] ),
        .mem_valid_reg(mem_valid_reg),
        .wb_PC_II_2(wb_PC_II_2));
  MB_LUT6_2__parameterized5_375 \Using_FPGA_LUT6.Gen_Ret_Addr[2].I_RET_ADDR_WB 
       (.MEM_WB_Sel_Mem_PC(MEM_WB_Sel_Mem_PC),
        .S(addr_AddSub_29),
        .\Using_FPGA.Native_0 (\LOCKSTEP_Out_reg[2916] ),
        .\mem_pc_i_reg[2] (\mem_pc_i_reg[0] [29]),
        .wb_PC_II_29(wb_PC_II_29),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  microblaze_v10_0_3_MB_MUXCY_XORCY_376 \Using_FPGA_LUT6.Gen_Ret_Addr[2].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[2].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3009] (\LOCKSTEP_Out_reg[3007] [21]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[2].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[2].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ),
        .\Using_FPGA.Native_0 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[2].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[2].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_46));
  MB_FDE_377 \Using_FPGA_LUT6.Gen_Ret_Addr[2].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2916] (\LOCKSTEP_Out_reg[2916] ),
        .mem_valid_reg(mem_valid_reg),
        .wb_PC_II_29(wb_PC_II_29));
  MB_LUT6_2__parameterized5_378 \Using_FPGA_LUT6.Gen_Ret_Addr[30].I_RET_ADDR_WB 
       (.MEM_WB_Sel_Mem_PC(MEM_WB_Sel_Mem_PC),
        .S(addr_AddSub_1),
        .\Using_FPGA.Native_0 (\LOCKSTEP_Out_reg[2944] ),
        .\mem_pc_i_reg[30] (\mem_pc_i_reg[0] [1]),
        .wb_PC_II_1(wb_PC_II_1),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  microblaze_v10_0_3_MB_MUXCY_XORCY_379 \Using_FPGA_LUT6.Gen_Ret_Addr[30].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[30].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3037] (\LOCKSTEP_Out_reg[3007] [1]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[30].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[30].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ),
        .\Using_FPGA.Native_0 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[30].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[30].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_4));
  MB_FDE_380 \Using_FPGA_LUT6.Gen_Ret_Addr[30].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2944] (\LOCKSTEP_Out_reg[2944] ),
        .mem_valid_reg(mem_valid_reg),
        .wb_PC_II_1(wb_PC_II_1));
  MB_LUT6_2__parameterized5_381 \Using_FPGA_LUT6.Gen_Ret_Addr[31].I_RET_ADDR_WB 
       (.DI(DI),
        .MEM_WB_Sel_Mem_PC(MEM_WB_Sel_Mem_PC),
        .S(addr_AddSub_0),
        .\mem_pc_i_reg[31] (\mem_pc_i_reg[0] [0]),
        .wb_PC_II_0(wb_PC_II_0),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  microblaze_v10_0_3_MB_MUXCY_XORCY_382 \Using_FPGA_LUT6.Gen_Ret_Addr[31].MUXCY_XOR_I 
       (.CI(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[31].MUXCY_XOR_I_CI_UNCONNECTED ),
        .DI(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[31].MUXCY_XOR_I_DI_UNCONNECTED ),
        .LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[31].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3038] (\LOCKSTEP_Out_reg[3007] [0]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[31].MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[31].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_3));
  MB_FDE_383 \Using_FPGA_LUT6.Gen_Ret_Addr[31].WB_PC_FDE 
       (.Clk(Clk),
        .DI(DI),
        .mem_valid_reg(mem_valid_reg),
        .wb_PC_II_0(wb_PC_II_0));
  MB_LUT6_2__parameterized5_384 \Using_FPGA_LUT6.Gen_Ret_Addr[3].I_RET_ADDR_WB 
       (.MEM_WB_Sel_Mem_PC(MEM_WB_Sel_Mem_PC),
        .S(addr_AddSub_28),
        .\Using_FPGA.Native_0 (\LOCKSTEP_Out_reg[2917] ),
        .\mem_pc_i_reg[3] (\mem_pc_i_reg[0] [28]),
        .wb_PC_II_28(wb_PC_II_28),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  microblaze_v10_0_3_MB_MUXCY_XORCY_385 \Using_FPGA_LUT6.Gen_Ret_Addr[3].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[3].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3010] (\LOCKSTEP_Out_reg[3007] [20]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[3].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[3].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ),
        .\Using_FPGA.Native_0 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[3].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[3].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_45));
  MB_FDE_386 \Using_FPGA_LUT6.Gen_Ret_Addr[3].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2917] (\LOCKSTEP_Out_reg[2917] ),
        .mem_valid_reg(mem_valid_reg),
        .wb_PC_II_28(wb_PC_II_28));
  MB_LUT6_2__parameterized5_387 \Using_FPGA_LUT6.Gen_Ret_Addr[4].I_RET_ADDR_WB 
       (.MEM_WB_Sel_Mem_PC(MEM_WB_Sel_Mem_PC),
        .S(addr_AddSub_27),
        .\Using_FPGA.Native_0 (\LOCKSTEP_Out_reg[2918] ),
        .\mem_pc_i_reg[4] (\mem_pc_i_reg[0] [27]),
        .wb_PC_II_27(wb_PC_II_27),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  microblaze_v10_0_3_MB_MUXCY_XORCY_388 \Using_FPGA_LUT6.Gen_Ret_Addr[4].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[4].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3011] (\LOCKSTEP_Out_reg[3007] [19]),
        .S(addr_AddSub_27),
        .\Using_FPGA.Native (\LOCKSTEP_Out_reg[2918] ),
        .\Using_FPGA.Native_0 (carry_27),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[4].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\LOCKSTEP_Out_reg[2917] ),
        .lopt_10(lopt_46),
        .lopt_11(lopt_47),
        .lopt_2(addr_AddSub_28),
        .lopt_3(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[4].MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(\LOCKSTEP_Out_reg[2916] ),
        .lopt_5(addr_AddSub_29),
        .lopt_6(lopt_44),
        .lopt_7(\LOCKSTEP_Out_reg[2915] ),
        .lopt_8(addr_AddSub_30),
        .lopt_9(lopt_45));
  MB_FDE_389 \Using_FPGA_LUT6.Gen_Ret_Addr[4].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2918] (\LOCKSTEP_Out_reg[2918] ),
        .mem_valid_reg(mem_valid_reg),
        .wb_PC_II_27(wb_PC_II_27));
  MB_LUT6_2__parameterized5_390 \Using_FPGA_LUT6.Gen_Ret_Addr[5].I_RET_ADDR_WB 
       (.MEM_WB_Sel_Mem_PC(MEM_WB_Sel_Mem_PC),
        .S(addr_AddSub_26),
        .\Using_FPGA.Native_0 (\LOCKSTEP_Out_reg[2919] ),
        .\mem_pc_i_reg[5] (\mem_pc_i_reg[0] [26]),
        .wb_PC_II_26(wb_PC_II_26),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  microblaze_v10_0_3_MB_MUXCY_XORCY_391 \Using_FPGA_LUT6.Gen_Ret_Addr[5].MUXCY_XOR_I 
       (.LO(carry_27),
        .\LOCKSTEP_Out_reg[3012] (\LOCKSTEP_Out_reg[3007] [18]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[5].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[5].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ),
        .\Using_FPGA.Native_0 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[5].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ),
        .lopt(lopt_38),
        .lopt_1(lopt_41));
  MB_FDE_392 \Using_FPGA_LUT6.Gen_Ret_Addr[5].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2919] (\LOCKSTEP_Out_reg[2919] ),
        .mem_valid_reg(mem_valid_reg),
        .wb_PC_II_26(wb_PC_II_26));
  MB_LUT6_2__parameterized5_393 \Using_FPGA_LUT6.Gen_Ret_Addr[6].I_RET_ADDR_WB 
       (.MEM_WB_Sel_Mem_PC(MEM_WB_Sel_Mem_PC),
        .S(addr_AddSub_25),
        .\Using_FPGA.Native_0 (\LOCKSTEP_Out_reg[2920] ),
        .\mem_pc_i_reg[6] (\mem_pc_i_reg[0] [25]),
        .wb_PC_II_25(wb_PC_II_25),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  microblaze_v10_0_3_MB_MUXCY_XORCY_394 \Using_FPGA_LUT6.Gen_Ret_Addr[6].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[6].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3013] (\LOCKSTEP_Out_reg[3007] [17]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[6].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[6].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ),
        .\Using_FPGA.Native_0 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[6].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[6].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_40));
  MB_FDE_395 \Using_FPGA_LUT6.Gen_Ret_Addr[6].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2920] (\LOCKSTEP_Out_reg[2920] ),
        .mem_valid_reg(mem_valid_reg),
        .wb_PC_II_25(wb_PC_II_25));
  MB_LUT6_2__parameterized5_396 \Using_FPGA_LUT6.Gen_Ret_Addr[7].I_RET_ADDR_WB 
       (.MEM_WB_Sel_Mem_PC(MEM_WB_Sel_Mem_PC),
        .S(addr_AddSub_24),
        .\Using_FPGA.Native_0 (\LOCKSTEP_Out_reg[2921] ),
        .\mem_pc_i_reg[7] (\mem_pc_i_reg[0] [24]),
        .wb_PC_II_24(wb_PC_II_24),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  microblaze_v10_0_3_MB_MUXCY_XORCY_397 \Using_FPGA_LUT6.Gen_Ret_Addr[7].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[7].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3014] (\LOCKSTEP_Out_reg[3007] [16]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[7].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[7].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ),
        .\Using_FPGA.Native_0 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[7].MUXCY_XOR_I_Using_FPGA.Native_0_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[7].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_39));
  MB_FDE_398 \Using_FPGA_LUT6.Gen_Ret_Addr[7].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2921] (\LOCKSTEP_Out_reg[2921] ),
        .mem_valid_reg(mem_valid_reg),
        .wb_PC_II_24(wb_PC_II_24));
  MB_LUT6_2__parameterized5_399 \Using_FPGA_LUT6.Gen_Ret_Addr[8].I_RET_ADDR_WB 
       (.MEM_WB_Sel_Mem_PC(MEM_WB_Sel_Mem_PC),
        .S(addr_AddSub_23),
        .\Using_FPGA.Native_0 (\LOCKSTEP_Out_reg[2922] ),
        .\mem_pc_i_reg[8] (\mem_pc_i_reg[0] [23]),
        .wb_PC_II_23(wb_PC_II_23),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  microblaze_v10_0_3_MB_MUXCY_XORCY_400 \Using_FPGA_LUT6.Gen_Ret_Addr[8].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[8].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3015] (\LOCKSTEP_Out_reg[3007] [15]),
        .S(addr_AddSub_23),
        .\Using_FPGA.Native (\LOCKSTEP_Out_reg[2922] ),
        .\Using_FPGA.Native_0 (carry_23),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[8].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\LOCKSTEP_Out_reg[2921] ),
        .lopt_10(lopt_40),
        .lopt_11(lopt_41),
        .lopt_2(addr_AddSub_24),
        .lopt_3(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[8].MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(\LOCKSTEP_Out_reg[2920] ),
        .lopt_5(addr_AddSub_25),
        .lopt_6(lopt_38),
        .lopt_7(\LOCKSTEP_Out_reg[2919] ),
        .lopt_8(addr_AddSub_26),
        .lopt_9(lopt_39));
  MB_FDE_401 \Using_FPGA_LUT6.Gen_Ret_Addr[8].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2922] (\LOCKSTEP_Out_reg[2922] ),
        .mem_valid_reg(mem_valid_reg),
        .wb_PC_II_23(wb_PC_II_23));
  MB_LUT6_2__parameterized5_402 \Using_FPGA_LUT6.Gen_Ret_Addr[9].I_RET_ADDR_WB 
       (.MEM_WB_Sel_Mem_PC(MEM_WB_Sel_Mem_PC),
        .S(addr_AddSub_22),
        .\Using_FPGA.Native_0 (\LOCKSTEP_Out_reg[2923] ),
        .\mem_pc_i_reg[9] (\mem_pc_i_reg[0] [22]),
        .wb_PC_II_22(wb_PC_II_22),
        .\wb_exception_kind_i_reg[28] (\wb_exception_kind_i_reg[28] ));
  microblaze_v10_0_3_MB_MUXCY_XORCY_403 \Using_FPGA_LUT6.Gen_Ret_Addr[9].MUXCY_XOR_I 
       (.CI(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[9].MUXCY_XOR_I_CI_UNCONNECTED ),
        .LO(carry_23),
        .\LOCKSTEP_Out_reg[3016] (\LOCKSTEP_Out_reg[3007] [14]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[9].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[9].MUXCY_XOR_I_Using_FPGA.Native_UNCONNECTED ),
        .lopt(lopt_32),
        .lopt_1(lopt_35));
  MB_FDE_404 \Using_FPGA_LUT6.Gen_Ret_Addr[9].WB_PC_FDE 
       (.Clk(Clk),
        .\LOCKSTEP_Out_reg[2923] (\LOCKSTEP_Out_reg[2923] ),
        .mem_valid_reg(mem_valid_reg),
        .wb_PC_II_22(wb_PC_II_22));
endmodule

module instr_mux
   (I041_out,
    Y,
    I139_out,
    in,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Instr,
    LOCKSTEP_Master_Out);
  output I041_out;
  output [0:31]Y;
  output I139_out;
  output [0:0]in;
  input \Using_FPGA.Native ;
  input [0:0]\Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input [0:0]\Using_FPGA.Native_2 ;
  input [0:31]Instr;
  input [32:0]LOCKSTEP_Master_Out;

  wire I041_out;
  wire I139_out;
  wire [0:31]Instr;
  wire [32:0]LOCKSTEP_Master_Out;
  wire \Using_FPGA.Native ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire [0:0]\Using_FPGA.Native_2 ;
  wire [0:31]Y;
  wire [0:0]in;

  mux_bus \Mux_LD.LD_inst 
       (.I041_out(I041_out),
        .I139_out(I139_out),
        .Instr(Instr),
        .LOCKSTEP_Master_Out(LOCKSTEP_Master_Out),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_2 ),
        .Y(Y),
        .in(in));
endmodule

module jump_logic
   (ex_jump,
    ex_op1_cmp_equal,
    ex_op1_cmp_equal_n,
    \if_pc_reg[0] ,
    I5,
    \Using_FPGA.Native ,
    \if_pc_reg[0]_0 ,
    ex_delayslot_Instr0,
    ex_jump_hold_reg,
    if_missed_fetch_reg,
    keep_jump_taken_with_ds_reg,
    ex_valid_reg,
    ex_valid_jump_reg,
    mem_jump_taken_reg,
    ex_op1_zero,
    \Performace_Debug_Control.dbg_stop_if_delay_i_reg ,
    sync_reset,
    of_pause_reg,
    ex_op1_cmp_eq,
    Clk,
    ex_op1_cmp_eq_n5_out,
    \Using_FPGA.Native_0 ,
    ex_op1_cmp_eq1,
    use_Reg_Neg_DI1_out,
    force_Val10_out,
    use_Reg_Neg_S3_out,
    force12_out,
    \Using_FPGA.Native_1 ,
    Q,
    wb_exception,
    ex_jump_nodelay,
    of_valid,
    mem_valid_instr,
    mem_exception_from_ex,
    \Performace_Debug_Control.dbg_stop_if_delay_i_reg_0 ,
    ex_mbar_sleep_reg,
    ex_branch_with_delayslot,
    \EX_Op2_reg[0] ,
    O56_out,
    \if_pc_reg[1] ,
    \if_pc_reg[2] ,
    \if_pc_reg[3] ,
    \if_pc_reg[4] ,
    \if_pc_reg[5] ,
    \if_pc_reg[6] ,
    \if_pc_reg[7] ,
    \if_pc_reg[8] ,
    \if_pc_reg[9] ,
    \if_pc_reg[10] ,
    \if_pc_reg[11] ,
    \if_pc_reg[12] ,
    \if_pc_reg[13] ,
    \if_pc_reg[14] ,
    \if_pc_reg[15] ,
    \if_pc_reg[16] ,
    \if_pc_reg[17] ,
    \if_pc_reg[18] ,
    \if_pc_reg[19] ,
    \if_pc_reg[20] ,
    \if_pc_reg[21] ,
    \if_pc_reg[22] ,
    \if_pc_reg[23] ,
    \if_pc_reg[24] ,
    \if_pc_reg[25] ,
    \if_pc_reg[26] ,
    \if_pc_reg[27] ,
    \if_pc_reg[28] ,
    O,
    ex_databus_addr,
    \if_pc_reg[30] ,
    keep_jump_taken_with_ds,
    out,
    ex_mbar_sleep,
    ex_jump_hold,
    ex_mbar_decode,
    ex_first_cycle,
    ex_mbar_stall_no_sleep_1,
    ex_branch_with_delayslot_reg,
    if_missed_fetch_reg_0,
    \Serial_Dbg_Intf.if_debug_ready_i_reg ,
    \Use_Async_Reset.sync_reset_reg ,
    ex_valid_reg_0,
    \EX_Branch_CMP_Op1_reg[0] ,
    lopt,
    lopt_1,
    lopt_2);
  output ex_jump;
  output ex_op1_cmp_equal;
  output ex_op1_cmp_equal_n;
  output [0:0]\if_pc_reg[0] ;
  output I5;
  output \Using_FPGA.Native ;
  output [31:0]\if_pc_reg[0]_0 ;
  output ex_delayslot_Instr0;
  output ex_jump_hold_reg;
  output if_missed_fetch_reg;
  output keep_jump_taken_with_ds_reg;
  output ex_valid_reg;
  output ex_valid_jump_reg;
  output mem_jump_taken_reg;
  input ex_op1_zero;
  input \Performace_Debug_Control.dbg_stop_if_delay_i_reg ;
  input sync_reset;
  input of_pause_reg;
  input ex_op1_cmp_eq;
  input Clk;
  input ex_op1_cmp_eq_n5_out;
  input \Using_FPGA.Native_0 ;
  input ex_op1_cmp_eq1;
  input use_Reg_Neg_DI1_out;
  input force_Val10_out;
  input use_Reg_Neg_S3_out;
  input force12_out;
  input [0:0]\Using_FPGA.Native_1 ;
  input [1:0]Q;
  input wb_exception;
  input ex_jump_nodelay;
  input of_valid;
  input mem_valid_instr;
  input mem_exception_from_ex;
  input \Performace_Debug_Control.dbg_stop_if_delay_i_reg_0 ;
  input ex_mbar_sleep_reg;
  input ex_branch_with_delayslot;
  input [29:0]\EX_Op2_reg[0] ;
  input O56_out;
  input \if_pc_reg[1] ;
  input \if_pc_reg[2] ;
  input \if_pc_reg[3] ;
  input \if_pc_reg[4] ;
  input \if_pc_reg[5] ;
  input \if_pc_reg[6] ;
  input \if_pc_reg[7] ;
  input \if_pc_reg[8] ;
  input \if_pc_reg[9] ;
  input \if_pc_reg[10] ;
  input \if_pc_reg[11] ;
  input \if_pc_reg[12] ;
  input \if_pc_reg[13] ;
  input \if_pc_reg[14] ;
  input \if_pc_reg[15] ;
  input \if_pc_reg[16] ;
  input \if_pc_reg[17] ;
  input \if_pc_reg[18] ;
  input \if_pc_reg[19] ;
  input \if_pc_reg[20] ;
  input \if_pc_reg[21] ;
  input \if_pc_reg[22] ;
  input \if_pc_reg[23] ;
  input \if_pc_reg[24] ;
  input \if_pc_reg[25] ;
  input \if_pc_reg[26] ;
  input \if_pc_reg[27] ;
  input \if_pc_reg[28] ;
  input O;
  input [1:0]ex_databus_addr;
  input [1:0]\if_pc_reg[30] ;
  input keep_jump_taken_with_ds;
  input out;
  input ex_mbar_sleep;
  input ex_jump_hold;
  input ex_mbar_decode;
  input ex_first_cycle;
  input ex_mbar_stall_no_sleep_1;
  input ex_branch_with_delayslot_reg;
  input if_missed_fetch_reg_0;
  input \Serial_Dbg_Intf.if_debug_ready_i_reg ;
  input \Use_Async_Reset.sync_reset_reg ;
  input ex_valid_reg_0;
  input [0:0]\EX_Branch_CMP_Op1_reg[0] ;
  input lopt;
  output lopt_1;
  output lopt_2;

  wire Clk;
  wire [0:0]\EX_Branch_CMP_Op1_reg[0] ;
  wire [29:0]\EX_Op2_reg[0] ;
  wire I5;
  wire MUXCY_JUMP_CARRY6_n_42;
  wire O;
  wire O56_out;
  wire \Performace_Debug_Control.dbg_stop_if_delay_i_reg ;
  wire \Performace_Debug_Control.dbg_stop_if_delay_i_reg_0 ;
  wire [1:0]Q;
  wire \Serial_Dbg_Intf.if_debug_ready_i_reg ;
  wire \Use_Async_Reset.sync_reset_reg ;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire ex_branch_with_delayslot;
  wire ex_branch_with_delayslot_reg;
  wire [1:0]ex_databus_addr;
  wire ex_delayslot_Instr0;
  wire ex_first_cycle;
  wire ex_jump;
  wire ex_jump_hold;
  wire ex_jump_hold_reg;
  wire ex_jump_nodelay;
  wire ex_jump_q;
  wire ex_mbar_decode;
  wire ex_mbar_sleep;
  wire ex_mbar_sleep_reg;
  wire ex_mbar_stall_no_sleep_1;
  wire ex_op1_cmp_eq;
  wire ex_op1_cmp_eq1;
  wire ex_op1_cmp_eq_n5_out;
  wire ex_op1_cmp_equal;
  wire ex_op1_cmp_equal_n;
  wire ex_valid_jump_reg;
  wire ex_valid_reg;
  wire ex_valid_reg_0;
  wire force12_out;
  wire force1_reg_n_0;
  wire force2;
  wire force_Val10_out;
  wire force_Val1_reg_n_0;
  wire force_Val2_N;
  wire if_missed_fetch_reg;
  wire if_missed_fetch_reg_0;
  wire [0:0]\if_pc_reg[0] ;
  wire [31:0]\if_pc_reg[0]_0 ;
  wire \if_pc_reg[10] ;
  wire \if_pc_reg[11] ;
  wire \if_pc_reg[12] ;
  wire \if_pc_reg[13] ;
  wire \if_pc_reg[14] ;
  wire \if_pc_reg[15] ;
  wire \if_pc_reg[16] ;
  wire \if_pc_reg[17] ;
  wire \if_pc_reg[18] ;
  wire \if_pc_reg[19] ;
  wire \if_pc_reg[1] ;
  wire \if_pc_reg[20] ;
  wire \if_pc_reg[21] ;
  wire \if_pc_reg[22] ;
  wire \if_pc_reg[23] ;
  wire \if_pc_reg[24] ;
  wire \if_pc_reg[25] ;
  wire \if_pc_reg[26] ;
  wire \if_pc_reg[27] ;
  wire \if_pc_reg[28] ;
  wire \if_pc_reg[2] ;
  wire [1:0]\if_pc_reg[30] ;
  wire \if_pc_reg[3] ;
  wire \if_pc_reg[4] ;
  wire \if_pc_reg[5] ;
  wire \if_pc_reg[6] ;
  wire \if_pc_reg[7] ;
  wire \if_pc_reg[8] ;
  wire \if_pc_reg[9] ;
  wire jump_carry1;
  wire jump_carry5;
  wire keep_jump_taken_with_ds;
  wire keep_jump_taken_with_ds_reg;
  wire lopt;
  wire lopt_1;
  wire lopt_10;
  wire lopt_2;
  wire lopt_3;
  wire lopt_4;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire mem_exception_from_ex;
  wire mem_valid_instr;
  (* DIRECT_ENABLE *) wire of_PipeRun_for_ce;
  wire of_valid;
  wire out;
  (* DIRECT_RESET *) wire reset_bool_for_rst;
  wire use_Reg_Neg_DI1_out;
  wire use_Reg_Neg_DI_reg_n_0;
  wire use_Reg_Neg_S3_out;
  wire use_Reg_Neg_S_reg_n_0;
  wire wb_exception;
  wire NLW_MUXCY_JUMP_CARRY_ex_op1_zero_UNCONNECTED;
  wire NLW_MUXCY_JUMP_CARRY2_jump_carry2_UNCONNECTED;
  wire NLW_MUXCY_JUMP_CARRY2_lopt_3_UNCONNECTED;
  wire \NLW_MUXCY_JUMP_CARRY3_Performace_Debug_Control.dbg_stop_if_delay_i_reg_UNCONNECTED ;
  wire NLW_MUXCY_JUMP_CARRY3_ex_jump_wanted_UNCONNECTED;
  wire NLW_MUXCY_JUMP_CARRY3_jump_carry2_UNCONNECTED;
  wire NLW_MUXCY_JUMP_CARRY4_ex_jump_wanted_UNCONNECTED;
  wire NLW_MUXCY_JUMP_CARRY4_jump_carry4_UNCONNECTED;
  wire NLW_MUXCY_JUMP_CARRY4_lopt_UNCONNECTED;
  wire NLW_MUXCY_JUMP_CARRY5_jump_carry4_UNCONNECTED;
  wire NLW_MUXCY_JUMP_CARRY6_mem_jump_taken_reg_UNCONNECTED;

  assign of_PipeRun_for_ce = of_pause_reg;
  assign reset_bool_for_rst = sync_reset;
  microblaze_v10_0_3_MB_MUXCY_95 MUXCY_JUMP_CARRY
       (.\EX_Branch_CMP_Op1_reg[0] (\EX_Branch_CMP_Op1_reg[0] ),
        .ex_op1_zero(NLW_MUXCY_JUMP_CARRY_ex_op1_zero_UNCONNECTED),
        .force1_reg(force1_reg_n_0),
        .force_Val1_reg(force_Val1_reg_n_0),
        .jump_carry1(jump_carry1),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .use_Reg_Neg_DI_reg(use_Reg_Neg_DI_reg_n_0),
        .use_Reg_Neg_S_reg(use_Reg_Neg_S_reg_n_0));
  microblaze_v10_0_3_MB_MUXCY_96 MUXCY_JUMP_CARRY2
       (.force2(force2),
        .force_Val2_N(force_Val2_N),
        .jump_carry1(jump_carry1),
        .jump_carry2(NLW_MUXCY_JUMP_CARRY2_jump_carry2_UNCONNECTED),
        .lopt(lopt_3),
        .lopt_1(lopt_4),
        .lopt_2(\Performace_Debug_Control.dbg_stop_if_delay_i_reg ),
        .lopt_3(NLW_MUXCY_JUMP_CARRY2_lopt_3_UNCONNECTED),
        .lopt_4(lopt_6),
        .lopt_5(lopt_7),
        .lopt_6(lopt_8),
        .lopt_7(lopt_9),
        .lopt_8(lopt_10),
        .out(out));
  microblaze_v10_0_3_MB_MUXCY_97 MUXCY_JUMP_CARRY3
       (.\Performace_Debug_Control.dbg_stop_if_delay_i_reg (\NLW_MUXCY_JUMP_CARRY3_Performace_Debug_Control.dbg_stop_if_delay_i_reg_UNCONNECTED ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .ex_branch_with_delayslot(ex_branch_with_delayslot),
        .ex_jump_wanted(NLW_MUXCY_JUMP_CARRY3_ex_jump_wanted_UNCONNECTED),
        .ex_mbar_sleep_reg(ex_mbar_sleep_reg),
        .jump_carry2(NLW_MUXCY_JUMP_CARRY3_jump_carry2_UNCONNECTED),
        .lopt(lopt_3),
        .lopt_1(lopt_4),
        .of_valid(of_valid));
  microblaze_v10_0_3_MB_MUXCY_98 MUXCY_JUMP_CARRY4
       (.ex_branch_with_delayslot(ex_branch_with_delayslot),
        .ex_jump_q(ex_jump_q),
        .ex_jump_wanted(NLW_MUXCY_JUMP_CARRY4_ex_jump_wanted_UNCONNECTED),
        .jump_carry4(NLW_MUXCY_JUMP_CARRY4_jump_carry4_UNCONNECTED),
        .lopt(NLW_MUXCY_JUMP_CARRY4_lopt_UNCONNECTED),
        .lopt_1(lopt_6),
        .lopt_2(lopt_7),
        .of_valid(of_valid));
  microblaze_v10_0_3_MB_MUXCY_99 MUXCY_JUMP_CARRY5
       (.jump_carry4(NLW_MUXCY_JUMP_CARRY5_jump_carry4_UNCONNECTED),
        .jump_carry5(jump_carry5),
        .lopt(lopt_8),
        .lopt_1(lopt_9),
        .lopt_2(lopt_10));
  microblaze_v10_0_3_MB_MUXCY_100 MUXCY_JUMP_CARRY6
       (.\EX_Op2_reg[0] (\EX_Op2_reg[0] ),
        .I5(I5),
        .O(O),
        .O56_out(O56_out),
        .\Performace_Debug_Control.dbg_stop_if_delay_i_reg (\Performace_Debug_Control.dbg_stop_if_delay_i_reg_0 ),
        .Q(Q),
        .\Serial_Dbg_Intf.if_debug_ready_i_reg (\Serial_Dbg_Intf.if_debug_ready_i_reg ),
        .\Use_Async_Reset.sync_reset_reg (\Use_Async_Reset.sync_reset_reg ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .ex_branch_with_delayslot(ex_branch_with_delayslot),
        .ex_branch_with_delayslot_reg(ex_branch_with_delayslot_reg),
        .ex_databus_addr(ex_databus_addr),
        .ex_delayslot_Instr0(ex_delayslot_Instr0),
        .ex_first_cycle(ex_first_cycle),
        .ex_jump_hold(ex_jump_hold),
        .ex_jump_hold_reg(ex_jump_hold_reg),
        .ex_jump_nodelay(ex_jump_nodelay),
        .ex_jump_q(ex_jump_q),
        .ex_jump_q_reg(ex_jump),
        .ex_jump_q_reg_0(MUXCY_JUMP_CARRY6_n_42),
        .ex_mbar_decode(ex_mbar_decode),
        .ex_mbar_sleep(ex_mbar_sleep),
        .ex_mbar_stall_no_sleep_1(ex_mbar_stall_no_sleep_1),
        .ex_valid_jump_reg(ex_valid_jump_reg),
        .ex_valid_reg(ex_valid_reg),
        .ex_valid_reg_0(ex_valid_reg_0),
        .if_missed_fetch_reg(if_missed_fetch_reg),
        .if_missed_fetch_reg_0(if_missed_fetch_reg_0),
        .\if_pc_reg[0] (\if_pc_reg[0] ),
        .\if_pc_reg[0]_0 (\if_pc_reg[0]_0 ),
        .\if_pc_reg[10] (\if_pc_reg[10] ),
        .\if_pc_reg[11] (\if_pc_reg[11] ),
        .\if_pc_reg[12] (\if_pc_reg[12] ),
        .\if_pc_reg[13] (\if_pc_reg[13] ),
        .\if_pc_reg[14] (\if_pc_reg[14] ),
        .\if_pc_reg[15] (\if_pc_reg[15] ),
        .\if_pc_reg[16] (\if_pc_reg[16] ),
        .\if_pc_reg[17] (\if_pc_reg[17] ),
        .\if_pc_reg[18] (\if_pc_reg[18] ),
        .\if_pc_reg[19] (\if_pc_reg[19] ),
        .\if_pc_reg[1] (\if_pc_reg[1] ),
        .\if_pc_reg[20] (\if_pc_reg[20] ),
        .\if_pc_reg[21] (\if_pc_reg[21] ),
        .\if_pc_reg[22] (\if_pc_reg[22] ),
        .\if_pc_reg[23] (\if_pc_reg[23] ),
        .\if_pc_reg[24] (\if_pc_reg[24] ),
        .\if_pc_reg[25] (\if_pc_reg[25] ),
        .\if_pc_reg[26] (\if_pc_reg[26] ),
        .\if_pc_reg[27] (\if_pc_reg[27] ),
        .\if_pc_reg[28] (\if_pc_reg[28] ),
        .\if_pc_reg[2] (\if_pc_reg[2] ),
        .\if_pc_reg[30] (\if_pc_reg[30] ),
        .\if_pc_reg[3] (\if_pc_reg[3] ),
        .\if_pc_reg[4] (\if_pc_reg[4] ),
        .\if_pc_reg[5] (\if_pc_reg[5] ),
        .\if_pc_reg[6] (\if_pc_reg[6] ),
        .\if_pc_reg[7] (\if_pc_reg[7] ),
        .\if_pc_reg[8] (\if_pc_reg[8] ),
        .\if_pc_reg[9] (\if_pc_reg[9] ),
        .jump_carry5(jump_carry5),
        .keep_jump_taken_with_ds(keep_jump_taken_with_ds),
        .keep_jump_taken_with_ds_reg(keep_jump_taken_with_ds_reg),
        .mem_exception_from_ex(mem_exception_from_ex),
        .mem_jump_taken_reg(NLW_MUXCY_JUMP_CARRY6_mem_jump_taken_reg_UNCONNECTED),
        .mem_valid_instr(mem_valid_instr),
        .of_pause_reg(of_PipeRun_for_ce),
        .of_valid(of_valid),
        .out(out),
        .sync_reset(reset_bool_for_rst),
        .wb_exception(wb_exception));
  FDRE #(
    .INIT(1'b0)) 
    ex_jump_q_reg
       (.C(Clk),
        .CE(1'b1),
        .D(MUXCY_JUMP_CARRY6_n_42),
        .Q(ex_jump_q),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    ex_op1_cmp_eq_n_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(ex_op1_cmp_eq_n5_out),
        .Q(ex_op1_cmp_equal_n),
        .R(reset_bool_for_rst));
  FDSE #(
    .INIT(1'b1)) 
    ex_op1_cmp_eq_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(ex_op1_cmp_eq),
        .Q(ex_op1_cmp_equal),
        .S(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    force1_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(force12_out),
        .Q(force1_reg_n_0),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    force2_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(ex_op1_cmp_eq1),
        .Q(force2),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    force_Val1_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(force_Val10_out),
        .Q(force_Val1_reg_n_0),
        .R(reset_bool_for_rst));
  FDSE #(
    .INIT(1'b1)) 
    force_Val2_N_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(\Using_FPGA.Native_0 ),
        .Q(force_Val2_N),
        .S(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    use_Reg_Neg_DI_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(use_Reg_Neg_DI1_out),
        .Q(use_Reg_Neg_DI_reg_n_0),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    use_Reg_Neg_S_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(use_Reg_Neg_S3_out),
        .Q(use_Reg_Neg_S_reg_n_0),
        .R(reset_bool_for_rst));
endmodule

module mb_sync_bit
   (out,
    reset_temp__0,
    Clk);
  output [0:0]out;
  input reset_temp__0;
  input Clk;

  wire Clk;
  wire reset_temp__0;
  (* async_reg = "true" *) wire [1:2]sync;

  assign out[0] = sync[2];
  initial assign \Synchronize.use_sync_reset.sync_reg[1] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Synchronize.use_sync_reset.sync_reg[1] 
       (.C(Clk),
        .CE(1'b1),
        .D(reset_temp__0),
        .Q(sync[1]),
        .R(1'b0));
  initial assign \Synchronize.use_sync_reset.sync_reg[2] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Synchronize.use_sync_reset.sync_reg[2] 
       (.C(Clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mb_sync_bit" *) 
module mb_sync_bit_48
   (sample_synced,
    p_84_out,
    Q,
    sync_reset,
    D,
    Clk);
  output [0:0]sample_synced;
  output p_84_out;
  input [0:0]Q;
  input sync_reset;
  input [0:0]D;
  input Clk;

  wire Clk;
  wire [0:0]D;
  wire [0:0]Q;
  wire p_84_out;
  (* async_reg = "true" *) wire [1:2]sync;
  wire sync_reset;

  assign sample_synced[0] = sync[2];
  LUT2 #(
    .INIT(4'h2)) 
    \Serial_Dbg_Intf.normal_stop_cmd_i_i_1 
       (.I0(sync[2]),
        .I1(Q),
        .O(p_84_out));
  initial assign \Synchronize.use_sync_reset.sync_reg[1] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Synchronize.use_sync_reset.sync_reg[1] 
       (.C(Clk),
        .CE(1'b1),
        .D(D),
        .Q(sync[1]),
        .R(sync_reset));
  initial assign \Synchronize.use_sync_reset.sync_reg[2] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Synchronize.use_sync_reset.sync_reg[2] 
       (.C(Clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "mb_sync_bit" *) 
module mb_sync_bit_49
   (sample_synced,
    p_81_out,
    Q,
    sync_reset,
    \Serial_Dbg_Intf.force_stop_TClk_reg ,
    Clk);
  output [0:0]sample_synced;
  output p_81_out;
  input [0:0]Q;
  input sync_reset;
  input [0:0]\Serial_Dbg_Intf.force_stop_TClk_reg ;
  input Clk;

  wire Clk;
  wire [0:0]Q;
  wire [0:0]\Serial_Dbg_Intf.force_stop_TClk_reg ;
  wire p_81_out;
  (* async_reg = "true" *) wire [1:2]sync;
  wire sync_reset;

  assign sample_synced[0] = sync[2];
  LUT2 #(
    .INIT(4'h2)) 
    \Serial_Dbg_Intf.force_stop_cmd_i_i_1 
       (.I0(sync[2]),
        .I1(Q),
        .O(p_81_out));
  initial assign \Synchronize.use_sync_reset.sync_reg[1] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Synchronize.use_sync_reset.sync_reg[1] 
       (.C(Clk),
        .CE(1'b1),
        .D(\Serial_Dbg_Intf.force_stop_TClk_reg ),
        .Q(sync[1]),
        .R(sync_reset));
  initial assign \Synchronize.use_sync_reset.sync_reg[2] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Synchronize.use_sync_reset.sync_reg[2] 
       (.C(Clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "mb_sync_bit" *) 
module mb_sync_bit_50
   (sample_synced,
    p_78_out,
    Q,
    sync_reset,
    \Serial_Dbg_Intf.single_Step_TClk_reg ,
    Clk);
  output [0:0]sample_synced;
  output p_78_out;
  input [0:0]Q;
  input sync_reset;
  input [0:0]\Serial_Dbg_Intf.single_Step_TClk_reg ;
  input Clk;

  wire Clk;
  wire [0:0]Q;
  wire [0:0]\Serial_Dbg_Intf.single_Step_TClk_reg ;
  wire p_78_out;
  (* async_reg = "true" *) wire [1:2]sync;
  wire sync_reset;

  assign sample_synced[0] = sync[2];
  LUT2 #(
    .INIT(4'h2)) 
    \Serial_Dbg_Intf.start_single_cmd_i_1 
       (.I0(sync[2]),
        .I1(Q),
        .O(p_78_out));
  initial assign \Synchronize.use_sync_reset.sync_reg[1] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Synchronize.use_sync_reset.sync_reg[1] 
       (.C(Clk),
        .CE(1'b1),
        .D(\Serial_Dbg_Intf.single_Step_TClk_reg ),
        .Q(sync[1]),
        .R(sync_reset));
  initial assign \Synchronize.use_sync_reset.sync_reg[2] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Synchronize.use_sync_reset.sync_reg[2] 
       (.C(Clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "mb_sync_bit" *) 
module mb_sync_bit_51
   (sample_synced,
    p_75_out,
    Q,
    sync_reset,
    \Serial_Dbg_Intf.command_reg_reg[0] ,
    Clk);
  output [0:0]sample_synced;
  output p_75_out;
  input [0:0]Q;
  input sync_reset;
  input [0:0]\Serial_Dbg_Intf.command_reg_reg[0] ;
  input Clk;

  wire Clk;
  wire [0:0]Q;
  wire [0:0]\Serial_Dbg_Intf.command_reg_reg[0] ;
  wire p_75_out;
  (* async_reg = "true" *) wire [1:2]sync;
  wire sync_reset;

  assign sample_synced[0] = sync[2];
  LUT2 #(
    .INIT(4'h2)) 
    \Serial_Dbg_Intf.read_register_MSR_i_1 
       (.I0(sync[2]),
        .I1(Q),
        .O(p_75_out));
  initial assign \Synchronize.use_sync_reset.sync_reg[1] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Synchronize.use_sync_reset.sync_reg[1] 
       (.C(Clk),
        .CE(1'b1),
        .D(\Serial_Dbg_Intf.command_reg_reg[0] ),
        .Q(sync[1]),
        .R(sync_reset));
  initial assign \Synchronize.use_sync_reset.sync_reg[2] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Synchronize.use_sync_reset.sync_reg[2] 
       (.C(Clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "mb_sync_bit" *) 
module mb_sync_bit_52
   (sample_synced,
    p_72_out,
    Q,
    sync_reset,
    \Serial_Dbg_Intf.command_reg_reg[1] ,
    Clk);
  output [0:0]sample_synced;
  output p_72_out;
  input [0:0]Q;
  input sync_reset;
  input [0:0]\Serial_Dbg_Intf.command_reg_reg[1] ;
  input Clk;

  wire Clk;
  wire [0:0]Q;
  wire [0:0]\Serial_Dbg_Intf.command_reg_reg[1] ;
  wire p_72_out;
  (* async_reg = "true" *) wire [1:2]sync;
  wire sync_reset;

  assign sample_synced[0] = sync[2];
  LUT2 #(
    .INIT(4'h2)) 
    \Serial_Dbg_Intf.read_register_PC_i_1 
       (.I0(sync[2]),
        .I1(Q),
        .O(p_72_out));
  initial assign \Synchronize.use_sync_reset.sync_reg[1] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Synchronize.use_sync_reset.sync_reg[1] 
       (.C(Clk),
        .CE(1'b1),
        .D(\Serial_Dbg_Intf.command_reg_reg[1] ),
        .Q(sync[1]),
        .R(sync_reset));
  initial assign \Synchronize.use_sync_reset.sync_reg[2] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Synchronize.use_sync_reset.sync_reg[2] 
       (.C(Clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "mb_sync_bit" *) 
module mb_sync_bit_53
   (sample_synced,
    p_10_out,
    \Serial_Dbg_Intf.trig_in_1_reg ,
    Q,
    \Synchronize.use_sync_reset.sync_reg[2]_0 ,
    Dbg_Trig_In,
    sync_reset,
    \Serial_Dbg_Intf.continue_from_brk_TClk_reg ,
    Clk);
  output [0:0]sample_synced;
  output p_10_out;
  output \Serial_Dbg_Intf.trig_in_1_reg ;
  input [2:0]Q;
  input [1:0]\Synchronize.use_sync_reset.sync_reg[2]_0 ;
  input [0:0]Dbg_Trig_In;
  input sync_reset;
  input [0:0]\Serial_Dbg_Intf.continue_from_brk_TClk_reg ;
  input Clk;

  wire Clk;
  wire [2:0]Q;
  wire [0:0]\Serial_Dbg_Intf.continue_from_brk_TClk_reg ;
  wire p_10_out;
  (* async_reg = "true" *) wire [1:2]sync;
  wire sync_reset;

  assign sample_synced[0] = sync[2];
  LUT2 #(
    .INIT(4'h4)) 
    \Serial_Dbg_Intf.continue_from_brk_i_1 
       (.I0(Q[2]),
        .I1(sync[2]),
        .O(p_10_out));
  initial assign \Synchronize.use_sync_reset.sync_reg[1] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Synchronize.use_sync_reset.sync_reg[1] 
       (.C(Clk),
        .CE(1'b1),
        .D(\Serial_Dbg_Intf.continue_from_brk_TClk_reg ),
        .Q(sync[1]),
        .R(sync_reset));
  initial assign \Synchronize.use_sync_reset.sync_reg[2] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Synchronize.use_sync_reset.sync_reg[2] 
       (.C(Clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "mb_sync_bit" *) 
module mb_sync_bit_54
   (sample_synced,
    p_65_out,
    Q,
    sync_reset,
    \Serial_Dbg_Intf.New_Dbg_Instr2_TCK_reg ,
    Clk);
  output [0:0]sample_synced;
  output p_65_out;
  input [0:0]Q;
  input sync_reset;
  input [0:0]\Serial_Dbg_Intf.New_Dbg_Instr2_TCK_reg ;
  input Clk;

  wire Clk;
  wire [0:0]Q;
  wire [0:0]\Serial_Dbg_Intf.New_Dbg_Instr2_TCK_reg ;
  wire p_65_out;
  (* async_reg = "true" *) wire [1:2]sync;
  wire sync_reset;

  assign sample_synced[0] = sync[2];
  LUT2 #(
    .INIT(4'h2)) 
    \Serial_Dbg_Intf.if_debug_ready_i_i_1 
       (.I0(sync[2]),
        .I1(Q),
        .O(p_65_out));
  initial assign \Synchronize.use_sync_reset.sync_reg[1] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Synchronize.use_sync_reset.sync_reg[1] 
       (.C(Clk),
        .CE(1'b1),
        .D(\Serial_Dbg_Intf.New_Dbg_Instr2_TCK_reg ),
        .Q(sync[1]),
        .R(sync_reset));
  initial assign \Synchronize.use_sync_reset.sync_reg[2] .notifier = 1'bx;
(* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0),
    .XON("FALSE")) 
    \Synchronize.use_sync_reset.sync_reg[2] 
       (.C(Clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "mb_sync_bit" *) 
module mb_sync_bit__parameterized2
   (D,
    dbg_brki_hit,
    Dbg_Clk,
    AR);
  output [0:0]D;
  input dbg_brki_hit;
  input Dbg_Clk;
  input [0:0]AR;

  wire [0:0]AR;
  wire [0:0]D;
  wire Dbg_Clk;
  wire dbg_brki_hit;

  FDCE #(
    .INIT(1'b0)) 
    \Single_Synchronize.use_async_reset.sync_reg 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(AR),
        .D(dbg_brki_hit),
        .Q(D));
endmodule

(* ORIG_REF_NAME = "mb_sync_bit" *) 
module mb_sync_bit__parameterized2_26
   (D,
    AR,
    Pause,
    Dbg_Clk,
    Scan_Reset_Sel,
    Scan_Reset);
  output [0:0]D;
  output [0:0]AR;
  input Pause;
  input Dbg_Clk;
  input Scan_Reset_Sel;
  input Scan_Reset;

  wire ZERO_1;

  assign AR[0] = ZERO_1;
  GND GND_1
       (.G(ZERO_1));
endmodule

(* ORIG_REF_NAME = "mb_sync_bit" *) 
module mb_sync_bit__parameterized2_27
   (D,
    running_clock,
    Dbg_Clk,
    AR);
  output [0:0]D;
  input running_clock;
  input Dbg_Clk;
  input [0:0]AR;

  wire [0:0]AR;
  wire [0:0]D;
  wire Dbg_Clk;
  wire running_clock;

  FDCE #(
    .INIT(1'b0)) 
    \Single_Synchronize.use_async_reset.sync_reg 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(AR),
        .D(running_clock),
        .Q(D));
endmodule

(* ORIG_REF_NAME = "mb_sync_bit" *) 
module mb_sync_bit__parameterized2_28
   (D,
    Sleep,
    Dbg_Clk,
    AR);
  output [0:0]D;
  input Sleep;
  input Dbg_Clk;
  input [0:0]AR;

  wire [0:0]AR;
  wire [0:0]D;
  wire Dbg_Clk;
  wire Sleep;

  FDCE #(
    .INIT(1'b0)) 
    \Single_Synchronize.use_async_reset.sync_reg 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(AR),
        .D(Sleep),
        .Q(D));
endmodule

(* ORIG_REF_NAME = "mb_sync_bit" *) 
module mb_sync_bit__parameterized2_29
   (D,
    \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ,
    Dbg_Clk,
    AR);
  output [0:0]D;
  input \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  input Dbg_Clk;
  input [0:0]AR;

  wire [0:0]AR;
  wire [0:0]D;
  wire Dbg_Clk;
  wire \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;

  FDCE #(
    .INIT(1'b0)) 
    \Single_Synchronize.use_async_reset.sync_reg 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .Q(D));
endmodule

(* ORIG_REF_NAME = "mb_sync_bit" *) 
module mb_sync_bit__parameterized2_58
   (D,
    Raw,
    Dbg_Clk,
    AR);
  output [0:0]D;
  input Raw;
  input Dbg_Clk;
  input [0:0]AR;

  wire [0:0]AR;
  wire [0:0]D;
  wire Dbg_Clk;
  wire Raw;

  FDCE #(
    .INIT(1'b0)) 
    \Single_Synchronize.use_async_reset.sync_reg 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(AR),
        .D(Raw),
        .Q(D));
endmodule

module mb_sync_vec
   (D,
    Raw,
    Dbg_Clk,
    AR);
  output [0:0]D;
  input Raw;
  input Dbg_Clk;
  input [0:0]AR;

  wire [0:0]AR;
  wire [0:0]D;
  wire Dbg_Clk;
  wire Raw;

  mb_sync_bit__parameterized2_58 \sync_bits[0].sync_bit 
       (.AR(AR),
        .D(D),
        .Dbg_Clk(Dbg_Clk),
        .Raw(Raw));
endmodule

(* ORIG_REF_NAME = "mb_sync_vec" *) 
module mb_sync_vec__parameterized1
   (sample_synced,
    p_10_out,
    p_81_out,
    p_78_out,
    p_65_out,
    p_75_out,
    p_72_out,
    p_84_out,
    \Serial_Dbg_Intf.trig_in_1_reg ,
    \Serial_Dbg_Intf.trig_ack_out_1_reg ,
    Q,
    Dbg_Trig_In,
    sync_reset,
    Dbg_Trig_Ack_Out,
    D,
    Clk,
    \Serial_Dbg_Intf.force_stop_TClk_reg ,
    \Serial_Dbg_Intf.single_Step_TClk_reg ,
    \Serial_Dbg_Intf.command_reg_reg[0] ,
    \Serial_Dbg_Intf.continue_from_brk_TClk_reg ,
    \Serial_Dbg_Intf.New_Dbg_Instr2_TCK_reg ,
    Dbg_Trig_Out,
    Dbg_Trig_Ack_In,
    \Serial_Dbg_Intf.control_reg_reg[3] );
  output [0:9]sample_synced;
  output p_10_out;
  output p_81_out;
  output p_78_out;
  output p_65_out;
  output p_75_out;
  output p_72_out;
  output p_84_out;
  output \Serial_Dbg_Intf.trig_in_1_reg ;
  output \Serial_Dbg_Intf.trig_ack_out_1_reg ;
  input [8:0]Q;
  input [0:0]Dbg_Trig_In;
  input sync_reset;
  input [0:0]Dbg_Trig_Ack_Out;
  input [0:0]D;
  input Clk;
  input [0:0]\Serial_Dbg_Intf.force_stop_TClk_reg ;
  input [0:0]\Serial_Dbg_Intf.single_Step_TClk_reg ;
  input [1:0]\Serial_Dbg_Intf.command_reg_reg[0] ;
  input [0:0]\Serial_Dbg_Intf.continue_from_brk_TClk_reg ;
  input [0:0]\Serial_Dbg_Intf.New_Dbg_Instr2_TCK_reg ;
  input [0:0]Dbg_Trig_Out;
  input [0:0]Dbg_Trig_Ack_In;
  input [0:0]\Serial_Dbg_Intf.control_reg_reg[3] ;

  wire Clk;
  wire [0:0]D;
  wire [8:0]Q;
  wire [0:0]\Serial_Dbg_Intf.New_Dbg_Instr2_TCK_reg ;
  wire [1:0]\Serial_Dbg_Intf.command_reg_reg[0] ;
  wire [0:0]\Serial_Dbg_Intf.continue_from_brk_TClk_reg ;
  wire [0:0]\Serial_Dbg_Intf.force_stop_TClk_reg ;
  wire [0:0]\Serial_Dbg_Intf.single_Step_TClk_reg ;
  wire p_10_out;
  wire p_65_out;
  wire p_72_out;
  wire p_75_out;
  wire p_78_out;
  wire p_81_out;
  wire p_84_out;
  wire [0:9]sample_synced;
  wire sync_reset;
  wire \NLW_sync_bits[5].sync_bit_Serial_Dbg_Intf.trig_in_1_reg_UNCONNECTED ;
  wire [0:0]\NLW_sync_bits[5].sync_bit_Dbg_Trig_In_UNCONNECTED ;
  wire [1:0]\NLW_sync_bits[5].sync_bit_Q_UNCONNECTED ;
  wire [1:0]\NLW_sync_bits[5].sync_bit_Synchronize.use_sync_reset.sync_reg[2]_0_UNCONNECTED ;

  mb_sync_bit_48 \sync_bits[0].sync_bit 
       (.Clk(Clk),
        .D(D),
        .Q(Q[8]),
        .p_84_out(p_84_out),
        .sample_synced(sample_synced[0]),
        .sync_reset(sync_reset));
  mb_sync_bit_49 \sync_bits[1].sync_bit 
       (.Clk(Clk),
        .Q(Q[7]),
        .\Serial_Dbg_Intf.force_stop_TClk_reg (\Serial_Dbg_Intf.force_stop_TClk_reg ),
        .p_81_out(p_81_out),
        .sample_synced(sample_synced[1]),
        .sync_reset(sync_reset));
  mb_sync_bit_50 \sync_bits[2].sync_bit 
       (.Clk(Clk),
        .Q(Q[6]),
        .\Serial_Dbg_Intf.single_Step_TClk_reg (\Serial_Dbg_Intf.single_Step_TClk_reg ),
        .p_78_out(p_78_out),
        .sample_synced(sample_synced[2]),
        .sync_reset(sync_reset));
  mb_sync_bit_51 \sync_bits[3].sync_bit 
       (.Clk(Clk),
        .Q(Q[5]),
        .\Serial_Dbg_Intf.command_reg_reg[0] (\Serial_Dbg_Intf.command_reg_reg[0] [1]),
        .p_75_out(p_75_out),
        .sample_synced(sample_synced[3]),
        .sync_reset(sync_reset));
  mb_sync_bit_52 \sync_bits[4].sync_bit 
       (.Clk(Clk),
        .Q(Q[4]),
        .\Serial_Dbg_Intf.command_reg_reg[1] (\Serial_Dbg_Intf.command_reg_reg[0] [0]),
        .p_72_out(p_72_out),
        .sample_synced(sample_synced[4]),
        .sync_reset(sync_reset));
  mb_sync_bit_53 \sync_bits[5].sync_bit 
       (.Clk(Clk),
        .Dbg_Trig_In(\NLW_sync_bits[5].sync_bit_Dbg_Trig_In_UNCONNECTED [0]),
        .Q({Q[3],\NLW_sync_bits[5].sync_bit_Q_UNCONNECTED [1:0]}),
        .\Serial_Dbg_Intf.continue_from_brk_TClk_reg (\Serial_Dbg_Intf.continue_from_brk_TClk_reg ),
        .\Serial_Dbg_Intf.trig_in_1_reg (\NLW_sync_bits[5].sync_bit_Serial_Dbg_Intf.trig_in_1_reg_UNCONNECTED ),
        .\Synchronize.use_sync_reset.sync_reg[2]_0 (\NLW_sync_bits[5].sync_bit_Synchronize.use_sync_reset.sync_reg[2]_0_UNCONNECTED [1:0]),
        .p_10_out(p_10_out),
        .sample_synced(sample_synced[5]),
        .sync_reset(sync_reset));
  mb_sync_bit_54 \sync_bits[6].sync_bit 
       (.Clk(Clk),
        .Q(Q[2]),
        .\Serial_Dbg_Intf.New_Dbg_Instr2_TCK_reg (\Serial_Dbg_Intf.New_Dbg_Instr2_TCK_reg ),
        .p_65_out(p_65_out),
        .sample_synced(sample_synced[6]),
        .sync_reset(sync_reset));
endmodule

module microblaze_v10_0_3_MB_FDRE
   (D,
    sync_reset,
    ex_branch_with_delayslot_reg,
    ex_exception_no_load_store_mask,
    Clk,
    mem_exception_from_ex);
  output [0:0]D;
  input sync_reset;
  input ex_branch_with_delayslot_reg;
  input ex_exception_no_load_store_mask;
  input Clk;
  input mem_exception_from_ex;

  wire Clk;
  wire [0:0]D;
  wire Q2_out;
  wire ex_branch_with_delayslot_reg;
  wire ex_exception_no_load_store_mask;
  wire mem_exception_from_ex;
  wire sync_reset;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(ex_exception_no_load_store_mask),
        .Q(Q2_out),
        .R(sync_reset));
  LUT2 #(
    .INIT(4'h8)) 
    \wb_exception_kind_i[28]_i_1 
       (.I0(mem_exception_from_ex),
        .I1(Q2_out),
        .O(D));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_FDRE" *) 
module microblaze_v10_0_3_MB_FDRE_459
   (mem_ex_result,
    R,
    ex_branch_with_delayslot_reg,
    EX_Fwd,
    Clk);
  output [0:0]mem_ex_result;
  input R;
  input ex_branch_with_delayslot_reg;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire ex_branch_with_delayslot_reg;
  wire [0:0]mem_ex_result;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(EX_Fwd),
        .Q(mem_ex_result),
        .R(R));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_FDRE" *) 
module microblaze_v10_0_3_MB_FDRE_460
   (mem_ex_result,
    R,
    ex_branch_with_delayslot_reg,
    ex_sel_alu_i_reg,
    Clk);
  output [0:0]mem_ex_result;
  input R;
  input ex_branch_with_delayslot_reg;
  input [0:0]ex_sel_alu_i_reg;
  input Clk;

  wire Clk;
  wire R;
  wire ex_branch_with_delayslot_reg;
  wire [0:0]ex_sel_alu_i_reg;
  wire [0:0]mem_ex_result;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(ex_sel_alu_i_reg),
        .Q(mem_ex_result),
        .R(R));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_FDRE" *) 
module microblaze_v10_0_3_MB_FDRE_461
   (mem_ex_result,
    R,
    ex_branch_with_delayslot_reg,
    ex_sel_alu_i_reg,
    Clk);
  output [0:0]mem_ex_result;
  input R;
  input ex_branch_with_delayslot_reg;
  input [0:0]ex_sel_alu_i_reg;
  input Clk;

  wire Clk;
  wire R;
  wire ex_branch_with_delayslot_reg;
  wire [0:0]ex_sel_alu_i_reg;
  wire [0:0]mem_ex_result;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(ex_sel_alu_i_reg),
        .Q(mem_ex_result),
        .R(R));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_FDRE" *) 
module microblaze_v10_0_3_MB_FDRE_462
   (mem_ex_result,
    R,
    ex_branch_with_delayslot_reg,
    ex_sel_alu_i_reg,
    Clk);
  output [0:0]mem_ex_result;
  input R;
  input ex_branch_with_delayslot_reg;
  input [0:0]ex_sel_alu_i_reg;
  input Clk;

  wire Clk;
  wire R;
  wire ex_branch_with_delayslot_reg;
  wire [0:0]ex_sel_alu_i_reg;
  wire [0:0]mem_ex_result;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(ex_sel_alu_i_reg),
        .Q(mem_ex_result),
        .R(R));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_FDRE" *) 
module microblaze_v10_0_3_MB_FDRE_463
   (mem_ex_result,
    R,
    ex_branch_with_delayslot_reg,
    ex_sel_alu_i_reg,
    Clk);
  output [0:0]mem_ex_result;
  input R;
  input ex_branch_with_delayslot_reg;
  input [0:0]ex_sel_alu_i_reg;
  input Clk;

  wire Clk;
  wire R;
  wire ex_branch_with_delayslot_reg;
  wire [0:0]ex_sel_alu_i_reg;
  wire [0:0]mem_ex_result;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(ex_sel_alu_i_reg),
        .Q(mem_ex_result),
        .R(R));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_FDRE" *) 
module microblaze_v10_0_3_MB_FDRE_464
   (mem_ex_result,
    R,
    ex_branch_with_delayslot_reg,
    ex_sel_alu_i_reg,
    Clk);
  output [0:0]mem_ex_result;
  input R;
  input ex_branch_with_delayslot_reg;
  input [0:0]ex_sel_alu_i_reg;
  input Clk;

  wire Clk;
  wire R;
  wire ex_branch_with_delayslot_reg;
  wire [0:0]ex_sel_alu_i_reg;
  wire [0:0]mem_ex_result;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(ex_sel_alu_i_reg),
        .Q(mem_ex_result),
        .R(R));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_FDRE" *) 
module microblaze_v10_0_3_MB_FDRE_465
   (mem_ex_result,
    R,
    ex_branch_with_delayslot_reg,
    ex_sel_alu_i_reg,
    Clk);
  output [0:0]mem_ex_result;
  input R;
  input ex_branch_with_delayslot_reg;
  input [0:0]ex_sel_alu_i_reg;
  input Clk;

  wire Clk;
  wire R;
  wire ex_branch_with_delayslot_reg;
  wire [0:0]ex_sel_alu_i_reg;
  wire [0:0]mem_ex_result;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(ex_sel_alu_i_reg),
        .Q(mem_ex_result),
        .R(R));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_FDRE" *) 
module microblaze_v10_0_3_MB_FDRE_466
   (mem_ex_result,
    R,
    ex_branch_with_delayslot_reg,
    ex_sel_alu_i_reg,
    Clk);
  output [0:0]mem_ex_result;
  input R;
  input ex_branch_with_delayslot_reg;
  input [0:0]ex_sel_alu_i_reg;
  input Clk;

  wire Clk;
  wire R;
  wire ex_branch_with_delayslot_reg;
  wire [0:0]ex_sel_alu_i_reg;
  wire [0:0]mem_ex_result;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(ex_sel_alu_i_reg),
        .Q(mem_ex_result),
        .R(R));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_FDRE" *) 
module microblaze_v10_0_3_MB_FDRE_467
   (mem_ex_result,
    R,
    ex_branch_with_delayslot_reg,
    EX_Fwd,
    Clk);
  output [0:0]mem_ex_result;
  input R;
  input ex_branch_with_delayslot_reg;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire ex_branch_with_delayslot_reg;
  wire [0:0]mem_ex_result;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(EX_Fwd),
        .Q(mem_ex_result),
        .R(R));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_FDRE" *) 
module microblaze_v10_0_3_MB_FDRE_468
   (mem_ex_result,
    R,
    ex_branch_with_delayslot_reg,
    EX_Fwd,
    Clk);
  output [0:0]mem_ex_result;
  input R;
  input ex_branch_with_delayslot_reg;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire ex_branch_with_delayslot_reg;
  wire [0:0]mem_ex_result;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(EX_Fwd),
        .Q(mem_ex_result),
        .R(R));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_FDRE" *) 
module microblaze_v10_0_3_MB_FDRE_469
   (mem_ex_result,
    R,
    ex_branch_with_delayslot_reg,
    EX_Fwd,
    Clk);
  output [0:0]mem_ex_result;
  input R;
  input ex_branch_with_delayslot_reg;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire ex_branch_with_delayslot_reg;
  wire [0:0]mem_ex_result;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(EX_Fwd),
        .Q(mem_ex_result),
        .R(R));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_FDRE" *) 
module microblaze_v10_0_3_MB_FDRE_470
   (mem_ex_result,
    R,
    ex_branch_with_delayslot_reg,
    ex_sel_alu_i_reg,
    Clk);
  output [0:0]mem_ex_result;
  input R;
  input ex_branch_with_delayslot_reg;
  input [0:0]ex_sel_alu_i_reg;
  input Clk;

  wire Clk;
  wire R;
  wire ex_branch_with_delayslot_reg;
  wire [0:0]ex_sel_alu_i_reg;
  wire [0:0]mem_ex_result;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(ex_sel_alu_i_reg),
        .Q(mem_ex_result),
        .R(R));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_FDRE" *) 
module microblaze_v10_0_3_MB_FDRE_471
   (mem_ex_result,
    R,
    ex_branch_with_delayslot_reg,
    EX_Fwd,
    Clk);
  output [0:0]mem_ex_result;
  input R;
  input ex_branch_with_delayslot_reg;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire ex_branch_with_delayslot_reg;
  wire [0:0]mem_ex_result;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(EX_Fwd),
        .Q(mem_ex_result),
        .R(R));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_FDRE" *) 
module microblaze_v10_0_3_MB_FDRE_472
   (mem_ex_result,
    R,
    ex_branch_with_delayslot_reg,
    EX_Fwd,
    Clk);
  output [0:0]mem_ex_result;
  input R;
  input ex_branch_with_delayslot_reg;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire ex_branch_with_delayslot_reg;
  wire [0:0]mem_ex_result;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(EX_Fwd),
        .Q(mem_ex_result),
        .R(R));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_FDRE" *) 
module microblaze_v10_0_3_MB_FDRE_473
   (mem_ex_result,
    R,
    ex_branch_with_delayslot_reg,
    EX_Fwd,
    Clk);
  output [0:0]mem_ex_result;
  input R;
  input ex_branch_with_delayslot_reg;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire ex_branch_with_delayslot_reg;
  wire [0:0]mem_ex_result;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(EX_Fwd),
        .Q(mem_ex_result),
        .R(R));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_FDRE" *) 
module microblaze_v10_0_3_MB_FDRE_474
   (mem_ex_result,
    R,
    ex_branch_with_delayslot_reg,
    EX_Fwd,
    Clk);
  output [0:0]mem_ex_result;
  input R;
  input ex_branch_with_delayslot_reg;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire ex_branch_with_delayslot_reg;
  wire [0:0]mem_ex_result;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(EX_Fwd),
        .Q(mem_ex_result),
        .R(R));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_FDRE" *) 
module microblaze_v10_0_3_MB_FDRE_475
   (mem_ex_result,
    R,
    ex_branch_with_delayslot_reg,
    EX_Fwd,
    Clk);
  output [0:0]mem_ex_result;
  input R;
  input ex_branch_with_delayslot_reg;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire ex_branch_with_delayslot_reg;
  wire [0:0]mem_ex_result;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(EX_Fwd),
        .Q(mem_ex_result),
        .R(R));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_FDRE" *) 
module microblaze_v10_0_3_MB_FDRE_476
   (mem_ex_result,
    R,
    ex_branch_with_delayslot_reg,
    EX_Fwd,
    Clk);
  output [0:0]mem_ex_result;
  input R;
  input ex_branch_with_delayslot_reg;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire ex_branch_with_delayslot_reg;
  wire [0:0]mem_ex_result;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(EX_Fwd),
        .Q(mem_ex_result),
        .R(R));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_FDRE" *) 
module microblaze_v10_0_3_MB_FDRE_477
   (mem_ex_result,
    R,
    ex_branch_with_delayslot_reg,
    EX_Fwd,
    Clk);
  output [0:0]mem_ex_result;
  input R;
  input ex_branch_with_delayslot_reg;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire ex_branch_with_delayslot_reg;
  wire [0:0]mem_ex_result;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(EX_Fwd),
        .Q(mem_ex_result),
        .R(R));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_FDRE" *) 
module microblaze_v10_0_3_MB_FDRE_478
   (mem_ex_result,
    R,
    ex_branch_with_delayslot_reg,
    EX_Fwd,
    Clk);
  output [0:0]mem_ex_result;
  input R;
  input ex_branch_with_delayslot_reg;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire ex_branch_with_delayslot_reg;
  wire [0:0]mem_ex_result;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(EX_Fwd),
        .Q(mem_ex_result),
        .R(R));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_FDRE" *) 
module microblaze_v10_0_3_MB_FDRE_479
   (mem_ex_result,
    R,
    ex_branch_with_delayslot_reg,
    EX_Fwd,
    Clk);
  output [0:0]mem_ex_result;
  input R;
  input ex_branch_with_delayslot_reg;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire ex_branch_with_delayslot_reg;
  wire [0:0]mem_ex_result;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(EX_Fwd),
        .Q(mem_ex_result),
        .R(R));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_FDRE" *) 
module microblaze_v10_0_3_MB_FDRE_480
   (mem_ex_result,
    R,
    ex_branch_with_delayslot_reg,
    EX_Fwd,
    Clk);
  output [0:0]mem_ex_result;
  input R;
  input ex_branch_with_delayslot_reg;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire ex_branch_with_delayslot_reg;
  wire [0:0]mem_ex_result;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(EX_Fwd),
        .Q(mem_ex_result),
        .R(R));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_FDRE" *) 
module microblaze_v10_0_3_MB_FDRE_481
   (mem_ex_result,
    R,
    ex_branch_with_delayslot_reg,
    ex_sel_alu_i_reg,
    Clk);
  output [0:0]mem_ex_result;
  input R;
  input ex_branch_with_delayslot_reg;
  input [0:0]ex_sel_alu_i_reg;
  input Clk;

  wire Clk;
  wire R;
  wire ex_branch_with_delayslot_reg;
  wire [0:0]ex_sel_alu_i_reg;
  wire [0:0]mem_ex_result;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(ex_sel_alu_i_reg),
        .Q(mem_ex_result),
        .R(R));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_FDRE" *) 
module microblaze_v10_0_3_MB_FDRE_482
   (mem_ex_result,
    R,
    ex_branch_with_delayslot_reg,
    EX_Fwd,
    Clk);
  output [0:0]mem_ex_result;
  input R;
  input ex_branch_with_delayslot_reg;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire ex_branch_with_delayslot_reg;
  wire [0:0]mem_ex_result;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(EX_Fwd),
        .Q(mem_ex_result),
        .R(R));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_FDRE" *) 
module microblaze_v10_0_3_MB_FDRE_483
   (mem_ex_result,
    R,
    ex_branch_with_delayslot_reg,
    EX_Fwd,
    Clk);
  output [0:0]mem_ex_result;
  input R;
  input ex_branch_with_delayslot_reg;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire ex_branch_with_delayslot_reg;
  wire [0:0]mem_ex_result;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(EX_Fwd),
        .Q(mem_ex_result),
        .R(R));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_FDRE" *) 
module microblaze_v10_0_3_MB_FDRE_484
   (mem_ex_result,
    R,
    ex_branch_with_delayslot_reg,
    ex_sel_alu_i_reg,
    Clk);
  output [0:0]mem_ex_result;
  input R;
  input ex_branch_with_delayslot_reg;
  input [0:0]ex_sel_alu_i_reg;
  input Clk;

  wire Clk;
  wire R;
  wire ex_branch_with_delayslot_reg;
  wire [0:0]ex_sel_alu_i_reg;
  wire [0:0]mem_ex_result;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(ex_sel_alu_i_reg),
        .Q(mem_ex_result),
        .R(R));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_FDRE" *) 
module microblaze_v10_0_3_MB_FDRE_485
   (mem_ex_result,
    R,
    ex_branch_with_delayslot_reg,
    ex_sel_alu_i_reg,
    Clk);
  output [0:0]mem_ex_result;
  input R;
  input ex_branch_with_delayslot_reg;
  input [0:0]ex_sel_alu_i_reg;
  input Clk;

  wire Clk;
  wire R;
  wire ex_branch_with_delayslot_reg;
  wire [0:0]ex_sel_alu_i_reg;
  wire [0:0]mem_ex_result;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(ex_sel_alu_i_reg),
        .Q(mem_ex_result),
        .R(R));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_FDRE" *) 
module microblaze_v10_0_3_MB_FDRE_486
   (mem_ex_result,
    R,
    ex_branch_with_delayslot_reg,
    ex_sel_alu_i_reg,
    Clk);
  output [0:0]mem_ex_result;
  input R;
  input ex_branch_with_delayslot_reg;
  input [0:0]ex_sel_alu_i_reg;
  input Clk;

  wire Clk;
  wire R;
  wire ex_branch_with_delayslot_reg;
  wire [0:0]ex_sel_alu_i_reg;
  wire [0:0]mem_ex_result;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(ex_sel_alu_i_reg),
        .Q(mem_ex_result),
        .R(R));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_FDRE" *) 
module microblaze_v10_0_3_MB_FDRE_487
   (mem_ex_result,
    R,
    ex_branch_with_delayslot_reg,
    ex_sel_alu_i_reg,
    Clk);
  output [0:0]mem_ex_result;
  input R;
  input ex_branch_with_delayslot_reg;
  input [0:0]ex_sel_alu_i_reg;
  input Clk;

  wire Clk;
  wire R;
  wire ex_branch_with_delayslot_reg;
  wire [0:0]ex_sel_alu_i_reg;
  wire [0:0]mem_ex_result;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(ex_sel_alu_i_reg),
        .Q(mem_ex_result),
        .R(R));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_FDRE" *) 
module microblaze_v10_0_3_MB_FDRE_488
   (mem_ex_result,
    R,
    ex_branch_with_delayslot_reg,
    ex_sel_alu_i_reg,
    Clk);
  output [0:0]mem_ex_result;
  input R;
  input ex_branch_with_delayslot_reg;
  input [0:0]ex_sel_alu_i_reg;
  input Clk;

  wire Clk;
  wire R;
  wire ex_branch_with_delayslot_reg;
  wire [0:0]ex_sel_alu_i_reg;
  wire [0:0]mem_ex_result;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(ex_sel_alu_i_reg),
        .Q(mem_ex_result),
        .R(R));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_FDRE" *) 
module microblaze_v10_0_3_MB_FDRE_489
   (mem_ex_result,
    R,
    ex_branch_with_delayslot_reg,
    ex_sel_alu_i_reg,
    Clk);
  output [0:0]mem_ex_result;
  input R;
  input ex_branch_with_delayslot_reg;
  input [0:0]ex_sel_alu_i_reg;
  input Clk;

  wire Clk;
  wire R;
  wire ex_branch_with_delayslot_reg;
  wire [0:0]ex_sel_alu_i_reg;
  wire [0:0]mem_ex_result;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(ex_sel_alu_i_reg),
        .Q(mem_ex_result),
        .R(R));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_FDRE" *) 
module microblaze_v10_0_3_MB_FDRE_490
   (mem_ex_result,
    R,
    ex_branch_with_delayslot_reg,
    ex_sel_alu_i_reg,
    Clk);
  output [0:0]mem_ex_result;
  input R;
  input ex_branch_with_delayslot_reg;
  input [0:0]ex_sel_alu_i_reg;
  input Clk;

  wire Clk;
  wire R;
  wire ex_branch_with_delayslot_reg;
  wire [0:0]ex_sel_alu_i_reg;
  wire [0:0]mem_ex_result;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(ex_sel_alu_i_reg),
        .Q(mem_ex_result),
        .R(R));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_FDRE" *) 
module microblaze_v10_0_3_MB_FDRE_69
   (D,
    sync_reset,
    ex_branch_with_delayslot_reg,
    ex_exception_no_load_store_mask,
    Clk,
    mem_exception_from_ex);
  output [0:0]D;
  input sync_reset;
  input ex_branch_with_delayslot_reg;
  input ex_exception_no_load_store_mask;
  input Clk;
  input mem_exception_from_ex;

  wire Clk;
  wire [0:0]D;
  wire \Using_FPGA.Native_n_0 ;
  wire ex_branch_with_delayslot_reg;
  wire ex_exception_no_load_store_mask;
  wire mem_exception_from_ex;
  wire sync_reset;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(ex_branch_with_delayslot_reg),
        .D(ex_exception_no_load_store_mask),
        .Q(\Using_FPGA.Native_n_0 ),
        .R(sync_reset));
  LUT2 #(
    .INIT(4'h8)) 
    \wb_exception_kind_i[31]_i_1 
       (.I0(mem_exception_from_ex),
        .I1(\Using_FPGA.Native_n_0 ),
        .O(D));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_FDRE" *) 
module microblaze_v10_0_3_MB_FDRE_70
   (mem_byte_access_reg,
    \MEM_DataBus_Write_Data_reg[1] ,
    sync_reset,
    of_pause_reg,
    \Using_FPGA.Native_0 ,
    Clk,
    \EX_Op3_reg[1] ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 );
  output mem_byte_access_reg;
  output [11:0]\MEM_DataBus_Write_Data_reg[1] ;
  input sync_reset;
  input of_pause_reg;
  input \Using_FPGA.Native_0 ;
  input Clk;
  input [15:0]\EX_Op3_reg[1] ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;

  wire Clk;
  wire [15:0]\EX_Op3_reg[1] ;
  wire [11:0]\MEM_DataBus_Write_Data_reg[1] ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire mem_byte_access_reg;
  wire of_pause_reg;
  wire sync_reset;

  LUT6 #(
    .INIT(64'hDD88CDCDDD88C8C8)) 
    \Data_Write[10]_INST_0 
       (.I0(mem_byte_access_reg),
        .I1(\EX_Op3_reg[1] [2]),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\EX_Op3_reg[1] [6]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\EX_Op3_reg[1] [10]),
        .O(\MEM_DataBus_Write_Data_reg[1] [7]));
  LUT6 #(
    .INIT(64'hDD88CDCDDD88C8C8)) 
    \Data_Write[12]_INST_0 
       (.I0(mem_byte_access_reg),
        .I1(\EX_Op3_reg[1] [1]),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\EX_Op3_reg[1] [5]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\EX_Op3_reg[1] [9]),
        .O(\MEM_DataBus_Write_Data_reg[1] [6]));
  LUT6 #(
    .INIT(64'hCDC8DDDDCDC88888)) 
    \Data_Write[17]_INST_0 
       (.I0(mem_byte_access_reg),
        .I1(\EX_Op3_reg[1] [3]),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\EX_Op3_reg[1] [11]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\EX_Op3_reg[1] [7]),
        .O(\MEM_DataBus_Write_Data_reg[1] [5]));
  LUT6 #(
    .INIT(64'hCDC8DDDDCDC88888)) 
    \Data_Write[18]_INST_0 
       (.I0(mem_byte_access_reg),
        .I1(\EX_Op3_reg[1] [2]),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\EX_Op3_reg[1] [10]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\EX_Op3_reg[1] [6]),
        .O(\MEM_DataBus_Write_Data_reg[1] [4]));
  LUT6 #(
    .INIT(64'hFF00EF45FF00EA40)) 
    \Data_Write[1]_INST_0 
       (.I0(mem_byte_access_reg),
        .I1(\EX_Op3_reg[1] [7]),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\EX_Op3_reg[1] [3]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\EX_Op3_reg[1] [15]),
        .O(\MEM_DataBus_Write_Data_reg[1] [11]));
  LUT6 #(
    .INIT(64'hCDC8DDDDCDC88888)) 
    \Data_Write[22]_INST_0 
       (.I0(mem_byte_access_reg),
        .I1(\EX_Op3_reg[1] [0]),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\EX_Op3_reg[1] [8]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\EX_Op3_reg[1] [4]),
        .O(\MEM_DataBus_Write_Data_reg[1] [3]));
  LUT6 #(
    .INIT(64'hEFEAFFFF45400000)) 
    \Data_Write[25]_INST_0 
       (.I0(mem_byte_access_reg),
        .I1(\EX_Op3_reg[1] [7]),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\EX_Op3_reg[1] [15]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\EX_Op3_reg[1] [3]),
        .O(\MEM_DataBus_Write_Data_reg[1] [2]));
  LUT6 #(
    .INIT(64'hEFEAFFFF45400000)) 
    \Data_Write[26]_INST_0 
       (.I0(mem_byte_access_reg),
        .I1(\EX_Op3_reg[1] [6]),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\EX_Op3_reg[1] [14]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\EX_Op3_reg[1] [2]),
        .O(\MEM_DataBus_Write_Data_reg[1] [1]));
  LUT6 #(
    .INIT(64'hEFEAFFFF45400000)) 
    \Data_Write[28]_INST_0 
       (.I0(mem_byte_access_reg),
        .I1(\EX_Op3_reg[1] [5]),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\EX_Op3_reg[1] [13]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\EX_Op3_reg[1] [1]),
        .O(\MEM_DataBus_Write_Data_reg[1] [0]));
  LUT6 #(
    .INIT(64'hFF00EF45FF00EA40)) 
    \Data_Write[2]_INST_0 
       (.I0(mem_byte_access_reg),
        .I1(\EX_Op3_reg[1] [6]),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\EX_Op3_reg[1] [2]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\EX_Op3_reg[1] [14]),
        .O(\MEM_DataBus_Write_Data_reg[1] [10]));
  LUT6 #(
    .INIT(64'hFF00EF45FF00EA40)) 
    \Data_Write[6]_INST_0 
       (.I0(mem_byte_access_reg),
        .I1(\EX_Op3_reg[1] [4]),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\EX_Op3_reg[1] [0]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\EX_Op3_reg[1] [12]),
        .O(\MEM_DataBus_Write_Data_reg[1] [9]));
  LUT6 #(
    .INIT(64'hDD88CDCDDD88C8C8)) 
    \Data_Write[9]_INST_0 
       (.I0(mem_byte_access_reg),
        .I1(\EX_Op3_reg[1] [3]),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\EX_Op3_reg[1] [7]),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\EX_Op3_reg[1] [11]),
        .O(\MEM_DataBus_Write_Data_reg[1] [8]));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(\Using_FPGA.Native_0 ),
        .Q(mem_byte_access_reg),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_FDRE" *) 
module microblaze_v10_0_3_MB_FDRE_71
   (mem_doublet_access_reg,
    \MEM_DataBus_Write_Data_reg[14] ,
    sync_reset,
    of_pause_reg,
    \Using_FPGA.Native_0 ,
    Clk,
    \Using_FPGA.Native_1 ,
    \EX_Op3_reg[12] ,
    \Using_FPGA.Native_2 );
  output mem_doublet_access_reg;
  output [1:0]\MEM_DataBus_Write_Data_reg[14] ;
  input sync_reset;
  input of_pause_reg;
  input \Using_FPGA.Native_0 ;
  input Clk;
  input \Using_FPGA.Native_1 ;
  input [5:0]\EX_Op3_reg[12] ;
  input \Using_FPGA.Native_2 ;

  wire Clk;
  wire [5:0]\EX_Op3_reg[12] ;
  wire [1:0]\MEM_DataBus_Write_Data_reg[14] ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire mem_doublet_access_reg;
  wire of_pause_reg;
  wire sync_reset;

  LUT6 #(
    .INIT(64'hFFFECCFE33100010)) 
    \Data_Write[14]_INST_0 
       (.I0(mem_doublet_access_reg),
        .I1(\Using_FPGA.Native_1 ),
        .I2(\EX_Op3_reg[12] [4]),
        .I3(\Using_FPGA.Native_2 ),
        .I4(\EX_Op3_reg[12] [2]),
        .I5(\EX_Op3_reg[12] [0]),
        .O(\MEM_DataBus_Write_Data_reg[14] [1]));
  LUT6 #(
    .INIT(64'hFFFCEEFC11300030)) 
    \Data_Write[20]_INST_0 
       (.I0(mem_doublet_access_reg),
        .I1(\Using_FPGA.Native_1 ),
        .I2(\EX_Op3_reg[12] [3]),
        .I3(\Using_FPGA.Native_2 ),
        .I4(\EX_Op3_reg[12] [5]),
        .I5(\EX_Op3_reg[12] [1]),
        .O(\MEM_DataBus_Write_Data_reg[14] [0]));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(\Using_FPGA.Native_0 ),
        .Q(mem_doublet_access_reg),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_FDRE" *) 
module microblaze_v10_0_3_MB_FDRE_72
   (ex_is_load_instr_s,
    MEM_DataBus_Read_reg,
    mem_is_multi_or_load_instr0,
    MEM_Sel_MEM_Res_I_reg,
    sync_reset,
    of_pause_reg,
    D222_out,
    Clk,
    \Performace_Debug_Control.ex_dbg_pc_hit_i_reg ,
    \Performace_Debug_Control.dbg_stop_if_delay_i_reg ,
    ex_valid_reg,
    ex_is_multi_instr2,
    ex_Sel_SPR_PVR,
    ex_Sel_SPR_EDR,
    ex_Sel_SPR_SHR,
    ex_Sel_SPR_EAR,
    ex_Sel_SPR_BTR,
    ex_Sel_SPR_FSR,
    ex_Sel_SPR_ESR,
    ex_Sel_SPR_SLR);
  output ex_is_load_instr_s;
  output [0:0]MEM_DataBus_Read_reg;
  output mem_is_multi_or_load_instr0;
  output MEM_Sel_MEM_Res_I_reg;
  input sync_reset;
  input of_pause_reg;
  input D222_out;
  input Clk;
  input \Performace_Debug_Control.ex_dbg_pc_hit_i_reg ;
  input \Performace_Debug_Control.dbg_stop_if_delay_i_reg ;
  input ex_valid_reg;
  input ex_is_multi_instr2;
  input ex_Sel_SPR_PVR;
  input ex_Sel_SPR_EDR;
  input ex_Sel_SPR_SHR;
  input ex_Sel_SPR_EAR;
  input ex_Sel_SPR_BTR;
  input ex_Sel_SPR_FSR;
  input ex_Sel_SPR_ESR;
  input ex_Sel_SPR_SLR;

  wire Clk;
  wire D222_out;
  wire MEM_Sel_MEM_Res_I_reg;
  wire ex_is_load_instr_s;
  wire ex_is_multi_instr2;
  wire mem_is_multi_or_load_instr0;
  wire of_pause_reg;
  wire sync_reset;

  LUT1 #(
    .INIT(2'h1)) 
    MEM_Sel_MEM_Res_I_i_1
       (.I0(ex_is_load_instr_s),
        .O(MEM_Sel_MEM_Res_I_reg));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D222_out),
        .Q(ex_is_load_instr_s),
        .R(sync_reset));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT2 #(
    .INIT(4'hE)) 
    mem_is_multi_or_load_instr_i_1
       (.I0(ex_is_load_instr_s),
        .I1(ex_is_multi_instr2),
        .O(mem_is_multi_or_load_instr0));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_FDRE" *) 
module microblaze_v10_0_3_MB_FDRE_73
   (ex_is_lwx_instr_s,
    \Using_LWX_SWX_instr.ex_reservation_reg ,
    sync_reset,
    of_pause_reg,
    \Using_FPGA.Native_0 ,
    Clk,
    ex_reservation,
    ex_valid_reg,
    ex_branch_with_delayslot_reg,
    ex_is_swx_instr_s,
    mem_valid_reg);
  output ex_is_lwx_instr_s;
  output \Using_LWX_SWX_instr.ex_reservation_reg ;
  input sync_reset;
  input of_pause_reg;
  input \Using_FPGA.Native_0 ;
  input Clk;
  input ex_reservation;
  input ex_valid_reg;
  input ex_branch_with_delayslot_reg;
  input ex_is_swx_instr_s;
  input mem_valid_reg;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_LWX_SWX_instr.ex_reservation_reg ;
  wire ex_branch_with_delayslot_reg;
  wire ex_is_lwx_instr_s;
  wire ex_is_swx_instr_s;
  wire ex_reservation;
  wire ex_valid_reg;
  wire mem_valid_reg;
  wire of_pause_reg;
  wire sync_reset;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(\Using_FPGA.Native_0 ),
        .Q(ex_is_lwx_instr_s),
        .R(sync_reset));
  LUT6 #(
    .INIT(64'h0A0A0A0A000E0E0E)) 
    \Using_LWX_SWX_instr.ex_reservation_i_1 
       (.I0(ex_reservation),
        .I1(ex_is_lwx_instr_s),
        .I2(ex_valid_reg),
        .I3(ex_branch_with_delayslot_reg),
        .I4(ex_is_swx_instr_s),
        .I5(mem_valid_reg),
        .O(\Using_LWX_SWX_instr.ex_reservation_reg ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_FDRE" *) 
module microblaze_v10_0_3_MB_FDRE_74
   (ex_is_swx_instr_s,
    \Using_FPGA.Native_0 ,
    SRI,
    mem_load_store_access0,
    MEM_DataBus_Write_reg,
    sync_reset,
    of_pause_reg,
    D224_out,
    Clk,
    ex_load_shift_carry_reg,
    mem_valid_reg,
    ex_is_lwx_instr_s,
    ex_load_shift_carry_reg_0,
    ex_reservation,
    mem_valid_reg_0,
    wb_exception,
    ex_valid_reg,
    ex_load_store_instr_s,
    ex_valid_reg_0,
    \Performace_Debug_Control.ex_dbg_pc_hit_i_reg ,
    \Performace_Debug_Control.dbg_stop_if_delay_i_reg ,
    ex_is_load_instr_s);
  output ex_is_swx_instr_s;
  output \Using_FPGA.Native_0 ;
  output SRI;
  output mem_load_store_access0;
  output [0:0]MEM_DataBus_Write_reg;
  input sync_reset;
  input of_pause_reg;
  input D224_out;
  input Clk;
  input ex_load_shift_carry_reg;
  input mem_valid_reg;
  input ex_is_lwx_instr_s;
  input ex_load_shift_carry_reg_0;
  input ex_reservation;
  input mem_valid_reg_0;
  input wb_exception;
  input ex_valid_reg;
  input ex_load_store_instr_s;
  input ex_valid_reg_0;
  input \Performace_Debug_Control.ex_dbg_pc_hit_i_reg ;
  input \Performace_Debug_Control.dbg_stop_if_delay_i_reg ;
  input ex_is_load_instr_s;

  wire Clk;
  wire D224_out;
  wire [0:0]MEM_DataBus_Write_reg;
  wire \Performace_Debug_Control.dbg_stop_if_delay_i_reg ;
  wire \Performace_Debug_Control.ex_dbg_pc_hit_i_reg ;
  wire SRI;
  wire \Using_FPGA.Native_0 ;
  wire ex_is_load_instr_s;
  wire ex_is_lwx_instr_s;
  wire ex_is_swx_instr_s;
  wire ex_load_shift_carry_reg;
  wire ex_load_shift_carry_reg_0;
  wire ex_load_store_instr_s;
  wire ex_reservation;
  wire ex_valid_reg;
  wire ex_valid_reg_0;
  wire mem_load_store_access0;
  wire mem_valid_reg;
  wire mem_valid_reg_0;
  wire of_pause_reg;
  wire sync_reset;
  wire wb_exception;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D224_out),
        .Q(ex_is_swx_instr_s),
        .R(sync_reset));
  LUT6 #(
    .INIT(64'hFFF2FFFFFFFFFFFF)) 
    \Using_FPGA.Native_i_1__113 
       (.I0(ex_is_swx_instr_s),
        .I1(ex_reservation),
        .I2(mem_valid_reg_0),
        .I3(wb_exception),
        .I4(ex_valid_reg),
        .I5(ex_load_store_instr_s),
        .O(SRI));
  LUT5 #(
    .INIT(32'h5051FFFF)) 
    \Using_FPGA.Native_i_4__0 
       (.I0(ex_load_shift_carry_reg),
        .I1(ex_is_swx_instr_s),
        .I2(mem_valid_reg),
        .I3(ex_is_lwx_instr_s),
        .I4(ex_load_shift_carry_reg_0),
        .O(\Using_FPGA.Native_0 ));
  LUT5 #(
    .INIT(32'h0000D000)) 
    Write_Strobe_INST_0
       (.I0(ex_is_swx_instr_s),
        .I1(ex_reservation),
        .I2(ex_load_store_instr_s),
        .I3(ex_valid_reg),
        .I4(ex_is_load_instr_s),
        .O(MEM_DataBus_Write_reg));
  LUT6 #(
    .INIT(64'hD0D0D0D000D0D0D0)) 
    mem_load_store_access_i_1
       (.I0(ex_is_swx_instr_s),
        .I1(ex_reservation),
        .I2(ex_load_store_instr_s),
        .I3(ex_valid_reg_0),
        .I4(\Performace_Debug_Control.ex_dbg_pc_hit_i_reg ),
        .I5(\Performace_Debug_Control.dbg_stop_if_delay_i_reg ),
        .O(mem_load_store_access0));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_FDRE" *) 
module microblaze_v10_0_3_MB_FDRE_75
   (ex_load_store_instr_s,
    \Using_FPGA.Native_0 ,
    \Using_LWX_SWX_instr.ex_reservation_reg ,
    MEM_DataBus_Access_reg,
    sync_reset,
    of_pause_reg,
    D225_out,
    Clk,
    ex_load_alu_carry_reg,
    ex_reservation,
    \Using_FPGA.Native_1 ,
    ex_branch_with_delayslot_reg,
    ex_MSR,
    ex_valid_reg,
    wb_exception,
    mem_exception_from_ex,
    mem_valid_instr,
    ex_is_swx_instr_s,
    mem_valid_reg,
    MEM_DataBus_Access_reg_0,
    mem_valid_reg_0);
  output ex_load_store_instr_s;
  output \Using_FPGA.Native_0 ;
  output \Using_LWX_SWX_instr.ex_reservation_reg ;
  output MEM_DataBus_Access_reg;
  input sync_reset;
  input of_pause_reg;
  input D225_out;
  input Clk;
  input ex_load_alu_carry_reg;
  input ex_reservation;
  input \Using_FPGA.Native_1 ;
  input ex_branch_with_delayslot_reg;
  input [0:0]ex_MSR;
  input ex_valid_reg;
  input wb_exception;
  input mem_exception_from_ex;
  input mem_valid_instr;
  input ex_is_swx_instr_s;
  input mem_valid_reg;
  input MEM_DataBus_Access_reg_0;
  input mem_valid_reg_0;

  wire Clk;
  wire D225_out;
  wire MEM_DataBus_Access_reg;
  wire MEM_DataBus_Access_reg_0;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_i_3__1_n_0 ;
  wire \Using_LWX_SWX_instr.ex_reservation_reg ;
  wire [0:0]ex_MSR;
  wire ex_branch_with_delayslot_reg;
  wire ex_databus_access;
  wire ex_is_swx_instr_s;
  wire ex_load_alu_carry_reg;
  wire ex_load_store_instr_s;
  wire ex_reservation;
  wire ex_valid_reg;
  wire mem_exception_from_ex;
  wire mem_valid_instr;
  wire mem_valid_reg;
  wire mem_valid_reg_0;
  wire of_pause_reg;
  wire sync_reset;
  wire wb_exception;

  LUT5 #(
    .INIT(32'h0000CC0A)) 
    MEM_DataBus_Access_i_1
       (.I0(MEM_DataBus_Access_reg_0),
        .I1(ex_databus_access),
        .I2(mem_valid_reg_0),
        .I3(ex_branch_with_delayslot_reg),
        .I4(sync_reset),
        .O(MEM_DataBus_Access_reg));
  LUT6 #(
    .INIT(64'h0008000000080008)) 
    MEM_DataBus_Access_i_2
       (.I0(ex_load_store_instr_s),
        .I1(ex_valid_reg),
        .I2(wb_exception),
        .I3(mem_valid_reg),
        .I4(ex_reservation),
        .I5(ex_is_swx_instr_s),
        .O(ex_databus_access));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D225_out),
        .Q(ex_load_store_instr_s),
        .R(sync_reset));
  LUT6 #(
    .INIT(64'hFF01FFFFFF010000)) 
    \Using_FPGA.Native_i_1__112 
       (.I0(ex_load_alu_carry_reg),
        .I1(ex_reservation),
        .I2(\Using_FPGA.Native_i_3__1_n_0 ),
        .I3(\Using_FPGA.Native_1 ),
        .I4(ex_branch_with_delayslot_reg),
        .I5(ex_MSR),
        .O(\Using_FPGA.Native_0 ));
  LUT6 #(
    .INIT(64'hFFF7F7F7FFFFFFFF)) 
    \Using_FPGA.Native_i_3__1 
       (.I0(ex_load_store_instr_s),
        .I1(ex_valid_reg),
        .I2(wb_exception),
        .I3(mem_exception_from_ex),
        .I4(mem_valid_instr),
        .I5(ex_is_swx_instr_s),
        .O(\Using_FPGA.Native_i_3__1_n_0 ));
  LUT5 #(
    .INIT(32'hF8FFFFFF)) 
    \Using_LWX_SWX_instr.ex_reservation_i_3 
       (.I0(mem_valid_instr),
        .I1(mem_exception_from_ex),
        .I2(wb_exception),
        .I3(ex_valid_reg),
        .I4(ex_load_store_instr_s),
        .O(\Using_LWX_SWX_instr.ex_reservation_reg ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_FDRE" *) 
module microblaze_v10_0_3_MB_FDRE_76
   (mem_reverse_byteorder_reg,
    \MEM_DataBus_Byte_Enable_reg[0] ,
    sync_reset,
    of_pause_reg,
    D229_out,
    Clk,
    \EX_Op1_reg[31] ,
    \EX_Op2_reg[31] ,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 );
  output mem_reverse_byteorder_reg;
  output [3:0]\MEM_DataBus_Byte_Enable_reg[0] ;
  input sync_reset;
  input of_pause_reg;
  input D229_out;
  input Clk;
  input [0:0]\EX_Op1_reg[31] ;
  input [0:0]\EX_Op2_reg[31] ;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;

  wire Clk;
  wire D229_out;
  wire [0:0]\EX_Op1_reg[31] ;
  wire [0:0]\EX_Op2_reg[31] ;
  wire [3:0]\MEM_DataBus_Byte_Enable_reg[0] ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire mem_reverse_byteorder_reg;
  wire of_pause_reg;
  wire sync_reset;

  LUT6 #(
    .INIT(64'h000000FF96FF96FF)) 
    \Byte_Enable[0]_INST_0 
       (.I0(mem_reverse_byteorder_reg),
        .I1(\EX_Op1_reg[31] ),
        .I2(\EX_Op2_reg[31] ),
        .I3(\Using_FPGA.Native_1 ),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\Using_FPGA.Native_0 ),
        .O(\MEM_DataBus_Byte_Enable_reg[0] [3]));
  LUT6 #(
    .INIT(64'h000000FF69FF69FF)) 
    \Byte_Enable[1]_INST_0 
       (.I0(mem_reverse_byteorder_reg),
        .I1(\EX_Op1_reg[31] ),
        .I2(\EX_Op2_reg[31] ),
        .I3(\Using_FPGA.Native_1 ),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\Using_FPGA.Native_0 ),
        .O(\MEM_DataBus_Byte_Enable_reg[0] [2]));
  LUT6 #(
    .INIT(64'h9600FF009600FFFF)) 
    \Byte_Enable[2]_INST_0 
       (.I0(mem_reverse_byteorder_reg),
        .I1(\EX_Op1_reg[31] ),
        .I2(\EX_Op2_reg[31] ),
        .I3(\Using_FPGA.Native_0 ),
        .I4(\Using_FPGA.Native_1 ),
        .I5(\Using_FPGA.Native_2 ),
        .O(\MEM_DataBus_Byte_Enable_reg[0] [1]));
  LUT6 #(
    .INIT(64'h6900FF006900FFFF)) 
    \Byte_Enable[3]_INST_0 
       (.I0(mem_reverse_byteorder_reg),
        .I1(\EX_Op1_reg[31] ),
        .I2(\EX_Op2_reg[31] ),
        .I3(\Using_FPGA.Native_0 ),
        .I4(\Using_FPGA.Native_1 ),
        .I5(\Using_FPGA.Native_2 ),
        .O(\MEM_DataBus_Byte_Enable_reg[0] [0]));
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(D229_out),
        .Q(mem_reverse_byteorder_reg),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_FDRE" *) 
module microblaze_v10_0_3_MB_FDRE_77
   (\Using_FPGA.Native_0 ,
    sync_reset,
    of_pause_reg,
    \Using_FPGA.Native_1 ,
    Clk,
    ex_move_to_MSR_instr_reg,
    ex_MSR,
    ex_branch_with_delayslot_reg,
    ex_valid_reg,
    ex_set_bip_reg,
    \Performace_Debug_Control.ex_dbg_pc_hit_i_reg ,
    \Performace_Debug_Control.dbg_stop_if_delay_i_reg ,
    ex_valid_reg_0,
    \EX_Op1_reg[28] );
  output \Using_FPGA.Native_0 ;
  input sync_reset;
  input of_pause_reg;
  input \Using_FPGA.Native_1 ;
  input Clk;
  input ex_move_to_MSR_instr_reg;
  input [0:0]ex_MSR;
  input ex_branch_with_delayslot_reg;
  input ex_valid_reg;
  input ex_set_bip_reg;
  input \Performace_Debug_Control.ex_dbg_pc_hit_i_reg ;
  input \Performace_Debug_Control.dbg_stop_if_delay_i_reg ;
  input ex_valid_reg_0;
  input [0:0]\EX_Op1_reg[28] ;

  wire Clk;
  wire [0:0]\EX_Op1_reg[28] ;
  wire \Performace_Debug_Control.dbg_stop_if_delay_i_reg ;
  wire \Performace_Debug_Control.ex_dbg_pc_hit_i_reg ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_i_2__65_n_0 ;
  wire [0:0]ex_MSR;
  wire ex_branch_with_delayslot_reg;
  wire ex_clear_MSR_BIP_instr_s;
  wire ex_move_to_MSR_instr_reg;
  wire ex_set_bip_reg;
  wire ex_valid_reg;
  wire ex_valid_reg_0;
  wire of_pause_reg;
  wire sync_reset;

  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(of_pause_reg),
        .D(\Using_FPGA.Native_1 ),
        .Q(ex_clear_MSR_BIP_instr_s),
        .R(sync_reset));
  LUT6 #(
    .INIT(64'hFFF0C0F0C8F0C0F0)) 
    \Using_FPGA.Native_i_1__114 
       (.I0(ex_move_to_MSR_instr_reg),
        .I1(\Using_FPGA.Native_i_2__65_n_0 ),
        .I2(ex_MSR),
        .I3(ex_branch_with_delayslot_reg),
        .I4(ex_valid_reg),
        .I5(ex_set_bip_reg),
        .O(\Using_FPGA.Native_0 ));
  LUT6 #(
    .INIT(64'h55F5FFFF11F1FFFF)) 
    \Using_FPGA.Native_i_2__65 
       (.I0(ex_clear_MSR_BIP_instr_s),
        .I1(ex_move_to_MSR_instr_reg),
        .I2(\Performace_Debug_Control.ex_dbg_pc_hit_i_reg ),
        .I3(\Performace_Debug_Control.dbg_stop_if_delay_i_reg ),
        .I4(ex_valid_reg_0),
        .I5(\EX_Op1_reg[28] ),
        .O(\Using_FPGA.Native_i_2__65_n_0 ));
endmodule

module microblaze_v10_0_3_MB_LUT6
   (sel_input_iii_3,
    if_sel_input,
    addr,
    IReady_1,
    of_pause_reg,
    I5);
  output sel_input_iii_3;
  input [0:0]if_sel_input;
  input [0:0]addr;
  input IReady_1;
  input of_pause_reg;
  input I5;

  wire I5;
  wire IReady_1;
  wire [0:0]addr;
  wire [0:0]if_sel_input;
  wire of_pause_reg;
  wire sel_input_iii_3;

  (* box_type = "PRIMITIVE" *) 
  LUT5 #(
    .INIT(32'h0000C0AC)) 
    \Using_FPGA.Native 
       (.I0(if_sel_input),
        .I1(addr),
        .I2(IReady_1),
        .I3(of_pause_reg),
        .I4(I5),
        .O(sel_input_iii_3));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_LUT6" *) 
module microblaze_v10_0_3_MB_LUT6_117
   (sel_input_iii_2,
    if_sel_input,
    addr,
    IReady_1,
    of_pause_reg,
    I5);
  output sel_input_iii_2;
  input [1:0]if_sel_input;
  input [0:0]addr;
  input IReady_1;
  input of_pause_reg;
  input I5;

  wire I5;
  wire IReady_1;
  wire [0:0]addr;
  wire [1:0]if_sel_input;
  wire of_pause_reg;
  wire sel_input_iii_2;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00000000CCF0AACC)) 
    \Using_FPGA.Native 
       (.I0(if_sel_input[0]),
        .I1(if_sel_input[1]),
        .I2(addr),
        .I3(IReady_1),
        .I4(of_pause_reg),
        .I5(I5),
        .O(sel_input_iii_2));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_LUT6" *) 
module microblaze_v10_0_3_MB_LUT6_119
   (sel_input_iii_1,
    \Using_FPGA.Native_0 ,
    if_sel_input,
    IReady_1,
    of_pause_reg,
    I5);
  output sel_input_iii_1;
  input \Using_FPGA.Native_0 ;
  input [1:0]if_sel_input;
  input IReady_1;
  input of_pause_reg;
  input I5;

  wire I5;
  wire IReady_1;
  wire \Using_FPGA.Native_0 ;
  wire [1:0]if_sel_input;
  wire of_pause_reg;
  wire sel_input_iii_1;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00000000CCF0AACC)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(if_sel_input[0]),
        .I2(if_sel_input[1]),
        .I3(IReady_1),
        .I4(of_pause_reg),
        .I5(I5),
        .O(sel_input_iii_1));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_LUT6" *) 
module microblaze_v10_0_3_MB_LUT6_121
   (sel_input_iii_0,
    if_sel_input,
    \Using_FPGA.Native_0 ,
    IReady_1,
    of_pause_reg,
    I5);
  output sel_input_iii_0;
  input [1:0]if_sel_input;
  input \Using_FPGA.Native_0 ;
  input IReady_1;
  input of_pause_reg;
  input I5;

  wire I5;
  wire IReady_1;
  wire \Using_FPGA.Native_0 ;
  wire [1:0]if_sel_input;
  wire of_pause_reg;
  wire sel_input_iii_0;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00000000CCF0AACC)) 
    \Using_FPGA.Native 
       (.I0(if_sel_input[0]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(if_sel_input[1]),
        .I3(IReady_1),
        .I4(of_pause_reg),
        .I5(I5),
        .O(sel_input_iii_0));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_LUT6" *) 
module microblaze_v10_0_3_MB_LUT6__parameterized0
   (sel_input_delayslot,
    if_sel_input,
    \Using_FPGA.Native_0 ,
    IReady_1,
    of_pause_reg,
    I5);
  output sel_input_delayslot;
  input [1:0]if_sel_input;
  input \Using_FPGA.Native_0 ;
  input IReady_1;
  input of_pause_reg;
  input I5;

  wire I5;
  wire IReady_1;
  wire \Using_FPGA.Native_0 ;
  wire [1:0]if_sel_input;
  wire of_pause_reg;
  wire sel_input_delayslot;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h0000FFFFCCF0AACC)) 
    \Using_FPGA.Native 
       (.I0(if_sel_input[0]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(if_sel_input[1]),
        .I3(IReady_1),
        .I4(of_pause_reg),
        .I5(I5),
        .O(sel_input_delayslot));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_LUT6" *) 
module microblaze_v10_0_3_MB_LUT6__parameterized1
   (sel_input_i_0,
    if_sel_input,
    \Using_FPGA.Native_0 ,
    IReady_1,
    of_pause_reg,
    I4_1,
    I5);
  output sel_input_i_0;
  input [0:0]if_sel_input;
  input \Using_FPGA.Native_0 ;
  input IReady_1;
  input of_pause_reg;
  input I4_1;
  input I5;

  wire I4_1;
  wire I5;
  wire IReady_1;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]if_sel_input;
  wire of_pause_reg;
  wire sel_input_i_0;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFF00FFFFAE0AAE0A)) 
    \Using_FPGA.Native 
       (.I0(if_sel_input),
        .I1(\Using_FPGA.Native_0 ),
        .I2(IReady_1),
        .I3(of_pause_reg),
        .I4(I4_1),
        .I5(I5),
        .O(sel_input_i_0));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_LUT6" *) 
module microblaze_v10_0_3_MB_LUT6__parameterized2
   (of_Valid_II,
    if_sel_input,
    \Using_FPGA.Native_0 ,
    IReady_1,
    of_pause_reg,
    I4_1,
    I5);
  output of_Valid_II;
  input [0:0]if_sel_input;
  input \Using_FPGA.Native_0 ;
  input IReady_1;
  input of_pause_reg;
  input I4_1;
  input I5;

  wire I4_1;
  wire I5;
  wire IReady_1;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]if_sel_input;
  wire of_Valid_II;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00FF000051F551F5)) 
    \Using_FPGA.Native 
       (.I0(if_sel_input),
        .I1(\Using_FPGA.Native_0 ),
        .I2(IReady_1),
        .I3(of_pause_reg),
        .I4(I4_1),
        .I5(I5),
        .O(of_Valid_II));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_LUT6" *) 
module microblaze_v10_0_3_MB_LUT6__parameterized3
   (A,
    D,
    of_predecode,
    of_read_ex_write_op1_conflict_part2,
    ex_is_multi_or_load_instr);
  output A;
  input [2:0]D;
  input [2:0]of_predecode;
  input of_read_ex_write_op1_conflict_part2;
  input ex_is_multi_or_load_instr;

  wire A;
  wire [2:0]D;
  wire O;
  wire ex_is_multi_or_load_instr;
  wire [2:0]of_predecode;
  wire of_read_ex_write_op1_conflict_part2;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \Using_FPGA.Native 
       (.I0(D[2]),
        .I1(of_predecode[2]),
        .I2(D[1]),
        .I3(of_predecode[1]),
        .I4(D[0]),
        .I5(of_predecode[0]),
        .O(O));
  LUT3 #(
    .INIT(8'h7F)) 
    \Using_FPGA.Native_i_1__140 
       (.I0(O),
        .I1(of_read_ex_write_op1_conflict_part2),
        .I2(ex_is_multi_or_load_instr),
        .O(A));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_LUT6" *) 
module microblaze_v10_0_3_MB_LUT6__parameterized3_78
   (of_read_ex_write_op2_conflict_part1,
    D,
    of_predecode);
  output of_read_ex_write_op2_conflict_part1;
  input [2:0]D;
  input [2:0]of_predecode;

  wire [2:0]D;
  wire [2:0]of_predecode;
  wire of_read_ex_write_op2_conflict_part1;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \Using_FPGA.Native 
       (.I0(D[2]),
        .I1(of_predecode[2]),
        .I2(D[1]),
        .I3(of_predecode[1]),
        .I4(D[0]),
        .I5(of_predecode[0]),
        .O(of_read_ex_write_op2_conflict_part1));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_LUT6" *) 
module microblaze_v10_0_3_MB_LUT6__parameterized3_80
   (of_read_ex_write_op3_conflict_part1,
    D,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 );
  output of_read_ex_write_op3_conflict_part1;
  input [2:0]D;
  input [1:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;

  wire [2:0]D;
  wire [1:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_read_ex_write_op3_conflict_part1;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \Using_FPGA.Native 
       (.I0(D[2]),
        .I1(\Using_FPGA.Native_0 [1]),
        .I2(D[1]),
        .I3(\Using_FPGA.Native_0 [0]),
        .I4(D[0]),
        .I5(\Using_FPGA.Native_1 ),
        .O(of_read_ex_write_op3_conflict_part1));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_LUT6" *) 
module microblaze_v10_0_3_MB_LUT6__parameterized3_82
   (use_Reg_Neg_S_reg,
    Q,
    of_predecode,
    of_read_mem_write_op1_conflict_part2,
    mem_is_multi_or_load_instr);
  output use_Reg_Neg_S_reg;
  input [2:0]Q;
  input [2:0]of_predecode;
  input of_read_mem_write_op1_conflict_part2;
  input mem_is_multi_or_load_instr;

  wire [2:0]Q;
  wire mem_is_multi_or_load_instr;
  wire [2:0]of_predecode;
  wire of_read_mem_write_op1_conflict_part1;
  wire of_read_mem_write_op1_conflict_part2;
  wire use_Reg_Neg_S_reg;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \Using_FPGA.Native 
       (.I0(Q[2]),
        .I1(of_predecode[2]),
        .I2(Q[1]),
        .I3(of_predecode[1]),
        .I4(Q[0]),
        .I5(of_predecode[0]),
        .O(of_read_mem_write_op1_conflict_part1));
  LUT3 #(
    .INIT(8'h7F)) 
    \Using_FPGA.Native_i_1__139 
       (.I0(of_read_mem_write_op1_conflict_part1),
        .I1(of_read_mem_write_op1_conflict_part2),
        .I2(mem_is_multi_or_load_instr),
        .O(use_Reg_Neg_S_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_LUT6" *) 
module microblaze_v10_0_3_MB_LUT6__parameterized3_84
   (of_read_mem_write_op2_conflict_part1,
    Q,
    of_predecode);
  output of_read_mem_write_op2_conflict_part1;
  input [2:0]Q;
  input [2:0]of_predecode;

  wire [2:0]Q;
  wire [2:0]of_predecode;
  wire of_read_mem_write_op2_conflict_part1;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \Using_FPGA.Native 
       (.I0(Q[2]),
        .I1(of_predecode[2]),
        .I2(Q[1]),
        .I3(of_predecode[1]),
        .I4(Q[0]),
        .I5(of_predecode[0]),
        .O(of_read_mem_write_op2_conflict_part1));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_LUT6" *) 
module microblaze_v10_0_3_MB_LUT6__parameterized3_86
   (use_Reg_Neg_S_reg,
    Q,
    D,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    mem_is_multi_or_load_instr,
    of_read_mem_write_op3_conflict_part2);
  output use_Reg_Neg_S_reg;
  input [2:0]Q;
  input [1:0]D;
  input \Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input mem_is_multi_or_load_instr;
  input of_read_mem_write_op3_conflict_part2;

  wire [1:0]D;
  wire [2:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire mem_is_multi_or_load_instr;
  wire of_read_mem_write_op3_conflict_part1;
  wire of_read_mem_write_op3_conflict_part2;
  wire use_Reg_Neg_S_reg;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \Using_FPGA.Native 
       (.I0(Q[2]),
        .I1(D[1]),
        .I2(Q[1]),
        .I3(D[0]),
        .I4(Q[0]),
        .I5(\Using_FPGA.Native_0 ),
        .O(of_read_mem_write_op3_conflict_part1));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \Using_FPGA.Native_i_1__137 
       (.I0(of_read_mem_write_op3_conflict_part1),
        .I1(\Using_FPGA.Native_1 ),
        .I2(mem_is_multi_or_load_instr),
        .I3(of_read_mem_write_op3_conflict_part2),
        .O(use_Reg_Neg_S_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_LUT6" *) 
module microblaze_v10_0_3_MB_LUT6__parameterized4
   (of_read_ex_write_op1_conflict_part2,
    I0,
    of_predecode,
    D,
    ex_gpr_write_reg,
    ex_valid_reg);
  output of_read_ex_write_op1_conflict_part2;
  input I0;
  input [1:0]of_predecode;
  input [0:0]D;
  input ex_gpr_write_reg;
  input ex_valid_reg;

  wire [0:0]D;
  wire I0;
  wire ex_gpr_write_reg;
  wire ex_valid_reg;
  wire [1:0]of_predecode;
  wire of_read_ex_write_op1_conflict_part2;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \Using_FPGA.Native 
       (.I0(I0),
        .I1(of_predecode[1]),
        .I2(D),
        .I3(of_predecode[0]),
        .I4(ex_gpr_write_reg),
        .I5(ex_valid_reg),
        .O(of_read_ex_write_op1_conflict_part2));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_LUT6" *) 
module microblaze_v10_0_3_MB_LUT6__parameterized4_79
   (of_read_ex_write_op2_conflict_part2,
    I0,
    of_predecode,
    D,
    ex_gpr_write_reg,
    ex_valid_reg);
  output of_read_ex_write_op2_conflict_part2;
  input I0;
  input [1:0]of_predecode;
  input [0:0]D;
  input ex_gpr_write_reg;
  input ex_valid_reg;

  wire [0:0]D;
  wire I0;
  wire ex_gpr_write_reg;
  wire ex_valid_reg;
  wire [1:0]of_predecode;
  wire of_read_ex_write_op2_conflict_part2;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \Using_FPGA.Native 
       (.I0(I0),
        .I1(of_predecode[1]),
        .I2(D),
        .I3(of_predecode[0]),
        .I4(ex_gpr_write_reg),
        .I5(ex_valid_reg),
        .O(of_read_ex_write_op2_conflict_part2));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_LUT6" *) 
module microblaze_v10_0_3_MB_LUT6__parameterized4_81
   (use_Reg_Neg_S_reg,
    I0,
    \Using_FPGA.Native_0 ,
    D,
    \Using_FPGA.Native_1 ,
    ex_gpr_write_reg,
    ex_valid_reg,
    \Using_FPGA.Native_2 ,
    ex_is_multi_or_load_instr,
    of_read_ex_write_op3_conflict_part1);
  output use_Reg_Neg_S_reg;
  input I0;
  input \Using_FPGA.Native_0 ;
  input [0:0]D;
  input \Using_FPGA.Native_1 ;
  input ex_gpr_write_reg;
  input ex_valid_reg;
  input [0:0]\Using_FPGA.Native_2 ;
  input ex_is_multi_or_load_instr;
  input of_read_ex_write_op3_conflict_part1;

  wire [0:0]D;
  wire I0;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]\Using_FPGA.Native_2 ;
  wire ex_gpr_write_reg;
  wire ex_is_multi_or_load_instr;
  wire ex_valid_reg;
  wire of_read_ex_write_op3_conflict_part1;
  wire of_read_ex_write_op3_conflict_part2;
  wire use_Reg_Neg_S_reg;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \Using_FPGA.Native 
       (.I0(I0),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .I3(\Using_FPGA.Native_1 ),
        .I4(ex_gpr_write_reg),
        .I5(ex_valid_reg),
        .O(of_read_ex_write_op3_conflict_part2));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \Using_FPGA.Native_i_1__138 
       (.I0(of_read_ex_write_op3_conflict_part2),
        .I1(\Using_FPGA.Native_2 ),
        .I2(ex_is_multi_or_load_instr),
        .I3(of_read_ex_write_op3_conflict_part1),
        .O(use_Reg_Neg_S_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_LUT6" *) 
module microblaze_v10_0_3_MB_LUT6__parameterized4_83
   (of_read_mem_write_op1_conflict_part2,
    Q,
    of_predecode,
    mem_gpr_write,
    mem_valid_instr);
  output of_read_mem_write_op1_conflict_part2;
  input [1:0]Q;
  input [1:0]of_predecode;
  input mem_gpr_write;
  input mem_valid_instr;

  wire [1:0]Q;
  wire mem_gpr_write;
  wire mem_valid_instr;
  wire [1:0]of_predecode;
  wire of_read_mem_write_op1_conflict_part2;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \Using_FPGA.Native 
       (.I0(Q[1]),
        .I1(of_predecode[1]),
        .I2(Q[0]),
        .I3(of_predecode[0]),
        .I4(mem_gpr_write),
        .I5(mem_valid_instr),
        .O(of_read_mem_write_op1_conflict_part2));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_LUT6" *) 
module microblaze_v10_0_3_MB_LUT6__parameterized4_85
   (of_read_mem_write_op2_conflict_part2,
    Q,
    of_predecode,
    mem_gpr_write,
    mem_valid_instr);
  output of_read_mem_write_op2_conflict_part2;
  input [1:0]Q;
  input [1:0]of_predecode;
  input mem_gpr_write;
  input mem_valid_instr;

  wire [1:0]Q;
  wire mem_gpr_write;
  wire mem_valid_instr;
  wire [1:0]of_predecode;
  wire of_read_mem_write_op2_conflict_part2;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \Using_FPGA.Native 
       (.I0(Q[1]),
        .I1(of_predecode[1]),
        .I2(Q[0]),
        .I3(of_predecode[0]),
        .I4(mem_gpr_write),
        .I5(mem_valid_instr),
        .O(of_read_mem_write_op2_conflict_part2));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_LUT6" *) 
module microblaze_v10_0_3_MB_LUT6__parameterized4_87
   (of_read_mem_write_op3_conflict_part2,
    Q,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    mem_gpr_write,
    mem_valid_instr);
  output of_read_mem_write_op3_conflict_part2;
  input [1:0]Q;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input mem_gpr_write;
  input mem_valid_instr;

  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire mem_gpr_write;
  wire mem_valid_instr;
  wire of_read_mem_write_op3_conflict_part2;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \Using_FPGA.Native 
       (.I0(Q[1]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(Q[0]),
        .I3(\Using_FPGA.Native_1 ),
        .I4(mem_gpr_write),
        .I5(mem_valid_instr),
        .O(of_read_mem_write_op3_conflict_part2));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_LUT6" *) 
module microblaze_v10_0_3_MB_LUT6__parameterized5
   (alu_AddSub_1,
    Q,
    \EX_ALU_Op_reg[0] ,
    \EX_Op1_reg[0] ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output alu_AddSub_1;
  input [0:0]Q;
  input [1:0]\EX_ALU_Op_reg[0] ;
  input [0:0]\EX_Op1_reg[0] ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire [1:0]\EX_ALU_Op_reg[0] ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op1_reg[0] ;
  wire [0:0]Q;
  wire alu_AddSub_1;

  (* box_type = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(Q),
        .I1(\EX_ALU_Op_reg[0] [1]),
        .I2(\EX_Op1_reg[0] ),
        .I3(\EX_ALU_Op_reg[0] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O(alu_AddSub_1));
endmodule

module microblaze_v10_0_3_MB_MUXCY
   (mem_databus_ready,
    S,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8);
  output mem_databus_ready;
  input S;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;

  wire S;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_4 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire lopt_9;
  wire [1:0]\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED ;
  wire [3:0]\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign lopt_3 = \^lopt_4 ;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = lopt_8;
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_CARRY4 
       (.CI(1'b0),
        .CO({\^lopt_7 ,\^lopt_4 ,\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [1:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,1'b1}),
        .O(\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED [3:0]),
        .S({lopt_9,\^lopt_6 ,\^lopt_3 ,S}));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY" *) 
module microblaze_v10_0_3_MB_MUXCY_100
   (ex_jump_q_reg,
    \if_pc_reg[0] ,
    I5,
    \if_pc_reg[0]_0 ,
    ex_delayslot_Instr0,
    ex_jump_hold_reg,
    if_missed_fetch_reg,
    keep_jump_taken_with_ds_reg,
    ex_valid_reg,
    ex_valid_jump_reg,
    mem_jump_taken_reg,
    ex_jump_q_reg_0,
    jump_carry5,
    \Using_FPGA.Native_0 ,
    Q,
    wb_exception,
    ex_jump_nodelay,
    of_valid,
    mem_valid_instr,
    mem_exception_from_ex,
    \Performace_Debug_Control.dbg_stop_if_delay_i_reg ,
    \EX_Op2_reg[0] ,
    O56_out,
    \if_pc_reg[1] ,
    \if_pc_reg[2] ,
    \if_pc_reg[3] ,
    \if_pc_reg[4] ,
    \if_pc_reg[5] ,
    \if_pc_reg[6] ,
    \if_pc_reg[7] ,
    \if_pc_reg[8] ,
    \if_pc_reg[9] ,
    \if_pc_reg[10] ,
    \if_pc_reg[11] ,
    \if_pc_reg[12] ,
    \if_pc_reg[13] ,
    \if_pc_reg[14] ,
    \if_pc_reg[15] ,
    \if_pc_reg[16] ,
    \if_pc_reg[17] ,
    \if_pc_reg[18] ,
    \if_pc_reg[19] ,
    \if_pc_reg[20] ,
    \if_pc_reg[21] ,
    \if_pc_reg[22] ,
    \if_pc_reg[23] ,
    \if_pc_reg[24] ,
    \if_pc_reg[25] ,
    \if_pc_reg[26] ,
    \if_pc_reg[27] ,
    \if_pc_reg[28] ,
    O,
    ex_databus_addr,
    \if_pc_reg[30] ,
    keep_jump_taken_with_ds,
    ex_branch_with_delayslot,
    ex_mbar_sleep,
    ex_jump_hold,
    ex_mbar_decode,
    ex_first_cycle,
    ex_mbar_stall_no_sleep_1,
    sync_reset,
    ex_branch_with_delayslot_reg,
    if_missed_fetch_reg_0,
    \Serial_Dbg_Intf.if_debug_ready_i_reg ,
    \Use_Async_Reset.sync_reset_reg ,
    of_pause_reg,
    ex_valid_reg_0,
    out,
    ex_jump_q);
  output ex_jump_q_reg;
  output [0:0]\if_pc_reg[0] ;
  output I5;
  output [31:0]\if_pc_reg[0]_0 ;
  output ex_delayslot_Instr0;
  output ex_jump_hold_reg;
  output if_missed_fetch_reg;
  output keep_jump_taken_with_ds_reg;
  output ex_valid_reg;
  output ex_valid_jump_reg;
  output mem_jump_taken_reg;
  output ex_jump_q_reg_0;
  input jump_carry5;
  input [0:0]\Using_FPGA.Native_0 ;
  input [1:0]Q;
  input wb_exception;
  input ex_jump_nodelay;
  input of_valid;
  input mem_valid_instr;
  input mem_exception_from_ex;
  input \Performace_Debug_Control.dbg_stop_if_delay_i_reg ;
  input [29:0]\EX_Op2_reg[0] ;
  input O56_out;
  input \if_pc_reg[1] ;
  input \if_pc_reg[2] ;
  input \if_pc_reg[3] ;
  input \if_pc_reg[4] ;
  input \if_pc_reg[5] ;
  input \if_pc_reg[6] ;
  input \if_pc_reg[7] ;
  input \if_pc_reg[8] ;
  input \if_pc_reg[9] ;
  input \if_pc_reg[10] ;
  input \if_pc_reg[11] ;
  input \if_pc_reg[12] ;
  input \if_pc_reg[13] ;
  input \if_pc_reg[14] ;
  input \if_pc_reg[15] ;
  input \if_pc_reg[16] ;
  input \if_pc_reg[17] ;
  input \if_pc_reg[18] ;
  input \if_pc_reg[19] ;
  input \if_pc_reg[20] ;
  input \if_pc_reg[21] ;
  input \if_pc_reg[22] ;
  input \if_pc_reg[23] ;
  input \if_pc_reg[24] ;
  input \if_pc_reg[25] ;
  input \if_pc_reg[26] ;
  input \if_pc_reg[27] ;
  input \if_pc_reg[28] ;
  input O;
  input [1:0]ex_databus_addr;
  input [1:0]\if_pc_reg[30] ;
  input keep_jump_taken_with_ds;
  input ex_branch_with_delayslot;
  input ex_mbar_sleep;
  input ex_jump_hold;
  input ex_mbar_decode;
  input ex_first_cycle;
  input ex_mbar_stall_no_sleep_1;
  input sync_reset;
  input ex_branch_with_delayslot_reg;
  input if_missed_fetch_reg_0;
  input \Serial_Dbg_Intf.if_debug_ready_i_reg ;
  input \Use_Async_Reset.sync_reset_reg ;
  input of_pause_reg;
  input ex_valid_reg_0;
  input out;
  input ex_jump_q;

  wire [29:0]\EX_Op2_reg[0] ;
  wire I5;
  wire O;
  wire O56_out;
  wire \Performace_Debug_Control.dbg_stop_if_delay_i_reg ;
  wire [1:0]Q;
  wire \Serial_Dbg_Intf.if_debug_ready_i_reg ;
  wire \Use_Async_Reset.sync_reset_reg ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_i_1__176_n_0 ;
  wire ex_branch_with_delayslot;
  wire ex_branch_with_delayslot_reg;
  wire [1:0]ex_databus_addr;
  wire ex_delayslot_Instr0;
  wire ex_first_cycle;
  wire ex_jump_hold;
  wire ex_jump_hold_reg;
  wire ex_jump_nodelay;
  wire ex_jump_q;
  wire ex_jump_q_reg;
  wire ex_jump_q_reg_0;
  wire ex_mbar_decode;
  wire ex_mbar_sleep;
  wire ex_mbar_stall_no_sleep_1;
  wire ex_valid_jump_reg;
  wire ex_valid_reg;
  wire ex_valid_reg_0;
  wire if_missed_fetch_reg;
  wire if_missed_fetch_reg_0;
  wire [0:0]\if_pc_reg[0] ;
  wire [31:0]\if_pc_reg[0]_0 ;
  wire \if_pc_reg[10] ;
  wire \if_pc_reg[11] ;
  wire \if_pc_reg[12] ;
  wire \if_pc_reg[13] ;
  wire \if_pc_reg[14] ;
  wire \if_pc_reg[15] ;
  wire \if_pc_reg[16] ;
  wire \if_pc_reg[17] ;
  wire \if_pc_reg[18] ;
  wire \if_pc_reg[19] ;
  wire \if_pc_reg[1] ;
  wire \if_pc_reg[20] ;
  wire \if_pc_reg[21] ;
  wire \if_pc_reg[22] ;
  wire \if_pc_reg[23] ;
  wire \if_pc_reg[24] ;
  wire \if_pc_reg[25] ;
  wire \if_pc_reg[26] ;
  wire \if_pc_reg[27] ;
  wire \if_pc_reg[28] ;
  wire \if_pc_reg[2] ;
  wire [1:0]\if_pc_reg[30] ;
  wire \if_pc_reg[3] ;
  wire \if_pc_reg[4] ;
  wire \if_pc_reg[5] ;
  wire \if_pc_reg[6] ;
  wire \if_pc_reg[7] ;
  wire \if_pc_reg[8] ;
  wire \if_pc_reg[9] ;
  wire jump_carry5;
  wire keep_jump_taken_with_ds;
  wire keep_jump_taken_with_ds_reg;
  wire mem_exception_from_ex;
  wire mem_valid_instr;
  wire of_next_ex_valid;
  wire of_pause_reg;
  wire of_valid;
  wire out;
  wire sync_reset;
  wire wb_exception;
  wire [3:1]\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED ;
  wire [3:1]\NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED ;

  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[0]_INST_0 
       (.I0(\EX_Op2_reg[0] [29]),
        .I1(ex_jump_q_reg),
        .I2(O56_out),
        .O(\if_pc_reg[0]_0 [31]));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[10]_INST_0 
       (.I0(\EX_Op2_reg[0] [19]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[10] ),
        .O(\if_pc_reg[0]_0 [21]));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[11]_INST_0 
       (.I0(\EX_Op2_reg[0] [18]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[11] ),
        .O(\if_pc_reg[0]_0 [20]));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[12]_INST_0 
       (.I0(\EX_Op2_reg[0] [17]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[12] ),
        .O(\if_pc_reg[0]_0 [19]));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[13]_INST_0 
       (.I0(\EX_Op2_reg[0] [16]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[13] ),
        .O(\if_pc_reg[0]_0 [18]));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[14]_INST_0 
       (.I0(\EX_Op2_reg[0] [15]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[14] ),
        .O(\if_pc_reg[0]_0 [17]));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[15]_INST_0 
       (.I0(\EX_Op2_reg[0] [14]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[15] ),
        .O(\if_pc_reg[0]_0 [16]));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[16]_INST_0 
       (.I0(\EX_Op2_reg[0] [13]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[16] ),
        .O(\if_pc_reg[0]_0 [15]));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[17]_INST_0 
       (.I0(\EX_Op2_reg[0] [12]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[17] ),
        .O(\if_pc_reg[0]_0 [14]));
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[18]_INST_0 
       (.I0(\EX_Op2_reg[0] [11]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[18] ),
        .O(\if_pc_reg[0]_0 [13]));
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[19]_INST_0 
       (.I0(\EX_Op2_reg[0] [10]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[19] ),
        .O(\if_pc_reg[0]_0 [12]));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[1]_INST_0 
       (.I0(\EX_Op2_reg[0] [28]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[1] ),
        .O(\if_pc_reg[0]_0 [30]));
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[20]_INST_0 
       (.I0(\EX_Op2_reg[0] [9]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[20] ),
        .O(\if_pc_reg[0]_0 [11]));
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[21]_INST_0 
       (.I0(\EX_Op2_reg[0] [8]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[21] ),
        .O(\if_pc_reg[0]_0 [10]));
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[22]_INST_0 
       (.I0(\EX_Op2_reg[0] [7]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[22] ),
        .O(\if_pc_reg[0]_0 [9]));
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[23]_INST_0 
       (.I0(\EX_Op2_reg[0] [6]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[23] ),
        .O(\if_pc_reg[0]_0 [8]));
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[24]_INST_0 
       (.I0(\EX_Op2_reg[0] [5]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[24] ),
        .O(\if_pc_reg[0]_0 [7]));
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[25]_INST_0 
       (.I0(\EX_Op2_reg[0] [4]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[25] ),
        .O(\if_pc_reg[0]_0 [6]));
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[26]_INST_0 
       (.I0(\EX_Op2_reg[0] [3]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[26] ),
        .O(\if_pc_reg[0]_0 [5]));
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[27]_INST_0 
       (.I0(\EX_Op2_reg[0] [2]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[27] ),
        .O(\if_pc_reg[0]_0 [4]));
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[28]_INST_0 
       (.I0(\EX_Op2_reg[0] [1]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[28] ),
        .O(\if_pc_reg[0]_0 [3]));
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[29]_INST_0 
       (.I0(\EX_Op2_reg[0] [0]),
        .I1(ex_jump_q_reg),
        .I2(O),
        .O(\if_pc_reg[0]_0 [2]));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[2]_INST_0 
       (.I0(\EX_Op2_reg[0] [27]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[2] ),
        .O(\if_pc_reg[0]_0 [29]));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[30]_INST_0 
       (.I0(ex_databus_addr[1]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[30] [1]),
        .O(\if_pc_reg[0]_0 [1]));
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[31]_INST_0 
       (.I0(ex_databus_addr[0]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[30] [0]),
        .O(\if_pc_reg[0]_0 [0]));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[3]_INST_0 
       (.I0(\EX_Op2_reg[0] [26]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[3] ),
        .O(\if_pc_reg[0]_0 [28]));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[4]_INST_0 
       (.I0(\EX_Op2_reg[0] [25]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[4] ),
        .O(\if_pc_reg[0]_0 [27]));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[5]_INST_0 
       (.I0(\EX_Op2_reg[0] [24]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[5] ),
        .O(\if_pc_reg[0]_0 [26]));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[6]_INST_0 
       (.I0(\EX_Op2_reg[0] [23]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[6] ),
        .O(\if_pc_reg[0]_0 [25]));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[7]_INST_0 
       (.I0(\EX_Op2_reg[0] [22]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[7] ),
        .O(\if_pc_reg[0]_0 [24]));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[8]_INST_0 
       (.I0(\EX_Op2_reg[0] [21]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[8] ),
        .O(\if_pc_reg[0]_0 [23]));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[9]_INST_0 
       (.I0(\EX_Op2_reg[0] [20]),
        .I1(ex_jump_q_reg),
        .I2(\if_pc_reg[9] ),
        .O(\if_pc_reg[0]_0 [22]));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_CARRY4 
       (.CI(jump_carry5),
        .CO({\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [3:1],ex_jump_q_reg}),
        .CYINIT(1'b0),
        .DI({\NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED [3:1],1'b0}),
        .O(\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED [3:1],\Using_FPGA.Native_i_1__176_n_0 }));
  LUT5 #(
    .INIT(32'h45454555)) 
    \Using_FPGA.Native_i_1__176 
       (.I0(ex_mbar_sleep),
        .I1(ex_jump_hold),
        .I2(ex_mbar_decode),
        .I3(ex_first_cycle),
        .I4(ex_mbar_stall_no_sleep_1),
        .O(\Using_FPGA.Native_i_1__176_n_0 ));
  LUT4 #(
    .INIT(16'hEAAA)) 
    \Using_FPGA.Native_i_2__0 
       (.I0(ex_jump_q_reg),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(wb_exception),
        .O(I5));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    ex_delayslot_Instr_i_1
       (.I0(keep_jump_taken_with_ds),
        .I1(ex_branch_with_delayslot),
        .I2(ex_jump_q_reg),
        .O(ex_delayslot_Instr0));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT4 #(
    .INIT(16'h000E)) 
    ex_jump_hold_i_1
       (.I0(ex_jump_hold),
        .I1(ex_jump_q_reg),
        .I2(sync_reset),
        .I3(ex_branch_with_delayslot_reg),
        .O(ex_jump_hold_reg));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    ex_jump_q_i_1
       (.I0(ex_jump_q),
        .I1(ex_jump_q_reg),
        .I2(ex_branch_with_delayslot_reg),
        .O(ex_jump_q_reg_0));
  LUT6 #(
    .INIT(64'h000000000000CC0A)) 
    ex_valid_i_1
       (.I0(ex_valid_reg_0),
        .I1(of_next_ex_valid),
        .I2(ex_branch_with_delayslot_reg),
        .I3(of_pause_reg),
        .I4(sync_reset),
        .I5(wb_exception),
        .O(ex_valid_reg));
  LUT6 #(
    .INIT(64'h0000000000707070)) 
    ex_valid_i_2
       (.I0(ex_jump_nodelay),
        .I1(ex_jump_q_reg),
        .I2(of_valid),
        .I3(mem_valid_instr),
        .I4(mem_exception_from_ex),
        .I5(\Performace_Debug_Control.dbg_stop_if_delay_i_reg ),
        .O(of_next_ex_valid));
  LUT6 #(
    .INIT(64'h000000000000CC0A)) 
    ex_valid_jump_i_1
       (.I0(out),
        .I1(of_next_ex_valid),
        .I2(ex_branch_with_delayslot_reg),
        .I3(of_pause_reg),
        .I4(sync_reset),
        .I5(wb_exception),
        .O(ex_valid_jump_reg));
  LUT5 #(
    .INIT(32'h000000E4)) 
    if_missed_fetch_i_1
       (.I0(if_missed_fetch_reg_0),
        .I1(ex_jump_q_reg),
        .I2(\Serial_Dbg_Intf.if_debug_ready_i_reg ),
        .I3(\Using_FPGA.Native_0 ),
        .I4(\Use_Async_Reset.sync_reset_reg ),
        .O(if_missed_fetch_reg));
  LUT2 #(
    .INIT(4'hE)) 
    \if_pc[0]_i_1 
       (.I0(ex_jump_q_reg),
        .I1(\Using_FPGA.Native_0 ),
        .O(\if_pc_reg[0] ));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT5 #(
    .INIT(32'h000000EA)) 
    keep_jump_taken_with_ds_i_1
       (.I0(keep_jump_taken_with_ds),
        .I1(ex_jump_q_reg),
        .I2(ex_branch_with_delayslot),
        .I3(of_pause_reg),
        .I4(sync_reset),
        .O(keep_jump_taken_with_ds_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY" *) 
module microblaze_v10_0_3_MB_MUXCY_101
   (CI,
    if_fetch_for_timing_optimization1,
    if_pc_incr_carry1,
    lopt,
    lopt_1);
  output CI;
  input if_fetch_for_timing_optimization1;
  input if_pc_incr_carry1;
  input lopt;
  output lopt_1;

  wire \<const0> ;

  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY" *) 
module microblaze_v10_0_3_MB_MUXCY_102
   (if_pc_incr_carry0,
    if_missed_fetch_reg,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9);
  output if_pc_incr_carry0;
  input if_missed_fetch_reg;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;

  wire if_missed_fetch_reg;
  wire if_valid;
  wire lopt_10;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED ;
  wire [2:0]\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = lopt_10;
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_CARRY4 
       (.CI(1'b0),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b1),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,1'b0}),
        .O({lopt_10,\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED [2:0]}),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,if_valid}));
  LUT1 #(
    .INIT(2'h1)) 
    \Using_FPGA.Native_i_1__126 
       (.I0(if_missed_fetch_reg),
        .O(if_valid));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY" *) 
module microblaze_v10_0_3_MB_MUXCY_103
   (if_pc_incr_carry1,
    \Performace_Debug_Control.dbg_stop_if_delay_i_reg ,
    if_pc_incr_carry0,
    lopt,
    lopt_1);
  output if_pc_incr_carry1;
  input \Performace_Debug_Control.dbg_stop_if_delay_i_reg ;
  input if_pc_incr_carry0;
  input lopt;
  output lopt_1;

  wire \<const0> ;

  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY" *) 
module microblaze_v10_0_3_MB_MUXCY_104
   (of_PipeRun_carry_2,
    \Using_FPGA.Native_0 ,
    of_PipeRun_carry_3,
    lopt,
    lopt_1);
  output of_PipeRun_carry_2;
  input \Using_FPGA.Native_0 ;
  input of_PipeRun_carry_3;
  input lopt;
  output lopt_1;

  wire \<const0> ;
  wire of_PipeRun_carry_2;

  assign lopt_1 = \<const0> ;
  assign of_PipeRun_carry_2 = lopt;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY" *) 
module microblaze_v10_0_3_MB_MUXCY_105
   (of_PipeRun_carry_3,
    mem_is_multi_or_load_instr_reg,
    of_PipeRun_carry_4,
    lopt,
    lopt_1);
  output of_PipeRun_carry_3;
  input mem_is_multi_or_load_instr_reg;
  input of_PipeRun_carry_4;
  input lopt;
  output lopt_1;

  wire \<const0> ;

  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY" *) 
module microblaze_v10_0_3_MB_MUXCY_106
   (of_PipeRun_carry_4,
    ex_is_multi_or_load_instr_reg,
    of_PipeRun_carry_5,
    lopt,
    lopt_1);
  output of_PipeRun_carry_4;
  input ex_is_multi_or_load_instr_reg;
  input of_PipeRun_carry_5;
  input lopt;
  output lopt_1;

  wire \<const0> ;

  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY" *) 
module microblaze_v10_0_3_MB_MUXCY_107
   (of_PipeRun_carry_5,
    mem_is_multi_or_load_instr_reg,
    of_PipeRun_carry_6,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8);
  output of_PipeRun_carry_5;
  input mem_is_multi_or_load_instr_reg;
  input of_PipeRun_carry_6;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;

  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire lopt_9;
  wire mem_is_multi_or_load_instr_reg;
  wire of_PipeRun_carry_6;
  wire [2:0]\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED ;
  wire [3:0]\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = lopt_8;
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_CARRY4 
       (.CI(of_PipeRun_carry_6),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,1'b0}),
        .O(\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED [3:0]),
        .S({lopt_9,\^lopt_6 ,\^lopt_3 ,mem_is_multi_or_load_instr_reg}));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY" *) 
module microblaze_v10_0_3_MB_MUXCY_108
   (of_PipeRun_carry_6,
    A,
    of_PipeRun_carry_7,
    lopt,
    lopt_1);
  output of_PipeRun_carry_6;
  input A;
  input of_PipeRun_carry_7;
  input lopt;
  output lopt_1;

  wire \<const0> ;
  wire of_PipeRun_carry_6;

  assign lopt_1 = \<const0> ;
  assign of_PipeRun_carry_6 = lopt;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY" *) 
module microblaze_v10_0_3_MB_MUXCY_109
   (of_PipeRun_carry_7,
    of_pipe_ctrl_reg0,
    ex_branch_with_delayslot_reg,
    lopt,
    lopt_1);
  output of_PipeRun_carry_7;
  input of_pipe_ctrl_reg0;
  input ex_branch_with_delayslot_reg;
  input lopt;
  output lopt_1;

  wire \<const0> ;

  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY" *) 
module microblaze_v10_0_3_MB_MUXCY_110
   (\Using_FPGA.Native_0 ,
    E,
    mem_gpr_write_dbg_reg,
    mem_gpr_write_reg,
    of_PipeRun_carry_9,
    wb_exception,
    Q,
    \Performace_Debug_Control.dbg_freeze_nohalt_reg ,
    mem_gpr_write_dbg,
    ex_gpr_write_dbg,
    sync_reset,
    mem_gpr_write,
    ex_gpr_write_reg,
    lopt,
    lopt_1,
    lopt_2);
  output \Using_FPGA.Native_0 ;
  output [0:0]E;
  output mem_gpr_write_dbg_reg;
  output mem_gpr_write_reg;
  input of_PipeRun_carry_9;
  input wb_exception;
  input [1:0]Q;
  input \Performace_Debug_Control.dbg_freeze_nohalt_reg ;
  input mem_gpr_write_dbg;
  input ex_gpr_write_dbg;
  input sync_reset;
  input mem_gpr_write;
  input ex_gpr_write_reg;
  input lopt;
  output lopt_1;
  output lopt_2;

  wire \<const0> ;
  wire \<const1> ;
  wire [0:0]E;
  wire \Performace_Debug_Control.dbg_freeze_nohalt_reg ;
  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire ex_gpr_write_dbg;
  wire ex_gpr_write_reg;
  wire mem_gpr_write;
  wire mem_gpr_write_dbg;
  wire mem_gpr_write_dbg_reg;
  wire mem_gpr_write_reg;
  wire sync_reset;
  wire wb_exception;

  assign \Using_FPGA.Native_0  = lopt;
  assign lopt_1 = \<const0> ;
  assign lopt_2 = \<const1> ;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
  LUT5 #(
    .INIT(32'h000000E2)) 
    mem_gpr_write_dbg_i_1
       (.I0(mem_gpr_write_dbg),
        .I1(\Using_FPGA.Native_0 ),
        .I2(ex_gpr_write_dbg),
        .I3(wb_exception),
        .I4(sync_reset),
        .O(mem_gpr_write_dbg_reg));
  LUT5 #(
    .INIT(32'h000000E2)) 
    mem_gpr_write_i_1
       (.I0(mem_gpr_write),
        .I1(\Using_FPGA.Native_0 ),
        .I2(ex_gpr_write_reg),
        .I3(wb_exception),
        .I4(sync_reset),
        .O(mem_gpr_write_reg));
  LUT5 #(
    .INIT(32'h00002AAA)) 
    \mem_pc_i[0]_i_1 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(wb_exception),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(\Performace_Debug_Control.dbg_freeze_nohalt_reg ),
        .O(E));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY" *) 
module microblaze_v10_0_3_MB_MUXCY_111
   (of_PipeRun_carry_9,
    \Using_FPGA.Native_0 ,
    ex_branch_with_delayslot_reg,
    of_PipeRun_carry_10,
    ex_mbar_sleep,
    ex_jump_hold,
    ex_mbar_decode,
    ex_first_cycle,
    ex_mbar_stall_no_sleep_1,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8);
  output of_PipeRun_carry_9;
  output \Using_FPGA.Native_0 ;
  input ex_branch_with_delayslot_reg;
  input of_PipeRun_carry_10;
  input ex_mbar_sleep;
  input ex_jump_hold;
  input ex_mbar_decode;
  input ex_first_cycle;
  input ex_mbar_stall_no_sleep_1;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;

  wire \Using_FPGA.Native_0 ;
  wire ex_branch_with_delayslot_reg;
  wire ex_first_cycle;
  wire ex_jump_hold;
  wire ex_mbar_decode;
  wire ex_mbar_sleep;
  wire ex_mbar_stall_no_sleep_1;
  wire \^lopt_1 ;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire lopt_9;
  wire of_PipeRun_carry_10;
  wire [2:0]\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED ;
  wire [3:0]\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign lopt = \^lopt_1 ;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = lopt_8;
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_CARRY4 
       (.CI(of_PipeRun_carry_10),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [2],\^lopt_1 ,\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,1'b0}),
        .O(\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED [3:0]),
        .S({lopt_9,\^lopt_6 ,\^lopt_3 ,ex_branch_with_delayslot_reg}));
  LUT5 #(
    .INIT(32'h45454555)) 
    \Using_FPGA.Native_i_2__66 
       (.I0(ex_mbar_sleep),
        .I1(ex_jump_hold),
        .I2(ex_mbar_decode),
        .I3(ex_first_cycle),
        .I4(ex_mbar_stall_no_sleep_1),
        .O(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY" *) 
module microblaze_v10_0_3_MB_MUXCY_112
   (of_PipeRun_carry_10,
    mem_valid_reg,
    lopt,
    lopt_1,
    lopt_2);
  output of_PipeRun_carry_10;
  input mem_valid_reg;
  input lopt;
  output lopt_1;
  output lopt_2;

  wire \<const0> ;
  wire \<const1> ;
  wire of_PipeRun_carry_10;

  assign lopt_1 = \<const0> ;
  assign lopt_2 = \<const1> ;
  assign of_PipeRun_carry_10 = lopt;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY" *) 
module microblaze_v10_0_3_MB_MUXCY_113
   (use_Reg_Neg_S_reg,
    in0,
    ex_Write_DCache_decode_reg,
    ex_jump_nodelay_reg,
    of_read_imm_reg_ii_reg,
    ex_first_cycle_reg,
    of_PipeRun_carry_1,
    ex_Write_ICache_i,
    ex_branch_with_delayslot_reg,
    ex_write_dcache_instr,
    dbg_pause,
    ex_jump_nodelay,
    \Using_FPGA.Native_0 ,
    ex_jump,
    \Serial_Dbg_Intf.if_debug_ready_i_reg ,
    if_missed_fetch_reg,
    of_read_imm_reg_ii,
    \Using_FPGA.Native_1 ,
    wb_exception_i_reg,
    wb_exception,
    sync_reset,
    lopt,
    lopt_1,
    lopt_2);
  output use_Reg_Neg_S_reg;
  output in0;
  output ex_Write_DCache_decode_reg;
  output ex_jump_nodelay_reg;
  output of_read_imm_reg_ii_reg;
  output ex_first_cycle_reg;
  input of_PipeRun_carry_1;
  input ex_Write_ICache_i;
  input ex_branch_with_delayslot_reg;
  input ex_write_dcache_instr;
  input dbg_pause;
  input ex_jump_nodelay;
  input \Using_FPGA.Native_0 ;
  input ex_jump;
  input \Serial_Dbg_Intf.if_debug_ready_i_reg ;
  input if_missed_fetch_reg;
  input of_read_imm_reg_ii;
  input \Using_FPGA.Native_1 ;
  input wb_exception_i_reg;
  input wb_exception;
  input sync_reset;
  input lopt;
  output lopt_1;
  output lopt_2;

  wire \<const0> ;
  wire ONE;
  wire \Serial_Dbg_Intf.if_debug_ready_i_reg ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire ex_Write_DCache_decode_reg;
  wire ex_branch_with_delayslot_reg;
  wire ex_first_cycle_reg;
  wire ex_jump;
  wire ex_jump_nodelay;
  wire ex_jump_nodelay_reg;
  wire ex_write_dcache_instr;
  wire if_missed_fetch_reg;
  wire of_read_imm_reg_ii;
  wire of_read_imm_reg_ii_reg;
  wire sync_reset;
  wire use_Reg_Neg_S_reg;
  wire wb_exception;
  wire wb_exception_i_reg;

  assign lopt_1 = \<const0> ;
  assign lopt_2 = ONE;
  assign use_Reg_Neg_S_reg = lopt;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(ONE));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT3 #(
    .INIT(8'h02)) 
    ex_Write_DCache_decode_cmb_inferred_i_1
       (.I0(ex_write_dcache_instr),
        .I1(use_Reg_Neg_S_reg),
        .I2(ex_branch_with_delayslot_reg),
        .O(ex_Write_DCache_decode_reg));
  LUT3 #(
    .INIT(8'h02)) 
    ex_first_cycle_i_1
       (.I0(use_Reg_Neg_S_reg),
        .I1(wb_exception),
        .I2(sync_reset),
        .O(ex_first_cycle_reg));
  LUT6 #(
    .INIT(64'h262E0000262E262E)) 
    ex_jump_nodelay_i_1
       (.I0(ex_jump_nodelay),
        .I1(use_Reg_Neg_S_reg),
        .I2(\Using_FPGA.Native_0 ),
        .I3(ex_jump),
        .I4(\Serial_Dbg_Intf.if_debug_ready_i_reg ),
        .I5(if_missed_fetch_reg),
        .O(ex_jump_nodelay_reg));
  LUT6 #(
    .INIT(64'h000000002EEE2222)) 
    of_read_imm_reg_ii_i_1
       (.I0(of_read_imm_reg_ii),
        .I1(use_Reg_Neg_S_reg),
        .I2(ex_jump),
        .I3(ex_jump_nodelay),
        .I4(\Using_FPGA.Native_1 ),
        .I5(wb_exception_i_reg),
        .O(of_read_imm_reg_ii_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY" *) 
module microblaze_v10_0_3_MB_MUXCY_114
   (of_PipeRun_carry_1,
    \Using_FPGA.Native_0 ,
    of_PipeRun_carry_2,
    lopt,
    lopt_1,
    lopt_2);
  output of_PipeRun_carry_1;
  input \Using_FPGA.Native_0 ;
  input of_PipeRun_carry_2;
  output lopt;
  input lopt_1;
  input lopt_2;

  wire \Using_FPGA.Native_0 ;
  wire \^lopt_1 ;
  wire \^lopt_2 ;
  wire lopt_3;
  wire of_PipeRun_carry_2;
  wire [3:0]\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED ;
  wire [3:2]\NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign lopt = \^lopt_1 ;
  assign lopt_3 = lopt_2;
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_CARRY4 
       (.CI(of_PipeRun_carry_2),
        .CO({\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [3:2],\^lopt_1 ,\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({\NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED [3:2],\^lopt_2 ,1'b0}),
        .O(\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED [3:2],lopt_3,\Using_FPGA.Native_0 }));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY" *) 
module microblaze_v10_0_3_MB_MUXCY_302
   (ex_pre_alu_carry,
    muxcy_sel,
    muxcy_di,
    ex_MSR,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9);
  output ex_pre_alu_carry;
  input muxcy_sel;
  input muxcy_di;
  input [0:0]ex_MSR;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;

  wire [0:0]ex_MSR;
  wire lopt_10;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire muxcy_di;
  wire muxcy_sel;
  wire [2:0]\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED ;
  wire [2:0]\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = lopt_10;
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_CARRY4 
       (.CI(1'b0),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(ex_MSR),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,muxcy_di}),
        .O({lopt_10,\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED [2:0]}),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,muxcy_sel}));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY" *) 
module microblaze_v10_0_3_MB_MUXCY_303
   (ex_alu_carryin,
    ex_pre_alu_carry,
    lopt,
    lopt_1,
    lopt_2);
  output ex_alu_carryin;
  input ex_pre_alu_carry;
  input lopt;
  output lopt_1;
  output lopt_2;

  wire \<const0> ;
  wire \<const1> ;

  assign lopt_1 = \<const0> ;
  assign lopt_2 = \<const1> ;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY" *) 
module microblaze_v10_0_3_MB_MUXCY_310
   (CI,
    \wb_exception_kind_i_reg[28] ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output CI;
  input [0:0]\wb_exception_kind_i_reg[28] ;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [0:0]\wb_exception_kind_i_reg[28] ;
  wire [2:0]\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_CARRY4 
       (.CI(1'b0),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b1),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,1'b0}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED [0]}),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,\wb_exception_kind_i_reg[28] }));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY" *) 
module microblaze_v10_0_3_MB_MUXCY_32
   (carry_7,
    SRL16_Sel_7,
    Q,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8);
  output carry_7;
  input SRL16_Sel_7;
  input [0:0]Q;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;

  wire [0:0]Q;
  wire SRL16_Sel_7;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire lopt_9;
  wire [2:0]\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED ;
  wire [3:0]\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = lopt_8;
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_CARRY4 
       (.CI(1'b0),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(Q),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,1'b0}),
        .O(\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED [3:0]),
        .S({lopt_9,\^lopt_6 ,\^lopt_3 ,SRL16_Sel_7}));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY" *) 
module microblaze_v10_0_3_MB_MUXCY_33
   (carry_6,
    SRL16_Sel_6,
    carry_7,
    lopt,
    lopt_1);
  output carry_6;
  input SRL16_Sel_6;
  input carry_7;
  input lopt;
  output lopt_1;

  wire \<const0> ;

  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY" *) 
module microblaze_v10_0_3_MB_MUXCY_35
   (carry_5,
    SRL16_Sel_5,
    carry_6,
    lopt,
    lopt_1);
  output carry_5;
  input SRL16_Sel_5;
  input carry_6;
  input lopt;
  output lopt_1;

  wire \<const0> ;

  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY" *) 
module microblaze_v10_0_3_MB_MUXCY_37
   (carry_4,
    SRL16_Sel_4,
    carry_5,
    lopt,
    lopt_1);
  output carry_4;
  input SRL16_Sel_4;
  input carry_5;
  input lopt;
  output lopt_1;

  wire \<const0> ;
  wire carry_4;

  assign carry_4 = lopt;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY" *) 
module microblaze_v10_0_3_MB_MUXCY_39
   (carry_3,
    SRL16_Sel_3,
    carry_4,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8);
  output carry_3;
  input SRL16_Sel_3;
  input carry_4;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;

  wire SRL16_Sel_3;
  wire carry_4;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire lopt_9;
  wire [2:0]\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED ;
  wire [3:0]\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = lopt_8;
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_CARRY4 
       (.CI(carry_4),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,1'b0}),
        .O(\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED [3:0]),
        .S({lopt_9,\^lopt_6 ,\^lopt_3 ,SRL16_Sel_3}));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY" *) 
module microblaze_v10_0_3_MB_MUXCY_405
   (zero_CI_0,
    ex_op1_cmp_equal,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6);
  output zero_CI_0;
  input ex_op1_cmp_equal;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  output lopt_5;
  input lopt_6;

  wire ex_op1_cmp_equal;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire lopt_7;
  wire [2:0]\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED ;
  wire [3:0]\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign lopt_5 = \^lopt_6 ;
  assign lopt_7 = lopt_6;
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_CARRY4 
       (.CI(1'b0),
        .CO({\^lopt_6 ,\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b1),
        .DI({\^lopt_2 ,\^lopt_2 ,\^lopt_2 ,1'b0}),
        .O(\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED [3:0]),
        .S({lopt_7,\^lopt_5 ,\^lopt_3 ,ex_op1_cmp_equal}));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY" *) 
module microblaze_v10_0_3_MB_MUXCY_408
   (zero_CI_3,
    \Zero_Detecting[2].nibble_Zero_reg ,
    ex_op1_cmp_equal_n,
    zero_CI_2,
    lopt);
  output zero_CI_3;
  input \Zero_Detecting[2].nibble_Zero_reg ;
  input ex_op1_cmp_equal_n;
  input zero_CI_2;
  input lopt;

  wire zero_CI_3;

  assign zero_CI_3 = lopt;
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY" *) 
module microblaze_v10_0_3_MB_MUXCY_409
   (zero_CI_4,
    \Zero_Detecting[3].nibble_Zero_reg ,
    ex_op1_cmp_equal_n,
    zero_CI_3,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6);
  output zero_CI_4;
  input \Zero_Detecting[3].nibble_Zero_reg ;
  input ex_op1_cmp_equal_n;
  input zero_CI_3;
  output lopt;
  input lopt_1;
  output lopt_2;
  input lopt_3;
  output lopt_4;
  input lopt_5;
  input lopt_6;

  wire \Zero_Detecting[3].nibble_Zero_reg ;
  wire ex_op1_cmp_equal_n;
  wire \^lopt_2 ;
  wire \^lopt_4 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire lopt_7;
  wire zero_CI_3;
  wire [2:0]\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED ;
  wire [3:0]\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_4  = lopt_3;
  assign \^lopt_6  = lopt_5;
  assign lopt_4 = \^lopt_5 ;
  assign lopt_7 = lopt_6;
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_CARRY4 
       (.CI(zero_CI_3),
        .CO({\^lopt_5 ,\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_6 ,ex_op1_cmp_equal_n,ex_op1_cmp_equal_n,ex_op1_cmp_equal_n}),
        .O(\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED [3:0]),
        .S({lopt_7,\^lopt_4 ,\^lopt_2 ,\Zero_Detecting[3].nibble_Zero_reg }));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY" *) 
module microblaze_v10_0_3_MB_MUXCY_41
   (carry_2,
    SRL16_Sel_2,
    carry_3,
    lopt,
    lopt_1);
  output carry_2;
  input SRL16_Sel_2;
  input carry_3;
  input lopt;
  output lopt_1;

  wire \<const0> ;

  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY" *) 
module microblaze_v10_0_3_MB_MUXCY_43
   (carry_1,
    SRL16_Sel_1,
    carry_2,
    lopt,
    lopt_1);
  output carry_1;
  input SRL16_Sel_1;
  input carry_2;
  input lopt;
  output lopt_1;

  wire \<const0> ;

  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY" *) 
module microblaze_v10_0_3_MB_MUXCY_45
   (carry_0,
    SRL16_Sel_0,
    carry_1,
    lopt,
    lopt_1);
  output carry_0;
  input SRL16_Sel_0;
  input carry_1;
  input lopt;
  output lopt_1;

  wire \<const0> ;
  wire carry_0;

  assign carry_0 = lopt;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY" *) 
module microblaze_v10_0_3_MB_MUXCY_47
   (Hit,
    \Performace_Debug_Control.ex_dbg_pc_hit_i_reg ,
    \Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg ,
    carry_0,
    of_pause_reg,
    force_stop_i,
    \Performace_Debug_Control.dbg_stop_i_reg ,
    single_Step_N,
    \Using_FPGA.Native_0 ,
    \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ,
    normal_stop_i,
    dbg_clean_stop,
    \Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg_0 ,
    mem_Exception_Taken,
    \Performace_Debug_Control.dbg_stop_if_delay_i_reg ,
    ex_branch_with_delayslot_reg,
    \Performace_Debug_Control.ex_dbg_pc_hit_i_reg_0 );
  output Hit;
  output \Performace_Debug_Control.ex_dbg_pc_hit_i_reg ;
  output \Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg ;
  input carry_0;
  input of_pause_reg;
  input force_stop_i;
  input \Performace_Debug_Control.dbg_stop_i_reg ;
  input single_Step_N;
  input \Using_FPGA.Native_0 ;
  input \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  input normal_stop_i;
  input dbg_clean_stop;
  input \Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg_0 ;
  input mem_Exception_Taken;
  input \Performace_Debug_Control.dbg_stop_if_delay_i_reg ;
  input ex_branch_with_delayslot_reg;
  input \Performace_Debug_Control.ex_dbg_pc_hit_i_reg_0 ;

  wire Hit;
  wire \Performace_Debug_Control.dbg_stop_i_reg ;
  wire \Performace_Debug_Control.dbg_stop_if_delay_i_reg ;
  wire \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  wire \Performace_Debug_Control.ex_dbg_pc_hit_i_i_3_n_0 ;
  wire \Performace_Debug_Control.ex_dbg_pc_hit_i_reg ;
  wire \Performace_Debug_Control.ex_dbg_pc_hit_i_reg_0 ;
  wire \Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg ;
  wire \Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg_0 ;
  wire \Using_FPGA.Native_0 ;
  wire carry_0;
  wire dbg_clean_stop;
  wire ex_branch_with_delayslot_reg;
  wire force_stop_i;
  wire mem_Exception_Taken;
  wire normal_stop_i;
  wire of_pause_reg;
  wire p_37_out;
  wire single_Step_N;
  wire [3:1]\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED ;
  wire [3:1]\NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED ;

  LUT6 #(
    .INIT(64'hEAEEFFFFAAAAAAAA)) 
    \Performace_Debug_Control.ex_dbg_pc_hit_i_i_1 
       (.I0(p_37_out),
        .I1(\Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg_0 ),
        .I2(mem_Exception_Taken),
        .I3(\Performace_Debug_Control.dbg_stop_if_delay_i_reg ),
        .I4(ex_branch_with_delayslot_reg),
        .I5(\Performace_Debug_Control.ex_dbg_pc_hit_i_reg_0 ),
        .O(\Performace_Debug_Control.ex_dbg_pc_hit_i_reg ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA8AA)) 
    \Performace_Debug_Control.ex_dbg_pc_hit_i_i_2 
       (.I0(of_pause_reg),
        .I1(force_stop_i),
        .I2(\Performace_Debug_Control.dbg_stop_i_reg ),
        .I3(single_Step_N),
        .I4(\Performace_Debug_Control.ex_dbg_pc_hit_i_i_3_n_0 ),
        .I5(\Using_FPGA.Native_0 ),
        .O(p_37_out));
  LUT4 #(
    .INIT(16'hF444)) 
    \Performace_Debug_Control.ex_dbg_pc_hit_i_i_3 
       (.I0(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .I1(Hit),
        .I2(normal_stop_i),
        .I3(dbg_clean_stop),
        .O(\Performace_Debug_Control.ex_dbg_pc_hit_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h7744774447447744)) 
    \Performace_Debug_Control.ex_dbg_pc_hit_single_step_i_1 
       (.I0(single_Step_N),
        .I1(p_37_out),
        .I2(ex_branch_with_delayslot_reg),
        .I3(\Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg_0 ),
        .I4(\Performace_Debug_Control.dbg_stop_if_delay_i_reg ),
        .I5(mem_Exception_Taken),
        .O(\Performace_Debug_Control.ex_dbg_pc_hit_single_step_reg ));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_CARRY4 
       (.CI(carry_0),
        .CO({\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [3:1],Hit}),
        .CYINIT(1'b0),
        .DI({\NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED [3:1],1'b1}),
        .O(\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED [3:1],1'b1}));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY" *) 
module microblaze_v10_0_3_MB_MUXCY_93
   (mem_wait_on_ready_N,
    mem_databus_ready,
    mem_valid_instr,
    mem_Write_DCache,
    mem_load_store_access,
    lopt,
    lopt_1,
    lopt_2);
  output mem_wait_on_ready_N;
  input mem_databus_ready;
  input mem_valid_instr;
  input mem_Write_DCache;
  input mem_load_store_access;
  input lopt;
  output lopt_1;
  output lopt_2;

  wire \<const1> ;
  wire S;
  wire mem_Write_DCache;
  wire mem_load_store_access;
  wire mem_valid_instr;

  assign lopt_1 = \<const1> ;
  assign lopt_2 = S;
  LUT3 #(
    .INIT(8'hA8)) 
    \Using_FPGA.Native_i_1__130 
       (.I0(mem_valid_instr),
        .I1(mem_Write_DCache),
        .I2(mem_load_store_access),
        .O(S));
  VCC VCC
       (.P(\<const1> ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY" *) 
module microblaze_v10_0_3_MB_MUXCY_94
   (WB_Read_Imm_Reg_1_reg,
    wb_gpr_write_dbg0,
    wb_gpr_write_i0,
    mem_valid_reg,
    wb_valid_reg,
    mem_wait_on_ready_N,
    mem_gpr_write_dbg,
    sync_reset,
    wb_exception,
    mem_gpr_write,
    mem_valid_instr,
    mem_exception_from_ex,
    ex_valid_reg,
    flush_pipe,
    ex_branch_with_delayslot_reg,
    wb_valid_reg_0,
    wb_piperun,
    lopt,
    lopt_1,
    lopt_2);
  output WB_Read_Imm_Reg_1_reg;
  output wb_gpr_write_dbg0;
  output wb_gpr_write_i0;
  output mem_valid_reg;
  output wb_valid_reg;
  input mem_wait_on_ready_N;
  input mem_gpr_write_dbg;
  input sync_reset;
  input wb_exception;
  input mem_gpr_write;
  input mem_valid_instr;
  input mem_exception_from_ex;
  input ex_valid_reg;
  input flush_pipe;
  input ex_branch_with_delayslot_reg;
  input wb_valid_reg_0;
  input wb_piperun;
  input lopt;
  output lopt_1;
  output lopt_2;

  wire \<const0> ;
  wire \<const1> ;
  wire WB_Read_Imm_Reg_1_reg;
  wire ex_branch_with_delayslot_reg;
  wire ex_valid_reg;
  wire flush_pipe;
  wire mem_exception_from_ex;
  wire mem_gpr_write;
  wire mem_gpr_write_dbg;
  wire mem_valid_instr;
  wire mem_valid_reg;
  wire sync_reset;
  wire wb_exception;
  wire wb_gpr_write_dbg0;
  wire wb_gpr_write_i0;
  wire wb_piperun;
  wire wb_valid_reg;
  wire wb_valid_reg_0;

  assign WB_Read_Imm_Reg_1_reg = lopt;
  assign lopt_1 = \<const0> ;
  assign lopt_2 = \<const1> ;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
  LUT6 #(
    .INIT(64'h00700070000000AA)) 
    mem_valid_i_1
       (.I0(mem_valid_instr),
        .I1(mem_exception_from_ex),
        .I2(ex_valid_reg),
        .I3(flush_pipe),
        .I4(WB_Read_Imm_Reg_1_reg),
        .I5(ex_branch_with_delayslot_reg),
        .O(mem_valid_reg));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT4 #(
    .INIT(16'h0008)) 
    wb_gpr_write_dbg_i_1
       (.I0(mem_gpr_write_dbg),
        .I1(WB_Read_Imm_Reg_1_reg),
        .I2(sync_reset),
        .I3(wb_exception),
        .O(wb_gpr_write_dbg0));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT4 #(
    .INIT(16'h0008)) 
    wb_gpr_write_i_i_1
       (.I0(mem_gpr_write),
        .I1(WB_Read_Imm_Reg_1_reg),
        .I2(sync_reset),
        .I3(wb_exception),
        .O(wb_gpr_write_i0));
  LUT5 #(
    .INIT(32'h0000CC0A)) 
    wb_valid_i_1
       (.I0(wb_valid_reg_0),
        .I1(mem_valid_instr),
        .I2(wb_piperun),
        .I3(WB_Read_Imm_Reg_1_reg),
        .I4(sync_reset),
        .O(wb_valid_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY" *) 
module microblaze_v10_0_3_MB_MUXCY_95
   (jump_carry1,
    ex_op1_zero,
    force_Val1_reg,
    \EX_Branch_CMP_Op1_reg[0] ,
    use_Reg_Neg_DI_reg,
    force1_reg,
    use_Reg_Neg_S_reg,
    lopt,
    lopt_1,
    lopt_2);
  output jump_carry1;
  input ex_op1_zero;
  input force_Val1_reg;
  input [0:0]\EX_Branch_CMP_Op1_reg[0] ;
  input use_Reg_Neg_DI_reg;
  input force1_reg;
  input use_Reg_Neg_S_reg;
  input lopt;
  output lopt_1;
  output lopt_2;

  wire DI;
  wire [0:0]\EX_Branch_CMP_Op1_reg[0] ;
  wire S;
  wire force1_reg;
  wire force_Val1_reg;
  wire jump_carry1;
  wire use_Reg_Neg_DI_reg;
  wire use_Reg_Neg_S_reg;

  assign jump_carry1 = lopt;
  assign lopt_1 = DI;
  assign lopt_2 = S;
  LUT3 #(
    .INIT(8'h9A)) 
    \Using_FPGA.Native_i_1__178 
       (.I0(force1_reg),
        .I1(\EX_Branch_CMP_Op1_reg[0] ),
        .I2(use_Reg_Neg_S_reg),
        .O(S));
  LUT3 #(
    .INIT(8'h9A)) 
    \Using_FPGA.Native_i_2__144 
       (.I0(force_Val1_reg),
        .I1(\EX_Branch_CMP_Op1_reg[0] ),
        .I2(use_Reg_Neg_DI_reg),
        .O(DI));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY" *) 
module microblaze_v10_0_3_MB_MUXCY_96
   (jump_carry2,
    jump_carry1,
    out,
    force_Val2_N,
    force2,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8);
  output jump_carry2;
  input jump_carry1;
  input out;
  input force_Val2_N;
  input force2;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;

  wire force2;
  wire force_DI2;
  wire force_Val2_N;
  wire force_jump2;
  wire jump_carry1;
  wire \^lopt_1 ;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire lopt_9;
  wire out;
  wire [2:0]\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED ;
  wire [3:0]\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign lopt = \^lopt_1 ;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = lopt_8;
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_CARRY4 
       (.CI(jump_carry1),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [2],\^lopt_1 ,\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,force_DI2}),
        .O(\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED [3:0]),
        .S({lopt_9,\^lopt_6 ,\^lopt_3 ,force_jump2}));
  LUT2 #(
    .INIT(4'h8)) 
    \Using_FPGA.Native_i_1__136 
       (.I0(out),
        .I1(force2),
        .O(force_jump2));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_2__112 
       (.I0(out),
        .I1(force_Val2_N),
        .O(force_DI2));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY" *) 
module microblaze_v10_0_3_MB_MUXCY_97
   (ex_jump_wanted,
    \Using_FPGA.Native_0 ,
    \Performace_Debug_Control.dbg_stop_if_delay_i_reg ,
    jump_carry2,
    ex_mbar_sleep_reg,
    ex_branch_with_delayslot,
    of_valid,
    lopt,
    lopt_1);
  output ex_jump_wanted;
  output \Using_FPGA.Native_0 ;
  input \Performace_Debug_Control.dbg_stop_if_delay_i_reg ;
  input jump_carry2;
  input ex_mbar_sleep_reg;
  input ex_branch_with_delayslot;
  input of_valid;
  input lopt;
  output lopt_1;

  wire \<const0> ;
  wire \Using_FPGA.Native_0 ;
  wire ex_branch_with_delayslot;
  wire \^ex_jump_wanted ;
  wire ex_mbar_sleep_reg;
  wire of_valid;

  assign \^ex_jump_wanted  = lopt;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
  LUT4 #(
    .INIT(16'hDD5D)) 
    \Using_FPGA.Native_i_1__121 
       (.I0(\^ex_jump_wanted ),
        .I1(ex_mbar_sleep_reg),
        .I2(ex_branch_with_delayslot),
        .I3(of_valid),
        .O(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY" *) 
module microblaze_v10_0_3_MB_MUXCY_98
   (jump_carry4,
    ex_jump_wanted,
    ex_jump_q,
    of_valid,
    ex_branch_with_delayslot,
    lopt,
    lopt_1,
    lopt_2);
  output jump_carry4;
  input ex_jump_wanted;
  input ex_jump_q;
  input of_valid;
  input ex_branch_with_delayslot;
  input lopt;
  output lopt_1;
  output lopt_2;

  wire \<const0> ;
  wire \Using_FPGA.Native_i_1__132_n_0 ;
  wire ex_branch_with_delayslot;
  wire ex_jump_q;
  wire of_valid;

  assign lopt_1 = \<const0> ;
  assign lopt_2 = \Using_FPGA.Native_i_1__132_n_0 ;
  GND GND
       (.G(\<const0> ));
  LUT3 #(
    .INIT(8'h45)) 
    \Using_FPGA.Native_i_1__132 
       (.I0(ex_jump_q),
        .I1(of_valid),
        .I2(ex_branch_with_delayslot),
        .O(\Using_FPGA.Native_i_1__132_n_0 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY" *) 
module microblaze_v10_0_3_MB_MUXCY_99
   (jump_carry5,
    jump_carry4,
    lopt,
    lopt_1,
    lopt_2);
  output jump_carry5;
  input jump_carry4;
  input lopt;
  output lopt_1;
  output lopt_2;

  wire \<const0> ;
  wire \<const1> ;
  wire jump_carry5;

  assign jump_carry5 = lopt;
  assign lopt_1 = \<const0> ;
  assign lopt_2 = \<const1> ;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
endmodule

module microblaze_v10_0_3_MB_MUXCY_XORCY
   (O56_out,
    Q,
    LO);
  output O56_out;
  input [0:0]Q;
  input LO;

  wire LO;
  wire O56_out;
  wire [0:0]Q;
  wire [3:0]\NLW_Using_FPGA.Native_I2_CARRY4_CO_UNCONNECTED ;
  wire [3:0]\NLW_Using_FPGA.Native_I2_CARRY4_DI_UNCONNECTED ;
  wire [3:1]\NLW_Using_FPGA.Native_I2_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_Using_FPGA.Native_I2_CARRY4_S_UNCONNECTED ;

  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I2_CARRY4 
       (.CI(LO),
        .CO(\NLW_Using_FPGA.Native_I2_CARRY4_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI(\NLW_Using_FPGA.Native_I2_CARRY4_DI_UNCONNECTED [3:0]),
        .O({\NLW_Using_FPGA.Native_I2_CARRY4_O_UNCONNECTED [3:1],O56_out}),
        .S({\NLW_Using_FPGA.Native_I2_CARRY4_S_UNCONNECTED [3:1],Q}));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_273
   (LO,
    \if_pc_reg[10] ,
    Q,
    \if_pc_reg[11] ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[10] ;
  input [0:0]Q;
  input \if_pc_reg[11] ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire \if_pc_reg[10] ;

  assign \if_pc_reg[10]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_274
   (LO,
    \if_pc_reg[11] ,
    Q,
    \if_pc_reg[12] ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[11] ;
  input [0:0]Q;
  input \if_pc_reg[12] ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire \if_pc_reg[11] ;

  assign \if_pc_reg[11]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_275
   (LO,
    \if_pc_reg[12] ,
    Q,
    \if_pc_reg[13] ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output LO;
  output \if_pc_reg[12] ;
  input [0:0]Q;
  input \if_pc_reg[13] ;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire [0:0]Q;
  wire \if_pc_reg[12] ;
  wire \if_pc_reg[13] ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(\if_pc_reg[13] ),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,1'b0}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\if_pc_reg[12] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,Q}));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_276
   (LO,
    \if_pc_reg[13] ,
    Q,
    \if_pc_reg[14] ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[13] ;
  input [0:0]Q;
  input \if_pc_reg[14] ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire LO;
  wire \if_pc_reg[13] ;

  assign LO = lopt;
  assign \if_pc_reg[13]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_277
   (LO,
    \if_pc_reg[14] ,
    Q,
    \if_pc_reg[15] ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[14] ;
  input [0:0]Q;
  input \if_pc_reg[15] ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire \if_pc_reg[14] ;

  assign \if_pc_reg[14]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_278
   (LO,
    \if_pc_reg[15] ,
    Q,
    \if_pc_reg[16] ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[15] ;
  input [0:0]Q;
  input \if_pc_reg[16] ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire \if_pc_reg[15] ;

  assign \if_pc_reg[15]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_279
   (LO,
    \if_pc_reg[16] ,
    Q,
    \if_pc_reg[17] ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output LO;
  output \if_pc_reg[16] ;
  input [0:0]Q;
  input \if_pc_reg[17] ;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire [0:0]Q;
  wire \if_pc_reg[16] ;
  wire \if_pc_reg[17] ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(\if_pc_reg[17] ),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,1'b0}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\if_pc_reg[16] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,Q}));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_280
   (LO,
    \if_pc_reg[17] ,
    Q,
    \if_pc_reg[18] ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[17] ;
  input [0:0]Q;
  input \if_pc_reg[18] ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire LO;
  wire \if_pc_reg[17] ;

  assign LO = lopt;
  assign \if_pc_reg[17]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_281
   (LO,
    \if_pc_reg[18] ,
    Q,
    \if_pc_reg[19] ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[18] ;
  input [0:0]Q;
  input \if_pc_reg[19] ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire \if_pc_reg[18] ;

  assign \if_pc_reg[18]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_282
   (LO,
    \if_pc_reg[19] ,
    Q,
    \if_pc_reg[20] ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[19] ;
  input [0:0]Q;
  input \if_pc_reg[20] ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire \if_pc_reg[19] ;

  assign \if_pc_reg[19]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_283
   (LO,
    \if_pc_reg[1] ,
    Q,
    \if_pc_reg[2] ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[1] ;
  input [0:0]Q;
  input \if_pc_reg[2] ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire LO;
  wire \if_pc_reg[1] ;

  assign LO = lopt;
  assign \if_pc_reg[1]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_284
   (LO,
    \if_pc_reg[20] ,
    Q,
    \if_pc_reg[21] ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output LO;
  output \if_pc_reg[20] ;
  input [0:0]Q;
  input \if_pc_reg[21] ;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire [0:0]Q;
  wire \if_pc_reg[20] ;
  wire \if_pc_reg[21] ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(\if_pc_reg[21] ),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,1'b0}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\if_pc_reg[20] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,Q}));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_285
   (LO,
    \if_pc_reg[21] ,
    Q,
    \if_pc_reg[22] ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[21] ;
  input [0:0]Q;
  input \if_pc_reg[22] ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire LO;
  wire \if_pc_reg[21] ;

  assign LO = lopt;
  assign \if_pc_reg[21]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_286
   (LO,
    \if_pc_reg[22] ,
    Q,
    \if_pc_reg[23] ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[22] ;
  input [0:0]Q;
  input \if_pc_reg[23] ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire \if_pc_reg[22] ;

  assign \if_pc_reg[22]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_287
   (LO,
    \if_pc_reg[23] ,
    Q,
    \if_pc_reg[24] ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[23] ;
  input [0:0]Q;
  input \if_pc_reg[24] ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire \if_pc_reg[23] ;

  assign \if_pc_reg[23]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_288
   (LO,
    \if_pc_reg[24] ,
    Q,
    \if_pc_reg[25] ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output LO;
  output \if_pc_reg[24] ;
  input [0:0]Q;
  input \if_pc_reg[25] ;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire [0:0]Q;
  wire \if_pc_reg[24] ;
  wire \if_pc_reg[25] ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(\if_pc_reg[25] ),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,1'b0}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\if_pc_reg[24] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,Q}));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_289
   (LO,
    \if_pc_reg[25] ,
    Q,
    \if_pc_reg[26] ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[25] ;
  input [0:0]Q;
  input \if_pc_reg[26] ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire LO;
  wire \if_pc_reg[25] ;

  assign LO = lopt;
  assign \if_pc_reg[25]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_290
   (LO,
    \if_pc_reg[26] ,
    Q,
    \if_pc_reg[27] ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[26] ;
  input [0:0]Q;
  input \if_pc_reg[27] ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire \if_pc_reg[26] ;

  assign \if_pc_reg[26]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_291
   (LO,
    \if_pc_reg[27] ,
    Q,
    \if_pc_reg[28] ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[27] ;
  input [0:0]Q;
  input \if_pc_reg[28] ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire \if_pc_reg[27] ;

  assign \if_pc_reg[27]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_292
   (LO,
    \if_pc_reg[28] ,
    Q,
    \if_pc_reg[29] ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output LO;
  output \if_pc_reg[28] ;
  input [0:0]Q;
  input \if_pc_reg[29] ;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire [0:0]Q;
  wire \if_pc_reg[28] ;
  wire \if_pc_reg[29] ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(\if_pc_reg[29] ),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,1'b0}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\if_pc_reg[28] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,Q}));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_293
   (LO,
    O,
    Q,
    CI,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output O;
  input [0:0]Q;
  input CI;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire LO;
  wire O;

  assign LO = lopt;
  assign O = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_294
   (LO,
    \if_pc_reg[2] ,
    Q,
    \if_pc_reg[3] ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[2] ;
  input [0:0]Q;
  input \if_pc_reg[3] ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire \if_pc_reg[2] ;

  assign \if_pc_reg[2]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_295
   (LO,
    \if_pc_reg[3] ,
    Q,
    \if_pc_reg[4] ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[3] ;
  input [0:0]Q;
  input \if_pc_reg[4] ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire \if_pc_reg[3] ;

  assign \if_pc_reg[3]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_296
   (LO,
    \if_pc_reg[4] ,
    Q,
    \if_pc_reg[5] ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output LO;
  output \if_pc_reg[4] ;
  input [0:0]Q;
  input \if_pc_reg[5] ;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire [0:0]Q;
  wire \if_pc_reg[4] ;
  wire \if_pc_reg[5] ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(\if_pc_reg[5] ),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,1'b0}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\if_pc_reg[4] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,Q}));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_297
   (LO,
    \if_pc_reg[5] ,
    Q,
    \if_pc_reg[6] ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[5] ;
  input [0:0]Q;
  input \if_pc_reg[6] ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire LO;
  wire \if_pc_reg[5] ;

  assign LO = lopt;
  assign \if_pc_reg[5]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_298
   (LO,
    \if_pc_reg[6] ,
    Q,
    \if_pc_reg[7] ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[6] ;
  input [0:0]Q;
  input \if_pc_reg[7] ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire \if_pc_reg[6] ;

  assign \if_pc_reg[6]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_299
   (LO,
    \if_pc_reg[7] ,
    Q,
    \if_pc_reg[8] ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[7] ;
  input [0:0]Q;
  input \if_pc_reg[8] ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire \if_pc_reg[7] ;

  assign \if_pc_reg[7]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_300
   (LO,
    \if_pc_reg[8] ,
    Q,
    \if_pc_reg[9] ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output LO;
  output \if_pc_reg[8] ;
  input [0:0]Q;
  input \if_pc_reg[9] ;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire [0:0]Q;
  wire \if_pc_reg[8] ;
  wire \if_pc_reg[9] ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(\if_pc_reg[9] ),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,1'b0}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\if_pc_reg[8] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,Q}));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_301
   (LO,
    \if_pc_reg[9] ,
    Q,
    CI,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[9] ;
  input [0:0]Q;
  input CI;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire LO;
  wire \if_pc_reg[9] ;

  assign LO = lopt;
  assign \if_pc_reg[9]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_311
   (\LOCKSTEP_Out_reg[3007] ,
    addr_AddSub_31,
    LO);
  output [0:0]\LOCKSTEP_Out_reg[3007] ;
  input addr_AddSub_31;
  input LO;

  wire LO;
  wire [0:0]\LOCKSTEP_Out_reg[3007] ;
  wire addr_AddSub_31;
  wire [3:0]\NLW_Using_FPGA.Native_I2_CARRY4_CO_UNCONNECTED ;
  wire [3:0]\NLW_Using_FPGA.Native_I2_CARRY4_DI_UNCONNECTED ;
  wire [3:1]\NLW_Using_FPGA.Native_I2_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_Using_FPGA.Native_I2_CARRY4_S_UNCONNECTED ;

  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I2_CARRY4 
       (.CI(LO),
        .CO(\NLW_Using_FPGA.Native_I2_CARRY4_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI(\NLW_Using_FPGA.Native_I2_CARRY4_DI_UNCONNECTED [3:0]),
        .O({\NLW_Using_FPGA.Native_I2_CARRY4_O_UNCONNECTED [3:1],\LOCKSTEP_Out_reg[3007] }),
        .S({\NLW_Using_FPGA.Native_I2_CARRY4_S_UNCONNECTED [3:1],addr_AddSub_31}));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_313
   (LO,
    \LOCKSTEP_Out_reg[3017] ,
    S,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    lopt,
    lopt_1);
  output LO;
  output [0:0]\LOCKSTEP_Out_reg[3017] ;
  input S;
  input \Using_FPGA.Native ;
  input \Using_FPGA.Native_0 ;
  input lopt;
  input lopt_1;

  wire [0:0]\LOCKSTEP_Out_reg[3017] ;

  assign \LOCKSTEP_Out_reg[3017]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_316
   (LO,
    \LOCKSTEP_Out_reg[3018] ,
    S,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    lopt,
    lopt_1);
  output LO;
  output [0:0]\LOCKSTEP_Out_reg[3018] ;
  input S;
  input \Using_FPGA.Native ;
  input \Using_FPGA.Native_0 ;
  input lopt;
  input lopt_1;

  wire [0:0]\LOCKSTEP_Out_reg[3018] ;

  assign \LOCKSTEP_Out_reg[3018]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_319
   (LO,
    \LOCKSTEP_Out_reg[3019] ,
    S,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output LO;
  output [0:0]\LOCKSTEP_Out_reg[3019] ;
  input S;
  input \Using_FPGA.Native ;
  input \Using_FPGA.Native_0 ;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire [0:0]\LOCKSTEP_Out_reg[3019] ;
  wire S;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(\Using_FPGA.Native_0 ),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,\Using_FPGA.Native }),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\LOCKSTEP_Out_reg[3019] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_322
   (LO,
    \LOCKSTEP_Out_reg[3020] ,
    S,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    lopt,
    lopt_1);
  output LO;
  output [0:0]\LOCKSTEP_Out_reg[3020] ;
  input S;
  input \Using_FPGA.Native ;
  input \Using_FPGA.Native_0 ;
  input lopt;
  input lopt_1;

  wire LO;
  wire [0:0]\LOCKSTEP_Out_reg[3020] ;

  assign LO = lopt;
  assign \LOCKSTEP_Out_reg[3020]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_325
   (LO,
    \LOCKSTEP_Out_reg[3021] ,
    S,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    lopt,
    lopt_1);
  output LO;
  output [0:0]\LOCKSTEP_Out_reg[3021] ;
  input S;
  input \Using_FPGA.Native ;
  input \Using_FPGA.Native_0 ;
  input lopt;
  input lopt_1;

  wire [0:0]\LOCKSTEP_Out_reg[3021] ;

  assign \LOCKSTEP_Out_reg[3021]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_328
   (LO,
    \LOCKSTEP_Out_reg[3022] ,
    S,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    lopt,
    lopt_1);
  output LO;
  output [0:0]\LOCKSTEP_Out_reg[3022] ;
  input S;
  input \Using_FPGA.Native ;
  input \Using_FPGA.Native_0 ;
  input lopt;
  input lopt_1;

  wire [0:0]\LOCKSTEP_Out_reg[3022] ;

  assign \LOCKSTEP_Out_reg[3022]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_331
   (\EX_Op3_reg[16] ,
    \LOCKSTEP_Out_reg[3023] ,
    D,
    \data_rd_reg_reg[16] ,
    LO,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    GPR_Op3,
    \Using_FPGA.Native_1 ,
    \wb_gpr_write_addr_reg[3] ,
    \Using_FPGA.Native_2 ,
    GPR_Op1,
    \ex_gpr_write_addr_reg[0] ,
    \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ,
    wb_gpr_write_dbg,
    DI,
    read_register_MSR_1,
    \wb_exception_kind_i_reg[31] ,
    Q,
    \wb_read_lsb_1_sel_reg[0] ,
    wb_byte_access,
    S,
    \Using_FPGA.Native_3 ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output [0:0]\EX_Op3_reg[16] ;
  output \LOCKSTEP_Out_reg[3023] ;
  output [0:0]D;
  output [0:0]\data_rd_reg_reg[16] ;
  output LO;
  input \Using_FPGA.Native ;
  input \Using_FPGA.Native_0 ;
  input [0:0]GPR_Op3;
  input \Using_FPGA.Native_1 ;
  input \wb_gpr_write_addr_reg[3] ;
  input \Using_FPGA.Native_2 ;
  input [0:0]GPR_Op1;
  input \ex_gpr_write_addr_reg[0] ;
  input \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  input wb_gpr_write_dbg;
  input DI;
  input read_register_MSR_1;
  input \wb_exception_kind_i_reg[31] ;
  input [0:0]Q;
  input \wb_read_lsb_1_sel_reg[0] ;
  input wb_byte_access;
  input S;
  input \Using_FPGA.Native_3 ;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire [0:0]D;
  wire DI;
  wire [0:0]\EX_Op3_reg[16] ;
  wire [0:0]GPR_Op1;
  wire [0:0]GPR_Op3;
  wire \LOCKSTEP_Out_reg[3023] ;
  wire \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  wire [0:0]Q;
  wire S;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire [0:0]\data_rd_reg_reg[16] ;
  wire \ex_gpr_write_addr_reg[0] ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire read_register_MSR_1;
  wire wb_byte_access;
  wire [16:16]wb_excep_return_addr;
  wire \wb_exception_kind_i_reg[31] ;
  wire \wb_gpr_write_addr_reg[3] ;
  wire wb_gpr_write_dbg;
  wire \wb_read_lsb_1_sel_reg[0] ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  LUT5 #(
    .INIT(32'hF4F4FFF4)) 
    \EX_Op3[16]_i_1 
       (.I0(\Using_FPGA.Native ),
        .I1(\LOCKSTEP_Out_reg[3023] ),
        .I2(\Using_FPGA.Native_0 ),
        .I3(GPR_Op3),
        .I4(\Using_FPGA.Native_1 ),
        .O(\EX_Op3_reg[16] ));
  LUT5 #(
    .INIT(32'hB8B8B8BB)) 
    \Trace_New_Reg_Value[16]_INST_0 
       (.I0(wb_excep_return_addr),
        .I1(\wb_exception_kind_i_reg[31] ),
        .I2(Q),
        .I3(\wb_read_lsb_1_sel_reg[0] ),
        .I4(wb_byte_access),
        .O(\LOCKSTEP_Out_reg[3023] ));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(\Using_FPGA.Native_3 ),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,DI}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,wb_excep_return_addr}),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
  LUT5 #(
    .INIT(32'hF4F4FFF4)) 
    \Using_FPGA.Native_i_1__14 
       (.I0(\wb_gpr_write_addr_reg[3] ),
        .I1(\LOCKSTEP_Out_reg[3023] ),
        .I2(\Using_FPGA.Native_2 ),
        .I3(GPR_Op1),
        .I4(\ex_gpr_write_addr_reg[0] ),
        .O(D));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[16]_i_1 
       (.I0(\LOCKSTEP_Out_reg[3023] ),
        .I1(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .I2(wb_gpr_write_dbg),
        .I3(DI),
        .I4(read_register_MSR_1),
        .O(\data_rd_reg_reg[16] ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_334
   (\data_rd_reg_reg[17] ,
    \LOCKSTEP_Out_reg[3024] ,
    LO,
    \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ,
    wb_gpr_write_dbg,
    DI,
    read_register_MSR_1,
    \wb_exception_kind_i_reg[31] ,
    Q,
    \wb_read_lsb_1_sel_reg[0] ,
    wb_byte_access,
    S,
    \Using_FPGA.Native ,
    lopt,
    lopt_1);
  output [0:0]\data_rd_reg_reg[17] ;
  output [0:0]\LOCKSTEP_Out_reg[3024] ;
  output LO;
  input \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  input wb_gpr_write_dbg;
  input DI;
  input read_register_MSR_1;
  input \wb_exception_kind_i_reg[31] ;
  input [0:0]Q;
  input \wb_read_lsb_1_sel_reg[0] ;
  input wb_byte_access;
  input S;
  input \Using_FPGA.Native ;
  input lopt;
  input lopt_1;

  wire DI;
  wire LO;
  wire [0:0]\LOCKSTEP_Out_reg[3024] ;
  wire \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]\data_rd_reg_reg[17] ;
  wire read_register_MSR_1;
  wire wb_byte_access;
  wire [17:17]wb_excep_return_addr;
  wire \wb_exception_kind_i_reg[31] ;
  wire wb_gpr_write_dbg;
  wire \wb_read_lsb_1_sel_reg[0] ;

  assign LO = lopt;
  assign wb_excep_return_addr = lopt_1;
  LUT5 #(
    .INIT(32'hB8B8B8BB)) 
    \Trace_New_Reg_Value[17]_INST_0 
       (.I0(wb_excep_return_addr),
        .I1(\wb_exception_kind_i_reg[31] ),
        .I2(Q),
        .I3(\wb_read_lsb_1_sel_reg[0] ),
        .I4(wb_byte_access),
        .O(\LOCKSTEP_Out_reg[3024] ));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[17]_i_1 
       (.I0(\LOCKSTEP_Out_reg[3024] ),
        .I1(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .I2(wb_gpr_write_dbg),
        .I3(DI),
        .I4(read_register_MSR_1),
        .O(\data_rd_reg_reg[17] ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_337
   (\data_rd_reg_reg[18] ,
    \LOCKSTEP_Out_reg[3025] ,
    LO,
    \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ,
    wb_gpr_write_dbg,
    DI,
    read_register_MSR_1,
    \wb_exception_kind_i_reg[31] ,
    Q,
    \wb_read_lsb_1_sel_reg[0] ,
    wb_byte_access,
    S,
    \Using_FPGA.Native ,
    lopt,
    lopt_1);
  output [0:0]\data_rd_reg_reg[18] ;
  output [0:0]\LOCKSTEP_Out_reg[3025] ;
  output LO;
  input \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  input wb_gpr_write_dbg;
  input DI;
  input read_register_MSR_1;
  input \wb_exception_kind_i_reg[31] ;
  input [0:0]Q;
  input \wb_read_lsb_1_sel_reg[0] ;
  input wb_byte_access;
  input S;
  input \Using_FPGA.Native ;
  input lopt;
  input lopt_1;

  wire DI;
  wire [0:0]\LOCKSTEP_Out_reg[3025] ;
  wire \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]\data_rd_reg_reg[18] ;
  wire read_register_MSR_1;
  wire wb_byte_access;
  wire [18:18]wb_excep_return_addr;
  wire \wb_exception_kind_i_reg[31] ;
  wire wb_gpr_write_dbg;
  wire \wb_read_lsb_1_sel_reg[0] ;

  assign wb_excep_return_addr = lopt_1;
  LUT5 #(
    .INIT(32'hB8B8B8BB)) 
    \Trace_New_Reg_Value[18]_INST_0 
       (.I0(wb_excep_return_addr),
        .I1(\wb_exception_kind_i_reg[31] ),
        .I2(Q),
        .I3(\wb_read_lsb_1_sel_reg[0] ),
        .I4(wb_byte_access),
        .O(\LOCKSTEP_Out_reg[3025] ));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[18]_i_1 
       (.I0(\LOCKSTEP_Out_reg[3025] ),
        .I1(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .I2(wb_gpr_write_dbg),
        .I3(DI),
        .I4(read_register_MSR_1),
        .O(\data_rd_reg_reg[18] ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_340
   (\data_rd_reg_reg[19] ,
    \LOCKSTEP_Out_reg[3026] ,
    LO,
    \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ,
    wb_gpr_write_dbg,
    DI,
    read_register_MSR_1,
    \wb_exception_kind_i_reg[31] ,
    Q,
    \wb_read_lsb_1_sel_reg[0] ,
    wb_byte_access,
    S,
    \Using_FPGA.Native ,
    lopt,
    lopt_1);
  output [0:0]\data_rd_reg_reg[19] ;
  output [0:0]\LOCKSTEP_Out_reg[3026] ;
  output LO;
  input \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  input wb_gpr_write_dbg;
  input DI;
  input read_register_MSR_1;
  input \wb_exception_kind_i_reg[31] ;
  input [0:0]Q;
  input \wb_read_lsb_1_sel_reg[0] ;
  input wb_byte_access;
  input S;
  input \Using_FPGA.Native ;
  input lopt;
  input lopt_1;

  wire DI;
  wire [0:0]\LOCKSTEP_Out_reg[3026] ;
  wire \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]\data_rd_reg_reg[19] ;
  wire read_register_MSR_1;
  wire wb_byte_access;
  wire [19:19]wb_excep_return_addr;
  wire \wb_exception_kind_i_reg[31] ;
  wire wb_gpr_write_dbg;
  wire \wb_read_lsb_1_sel_reg[0] ;

  assign wb_excep_return_addr = lopt_1;
  LUT5 #(
    .INIT(32'hB8B8B8BB)) 
    \Trace_New_Reg_Value[19]_INST_0 
       (.I0(wb_excep_return_addr),
        .I1(\wb_exception_kind_i_reg[31] ),
        .I2(Q),
        .I3(\wb_read_lsb_1_sel_reg[0] ),
        .I4(wb_byte_access),
        .O(\LOCKSTEP_Out_reg[3026] ));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[19]_i_1 
       (.I0(\LOCKSTEP_Out_reg[3026] ),
        .I1(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .I2(wb_gpr_write_dbg),
        .I3(DI),
        .I4(read_register_MSR_1),
        .O(\data_rd_reg_reg[19] ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_343
   (LO,
    \LOCKSTEP_Out_reg[3008] ,
    S,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    lopt,
    lopt_1);
  output LO;
  output [0:0]\LOCKSTEP_Out_reg[3008] ;
  input S;
  input \Using_FPGA.Native ;
  input \Using_FPGA.Native_0 ;
  input lopt;
  input lopt_1;

  wire LO;
  wire [0:0]\LOCKSTEP_Out_reg[3008] ;

  assign LO = lopt;
  assign \LOCKSTEP_Out_reg[3008]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_346
   (\data_rd_reg_reg[20] ,
    \LOCKSTEP_Out_reg[3027] ,
    LO,
    \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ,
    wb_gpr_write_dbg,
    DI,
    read_register_MSR_1,
    \wb_exception_kind_i_reg[31] ,
    Q,
    \wb_read_lsb_1_sel_reg[0] ,
    wb_byte_access,
    S,
    \Using_FPGA.Native ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output [0:0]\data_rd_reg_reg[20] ;
  output [0:0]\LOCKSTEP_Out_reg[3027] ;
  output LO;
  input \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  input wb_gpr_write_dbg;
  input DI;
  input read_register_MSR_1;
  input \wb_exception_kind_i_reg[31] ;
  input [0:0]Q;
  input \wb_read_lsb_1_sel_reg[0] ;
  input wb_byte_access;
  input S;
  input \Using_FPGA.Native ;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire DI;
  wire [0:0]\LOCKSTEP_Out_reg[3027] ;
  wire \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  wire [0:0]Q;
  wire S;
  wire \Using_FPGA.Native ;
  wire [0:0]\data_rd_reg_reg[20] ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire read_register_MSR_1;
  wire wb_byte_access;
  wire [20:20]wb_excep_return_addr;
  wire \wb_exception_kind_i_reg[31] ;
  wire wb_gpr_write_dbg;
  wire \wb_read_lsb_1_sel_reg[0] ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  LUT5 #(
    .INIT(32'hB8B8B8BB)) 
    \Trace_New_Reg_Value[20]_INST_0 
       (.I0(wb_excep_return_addr),
        .I1(\wb_exception_kind_i_reg[31] ),
        .I2(Q),
        .I3(\wb_read_lsb_1_sel_reg[0] ),
        .I4(wb_byte_access),
        .O(\LOCKSTEP_Out_reg[3027] ));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(\Using_FPGA.Native ),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,DI}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,wb_excep_return_addr}),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[20]_i_1 
       (.I0(\LOCKSTEP_Out_reg[3027] ),
        .I1(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .I2(wb_gpr_write_dbg),
        .I3(DI),
        .I4(read_register_MSR_1),
        .O(\data_rd_reg_reg[20] ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_349
   (\data_rd_reg_reg[21] ,
    \LOCKSTEP_Out_reg[3028] ,
    LO,
    \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ,
    wb_gpr_write_dbg,
    DI,
    read_register_MSR_1,
    \wb_exception_kind_i_reg[31] ,
    Q,
    \wb_read_lsb_1_sel_reg[0] ,
    wb_byte_access,
    S,
    \Using_FPGA.Native ,
    lopt,
    lopt_1);
  output [0:0]\data_rd_reg_reg[21] ;
  output [0:0]\LOCKSTEP_Out_reg[3028] ;
  output LO;
  input \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  input wb_gpr_write_dbg;
  input DI;
  input read_register_MSR_1;
  input \wb_exception_kind_i_reg[31] ;
  input [0:0]Q;
  input \wb_read_lsb_1_sel_reg[0] ;
  input wb_byte_access;
  input S;
  input \Using_FPGA.Native ;
  input lopt;
  input lopt_1;

  wire DI;
  wire LO;
  wire [0:0]\LOCKSTEP_Out_reg[3028] ;
  wire \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]\data_rd_reg_reg[21] ;
  wire read_register_MSR_1;
  wire wb_byte_access;
  wire [21:21]wb_excep_return_addr;
  wire \wb_exception_kind_i_reg[31] ;
  wire wb_gpr_write_dbg;
  wire \wb_read_lsb_1_sel_reg[0] ;

  assign LO = lopt;
  assign wb_excep_return_addr = lopt_1;
  LUT5 #(
    .INIT(32'hB8B8B8BB)) 
    \Trace_New_Reg_Value[21]_INST_0 
       (.I0(wb_excep_return_addr),
        .I1(\wb_exception_kind_i_reg[31] ),
        .I2(Q),
        .I3(\wb_read_lsb_1_sel_reg[0] ),
        .I4(wb_byte_access),
        .O(\LOCKSTEP_Out_reg[3028] ));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[21]_i_1 
       (.I0(\LOCKSTEP_Out_reg[3028] ),
        .I1(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .I2(wb_gpr_write_dbg),
        .I3(DI),
        .I4(read_register_MSR_1),
        .O(\data_rd_reg_reg[21] ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_352
   (\data_rd_reg_reg[22] ,
    \LOCKSTEP_Out_reg[3029] ,
    LO,
    \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ,
    wb_gpr_write_dbg,
    DI,
    read_register_MSR_1,
    \wb_exception_kind_i_reg[31] ,
    Q,
    \wb_read_lsb_1_sel_reg[0] ,
    wb_byte_access,
    S,
    \Using_FPGA.Native ,
    lopt,
    lopt_1);
  output [0:0]\data_rd_reg_reg[22] ;
  output [0:0]\LOCKSTEP_Out_reg[3029] ;
  output LO;
  input \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  input wb_gpr_write_dbg;
  input DI;
  input read_register_MSR_1;
  input \wb_exception_kind_i_reg[31] ;
  input [0:0]Q;
  input \wb_read_lsb_1_sel_reg[0] ;
  input wb_byte_access;
  input S;
  input \Using_FPGA.Native ;
  input lopt;
  input lopt_1;

  wire DI;
  wire [0:0]\LOCKSTEP_Out_reg[3029] ;
  wire \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]\data_rd_reg_reg[22] ;
  wire read_register_MSR_1;
  wire wb_byte_access;
  wire [22:22]wb_excep_return_addr;
  wire \wb_exception_kind_i_reg[31] ;
  wire wb_gpr_write_dbg;
  wire \wb_read_lsb_1_sel_reg[0] ;

  assign wb_excep_return_addr = lopt_1;
  LUT5 #(
    .INIT(32'hB8B8B8BB)) 
    \Trace_New_Reg_Value[22]_INST_0 
       (.I0(wb_excep_return_addr),
        .I1(\wb_exception_kind_i_reg[31] ),
        .I2(Q),
        .I3(\wb_read_lsb_1_sel_reg[0] ),
        .I4(wb_byte_access),
        .O(\LOCKSTEP_Out_reg[3029] ));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[22]_i_1 
       (.I0(\LOCKSTEP_Out_reg[3029] ),
        .I1(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .I2(wb_gpr_write_dbg),
        .I3(DI),
        .I4(read_register_MSR_1),
        .O(\data_rd_reg_reg[22] ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_355
   (\data_rd_reg_reg[23] ,
    \LOCKSTEP_Out_reg[3030] ,
    LO,
    \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ,
    wb_gpr_write_dbg,
    DI,
    read_register_MSR_1,
    \wb_exception_kind_i_reg[31] ,
    Q,
    \wb_read_lsb_1_sel_reg[0] ,
    wb_byte_access,
    S,
    \Using_FPGA.Native ,
    lopt,
    lopt_1);
  output [0:0]\data_rd_reg_reg[23] ;
  output [0:0]\LOCKSTEP_Out_reg[3030] ;
  output LO;
  input \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  input wb_gpr_write_dbg;
  input DI;
  input read_register_MSR_1;
  input \wb_exception_kind_i_reg[31] ;
  input [0:0]Q;
  input \wb_read_lsb_1_sel_reg[0] ;
  input wb_byte_access;
  input S;
  input \Using_FPGA.Native ;
  input lopt;
  input lopt_1;

  wire DI;
  wire [0:0]\LOCKSTEP_Out_reg[3030] ;
  wire \Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  wire [0:0]Q;
  wire [0:0]\data_rd_reg_reg[23] ;
  wire read_register_MSR_1;
  wire wb_byte_access;
  wire [23:23]wb_excep_return_addr;
  wire \wb_exception_kind_i_reg[31] ;
  wire wb_gpr_write_dbg;
  wire \wb_read_lsb_1_sel_reg[0] ;

  assign wb_excep_return_addr = lopt_1;
  LUT5 #(
    .INIT(32'hB8B8B8BB)) 
    \Trace_New_Reg_Value[23]_INST_0 
       (.I0(wb_excep_return_addr),
        .I1(\wb_exception_kind_i_reg[31] ),
        .I2(Q),
        .I3(\wb_read_lsb_1_sel_reg[0] ),
        .I4(wb_byte_access),
        .O(\LOCKSTEP_Out_reg[3030] ));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[23]_i_1 
       (.I0(\LOCKSTEP_Out_reg[3030] ),
        .I1(\Performace_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ),
        .I2(wb_gpr_write_dbg),
        .I3(DI),
        .I4(read_register_MSR_1),
        .O(\data_rd_reg_reg[23] ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_358
   (LO,
    \LOCKSTEP_Out_reg[3031] ,
    S,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output LO;
  output [0:0]\LOCKSTEP_Out_reg[3031] ;
  input S;
  input \Using_FPGA.Native ;
  input \Using_FPGA.Native_0 ;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire [0:0]\LOCKSTEP_Out_reg[3031] ;
  wire S;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(\Using_FPGA.Native_0 ),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,\Using_FPGA.Native }),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\LOCKSTEP_Out_reg[3031] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_361
   (LO,
    \LOCKSTEP_Out_reg[3032] ,
    S,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    lopt,
    lopt_1);
  output LO;
  output [0:0]\LOCKSTEP_Out_reg[3032] ;
  input S;
  input \Using_FPGA.Native ;
  input \Using_FPGA.Native_0 ;
  input lopt;
  input lopt_1;

  wire LO;
  wire [0:0]\LOCKSTEP_Out_reg[3032] ;

  assign LO = lopt;
  assign \LOCKSTEP_Out_reg[3032]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_364
   (LO,
    \LOCKSTEP_Out_reg[3033] ,
    S,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    lopt,
    lopt_1);
  output LO;
  output [0:0]\LOCKSTEP_Out_reg[3033] ;
  input S;
  input \Using_FPGA.Native ;
  input \Using_FPGA.Native_0 ;
  input lopt;
  input lopt_1;

  wire [0:0]\LOCKSTEP_Out_reg[3033] ;

  assign \LOCKSTEP_Out_reg[3033]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_367
   (LO,
    \LOCKSTEP_Out_reg[3034] ,
    S,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    lopt,
    lopt_1);
  output LO;
  output [0:0]\LOCKSTEP_Out_reg[3034] ;
  input S;
  input \Using_FPGA.Native ;
  input \Using_FPGA.Native_0 ;
  input lopt;
  input lopt_1;

  wire [0:0]\LOCKSTEP_Out_reg[3034] ;

  assign \LOCKSTEP_Out_reg[3034]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_370
   (LO,
    \LOCKSTEP_Out_reg[3035] ,
    S,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output LO;
  output [0:0]\LOCKSTEP_Out_reg[3035] ;
  input S;
  input \Using_FPGA.Native ;
  input \Using_FPGA.Native_0 ;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire [0:0]\LOCKSTEP_Out_reg[3035] ;
  wire S;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(\Using_FPGA.Native_0 ),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,\Using_FPGA.Native }),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\LOCKSTEP_Out_reg[3035] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_373
   (LO,
    \LOCKSTEP_Out_reg[3036] ,
    S,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    lopt,
    lopt_1);
  output LO;
  output [0:0]\LOCKSTEP_Out_reg[3036] ;
  input S;
  input \Using_FPGA.Native ;
  input \Using_FPGA.Native_0 ;
  input lopt;
  input lopt_1;

  wire LO;
  wire [0:0]\LOCKSTEP_Out_reg[3036] ;

  assign LO = lopt;
  assign \LOCKSTEP_Out_reg[3036]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_376
   (LO,
    \LOCKSTEP_Out_reg[3009] ,
    S,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    lopt,
    lopt_1);
  output LO;
  output [0:0]\LOCKSTEP_Out_reg[3009] ;
  input S;
  input \Using_FPGA.Native ;
  input \Using_FPGA.Native_0 ;
  input lopt;
  input lopt_1;

  wire [0:0]\LOCKSTEP_Out_reg[3009] ;

  assign \LOCKSTEP_Out_reg[3009]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_379
   (LO,
    \LOCKSTEP_Out_reg[3037] ,
    S,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    lopt,
    lopt_1);
  output LO;
  output [0:0]\LOCKSTEP_Out_reg[3037] ;
  input S;
  input \Using_FPGA.Native ;
  input \Using_FPGA.Native_0 ;
  input lopt;
  input lopt_1;

  wire [0:0]\LOCKSTEP_Out_reg[3037] ;

  assign \LOCKSTEP_Out_reg[3037]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_382
   (LO,
    \LOCKSTEP_Out_reg[3038] ,
    S,
    DI,
    CI,
    lopt,
    lopt_1);
  output LO;
  output [0:0]\LOCKSTEP_Out_reg[3038] ;
  input S;
  input DI;
  input CI;
  input lopt;
  input lopt_1;

  wire [0:0]\LOCKSTEP_Out_reg[3038] ;

  assign \LOCKSTEP_Out_reg[3038]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_385
   (LO,
    \LOCKSTEP_Out_reg[3010] ,
    S,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    lopt,
    lopt_1);
  output LO;
  output [0:0]\LOCKSTEP_Out_reg[3010] ;
  input S;
  input \Using_FPGA.Native ;
  input \Using_FPGA.Native_0 ;
  input lopt;
  input lopt_1;

  wire [0:0]\LOCKSTEP_Out_reg[3010] ;

  assign \LOCKSTEP_Out_reg[3010]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_388
   (LO,
    \LOCKSTEP_Out_reg[3011] ,
    S,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output LO;
  output [0:0]\LOCKSTEP_Out_reg[3011] ;
  input S;
  input \Using_FPGA.Native ;
  input \Using_FPGA.Native_0 ;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire [0:0]\LOCKSTEP_Out_reg[3011] ;
  wire S;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(\Using_FPGA.Native_0 ),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,\Using_FPGA.Native }),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\LOCKSTEP_Out_reg[3011] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_391
   (LO,
    \LOCKSTEP_Out_reg[3012] ,
    S,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    lopt,
    lopt_1);
  output LO;
  output [0:0]\LOCKSTEP_Out_reg[3012] ;
  input S;
  input \Using_FPGA.Native ;
  input \Using_FPGA.Native_0 ;
  input lopt;
  input lopt_1;

  wire LO;
  wire [0:0]\LOCKSTEP_Out_reg[3012] ;

  assign LO = lopt;
  assign \LOCKSTEP_Out_reg[3012]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_394
   (LO,
    \LOCKSTEP_Out_reg[3013] ,
    S,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    lopt,
    lopt_1);
  output LO;
  output [0:0]\LOCKSTEP_Out_reg[3013] ;
  input S;
  input \Using_FPGA.Native ;
  input \Using_FPGA.Native_0 ;
  input lopt;
  input lopt_1;

  wire [0:0]\LOCKSTEP_Out_reg[3013] ;

  assign \LOCKSTEP_Out_reg[3013]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_397
   (LO,
    \LOCKSTEP_Out_reg[3014] ,
    S,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    lopt,
    lopt_1);
  output LO;
  output [0:0]\LOCKSTEP_Out_reg[3014] ;
  input S;
  input \Using_FPGA.Native ;
  input \Using_FPGA.Native_0 ;
  input lopt;
  input lopt_1;

  wire [0:0]\LOCKSTEP_Out_reg[3014] ;

  assign \LOCKSTEP_Out_reg[3014]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_400
   (LO,
    \LOCKSTEP_Out_reg[3015] ,
    S,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output LO;
  output [0:0]\LOCKSTEP_Out_reg[3015] ;
  input S;
  input \Using_FPGA.Native ;
  input \Using_FPGA.Native_0 ;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire [0:0]\LOCKSTEP_Out_reg[3015] ;
  wire S;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(\Using_FPGA.Native_0 ),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,\Using_FPGA.Native }),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\LOCKSTEP_Out_reg[3015] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_403
   (LO,
    \LOCKSTEP_Out_reg[3016] ,
    S,
    \Using_FPGA.Native ,
    CI,
    lopt,
    lopt_1);
  output LO;
  output [0:0]\LOCKSTEP_Out_reg[3016] ;
  input S;
  input \Using_FPGA.Native ;
  input CI;
  input lopt;
  input lopt_1;

  wire LO;
  wire [0:0]\LOCKSTEP_Out_reg[3016] ;

  assign LO = lopt;
  assign \LOCKSTEP_Out_reg[3016]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_522
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[9] ,
    S,
    DI,
    EX_CarryIn,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[9] ;
  input S;
  input DI;
  input EX_CarryIn;
  input lopt;
  input lopt_1;

  wire [0:0]\MEM_DataBus_Addr_reg[9] ;

  assign \MEM_DataBus_Addr_reg[9]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_524
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[8] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[8] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire [0:0]\MEM_DataBus_Addr_reg[8] ;

  assign \MEM_DataBus_Addr_reg[8]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_526
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[7] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[7] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire EX_CarryOut;
  wire [0:0]\MEM_DataBus_Addr_reg[7] ;

  assign EX_CarryOut = lopt;
  assign \MEM_DataBus_Addr_reg[7]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_528
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[6] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[6] ;
  input S;
  input DI;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire DI;
  wire LO;
  wire [0:0]\MEM_DataBus_Addr_reg[6] ;
  wire S;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(LO),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,DI}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\MEM_DataBus_Addr_reg[6] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_530
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[5] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[5] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire [0:0]\MEM_DataBus_Addr_reg[5] ;

  assign \MEM_DataBus_Addr_reg[5]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_532
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[4] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[4] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire [0:0]\MEM_DataBus_Addr_reg[4] ;

  assign \MEM_DataBus_Addr_reg[4]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_534
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[3] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[3] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire EX_CarryOut;
  wire [0:0]\MEM_DataBus_Addr_reg[3] ;

  assign EX_CarryOut = lopt;
  assign \MEM_DataBus_Addr_reg[3]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_536
   (EX_CarryOut,
    ex_databus_addr,
    S,
    DI,
    EX_CarryIn,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]ex_databus_addr;
  input S;
  input DI;
  input EX_CarryIn;
  input lopt;
  input lopt_1;

  wire EX_CarryOut;
  wire [0:0]ex_databus_addr;

  assign EX_CarryOut = lopt;
  assign ex_databus_addr = lopt_1;
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_538
   (EX_CarryOut,
    ex_databus_addr,
    S,
    DI,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output EX_CarryOut;
  output [0:0]ex_databus_addr;
  input S;
  input DI;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire DI;
  wire LO;
  wire S;
  wire [0:0]ex_databus_addr;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(LO),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,DI}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,ex_databus_addr}),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_540
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[2] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[2] ;
  input S;
  input DI;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;

  wire DI;
  wire LO;
  wire [0:0]\MEM_DataBus_Addr_reg[2] ;
  wire S;
  wire \^lopt_10 ;
  wire lopt_11;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;
  wire [2:2]\NLW_Using_FPGA.Native_I1_CARRY4_O_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = lopt_11;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(LO),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,DI}),
        .O({lopt_11,\NLW_Using_FPGA.Native_I1_CARRY4_O_UNCONNECTED [2],\^lopt_10 ,\MEM_DataBus_Addr_reg[2] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_542
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[29] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[29] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire [0:0]\MEM_DataBus_Addr_reg[29] ;

  assign \MEM_DataBus_Addr_reg[29]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_544
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[28] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[28] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire [0:0]\MEM_DataBus_Addr_reg[28] ;

  assign \MEM_DataBus_Addr_reg[28]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_546
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[27] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[27] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire EX_CarryOut;
  wire [0:0]\MEM_DataBus_Addr_reg[27] ;

  assign EX_CarryOut = lopt;
  assign \MEM_DataBus_Addr_reg[27]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_548
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[26] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[26] ;
  input S;
  input DI;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire DI;
  wire LO;
  wire [0:0]\MEM_DataBus_Addr_reg[26] ;
  wire S;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(LO),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,DI}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\MEM_DataBus_Addr_reg[26] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_550
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[25] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[25] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire [0:0]\MEM_DataBus_Addr_reg[25] ;

  assign \MEM_DataBus_Addr_reg[25]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_552
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[24] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[24] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire [0:0]\MEM_DataBus_Addr_reg[24] ;

  assign \MEM_DataBus_Addr_reg[24]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_554
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[23] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[23] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire EX_CarryOut;
  wire [0:0]\MEM_DataBus_Addr_reg[23] ;

  assign EX_CarryOut = lopt;
  assign \MEM_DataBus_Addr_reg[23]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_556
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[22] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[22] ;
  input S;
  input DI;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire DI;
  wire LO;
  wire [0:0]\MEM_DataBus_Addr_reg[22] ;
  wire S;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(LO),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,DI}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\MEM_DataBus_Addr_reg[22] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_558
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[21] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[21] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire [0:0]\MEM_DataBus_Addr_reg[21] ;

  assign \MEM_DataBus_Addr_reg[21]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_560
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[20] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[20] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire [0:0]\MEM_DataBus_Addr_reg[20] ;

  assign \MEM_DataBus_Addr_reg[20]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_562
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[1] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[1] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire [0:0]\MEM_DataBus_Addr_reg[1] ;

  assign \MEM_DataBus_Addr_reg[1]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_564
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[19] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[19] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire EX_CarryOut;
  wire [0:0]\MEM_DataBus_Addr_reg[19] ;

  assign EX_CarryOut = lopt;
  assign \MEM_DataBus_Addr_reg[19]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_566
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[18] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[18] ;
  input S;
  input DI;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire DI;
  wire LO;
  wire [0:0]\MEM_DataBus_Addr_reg[18] ;
  wire S;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(LO),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,DI}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\MEM_DataBus_Addr_reg[18] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_568
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[17] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[17] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire [0:0]\MEM_DataBus_Addr_reg[17] ;

  assign \MEM_DataBus_Addr_reg[17]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_570
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[16] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[16] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire [0:0]\MEM_DataBus_Addr_reg[16] ;

  assign \MEM_DataBus_Addr_reg[16]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_572
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[15] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[15] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire EX_CarryOut;
  wire [0:0]\MEM_DataBus_Addr_reg[15] ;

  assign EX_CarryOut = lopt;
  assign \MEM_DataBus_Addr_reg[15]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_574
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[14] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[14] ;
  input S;
  input DI;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire DI;
  wire LO;
  wire [0:0]\MEM_DataBus_Addr_reg[14] ;
  wire S;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(LO),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,DI}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\MEM_DataBus_Addr_reg[14] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_576
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[13] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[13] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire [0:0]\MEM_DataBus_Addr_reg[13] ;

  assign \MEM_DataBus_Addr_reg[13]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_578
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[12] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[12] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire [0:0]\MEM_DataBus_Addr_reg[12] ;

  assign \MEM_DataBus_Addr_reg[12]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_580
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[11] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[11] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire EX_CarryOut;
  wire [0:0]\MEM_DataBus_Addr_reg[11] ;

  assign EX_CarryOut = lopt;
  assign \MEM_DataBus_Addr_reg[11]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_582
   (EX_CarryOut,
    \MEM_DataBus_Addr_reg[10] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output EX_CarryOut;
  output [0:0]\MEM_DataBus_Addr_reg[10] ;
  input S;
  input DI;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire DI;
  wire LO;
  wire [0:0]\MEM_DataBus_Addr_reg[10] ;
  wire S;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(LO),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,DI}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\MEM_DataBus_Addr_reg[10] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXCY_XORCY" *) 
module microblaze_v10_0_3_MB_MUXCY_XORCY_583
   (\Using_FPGA.Native ,
    \MEM_DataBus_Addr_reg[0] ,
    ex_valid_reg,
    ex_load_shift_carry,
    \EX_Op1_reg[31] ,
    ex_load_alu_carry_reg,
    S,
    DI,
    CI,
    lopt,
    lopt_1);
  output \Using_FPGA.Native ;
  output [0:0]\MEM_DataBus_Addr_reg[0] ;
  input ex_valid_reg;
  input ex_load_shift_carry;
  input [0:0]\EX_Op1_reg[31] ;
  input ex_load_alu_carry_reg;
  input S;
  input DI;
  input CI;
  input lopt;
  input lopt_1;

  wire [0:0]\EX_Op1_reg[31] ;
  wire [0:0]\MEM_DataBus_Addr_reg[0] ;
  wire \Using_FPGA.Native ;
  wire ex_alu_carry;
  wire ex_load_alu_carry_reg;
  wire ex_load_shift_carry;
  wire ex_valid_reg;

  assign \MEM_DataBus_Addr_reg[0]  = lopt_1;
  assign ex_alu_carry = lopt;
  LUT5 #(
    .INIT(32'h77773FFF)) 
    \Using_FPGA.Native_i_6 
       (.I0(ex_alu_carry),
        .I1(ex_valid_reg),
        .I2(ex_load_shift_carry),
        .I3(\EX_Op1_reg[31] ),
        .I4(ex_load_alu_carry_reg),
        .O(\Using_FPGA.Native ));
endmodule

module microblaze_v10_0_3_MB_MUXF7
   (sel_input_i_1,
    I4_1,
    sel_input_iii_0,
    sel_input_delayslot,
    ex_branch_with_delayslot_i,
    Q,
    wb_exception);
  output sel_input_i_1;
  output I4_1;
  input sel_input_iii_0;
  input sel_input_delayslot;
  input ex_branch_with_delayslot_i;
  input [1:0]Q;
  input wb_exception;

  wire I4_1;
  wire [1:0]Q;
  wire ex_branch_with_delayslot_i;
  wire sel_input_delayslot;
  wire sel_input_i_1;
  wire sel_input_iii_0;
  wire wb_exception;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(sel_input_iii_0),
        .I1(sel_input_delayslot),
        .O(sel_input_i_1),
        .S(I4_1));
  LUT4 #(
    .INIT(16'h2AAA)) 
    \Using_FPGA.Native_i_1__106 
       (.I0(ex_branch_with_delayslot_i),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(wb_exception),
        .O(I4_1));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_123
   (of_instr_ii_42,
    of_pause_reg,
    I0169_out,
    I1167_out);
  output of_instr_ii_42;
  input of_pause_reg;
  input I0169_out;
  input I1167_out;

  wire I0169_out;
  wire I1167_out;
  wire of_instr_ii_42;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0169_out),
        .I1(I1167_out),
        .O(of_instr_ii_42),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_125
   (of_instr_ii_32,
    of_pause_reg,
    I0129_out,
    I1127_out);
  output of_instr_ii_32;
  input of_pause_reg;
  input I0129_out;
  input I1127_out;

  wire I0129_out;
  wire I1127_out;
  wire of_instr_ii_32;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0129_out),
        .I1(I1127_out),
        .O(of_instr_ii_32),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_127
   (of_instr_ii_31,
    of_pause_reg,
    I0125_out,
    I1123_out);
  output of_instr_ii_31;
  input of_pause_reg;
  input I0125_out;
  input I1123_out;

  wire I0125_out;
  wire I1123_out;
  wire of_instr_ii_31;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0125_out),
        .I1(I1123_out),
        .O(of_instr_ii_31),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_129
   (of_instr_ii_30,
    of_pause_reg,
    I0121_out,
    I1119_out);
  output of_instr_ii_30;
  input of_pause_reg;
  input I0121_out;
  input I1119_out;

  wire I0121_out;
  wire I1119_out;
  wire of_instr_ii_30;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0121_out),
        .I1(I1119_out),
        .O(of_instr_ii_30),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_131
   (of_instr_ii_29,
    of_pause_reg,
    I0117_out,
    I1115_out);
  output of_instr_ii_29;
  input of_pause_reg;
  input I0117_out;
  input I1115_out;

  wire I0117_out;
  wire I1115_out;
  wire of_instr_ii_29;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0117_out),
        .I1(I1115_out),
        .O(of_instr_ii_29),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_133
   (of_instr_ii_28,
    of_pause_reg,
    I0113_out,
    I1111_out);
  output of_instr_ii_28;
  input of_pause_reg;
  input I0113_out;
  input I1111_out;

  wire I0113_out;
  wire I1111_out;
  wire of_instr_ii_28;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0113_out),
        .I1(I1111_out),
        .O(of_instr_ii_28),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_135
   (of_instr_ii_27,
    of_pause_reg,
    I0109_out,
    I1107_out);
  output of_instr_ii_27;
  input of_pause_reg;
  input I0109_out;
  input I1107_out;

  wire I0109_out;
  wire I1107_out;
  wire of_instr_ii_27;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0109_out),
        .I1(I1107_out),
        .O(of_instr_ii_27),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_137
   (of_instr_ii_26,
    of_pause_reg,
    I0105_out,
    I1103_out);
  output of_instr_ii_26;
  input of_pause_reg;
  input I0105_out;
  input I1103_out;

  wire I0105_out;
  wire I1103_out;
  wire of_instr_ii_26;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0105_out),
        .I1(I1103_out),
        .O(of_instr_ii_26),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_139
   (of_instr_ii_25,
    of_pause_reg,
    I0101_out,
    I199_out);
  output of_instr_ii_25;
  input of_pause_reg;
  input I0101_out;
  input I199_out;

  wire I0101_out;
  wire I199_out;
  wire of_instr_ii_25;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0101_out),
        .I1(I199_out),
        .O(of_instr_ii_25),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_141
   (of_instr_ii_24,
    of_pause_reg,
    I097_out,
    I195_out);
  output of_instr_ii_24;
  input of_pause_reg;
  input I097_out;
  input I195_out;

  wire I097_out;
  wire I195_out;
  wire of_instr_ii_24;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I097_out),
        .I1(I195_out),
        .O(of_instr_ii_24),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_143
   (of_instr_ii_23,
    of_pause_reg,
    I093_out,
    I191_out);
  output of_instr_ii_23;
  input of_pause_reg;
  input I093_out;
  input I191_out;

  wire I093_out;
  wire I191_out;
  wire of_instr_ii_23;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I093_out),
        .I1(I191_out),
        .O(of_instr_ii_23),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_145
   (of_instr_ii_41,
    of_pause_reg,
    I0165_out,
    I1163_out);
  output of_instr_ii_41;
  input of_pause_reg;
  input I0165_out;
  input I1163_out;

  wire I0165_out;
  wire I1163_out;
  wire of_instr_ii_41;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0165_out),
        .I1(I1163_out),
        .O(of_instr_ii_41),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_147
   (of_instr_ii_22,
    of_pause_reg,
    I089_out,
    I187_out);
  output of_instr_ii_22;
  input of_pause_reg;
  input I089_out;
  input I187_out;

  wire I089_out;
  wire I187_out;
  wire of_instr_ii_22;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I089_out),
        .I1(I187_out),
        .O(of_instr_ii_22),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_149
   (of_instr_ii_21,
    of_pause_reg,
    I085_out,
    I183_out);
  output of_instr_ii_21;
  input of_pause_reg;
  input I085_out;
  input I183_out;

  wire I085_out;
  wire I183_out;
  wire of_instr_ii_21;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I085_out),
        .I1(I183_out),
        .O(of_instr_ii_21),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_151
   (of_instr_ii_20,
    of_pause_reg,
    I081_out,
    I179_out);
  output of_instr_ii_20;
  input of_pause_reg;
  input I081_out;
  input I179_out;

  wire I081_out;
  wire I179_out;
  wire of_instr_ii_20;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I081_out),
        .I1(I179_out),
        .O(of_instr_ii_20),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_153
   (of_instr_ii_19,
    of_pause_reg,
    I077_out,
    I175_out);
  output of_instr_ii_19;
  input of_pause_reg;
  input I077_out;
  input I175_out;

  wire I077_out;
  wire I175_out;
  wire of_instr_ii_19;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I077_out),
        .I1(I175_out),
        .O(of_instr_ii_19),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_155
   (of_instr_ii_18,
    of_pause_reg,
    I073_out,
    I171_out);
  output of_instr_ii_18;
  input of_pause_reg;
  input I073_out;
  input I171_out;

  wire I073_out;
  wire I171_out;
  wire of_instr_ii_18;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I073_out),
        .I1(I171_out),
        .O(of_instr_ii_18),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_157
   (of_instr_ii_17,
    of_pause_reg,
    I069_out,
    I167_out);
  output of_instr_ii_17;
  input of_pause_reg;
  input I069_out;
  input I167_out;

  wire I069_out;
  wire I167_out;
  wire of_instr_ii_17;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I069_out),
        .I1(I167_out),
        .O(of_instr_ii_17),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_159
   (of_instr_ii_16,
    of_pause_reg,
    I065_out,
    I163_out);
  output of_instr_ii_16;
  input of_pause_reg;
  input I065_out;
  input I163_out;

  wire I065_out;
  wire I163_out;
  wire of_instr_ii_16;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I065_out),
        .I1(I163_out),
        .O(of_instr_ii_16),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_161
   (of_instr_ii_15,
    of_pause_reg,
    I061_out,
    I159_out);
  output of_instr_ii_15;
  input of_pause_reg;
  input I061_out;
  input I159_out;

  wire I061_out;
  wire I159_out;
  wire of_instr_ii_15;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I061_out),
        .I1(I159_out),
        .O(of_instr_ii_15),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_163
   (of_instr_ii_14,
    of_pause_reg,
    I057_out,
    I155_out);
  output of_instr_ii_14;
  input of_pause_reg;
  input I057_out;
  input I155_out;

  wire I057_out;
  wire I155_out;
  wire of_instr_ii_14;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I057_out),
        .I1(I155_out),
        .O(of_instr_ii_14),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_165
   (of_instr_ii_13,
    of_pause_reg,
    I053_out,
    I151_out);
  output of_instr_ii_13;
  input of_pause_reg;
  input I053_out;
  input I151_out;

  wire I053_out;
  wire I151_out;
  wire of_instr_ii_13;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I053_out),
        .I1(I151_out),
        .O(of_instr_ii_13),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_167
   (of_instr_ii_40,
    of_pause_reg,
    I0161_out,
    I1159_out);
  output of_instr_ii_40;
  input of_pause_reg;
  input I0161_out;
  input I1159_out;

  wire I0161_out;
  wire I1159_out;
  wire of_instr_ii_40;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0161_out),
        .I1(I1159_out),
        .O(of_instr_ii_40),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_169
   (of_instr_ii_12,
    of_pause_reg,
    I049_out,
    I147_out);
  output of_instr_ii_12;
  input of_pause_reg;
  input I049_out;
  input I147_out;

  wire I049_out;
  wire I147_out;
  wire of_instr_ii_12;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I049_out),
        .I1(I147_out),
        .O(of_instr_ii_12),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_171
   (of_instr_ii_11,
    of_pause_reg,
    I045_out,
    I143_out);
  output of_instr_ii_11;
  input of_pause_reg;
  input I045_out;
  input I143_out;

  wire I045_out;
  wire I143_out;
  wire of_instr_ii_11;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I045_out),
        .I1(I143_out),
        .O(of_instr_ii_11),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_173
   (of_instr_ii_10,
    of_pause_reg,
    I041_out,
    I139_out);
  output of_instr_ii_10;
  input of_pause_reg;
  input I041_out;
  input I139_out;

  wire I041_out;
  wire I139_out;
  wire of_instr_ii_10;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I041_out),
        .I1(I139_out),
        .O(of_instr_ii_10),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_175
   (of_instr_ii_9,
    of_pause_reg,
    I037_out,
    I135_out);
  output of_instr_ii_9;
  input of_pause_reg;
  input I037_out;
  input I135_out;

  wire I037_out;
  wire I135_out;
  wire of_instr_ii_9;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I037_out),
        .I1(I135_out),
        .O(of_instr_ii_9),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_177
   (of_instr_ii_8,
    of_pause_reg,
    I033_out,
    I131_out);
  output of_instr_ii_8;
  input of_pause_reg;
  input I033_out;
  input I131_out;

  wire I033_out;
  wire I131_out;
  wire of_instr_ii_8;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I033_out),
        .I1(I131_out),
        .O(of_instr_ii_8),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_179
   (of_instr_ii_7,
    of_pause_reg,
    I029_out,
    I127_out);
  output of_instr_ii_7;
  input of_pause_reg;
  input I029_out;
  input I127_out;

  wire I029_out;
  wire I127_out;
  wire of_instr_ii_7;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I029_out),
        .I1(I127_out),
        .O(of_instr_ii_7),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_181
   (of_instr_ii_6,
    of_pause_reg,
    I025_out,
    I123_out);
  output of_instr_ii_6;
  input of_pause_reg;
  input I025_out;
  input I123_out;

  wire I025_out;
  wire I123_out;
  wire of_instr_ii_6;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I025_out),
        .I1(I123_out),
        .O(of_instr_ii_6),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_183
   (of_instr_ii_5,
    of_pause_reg,
    I021_out,
    I119_out);
  output of_instr_ii_5;
  input of_pause_reg;
  input I021_out;
  input I119_out;

  wire I021_out;
  wire I119_out;
  wire of_instr_ii_5;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I021_out),
        .I1(I119_out),
        .O(of_instr_ii_5),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_185
   (of_instr_ii_4,
    of_pause_reg,
    I017_out,
    I115_out);
  output of_instr_ii_4;
  input of_pause_reg;
  input I017_out;
  input I115_out;

  wire I017_out;
  wire I115_out;
  wire of_instr_ii_4;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I017_out),
        .I1(I115_out),
        .O(of_instr_ii_4),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_187
   (of_instr_ii_3,
    of_pause_reg,
    I013_out,
    I111_out);
  output of_instr_ii_3;
  input of_pause_reg;
  input I013_out;
  input I111_out;

  wire I013_out;
  wire I111_out;
  wire of_instr_ii_3;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I013_out),
        .I1(I111_out),
        .O(of_instr_ii_3),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_189
   (of_instr_ii_39,
    of_pause_reg,
    I0157_out,
    I1155_out);
  output of_instr_ii_39;
  input of_pause_reg;
  input I0157_out;
  input I1155_out;

  wire I0157_out;
  wire I1155_out;
  wire of_instr_ii_39;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0157_out),
        .I1(I1155_out),
        .O(of_instr_ii_39),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_191
   (of_instr_ii_2,
    of_pause_reg,
    I09_out,
    I17_out);
  output of_instr_ii_2;
  input of_pause_reg;
  input I09_out;
  input I17_out;

  wire I09_out;
  wire I17_out;
  wire of_instr_ii_2;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I09_out),
        .I1(I17_out),
        .O(of_instr_ii_2),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_193
   (of_instr_ii_1,
    of_pause_reg,
    I05_out,
    I13_out);
  output of_instr_ii_1;
  input of_pause_reg;
  input I05_out;
  input I13_out;

  wire I05_out;
  wire I13_out;
  wire of_instr_ii_1;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I05_out),
        .I1(I13_out),
        .O(of_instr_ii_1),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_195
   (of_instr_ii_0,
    of_pause_reg,
    I0_0,
    I1_2);
  output of_instr_ii_0;
  input of_pause_reg;
  input I0_0;
  input I1_2;

  wire I0_0;
  wire I1_2;
  wire of_instr_ii_0;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0_0),
        .I1(I1_2),
        .O(of_instr_ii_0),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_197
   (of_instr_ii_38,
    of_pause_reg,
    I0153_out,
    I1151_out);
  output of_instr_ii_38;
  input of_pause_reg;
  input I0153_out;
  input I1151_out;

  wire I0153_out;
  wire I1151_out;
  wire of_instr_ii_38;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0153_out),
        .I1(I1151_out),
        .O(of_instr_ii_38),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_199
   (of_instr_ii_37,
    of_pause_reg,
    I0149_out,
    I1147_out);
  output of_instr_ii_37;
  input of_pause_reg;
  input I0149_out;
  input I1147_out;

  wire I0149_out;
  wire I1147_out;
  wire of_instr_ii_37;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0149_out),
        .I1(I1147_out),
        .O(of_instr_ii_37),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_201
   (of_instr_ii_36,
    of_pause_reg,
    I0145_out,
    I1143_out);
  output of_instr_ii_36;
  input of_pause_reg;
  input I0145_out;
  input I1143_out;

  wire I0145_out;
  wire I1143_out;
  wire of_instr_ii_36;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0145_out),
        .I1(I1143_out),
        .O(of_instr_ii_36),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_203
   (of_instr_ii_35,
    of_pause_reg,
    I0141_out,
    I1139_out);
  output of_instr_ii_35;
  input of_pause_reg;
  input I0141_out;
  input I1139_out;

  wire I0141_out;
  wire I1139_out;
  wire of_instr_ii_35;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0141_out),
        .I1(I1139_out),
        .O(of_instr_ii_35),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_205
   (of_instr_ii_34,
    of_pause_reg,
    I0137_out,
    I1135_out);
  output of_instr_ii_34;
  input of_pause_reg;
  input I0137_out;
  input I1135_out;

  wire I0137_out;
  wire I1135_out;
  wire of_instr_ii_34;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0137_out),
        .I1(I1135_out),
        .O(of_instr_ii_34),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_207
   (of_instr_ii_33,
    of_pause_reg,
    I0133_out,
    I1131_out);
  output of_instr_ii_33;
  input of_pause_reg;
  input I0133_out;
  input I1131_out;

  wire I0133_out;
  wire I1131_out;
  wire of_instr_ii_33;
  wire of_pause_reg;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0133_out),
        .I1(I1131_out),
        .O(of_instr_ii_33),
        .S(of_pause_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_210
   (of_pc_ii_31,
    of_pause_reg,
    I0125_out,
    Q,
    \Using_FPGA.Native_0 ,
    out);
  output of_pc_ii_31;
  input of_pause_reg;
  input I0125_out;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input [0:0]out;

  wire I0125_out;
  wire I1123_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_31;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0125_out),
        .I1(I1123_out),
        .O(of_pc_ii_31),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__32 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out),
        .O(I1123_out));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_212
   (of_pc_ii_21,
    of_pause_reg,
    I085_out,
    Q,
    \Using_FPGA.Native_0 ,
    out);
  output of_pc_ii_21;
  input of_pause_reg;
  input I085_out;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input [0:0]out;

  wire I085_out;
  wire I183_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_21;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I085_out),
        .I1(I183_out),
        .O(of_pc_ii_21),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__22 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out),
        .O(I183_out));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_214
   (of_pc_ii_20,
    of_pause_reg,
    I081_out,
    Q,
    \Using_FPGA.Native_0 ,
    out);
  output of_pc_ii_20;
  input of_pause_reg;
  input I081_out;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input [0:0]out;

  wire I081_out;
  wire I179_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_20;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I081_out),
        .I1(I179_out),
        .O(of_pc_ii_20),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__21 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out),
        .O(I179_out));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_216
   (of_pc_ii_19,
    of_pause_reg,
    I077_out,
    Q,
    \Using_FPGA.Native_0 ,
    out);
  output of_pc_ii_19;
  input of_pause_reg;
  input I077_out;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input [0:0]out;

  wire I077_out;
  wire I175_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_19;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I077_out),
        .I1(I175_out),
        .O(of_pc_ii_19),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__20 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out),
        .O(I175_out));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_218
   (of_pc_ii_18,
    of_pause_reg,
    I073_out,
    Q,
    \Using_FPGA.Native_0 ,
    out);
  output of_pc_ii_18;
  input of_pause_reg;
  input I073_out;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input [0:0]out;

  wire I073_out;
  wire I171_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_18;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I073_out),
        .I1(I171_out),
        .O(of_pc_ii_18),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__19 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out),
        .O(I171_out));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_220
   (of_pc_ii_17,
    of_pause_reg,
    I069_out,
    Q,
    \Using_FPGA.Native_0 ,
    out);
  output of_pc_ii_17;
  input of_pause_reg;
  input I069_out;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input [0:0]out;

  wire I069_out;
  wire I167_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_17;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I069_out),
        .I1(I167_out),
        .O(of_pc_ii_17),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__18 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out),
        .O(I167_out));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_222
   (of_pc_ii_16,
    of_pause_reg,
    I065_out,
    Q,
    \Using_FPGA.Native_0 ,
    out);
  output of_pc_ii_16;
  input of_pause_reg;
  input I065_out;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input [0:0]out;

  wire I065_out;
  wire I163_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_16;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I065_out),
        .I1(I163_out),
        .O(of_pc_ii_16),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__17 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out),
        .O(I163_out));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_224
   (of_pc_ii_15,
    of_pause_reg,
    I061_out,
    Q,
    \Using_FPGA.Native_0 ,
    out);
  output of_pc_ii_15;
  input of_pause_reg;
  input I061_out;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input [0:0]out;

  wire I061_out;
  wire I159_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_15;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I061_out),
        .I1(I159_out),
        .O(of_pc_ii_15),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__16 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out),
        .O(I159_out));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_226
   (of_pc_ii_14,
    of_pause_reg,
    I057_out,
    Q,
    \Using_FPGA.Native_0 ,
    out);
  output of_pc_ii_14;
  input of_pause_reg;
  input I057_out;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input [0:0]out;

  wire I057_out;
  wire I155_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_14;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I057_out),
        .I1(I155_out),
        .O(of_pc_ii_14),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__15 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out),
        .O(I155_out));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_228
   (of_pc_ii_13,
    of_pause_reg,
    I053_out,
    Q,
    \Using_FPGA.Native_0 ,
    out);
  output of_pc_ii_13;
  input of_pause_reg;
  input I053_out;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input [0:0]out;

  wire I053_out;
  wire I151_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_13;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I053_out),
        .I1(I151_out),
        .O(of_pc_ii_13),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__14 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out),
        .O(I151_out));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_230
   (of_pc_ii_12,
    of_pause_reg,
    I049_out,
    Q,
    \Using_FPGA.Native_0 ,
    out);
  output of_pc_ii_12;
  input of_pause_reg;
  input I049_out;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input [0:0]out;

  wire I049_out;
  wire I147_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_12;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I049_out),
        .I1(I147_out),
        .O(of_pc_ii_12),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__13 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out),
        .O(I147_out));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_232
   (of_pc_ii_30,
    of_pause_reg,
    I0121_out,
    Q,
    \Using_FPGA.Native_0 ,
    out);
  output of_pc_ii_30;
  input of_pause_reg;
  input I0121_out;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input [0:0]out;

  wire I0121_out;
  wire I1119_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_30;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0121_out),
        .I1(I1119_out),
        .O(of_pc_ii_30),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__31 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out),
        .O(I1119_out));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_234
   (of_pc_ii_11,
    of_pause_reg,
    I045_out,
    Q,
    \Using_FPGA.Native_0 ,
    out);
  output of_pc_ii_11;
  input of_pause_reg;
  input I045_out;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input [0:0]out;

  wire I045_out;
  wire I143_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_11;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I045_out),
        .I1(I143_out),
        .O(of_pc_ii_11),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__12 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out),
        .O(I143_out));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_236
   (of_pc_ii_10,
    of_pause_reg,
    I041_out,
    Q,
    \Using_FPGA.Native_0 ,
    out);
  output of_pc_ii_10;
  input of_pause_reg;
  input I041_out;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input [0:0]out;

  wire I041_out;
  wire I139_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_10;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I041_out),
        .I1(I139_out),
        .O(of_pc_ii_10),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__11 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out),
        .O(I139_out));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_238
   (of_pc_ii_9,
    of_pause_reg,
    I037_out,
    Q,
    \Using_FPGA.Native_0 ,
    out);
  output of_pc_ii_9;
  input of_pause_reg;
  input I037_out;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input [0:0]out;

  wire I037_out;
  wire I135_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_9;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I037_out),
        .I1(I135_out),
        .O(of_pc_ii_9),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__10 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out),
        .O(I135_out));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_240
   (of_pc_ii_8,
    of_pause_reg,
    I033_out,
    Q,
    \Using_FPGA.Native_0 ,
    out);
  output of_pc_ii_8;
  input of_pause_reg;
  input I033_out;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input [0:0]out;

  wire I033_out;
  wire I131_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_8;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I033_out),
        .I1(I131_out),
        .O(of_pc_ii_8),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__9 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out),
        .O(I131_out));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_242
   (of_pc_ii_7,
    of_pause_reg,
    I029_out,
    Q,
    \Using_FPGA.Native_0 ,
    out);
  output of_pc_ii_7;
  input of_pause_reg;
  input I029_out;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input [0:0]out;

  wire I029_out;
  wire I127_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_7;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I029_out),
        .I1(I127_out),
        .O(of_pc_ii_7),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__8 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out),
        .O(I127_out));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_244
   (of_pc_ii_6,
    of_pause_reg,
    I025_out,
    Q,
    \Using_FPGA.Native_0 ,
    out);
  output of_pc_ii_6;
  input of_pause_reg;
  input I025_out;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input [0:0]out;

  wire I025_out;
  wire I123_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_6;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I025_out),
        .I1(I123_out),
        .O(of_pc_ii_6),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__7 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out),
        .O(I123_out));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_246
   (of_pc_ii_5,
    of_pause_reg,
    I021_out,
    Q,
    \Using_FPGA.Native_0 ,
    out);
  output of_pc_ii_5;
  input of_pause_reg;
  input I021_out;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input [0:0]out;

  wire I021_out;
  wire I119_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_5;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I021_out),
        .I1(I119_out),
        .O(of_pc_ii_5),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__6 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out),
        .O(I119_out));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_248
   (of_pc_ii_4,
    of_pause_reg,
    I017_out,
    Q,
    \Using_FPGA.Native_0 ,
    out);
  output of_pc_ii_4;
  input of_pause_reg;
  input I017_out;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input [0:0]out;

  wire I017_out;
  wire I115_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_4;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I017_out),
        .I1(I115_out),
        .O(of_pc_ii_4),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__5 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out),
        .O(I115_out));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_250
   (of_pc_ii_3,
    of_pause_reg,
    I013_out,
    Q,
    \Using_FPGA.Native_0 ,
    out);
  output of_pc_ii_3;
  input of_pause_reg;
  input I013_out;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input [0:0]out;

  wire I013_out;
  wire I111_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_3;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I013_out),
        .I1(I111_out),
        .O(of_pc_ii_3),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__4 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out),
        .O(I111_out));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_252
   (of_pc_ii_2,
    of_pause_reg,
    I09_out,
    Q,
    \Using_FPGA.Native_0 ,
    out);
  output of_pc_ii_2;
  input of_pause_reg;
  input I09_out;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input [0:0]out;

  wire I09_out;
  wire I17_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_2;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I09_out),
        .I1(I17_out),
        .O(of_pc_ii_2),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__3 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out),
        .O(I17_out));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_254
   (of_pc_ii_29,
    of_pause_reg,
    I0117_out,
    Q,
    \Using_FPGA.Native_0 ,
    out);
  output of_pc_ii_29;
  input of_pause_reg;
  input I0117_out;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input [0:0]out;

  wire I0117_out;
  wire I1115_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_29;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0117_out),
        .I1(I1115_out),
        .O(of_pc_ii_29),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__30 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out),
        .O(I1115_out));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_256
   (of_pc_ii_1,
    of_pause_reg,
    I05_out,
    Q,
    \Using_FPGA.Native_0 ,
    out);
  output of_pc_ii_1;
  input of_pause_reg;
  input I05_out;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input [0:0]out;

  wire I05_out;
  wire I13_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_1;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I05_out),
        .I1(I13_out),
        .O(of_pc_ii_1),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__2 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out),
        .O(I13_out));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_258
   (of_pc_ii_0,
    of_pause_reg,
    I0,
    Q,
    \Using_FPGA.Native_0 ,
    out);
  output of_pc_ii_0;
  input of_pause_reg;
  input I0;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input [0:0]out;

  wire I0;
  wire I1;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_0;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0),
        .I1(I1),
        .O(of_pc_ii_0),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__1 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out),
        .O(I1));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_260
   (of_pc_ii_28,
    of_pause_reg,
    I0113_out,
    Q,
    \Using_FPGA.Native_0 ,
    out);
  output of_pc_ii_28;
  input of_pause_reg;
  input I0113_out;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input [0:0]out;

  wire I0113_out;
  wire I1111_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_28;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0113_out),
        .I1(I1111_out),
        .O(of_pc_ii_28),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__29 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out),
        .O(I1111_out));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_262
   (of_pc_ii_27,
    of_pause_reg,
    I0109_out,
    Q,
    \Using_FPGA.Native_0 ,
    out);
  output of_pc_ii_27;
  input of_pause_reg;
  input I0109_out;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input [0:0]out;

  wire I0109_out;
  wire I1107_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_27;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0109_out),
        .I1(I1107_out),
        .O(of_pc_ii_27),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__28 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out),
        .O(I1107_out));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_264
   (of_pc_ii_26,
    of_pause_reg,
    I0105_out,
    Q,
    \Using_FPGA.Native_0 ,
    out);
  output of_pc_ii_26;
  input of_pause_reg;
  input I0105_out;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input [0:0]out;

  wire I0105_out;
  wire I1103_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_26;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0105_out),
        .I1(I1103_out),
        .O(of_pc_ii_26),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__27 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out),
        .O(I1103_out));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_266
   (of_pc_ii_25,
    of_pause_reg,
    I0101_out,
    Q,
    \Using_FPGA.Native_0 ,
    out);
  output of_pc_ii_25;
  input of_pause_reg;
  input I0101_out;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input [0:0]out;

  wire I0101_out;
  wire I199_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_25;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0101_out),
        .I1(I199_out),
        .O(of_pc_ii_25),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__26 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out),
        .O(I199_out));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_268
   (of_pc_ii_24,
    of_pause_reg,
    I097_out,
    Q,
    \Using_FPGA.Native_0 ,
    out);
  output of_pc_ii_24;
  input of_pause_reg;
  input I097_out;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input [0:0]out;

  wire I097_out;
  wire I195_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_24;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I097_out),
        .I1(I195_out),
        .O(of_pc_ii_24),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__25 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out),
        .O(I195_out));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_270
   (of_pc_ii_23,
    of_pause_reg,
    I093_out,
    Q,
    \Using_FPGA.Native_0 ,
    out);
  output of_pc_ii_23;
  input of_pause_reg;
  input I093_out;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input [0:0]out;

  wire I093_out;
  wire I191_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_23;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I093_out),
        .I1(I191_out),
        .O(of_pc_ii_23),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__24 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out),
        .O(I191_out));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_272
   (of_pc_ii_22,
    of_pause_reg,
    I089_out,
    Q,
    \Using_FPGA.Native_0 ,
    out);
  output of_pc_ii_22;
  input of_pause_reg;
  input I089_out;
  input [0:0]Q;
  input \Using_FPGA.Native_0 ;
  input [0:0]out;

  wire I089_out;
  wire I187_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire of_pause_reg;
  wire of_pc_ii_22;
  wire [0:0]out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I089_out),
        .I1(I187_out),
        .O(of_pc_ii_22),
        .S(of_pause_reg));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__23 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 ),
        .I2(out),
        .O(I187_out));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_427
   (D,
    of_op1_sel_spr,
    \Using_FPGA.Native_0 ,
    I1);
  output [0:0]D;
  input of_op1_sel_spr;
  input [0:0]\Using_FPGA.Native_0 ;
  input I1;

  wire [0:0]D;
  wire I1;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire of_op1_sel_spr;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(I1),
        .O(D),
        .S(of_op1_sel_spr));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_428
   (D,
    \EX_Branch_CMP_Op1_reg[10] ,
    \Using_FPGA.Native_0 ,
    of_op1_sel_spr,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \ex_gpr_write_addr_reg[0] ,
    \EX_Op2_reg[10] ,
    ex_sel_alu,
    ex_swap_instr,
    ex_Enable_Sext_Shift,
    Q,
    \EX_Sext_Op_reg[0] ,
    out,
    ex_swap_byte_instr);
  output [0:0]D;
  output \EX_Branch_CMP_Op1_reg[10] ;
  output [0:0]\Using_FPGA.Native_0 ;
  input of_op1_sel_spr;
  input [0:0]\Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input \ex_gpr_write_addr_reg[0] ;
  input [0:0]\EX_Op2_reg[10] ;
  input ex_sel_alu;
  input ex_swap_instr;
  input ex_Enable_Sext_Shift;
  input [3:0]Q;
  input [1:0]\EX_Sext_Op_reg[0] ;
  input out;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire \EX_Branch_CMP_Op1_reg[10] ;
  wire [0:0]\EX_Op2_reg[10] ;
  wire [1:0]\EX_Sext_Op_reg[0] ;
  wire [3:0]Q;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_i_2__124_n_0 ;
  wire \Using_FPGA.Native_i_3__60_n_0 ;
  wire ex_Enable_Sext_Shift;
  wire \ex_gpr_write_addr_reg[0] ;
  wire ex_sel_alu;
  wire ex_swap_byte_instr;
  wire ex_swap_instr;
  wire of_op1_sel_spr;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(\Using_FPGA.Native_2 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT6 #(
    .INIT(64'hBBBBBBBB8B888888)) 
    \Using_FPGA.Native_i_1__155 
       (.I0(\EX_Op2_reg[10] ),
        .I1(ex_sel_alu),
        .I2(ex_swap_instr),
        .I3(ex_Enable_Sext_Shift),
        .I4(\Using_FPGA.Native_i_2__124_n_0 ),
        .I5(\Using_FPGA.Native_i_3__60_n_0 ),
        .O(\Using_FPGA.Native_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \Using_FPGA.Native_i_2__124 
       (.I0(Q[3]),
        .I1(\EX_Sext_Op_reg[0] [0]),
        .I2(Q[2]),
        .I3(\EX_Sext_Op_reg[0] [1]),
        .I4(out),
        .O(\Using_FPGA.Native_i_2__124_n_0 ));
  LUT4 #(
    .INIT(16'hE200)) 
    \Using_FPGA.Native_i_3__60 
       (.I0(Q[0]),
        .I1(ex_swap_byte_instr),
        .I2(Q[1]),
        .I3(ex_swap_instr),
        .O(\Using_FPGA.Native_i_3__60_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_4__13 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\ex_gpr_write_addr_reg[0] ),
        .O(\EX_Branch_CMP_Op1_reg[10] ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_429
   (D,
    \EX_Branch_CMP_Op1_reg[11] ,
    \Using_FPGA.Native_0 ,
    of_op1_sel_spr,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \ex_gpr_write_addr_reg[0] ,
    \EX_Op2_reg[11] ,
    ex_sel_alu,
    ex_swap_instr,
    ex_Enable_Sext_Shift,
    Q,
    \EX_Sext_Op_reg[0] ,
    out,
    ex_swap_byte_instr);
  output [0:0]D;
  output \EX_Branch_CMP_Op1_reg[11] ;
  output [0:0]\Using_FPGA.Native_0 ;
  input of_op1_sel_spr;
  input [0:0]\Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input \ex_gpr_write_addr_reg[0] ;
  input [0:0]\EX_Op2_reg[11] ;
  input ex_sel_alu;
  input ex_swap_instr;
  input ex_Enable_Sext_Shift;
  input [3:0]Q;
  input [1:0]\EX_Sext_Op_reg[0] ;
  input out;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire \EX_Branch_CMP_Op1_reg[11] ;
  wire [0:0]\EX_Op2_reg[11] ;
  wire [1:0]\EX_Sext_Op_reg[0] ;
  wire [3:0]Q;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_i_2__125_n_0 ;
  wire \Using_FPGA.Native_i_3__61_n_0 ;
  wire ex_Enable_Sext_Shift;
  wire \ex_gpr_write_addr_reg[0] ;
  wire ex_sel_alu;
  wire ex_swap_byte_instr;
  wire ex_swap_instr;
  wire of_op1_sel_spr;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(\Using_FPGA.Native_2 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT6 #(
    .INIT(64'hBBBBBBBB8B888888)) 
    \Using_FPGA.Native_i_1__154 
       (.I0(\EX_Op2_reg[11] ),
        .I1(ex_sel_alu),
        .I2(ex_swap_instr),
        .I3(ex_Enable_Sext_Shift),
        .I4(\Using_FPGA.Native_i_2__125_n_0 ),
        .I5(\Using_FPGA.Native_i_3__61_n_0 ),
        .O(\Using_FPGA.Native_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \Using_FPGA.Native_i_2__125 
       (.I0(Q[3]),
        .I1(\EX_Sext_Op_reg[0] [0]),
        .I2(Q[2]),
        .I3(\EX_Sext_Op_reg[0] [1]),
        .I4(out),
        .O(\Using_FPGA.Native_i_2__125_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_3__38 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\ex_gpr_write_addr_reg[0] ),
        .O(\EX_Branch_CMP_Op1_reg[11] ));
  LUT4 #(
    .INIT(16'hE200)) 
    \Using_FPGA.Native_i_3__61 
       (.I0(Q[0]),
        .I1(ex_swap_byte_instr),
        .I2(Q[1]),
        .I3(ex_swap_instr),
        .O(\Using_FPGA.Native_i_3__61_n_0 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_430
   (D,
    \EX_Branch_CMP_Op1_reg[12] ,
    \Using_FPGA.Native_0 ,
    of_op1_sel_spr,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \ex_gpr_write_addr_reg[0] ,
    \EX_Op2_reg[12] ,
    ex_sel_alu,
    ex_swap_instr,
    ex_Enable_Sext_Shift,
    Q,
    \EX_Sext_Op_reg[0] ,
    out,
    ex_swap_byte_instr);
  output [0:0]D;
  output \EX_Branch_CMP_Op1_reg[12] ;
  output [0:0]\Using_FPGA.Native_0 ;
  input of_op1_sel_spr;
  input [0:0]\Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input \ex_gpr_write_addr_reg[0] ;
  input [0:0]\EX_Op2_reg[12] ;
  input ex_sel_alu;
  input ex_swap_instr;
  input ex_Enable_Sext_Shift;
  input [3:0]Q;
  input [1:0]\EX_Sext_Op_reg[0] ;
  input out;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire \EX_Branch_CMP_Op1_reg[12] ;
  wire [0:0]\EX_Op2_reg[12] ;
  wire [1:0]\EX_Sext_Op_reg[0] ;
  wire [3:0]Q;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_i_2__126_n_0 ;
  wire \Using_FPGA.Native_i_3__62_n_0 ;
  wire ex_Enable_Sext_Shift;
  wire \ex_gpr_write_addr_reg[0] ;
  wire ex_sel_alu;
  wire ex_swap_byte_instr;
  wire ex_swap_instr;
  wire of_op1_sel_spr;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(\Using_FPGA.Native_2 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT6 #(
    .INIT(64'hBBBBBBBB8B888888)) 
    \Using_FPGA.Native_i_1__153 
       (.I0(\EX_Op2_reg[12] ),
        .I1(ex_sel_alu),
        .I2(ex_swap_instr),
        .I3(ex_Enable_Sext_Shift),
        .I4(\Using_FPGA.Native_i_2__126_n_0 ),
        .I5(\Using_FPGA.Native_i_3__62_n_0 ),
        .O(\Using_FPGA.Native_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \Using_FPGA.Native_i_2__126 
       (.I0(Q[3]),
        .I1(\EX_Sext_Op_reg[0] [0]),
        .I2(Q[2]),
        .I3(\EX_Sext_Op_reg[0] [1]),
        .I4(out),
        .O(\Using_FPGA.Native_i_2__126_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_3__37 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\ex_gpr_write_addr_reg[0] ),
        .O(\EX_Branch_CMP_Op1_reg[12] ));
  LUT4 #(
    .INIT(16'hE200)) 
    \Using_FPGA.Native_i_3__62 
       (.I0(Q[0]),
        .I1(ex_swap_byte_instr),
        .I2(Q[1]),
        .I3(ex_swap_instr),
        .O(\Using_FPGA.Native_i_3__62_n_0 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_431
   (D,
    \EX_Branch_CMP_Op1_reg[13] ,
    \Using_FPGA.Native_0 ,
    of_op1_sel_spr,
    \WB_MEM_Result_reg[13] ,
    \Using_FPGA.Native_1 ,
    \ex_gpr_write_addr_reg[0] ,
    \EX_Op2_reg[13] ,
    ex_sel_alu,
    ex_swap_instr,
    ex_Enable_Sext_Shift,
    Q,
    \EX_Sext_Op_reg[0] ,
    out,
    ex_swap_byte_instr);
  output [0:0]D;
  output \EX_Branch_CMP_Op1_reg[13] ;
  output [0:0]\Using_FPGA.Native_0 ;
  input of_op1_sel_spr;
  input [0:0]\WB_MEM_Result_reg[13] ;
  input \Using_FPGA.Native_1 ;
  input \ex_gpr_write_addr_reg[0] ;
  input [0:0]\EX_Op2_reg[13] ;
  input ex_sel_alu;
  input ex_swap_instr;
  input ex_Enable_Sext_Shift;
  input [3:0]Q;
  input [1:0]\EX_Sext_Op_reg[0] ;
  input out;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire \EX_Branch_CMP_Op1_reg[13] ;
  wire [0:0]\EX_Op2_reg[13] ;
  wire [1:0]\EX_Sext_Op_reg[0] ;
  wire [3:0]Q;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_i_2__127_n_0 ;
  wire \Using_FPGA.Native_i_3__63_n_0 ;
  wire [0:0]\WB_MEM_Result_reg[13] ;
  wire ex_Enable_Sext_Shift;
  wire \ex_gpr_write_addr_reg[0] ;
  wire ex_sel_alu;
  wire ex_swap_byte_instr;
  wire ex_swap_instr;
  wire of_op1_sel_spr;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\WB_MEM_Result_reg[13] ),
        .I1(\Using_FPGA.Native_1 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT6 #(
    .INIT(64'hBBBBBBBB8B888888)) 
    \Using_FPGA.Native_i_1__152 
       (.I0(\EX_Op2_reg[13] ),
        .I1(ex_sel_alu),
        .I2(ex_swap_instr),
        .I3(ex_Enable_Sext_Shift),
        .I4(\Using_FPGA.Native_i_2__127_n_0 ),
        .I5(\Using_FPGA.Native_i_3__63_n_0 ),
        .O(\Using_FPGA.Native_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \Using_FPGA.Native_i_2__127 
       (.I0(Q[3]),
        .I1(\EX_Sext_Op_reg[0] [0]),
        .I2(Q[2]),
        .I3(\EX_Sext_Op_reg[0] [1]),
        .I4(out),
        .O(\Using_FPGA.Native_i_2__127_n_0 ));
  LUT4 #(
    .INIT(16'hE200)) 
    \Using_FPGA.Native_i_3__63 
       (.I0(Q[0]),
        .I1(ex_swap_byte_instr),
        .I2(Q[1]),
        .I3(ex_swap_instr),
        .O(\Using_FPGA.Native_i_3__63_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_4__12 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\ex_gpr_write_addr_reg[0] ),
        .O(\EX_Branch_CMP_Op1_reg[13] ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_432
   (D,
    \EX_Branch_CMP_Op1_reg[14] ,
    \Using_FPGA.Native_0 ,
    of_op1_sel_spr,
    \WB_MEM_Result_reg[14] ,
    \Using_FPGA.Native_1 ,
    \ex_gpr_write_addr_reg[0] ,
    \EX_Op2_reg[14] ,
    ex_sel_alu,
    ex_swap_instr,
    ex_Enable_Sext_Shift,
    Q,
    \EX_Sext_Op_reg[0] ,
    out,
    ex_swap_byte_instr);
  output [0:0]D;
  output \EX_Branch_CMP_Op1_reg[14] ;
  output [0:0]\Using_FPGA.Native_0 ;
  input of_op1_sel_spr;
  input [0:0]\WB_MEM_Result_reg[14] ;
  input \Using_FPGA.Native_1 ;
  input \ex_gpr_write_addr_reg[0] ;
  input [0:0]\EX_Op2_reg[14] ;
  input ex_sel_alu;
  input ex_swap_instr;
  input ex_Enable_Sext_Shift;
  input [3:0]Q;
  input [1:0]\EX_Sext_Op_reg[0] ;
  input out;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire \EX_Branch_CMP_Op1_reg[14] ;
  wire [0:0]\EX_Op2_reg[14] ;
  wire [1:0]\EX_Sext_Op_reg[0] ;
  wire [3:0]Q;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_i_2__128_n_0 ;
  wire \Using_FPGA.Native_i_3__64_n_0 ;
  wire [0:0]\WB_MEM_Result_reg[14] ;
  wire ex_Enable_Sext_Shift;
  wire \ex_gpr_write_addr_reg[0] ;
  wire ex_sel_alu;
  wire ex_swap_byte_instr;
  wire ex_swap_instr;
  wire of_op1_sel_spr;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\WB_MEM_Result_reg[14] ),
        .I1(\Using_FPGA.Native_1 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT6 #(
    .INIT(64'hBBBBBBBB8B888888)) 
    \Using_FPGA.Native_i_1__151 
       (.I0(\EX_Op2_reg[14] ),
        .I1(ex_sel_alu),
        .I2(ex_swap_instr),
        .I3(ex_Enable_Sext_Shift),
        .I4(\Using_FPGA.Native_i_2__128_n_0 ),
        .I5(\Using_FPGA.Native_i_3__64_n_0 ),
        .O(\Using_FPGA.Native_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \Using_FPGA.Native_i_2__128 
       (.I0(Q[3]),
        .I1(\EX_Sext_Op_reg[0] [0]),
        .I2(Q[2]),
        .I3(\EX_Sext_Op_reg[0] [1]),
        .I4(out),
        .O(\Using_FPGA.Native_i_2__128_n_0 ));
  LUT4 #(
    .INIT(16'hE200)) 
    \Using_FPGA.Native_i_3__64 
       (.I0(Q[0]),
        .I1(ex_swap_byte_instr),
        .I2(Q[1]),
        .I3(ex_swap_instr),
        .O(\Using_FPGA.Native_i_3__64_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_4__11 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\ex_gpr_write_addr_reg[0] ),
        .O(\EX_Branch_CMP_Op1_reg[14] ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_433
   (D,
    \EX_Branch_CMP_Op1_reg[15] ,
    \Using_FPGA.Native_0 ,
    of_op1_sel_spr,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \ex_gpr_write_addr_reg[0] ,
    \EX_Op2_reg[15] ,
    ex_sel_alu,
    ex_swap_instr,
    ex_Enable_Sext_Shift,
    Q,
    \EX_Sext_Op_reg[0] ,
    out,
    ex_swap_byte_instr);
  output [0:0]D;
  output \EX_Branch_CMP_Op1_reg[15] ;
  output [0:0]\Using_FPGA.Native_0 ;
  input of_op1_sel_spr;
  input [0:0]\Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input \ex_gpr_write_addr_reg[0] ;
  input [0:0]\EX_Op2_reg[15] ;
  input ex_sel_alu;
  input ex_swap_instr;
  input ex_Enable_Sext_Shift;
  input [3:0]Q;
  input [1:0]\EX_Sext_Op_reg[0] ;
  input out;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire \EX_Branch_CMP_Op1_reg[15] ;
  wire [0:0]\EX_Op2_reg[15] ;
  wire [1:0]\EX_Sext_Op_reg[0] ;
  wire [3:0]Q;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_i_2__129_n_0 ;
  wire \Using_FPGA.Native_i_3__65_n_0 ;
  wire ex_Enable_Sext_Shift;
  wire \ex_gpr_write_addr_reg[0] ;
  wire ex_sel_alu;
  wire ex_swap_byte_instr;
  wire ex_swap_instr;
  wire of_op1_sel_spr;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(\Using_FPGA.Native_2 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT6 #(
    .INIT(64'hBBBBBBBB8B888888)) 
    \Using_FPGA.Native_i_1__150 
       (.I0(\EX_Op2_reg[15] ),
        .I1(ex_sel_alu),
        .I2(ex_swap_instr),
        .I3(ex_Enable_Sext_Shift),
        .I4(\Using_FPGA.Native_i_2__129_n_0 ),
        .I5(\Using_FPGA.Native_i_3__65_n_0 ),
        .O(\Using_FPGA.Native_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \Using_FPGA.Native_i_2__129 
       (.I0(Q[3]),
        .I1(\EX_Sext_Op_reg[0] [0]),
        .I2(Q[2]),
        .I3(\EX_Sext_Op_reg[0] [1]),
        .I4(out),
        .O(\Using_FPGA.Native_i_2__129_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_3__36 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\ex_gpr_write_addr_reg[0] ),
        .O(\EX_Branch_CMP_Op1_reg[15] ));
  LUT4 #(
    .INIT(16'hE200)) 
    \Using_FPGA.Native_i_3__65 
       (.I0(Q[0]),
        .I1(ex_swap_byte_instr),
        .I2(Q[1]),
        .I3(ex_swap_instr),
        .O(\Using_FPGA.Native_i_3__65_n_0 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_434
   (D,
    \EX_Branch_CMP_Op1_reg[16] ,
    \Using_FPGA.Native_0 ,
    of_op1_sel_spr,
    \WB_MEM_Result_reg[16] ,
    \Using_FPGA.Native_1 ,
    \ex_gpr_write_addr_reg[0] ,
    \Using_FPGA.Native_2 ,
    mem_ex_result,
    \EX_Op2_reg[16] ,
    ex_sel_alu,
    ex_swap_instr,
    ex_Enable_Sext_Shift,
    Q,
    \EX_Sext_Op_reg[0] ,
    \EX_Sext_Op_reg[1] ,
    ex_swap_byte_instr);
  output [0:0]D;
  output \EX_Branch_CMP_Op1_reg[16] ;
  output [0:0]\Using_FPGA.Native_0 ;
  input of_op1_sel_spr;
  input [0:0]\WB_MEM_Result_reg[16] ;
  input \Using_FPGA.Native_1 ;
  input \ex_gpr_write_addr_reg[0] ;
  input \Using_FPGA.Native_2 ;
  input [0:0]mem_ex_result;
  input [0:0]\EX_Op2_reg[16] ;
  input ex_sel_alu;
  input ex_swap_instr;
  input ex_Enable_Sext_Shift;
  input [3:0]Q;
  input [1:0]\EX_Sext_Op_reg[0] ;
  input \EX_Sext_Op_reg[1] ;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire \EX_Branch_CMP_Op1_reg[16] ;
  wire [0:0]\EX_Op2_reg[16] ;
  wire [1:0]\EX_Sext_Op_reg[0] ;
  wire \EX_Sext_Op_reg[1] ;
  wire [3:0]Q;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_i_2__147_n_0 ;
  wire \Using_FPGA.Native_i_3__43_n_0 ;
  wire [0:0]\WB_MEM_Result_reg[16] ;
  wire ex_Enable_Sext_Shift;
  wire \ex_gpr_write_addr_reg[0] ;
  wire ex_sel_alu;
  wire ex_swap_byte_instr;
  wire ex_swap_instr;
  wire [0:0]mem_ex_result;
  wire of_op1_sel_spr;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\WB_MEM_Result_reg[16] ),
        .I1(\Using_FPGA.Native_1 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT6 #(
    .INIT(64'hB8B8BBB8B8B8B8B8)) 
    \Using_FPGA.Native_i_1__149 
       (.I0(\EX_Op2_reg[16] ),
        .I1(ex_sel_alu),
        .I2(\Using_FPGA.Native_i_2__147_n_0 ),
        .I3(\Using_FPGA.Native_i_3__43_n_0 ),
        .I4(ex_swap_instr),
        .I5(ex_Enable_Sext_Shift),
        .O(\Using_FPGA.Native_0 ));
  LUT4 #(
    .INIT(16'hE200)) 
    \Using_FPGA.Native_i_2__147 
       (.I0(Q[3]),
        .I1(ex_swap_byte_instr),
        .I2(Q[2]),
        .I3(ex_swap_instr),
        .O(\Using_FPGA.Native_i_2__147_n_0 ));
  LUT4 #(
    .INIT(16'hE222)) 
    \Using_FPGA.Native_i_3__26 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\ex_gpr_write_addr_reg[0] ),
        .I2(\Using_FPGA.Native_2 ),
        .I3(mem_ex_result),
        .O(\EX_Branch_CMP_Op1_reg[16] ));
  LUT5 #(
    .INIT(32'hB8F3B8C0)) 
    \Using_FPGA.Native_i_3__43 
       (.I0(Q[1]),
        .I1(\EX_Sext_Op_reg[0] [1]),
        .I2(Q[0]),
        .I3(\EX_Sext_Op_reg[0] [0]),
        .I4(\EX_Sext_Op_reg[1] ),
        .O(\Using_FPGA.Native_i_3__43_n_0 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_435
   (D,
    \Using_FPGA.Native_0 ,
    of_op1_sel_spr,
    \WB_MEM_Result_reg[17] ,
    \Using_FPGA.Native_1 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output \Using_FPGA.Native_0 ;
  input of_op1_sel_spr;
  input [0:0]\WB_MEM_Result_reg[17] ;
  input \Using_FPGA.Native_1 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]\WB_MEM_Result_reg[17] ;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\WB_MEM_Result_reg[17] ),
        .I1(\Using_FPGA.Native_1 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__130 
       (.I0(Q[0]),
        .I1(ex_swap_byte_instr),
        .I2(Q[1]),
        .O(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_436
   (D,
    \Using_FPGA.Native_0 ,
    of_op1_sel_spr,
    \WB_MEM_Result_reg[18] ,
    \Using_FPGA.Native_1 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output \Using_FPGA.Native_0 ;
  input of_op1_sel_spr;
  input [0:0]\WB_MEM_Result_reg[18] ;
  input \Using_FPGA.Native_1 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]\WB_MEM_Result_reg[18] ;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\WB_MEM_Result_reg[18] ),
        .I1(\Using_FPGA.Native_1 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__131 
       (.I0(Q[0]),
        .I1(ex_swap_byte_instr),
        .I2(Q[1]),
        .O(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_437
   (D,
    \Using_FPGA.Native_0 ,
    of_op1_sel_spr,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output \Using_FPGA.Native_0 ;
  input of_op1_sel_spr;
  input [0:0]\Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(\Using_FPGA.Native_2 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__132 
       (.I0(Q[0]),
        .I1(ex_swap_byte_instr),
        .I2(Q[1]),
        .O(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_438
   (D,
    \EX_Branch_CMP_Op1_reg[1] ,
    \Using_FPGA.Native_0 ,
    of_op1_sel_spr,
    \WB_MEM_Result_reg[1] ,
    \Using_FPGA.Native_1 ,
    \ex_gpr_write_addr_reg[0] ,
    \EX_Op2_reg[1] ,
    ex_sel_alu,
    ex_swap_instr,
    ex_Enable_Sext_Shift,
    Q,
    \EX_Sext_Op_reg[0] ,
    out,
    ex_swap_byte_instr);
  output [0:0]D;
  output \EX_Branch_CMP_Op1_reg[1] ;
  output [0:0]\Using_FPGA.Native_0 ;
  input of_op1_sel_spr;
  input [0:0]\WB_MEM_Result_reg[1] ;
  input \Using_FPGA.Native_1 ;
  input \ex_gpr_write_addr_reg[0] ;
  input [0:0]\EX_Op2_reg[1] ;
  input ex_sel_alu;
  input ex_swap_instr;
  input ex_Enable_Sext_Shift;
  input [3:0]Q;
  input [1:0]\EX_Sext_Op_reg[0] ;
  input out;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire \EX_Branch_CMP_Op1_reg[1] ;
  wire [0:0]\EX_Op2_reg[1] ;
  wire [1:0]\EX_Sext_Op_reg[0] ;
  wire [3:0]Q;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_i_2__115_n_0 ;
  wire \Using_FPGA.Native_i_3__51_n_0 ;
  wire [0:0]\WB_MEM_Result_reg[1] ;
  wire ex_Enable_Sext_Shift;
  wire \ex_gpr_write_addr_reg[0] ;
  wire ex_sel_alu;
  wire ex_swap_byte_instr;
  wire ex_swap_instr;
  wire of_op1_sel_spr;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\WB_MEM_Result_reg[1] ),
        .I1(\Using_FPGA.Native_1 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT6 #(
    .INIT(64'hBBBBBBBB8B888888)) 
    \Using_FPGA.Native_i_1__164 
       (.I0(\EX_Op2_reg[1] ),
        .I1(ex_sel_alu),
        .I2(ex_swap_instr),
        .I3(ex_Enable_Sext_Shift),
        .I4(\Using_FPGA.Native_i_2__115_n_0 ),
        .I5(\Using_FPGA.Native_i_3__51_n_0 ),
        .O(\Using_FPGA.Native_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \Using_FPGA.Native_i_2__115 
       (.I0(Q[3]),
        .I1(\EX_Sext_Op_reg[0] [0]),
        .I2(Q[2]),
        .I3(\EX_Sext_Op_reg[0] [1]),
        .I4(out),
        .O(\Using_FPGA.Native_i_2__115_n_0 ));
  LUT4 #(
    .INIT(16'hE200)) 
    \Using_FPGA.Native_i_3__51 
       (.I0(Q[1]),
        .I1(ex_swap_byte_instr),
        .I2(Q[0]),
        .I3(ex_swap_instr),
        .O(\Using_FPGA.Native_i_3__51_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_4__18 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\ex_gpr_write_addr_reg[0] ),
        .O(\EX_Branch_CMP_Op1_reg[1] ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_439
   (D,
    \Using_FPGA.Native_0 ,
    of_op1_sel_spr,
    \WB_MEM_Result_reg[20] ,
    \Using_FPGA.Native_1 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output \Using_FPGA.Native_0 ;
  input of_op1_sel_spr;
  input [0:0]\WB_MEM_Result_reg[20] ;
  input \Using_FPGA.Native_1 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]\WB_MEM_Result_reg[20] ;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\WB_MEM_Result_reg[20] ),
        .I1(\Using_FPGA.Native_1 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__133 
       (.I0(Q[0]),
        .I1(ex_swap_byte_instr),
        .I2(Q[1]),
        .O(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_440
   (D,
    \Using_FPGA.Native_0 ,
    of_op1_sel_spr,
    \WB_MEM_Result_reg[21] ,
    \Using_FPGA.Native_1 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output \Using_FPGA.Native_0 ;
  input of_op1_sel_spr;
  input [0:0]\WB_MEM_Result_reg[21] ;
  input \Using_FPGA.Native_1 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]\WB_MEM_Result_reg[21] ;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\WB_MEM_Result_reg[21] ),
        .I1(\Using_FPGA.Native_1 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__134 
       (.I0(Q[0]),
        .I1(ex_swap_byte_instr),
        .I2(Q[1]),
        .O(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_441
   (D,
    \Using_FPGA.Native_0 ,
    of_op1_sel_spr,
    \WB_MEM_Result_reg[22] ,
    \Using_FPGA.Native_1 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output \Using_FPGA.Native_0 ;
  input of_op1_sel_spr;
  input [0:0]\WB_MEM_Result_reg[22] ;
  input \Using_FPGA.Native_1 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]\WB_MEM_Result_reg[22] ;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\WB_MEM_Result_reg[22] ),
        .I1(\Using_FPGA.Native_1 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__135 
       (.I0(Q[0]),
        .I1(ex_swap_byte_instr),
        .I2(Q[1]),
        .O(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_442
   (D,
    \Using_FPGA.Native_0 ,
    of_op1_sel_spr,
    \WB_MEM_Result_reg[23] ,
    \Using_FPGA.Native_1 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output \Using_FPGA.Native_0 ;
  input of_op1_sel_spr;
  input [0:0]\WB_MEM_Result_reg[23] ;
  input \Using_FPGA.Native_1 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]\WB_MEM_Result_reg[23] ;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\WB_MEM_Result_reg[23] ),
        .I1(\Using_FPGA.Native_1 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__136 
       (.I0(Q[0]),
        .I1(ex_swap_byte_instr),
        .I2(Q[1]),
        .O(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_443
   (D,
    \Using_FPGA.Native_0 ,
    of_op1_sel_spr,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output \Using_FPGA.Native_0 ;
  input of_op1_sel_spr;
  input [0:0]\Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(\Using_FPGA.Native_2 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__137 
       (.I0(Q[1]),
        .I1(ex_swap_byte_instr),
        .I2(Q[0]),
        .O(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_444
   (D,
    \Using_FPGA.Native_0 ,
    of_op1_sel_spr,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output \Using_FPGA.Native_0 ;
  input of_op1_sel_spr;
  input [0:0]\Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(\Using_FPGA.Native_2 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__138 
       (.I0(Q[1]),
        .I1(ex_swap_byte_instr),
        .I2(Q[0]),
        .O(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_445
   (D,
    \Using_FPGA.Native_0 ,
    of_op1_sel_spr,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output \Using_FPGA.Native_0 ;
  input of_op1_sel_spr;
  input [0:0]\Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(\Using_FPGA.Native_2 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__139 
       (.I0(Q[1]),
        .I1(ex_swap_byte_instr),
        .I2(Q[0]),
        .O(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_446
   (D,
    \Using_FPGA.Native_0 ,
    of_op1_sel_spr,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output \Using_FPGA.Native_0 ;
  input of_op1_sel_spr;
  input [0:0]\Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(\Using_FPGA.Native_2 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__140 
       (.I0(Q[1]),
        .I1(ex_swap_byte_instr),
        .I2(Q[0]),
        .O(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_447
   (D,
    \Using_FPGA.Native_0 ,
    of_op1_sel_spr,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output \Using_FPGA.Native_0 ;
  input of_op1_sel_spr;
  input [0:0]\Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(\Using_FPGA.Native_2 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__141 
       (.I0(Q[1]),
        .I1(ex_swap_byte_instr),
        .I2(Q[0]),
        .O(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_448
   (D,
    \Using_FPGA.Native_0 ,
    of_op1_sel_spr,
    \wb_exception_kind_i_reg[31] ,
    \Using_FPGA.Native_1 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output \Using_FPGA.Native_0 ;
  input of_op1_sel_spr;
  input [0:0]\wb_exception_kind_i_reg[31] ;
  input \Using_FPGA.Native_1 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]\wb_exception_kind_i_reg[31] ;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\wb_exception_kind_i_reg[31] ),
        .I1(\Using_FPGA.Native_1 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__142 
       (.I0(Q[1]),
        .I1(ex_swap_byte_instr),
        .I2(Q[0]),
        .O(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_449
   (D,
    \EX_Branch_CMP_Op1_reg[2] ,
    \Using_FPGA.Native_0 ,
    of_op1_sel_spr,
    \WB_MEM_Result_reg[2] ,
    \Using_FPGA.Native_1 ,
    \ex_gpr_write_addr_reg[0] ,
    \EX_Op2_reg[2] ,
    ex_sel_alu,
    ex_swap_instr,
    ex_Enable_Sext_Shift,
    Q,
    \EX_Sext_Op_reg[0] ,
    out,
    ex_swap_byte_instr);
  output [0:0]D;
  output \EX_Branch_CMP_Op1_reg[2] ;
  output [0:0]\Using_FPGA.Native_0 ;
  input of_op1_sel_spr;
  input [0:0]\WB_MEM_Result_reg[2] ;
  input \Using_FPGA.Native_1 ;
  input \ex_gpr_write_addr_reg[0] ;
  input [0:0]\EX_Op2_reg[2] ;
  input ex_sel_alu;
  input ex_swap_instr;
  input ex_Enable_Sext_Shift;
  input [3:0]Q;
  input [1:0]\EX_Sext_Op_reg[0] ;
  input out;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire \EX_Branch_CMP_Op1_reg[2] ;
  wire [0:0]\EX_Op2_reg[2] ;
  wire [1:0]\EX_Sext_Op_reg[0] ;
  wire [3:0]Q;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_i_2__116_n_0 ;
  wire \Using_FPGA.Native_i_3__52_n_0 ;
  wire [0:0]\WB_MEM_Result_reg[2] ;
  wire ex_Enable_Sext_Shift;
  wire \ex_gpr_write_addr_reg[0] ;
  wire ex_sel_alu;
  wire ex_swap_byte_instr;
  wire ex_swap_instr;
  wire of_op1_sel_spr;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\WB_MEM_Result_reg[2] ),
        .I1(\Using_FPGA.Native_1 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT6 #(
    .INIT(64'hBBBBBBBB8B888888)) 
    \Using_FPGA.Native_i_1__163 
       (.I0(\EX_Op2_reg[2] ),
        .I1(ex_sel_alu),
        .I2(ex_swap_instr),
        .I3(ex_Enable_Sext_Shift),
        .I4(\Using_FPGA.Native_i_2__116_n_0 ),
        .I5(\Using_FPGA.Native_i_3__52_n_0 ),
        .O(\Using_FPGA.Native_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \Using_FPGA.Native_i_2__116 
       (.I0(Q[3]),
        .I1(\EX_Sext_Op_reg[0] [0]),
        .I2(Q[2]),
        .I3(\EX_Sext_Op_reg[0] [1]),
        .I4(out),
        .O(\Using_FPGA.Native_i_2__116_n_0 ));
  LUT4 #(
    .INIT(16'hE200)) 
    \Using_FPGA.Native_i_3__52 
       (.I0(Q[1]),
        .I1(ex_swap_byte_instr),
        .I2(Q[0]),
        .I3(ex_swap_instr),
        .O(\Using_FPGA.Native_i_3__52_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_4__17 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\ex_gpr_write_addr_reg[0] ),
        .O(\EX_Branch_CMP_Op1_reg[2] ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_450
   (D,
    \Using_FPGA.Native_0 ,
    of_op1_sel_spr,
    \wb_exception_kind_i_reg[31] ,
    \Using_FPGA.Native_1 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output \Using_FPGA.Native_0 ;
  input of_op1_sel_spr;
  input [0:0]\wb_exception_kind_i_reg[31] ;
  input \Using_FPGA.Native_1 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]\wb_exception_kind_i_reg[31] ;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\wb_exception_kind_i_reg[31] ),
        .I1(\Using_FPGA.Native_1 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__143 
       (.I0(Q[1]),
        .I1(ex_swap_byte_instr),
        .I2(Q[0]),
        .O(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_451
   (D,
    \Using_FPGA.Native_0 ,
    of_op1_sel_spr,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output \Using_FPGA.Native_0 ;
  input of_op1_sel_spr;
  input [0:0]\Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(\Using_FPGA.Native_2 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__113 
       (.I0(Q[1]),
        .I1(ex_swap_byte_instr),
        .I2(Q[0]),
        .O(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_452
   (D,
    \EX_Branch_CMP_Op1_reg[3] ,
    \Using_FPGA.Native_0 ,
    of_op1_sel_spr,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \ex_gpr_write_addr_reg[0] ,
    \EX_Op2_reg[3] ,
    ex_sel_alu,
    ex_swap_instr,
    ex_Enable_Sext_Shift,
    Q,
    \EX_Sext_Op_reg[0] ,
    out,
    ex_swap_byte_instr);
  output [0:0]D;
  output \EX_Branch_CMP_Op1_reg[3] ;
  output [0:0]\Using_FPGA.Native_0 ;
  input of_op1_sel_spr;
  input [0:0]\Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input \ex_gpr_write_addr_reg[0] ;
  input [0:0]\EX_Op2_reg[3] ;
  input ex_sel_alu;
  input ex_swap_instr;
  input ex_Enable_Sext_Shift;
  input [3:0]Q;
  input [1:0]\EX_Sext_Op_reg[0] ;
  input out;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire \EX_Branch_CMP_Op1_reg[3] ;
  wire [0:0]\EX_Op2_reg[3] ;
  wire [1:0]\EX_Sext_Op_reg[0] ;
  wire [3:0]Q;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_i_2__117_n_0 ;
  wire \Using_FPGA.Native_i_3__53_n_0 ;
  wire ex_Enable_Sext_Shift;
  wire \ex_gpr_write_addr_reg[0] ;
  wire ex_sel_alu;
  wire ex_swap_byte_instr;
  wire ex_swap_instr;
  wire of_op1_sel_spr;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(\Using_FPGA.Native_2 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT6 #(
    .INIT(64'hBBBBBBBB8B888888)) 
    \Using_FPGA.Native_i_1__162 
       (.I0(\EX_Op2_reg[3] ),
        .I1(ex_sel_alu),
        .I2(ex_swap_instr),
        .I3(ex_Enable_Sext_Shift),
        .I4(\Using_FPGA.Native_i_2__117_n_0 ),
        .I5(\Using_FPGA.Native_i_3__53_n_0 ),
        .O(\Using_FPGA.Native_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \Using_FPGA.Native_i_2__117 
       (.I0(Q[3]),
        .I1(\EX_Sext_Op_reg[0] [0]),
        .I2(Q[2]),
        .I3(\EX_Sext_Op_reg[0] [1]),
        .I4(out),
        .O(\Using_FPGA.Native_i_2__117_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_3__41 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\ex_gpr_write_addr_reg[0] ),
        .O(\EX_Branch_CMP_Op1_reg[3] ));
  LUT4 #(
    .INIT(16'hE200)) 
    \Using_FPGA.Native_i_3__53 
       (.I0(Q[1]),
        .I1(ex_swap_byte_instr),
        .I2(Q[0]),
        .I3(ex_swap_instr),
        .O(\Using_FPGA.Native_i_3__53_n_0 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_453
   (D,
    \EX_Branch_CMP_Op1_reg[4] ,
    \Using_FPGA.Native_0 ,
    of_op1_sel_spr,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \ex_gpr_write_addr_reg[0] ,
    \EX_Op2_reg[4] ,
    ex_sel_alu,
    ex_swap_instr,
    ex_Enable_Sext_Shift,
    Q,
    \EX_Sext_Op_reg[0] ,
    out,
    ex_swap_byte_instr);
  output [0:0]D;
  output \EX_Branch_CMP_Op1_reg[4] ;
  output [0:0]\Using_FPGA.Native_0 ;
  input of_op1_sel_spr;
  input [0:0]\Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input \ex_gpr_write_addr_reg[0] ;
  input [0:0]\EX_Op2_reg[4] ;
  input ex_sel_alu;
  input ex_swap_instr;
  input ex_Enable_Sext_Shift;
  input [3:0]Q;
  input [1:0]\EX_Sext_Op_reg[0] ;
  input out;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire \EX_Branch_CMP_Op1_reg[4] ;
  wire [0:0]\EX_Op2_reg[4] ;
  wire [1:0]\EX_Sext_Op_reg[0] ;
  wire [3:0]Q;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_i_2__118_n_0 ;
  wire \Using_FPGA.Native_i_3__54_n_0 ;
  wire ex_Enable_Sext_Shift;
  wire \ex_gpr_write_addr_reg[0] ;
  wire ex_sel_alu;
  wire ex_swap_byte_instr;
  wire ex_swap_instr;
  wire of_op1_sel_spr;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(\Using_FPGA.Native_2 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT6 #(
    .INIT(64'hBBBBBBBB8B888888)) 
    \Using_FPGA.Native_i_1__161 
       (.I0(\EX_Op2_reg[4] ),
        .I1(ex_sel_alu),
        .I2(ex_swap_instr),
        .I3(ex_Enable_Sext_Shift),
        .I4(\Using_FPGA.Native_i_2__118_n_0 ),
        .I5(\Using_FPGA.Native_i_3__54_n_0 ),
        .O(\Using_FPGA.Native_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \Using_FPGA.Native_i_2__118 
       (.I0(Q[3]),
        .I1(\EX_Sext_Op_reg[0] [0]),
        .I2(Q[2]),
        .I3(\EX_Sext_Op_reg[0] [1]),
        .I4(out),
        .O(\Using_FPGA.Native_i_2__118_n_0 ));
  LUT4 #(
    .INIT(16'hE200)) 
    \Using_FPGA.Native_i_3__54 
       (.I0(Q[1]),
        .I1(ex_swap_byte_instr),
        .I2(Q[0]),
        .I3(ex_swap_instr),
        .O(\Using_FPGA.Native_i_3__54_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_4__16 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\ex_gpr_write_addr_reg[0] ),
        .O(\EX_Branch_CMP_Op1_reg[4] ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_454
   (D,
    \EX_Branch_CMP_Op1_reg[5] ,
    \Using_FPGA.Native_0 ,
    of_op1_sel_spr,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \ex_gpr_write_addr_reg[0] ,
    \EX_Op2_reg[5] ,
    ex_sel_alu,
    ex_swap_instr,
    ex_Enable_Sext_Shift,
    Q,
    \EX_Sext_Op_reg[0] ,
    out,
    ex_swap_byte_instr);
  output [0:0]D;
  output \EX_Branch_CMP_Op1_reg[5] ;
  output [0:0]\Using_FPGA.Native_0 ;
  input of_op1_sel_spr;
  input [0:0]\Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input \ex_gpr_write_addr_reg[0] ;
  input [0:0]\EX_Op2_reg[5] ;
  input ex_sel_alu;
  input ex_swap_instr;
  input ex_Enable_Sext_Shift;
  input [3:0]Q;
  input [1:0]\EX_Sext_Op_reg[0] ;
  input out;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire \EX_Branch_CMP_Op1_reg[5] ;
  wire [0:0]\EX_Op2_reg[5] ;
  wire [1:0]\EX_Sext_Op_reg[0] ;
  wire [3:0]Q;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_i_2__119_n_0 ;
  wire \Using_FPGA.Native_i_3__55_n_0 ;
  wire ex_Enable_Sext_Shift;
  wire \ex_gpr_write_addr_reg[0] ;
  wire ex_sel_alu;
  wire ex_swap_byte_instr;
  wire ex_swap_instr;
  wire of_op1_sel_spr;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(\Using_FPGA.Native_2 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT6 #(
    .INIT(64'hBBBBBBBB8B888888)) 
    \Using_FPGA.Native_i_1__160 
       (.I0(\EX_Op2_reg[5] ),
        .I1(ex_sel_alu),
        .I2(ex_swap_instr),
        .I3(ex_Enable_Sext_Shift),
        .I4(\Using_FPGA.Native_i_2__119_n_0 ),
        .I5(\Using_FPGA.Native_i_3__55_n_0 ),
        .O(\Using_FPGA.Native_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \Using_FPGA.Native_i_2__119 
       (.I0(Q[3]),
        .I1(\EX_Sext_Op_reg[0] [0]),
        .I2(Q[2]),
        .I3(\EX_Sext_Op_reg[0] [1]),
        .I4(out),
        .O(\Using_FPGA.Native_i_2__119_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_3__40 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\ex_gpr_write_addr_reg[0] ),
        .O(\EX_Branch_CMP_Op1_reg[5] ));
  LUT4 #(
    .INIT(16'hE200)) 
    \Using_FPGA.Native_i_3__55 
       (.I0(Q[1]),
        .I1(ex_swap_byte_instr),
        .I2(Q[0]),
        .I3(ex_swap_instr),
        .O(\Using_FPGA.Native_i_3__55_n_0 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_455
   (D,
    \EX_Branch_CMP_Op1_reg[6] ,
    \Using_FPGA.Native_0 ,
    of_op1_sel_spr,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \ex_gpr_write_addr_reg[0] ,
    \EX_Op2_reg[6] ,
    ex_sel_alu,
    ex_swap_instr,
    ex_Enable_Sext_Shift,
    Q,
    \EX_Sext_Op_reg[0] ,
    out,
    ex_swap_byte_instr);
  output [0:0]D;
  output \EX_Branch_CMP_Op1_reg[6] ;
  output [0:0]\Using_FPGA.Native_0 ;
  input of_op1_sel_spr;
  input [0:0]\Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input \ex_gpr_write_addr_reg[0] ;
  input [0:0]\EX_Op2_reg[6] ;
  input ex_sel_alu;
  input ex_swap_instr;
  input ex_Enable_Sext_Shift;
  input [3:0]Q;
  input [1:0]\EX_Sext_Op_reg[0] ;
  input out;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire \EX_Branch_CMP_Op1_reg[6] ;
  wire [0:0]\EX_Op2_reg[6] ;
  wire [1:0]\EX_Sext_Op_reg[0] ;
  wire [3:0]Q;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_i_2__120_n_0 ;
  wire \Using_FPGA.Native_i_3__56_n_0 ;
  wire ex_Enable_Sext_Shift;
  wire \ex_gpr_write_addr_reg[0] ;
  wire ex_sel_alu;
  wire ex_swap_byte_instr;
  wire ex_swap_instr;
  wire of_op1_sel_spr;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(\Using_FPGA.Native_2 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT6 #(
    .INIT(64'hBBBBBBBB8B888888)) 
    \Using_FPGA.Native_i_1__159 
       (.I0(\EX_Op2_reg[6] ),
        .I1(ex_sel_alu),
        .I2(ex_swap_instr),
        .I3(ex_Enable_Sext_Shift),
        .I4(\Using_FPGA.Native_i_2__120_n_0 ),
        .I5(\Using_FPGA.Native_i_3__56_n_0 ),
        .O(\Using_FPGA.Native_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \Using_FPGA.Native_i_2__120 
       (.I0(Q[3]),
        .I1(\EX_Sext_Op_reg[0] [0]),
        .I2(Q[2]),
        .I3(\EX_Sext_Op_reg[0] [1]),
        .I4(out),
        .O(\Using_FPGA.Native_i_2__120_n_0 ));
  LUT4 #(
    .INIT(16'hE200)) 
    \Using_FPGA.Native_i_3__56 
       (.I0(Q[1]),
        .I1(ex_swap_byte_instr),
        .I2(Q[0]),
        .I3(ex_swap_instr),
        .O(\Using_FPGA.Native_i_3__56_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_4__15 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\ex_gpr_write_addr_reg[0] ),
        .O(\EX_Branch_CMP_Op1_reg[6] ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_456
   (D,
    \EX_Branch_CMP_Op1_reg[7] ,
    \Using_FPGA.Native_0 ,
    of_op1_sel_spr,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \ex_gpr_write_addr_reg[0] ,
    \EX_Op2_reg[7] ,
    ex_sel_alu,
    ex_swap_instr,
    ex_Enable_Sext_Shift,
    Q,
    \EX_Sext_Op_reg[0] ,
    out,
    ex_swap_byte_instr);
  output [0:0]D;
  output \EX_Branch_CMP_Op1_reg[7] ;
  output [0:0]\Using_FPGA.Native_0 ;
  input of_op1_sel_spr;
  input [0:0]\Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input \ex_gpr_write_addr_reg[0] ;
  input [0:0]\EX_Op2_reg[7] ;
  input ex_sel_alu;
  input ex_swap_instr;
  input ex_Enable_Sext_Shift;
  input [3:0]Q;
  input [1:0]\EX_Sext_Op_reg[0] ;
  input out;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire \EX_Branch_CMP_Op1_reg[7] ;
  wire [0:0]\EX_Op2_reg[7] ;
  wire [1:0]\EX_Sext_Op_reg[0] ;
  wire [3:0]Q;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_i_2__121_n_0 ;
  wire \Using_FPGA.Native_i_3__57_n_0 ;
  wire ex_Enable_Sext_Shift;
  wire \ex_gpr_write_addr_reg[0] ;
  wire ex_sel_alu;
  wire ex_swap_byte_instr;
  wire ex_swap_instr;
  wire of_op1_sel_spr;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(\Using_FPGA.Native_2 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT6 #(
    .INIT(64'hBBBBBBBB8B888888)) 
    \Using_FPGA.Native_i_1__158 
       (.I0(\EX_Op2_reg[7] ),
        .I1(ex_sel_alu),
        .I2(ex_swap_instr),
        .I3(ex_Enable_Sext_Shift),
        .I4(\Using_FPGA.Native_i_2__121_n_0 ),
        .I5(\Using_FPGA.Native_i_3__57_n_0 ),
        .O(\Using_FPGA.Native_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \Using_FPGA.Native_i_2__121 
       (.I0(Q[3]),
        .I1(\EX_Sext_Op_reg[0] [0]),
        .I2(Q[2]),
        .I3(\EX_Sext_Op_reg[0] [1]),
        .I4(out),
        .O(\Using_FPGA.Native_i_2__121_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_3__39 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\ex_gpr_write_addr_reg[0] ),
        .O(\EX_Branch_CMP_Op1_reg[7] ));
  LUT4 #(
    .INIT(16'hE200)) 
    \Using_FPGA.Native_i_3__57 
       (.I0(Q[1]),
        .I1(ex_swap_byte_instr),
        .I2(Q[0]),
        .I3(ex_swap_instr),
        .O(\Using_FPGA.Native_i_3__57_n_0 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_457
   (D,
    \Using_FPGA.Native_0 ,
    of_op1_sel_spr,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \EX_Op2_reg[8] ,
    ex_sel_alu,
    ex_swap_instr,
    ex_Enable_Sext_Shift,
    Q,
    \EX_Sext_Op_reg[0] ,
    out,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]\Using_FPGA.Native_0 ;
  input of_op1_sel_spr;
  input [0:0]\Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input [0:0]\EX_Op2_reg[8] ;
  input ex_sel_alu;
  input ex_swap_instr;
  input ex_Enable_Sext_Shift;
  input [3:0]Q;
  input [1:0]\EX_Sext_Op_reg[0] ;
  input out;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [0:0]\EX_Op2_reg[8] ;
  wire [1:0]\EX_Sext_Op_reg[0] ;
  wire [3:0]Q;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_i_2__122_n_0 ;
  wire \Using_FPGA.Native_i_3__58_n_0 ;
  wire ex_Enable_Sext_Shift;
  wire ex_sel_alu;
  wire ex_swap_byte_instr;
  wire ex_swap_instr;
  wire of_op1_sel_spr;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(\Using_FPGA.Native_2 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT6 #(
    .INIT(64'hBBBBBBBB8B888888)) 
    \Using_FPGA.Native_i_1__157 
       (.I0(\EX_Op2_reg[8] ),
        .I1(ex_sel_alu),
        .I2(ex_swap_instr),
        .I3(ex_Enable_Sext_Shift),
        .I4(\Using_FPGA.Native_i_2__122_n_0 ),
        .I5(\Using_FPGA.Native_i_3__58_n_0 ),
        .O(\Using_FPGA.Native_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \Using_FPGA.Native_i_2__122 
       (.I0(Q[3]),
        .I1(\EX_Sext_Op_reg[0] [0]),
        .I2(Q[2]),
        .I3(\EX_Sext_Op_reg[0] [1]),
        .I4(out),
        .O(\Using_FPGA.Native_i_2__122_n_0 ));
  LUT4 #(
    .INIT(16'hE200)) 
    \Using_FPGA.Native_i_3__58 
       (.I0(Q[0]),
        .I1(ex_swap_byte_instr),
        .I2(Q[1]),
        .I3(ex_swap_instr),
        .O(\Using_FPGA.Native_i_3__58_n_0 ));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_MUXF7" *) 
module microblaze_v10_0_3_MB_MUXF7_458
   (D,
    \EX_Branch_CMP_Op1_reg[9] ,
    \Using_FPGA.Native_0 ,
    of_op1_sel_spr,
    \WB_MEM_Result_reg[9] ,
    \Using_FPGA.Native_1 ,
    \ex_gpr_write_addr_reg[0] ,
    \EX_Op2_reg[9] ,
    ex_sel_alu,
    ex_swap_instr,
    ex_Enable_Sext_Shift,
    Q,
    \EX_Sext_Op_reg[0] ,
    out,
    ex_swap_byte_instr);
  output [0:0]D;
  output \EX_Branch_CMP_Op1_reg[9] ;
  output [0:0]\Using_FPGA.Native_0 ;
  input of_op1_sel_spr;
  input [0:0]\WB_MEM_Result_reg[9] ;
  input \Using_FPGA.Native_1 ;
  input \ex_gpr_write_addr_reg[0] ;
  input [0:0]\EX_Op2_reg[9] ;
  input ex_sel_alu;
  input ex_swap_instr;
  input ex_Enable_Sext_Shift;
  input [3:0]Q;
  input [1:0]\EX_Sext_Op_reg[0] ;
  input out;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire \EX_Branch_CMP_Op1_reg[9] ;
  wire [0:0]\EX_Op2_reg[9] ;
  wire [1:0]\EX_Sext_Op_reg[0] ;
  wire [3:0]Q;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_i_2__123_n_0 ;
  wire \Using_FPGA.Native_i_3__59_n_0 ;
  wire [0:0]\WB_MEM_Result_reg[9] ;
  wire ex_Enable_Sext_Shift;
  wire \ex_gpr_write_addr_reg[0] ;
  wire ex_sel_alu;
  wire ex_swap_byte_instr;
  wire ex_swap_instr;
  wire of_op1_sel_spr;
  wire out;

  (* box_type = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\WB_MEM_Result_reg[9] ),
        .I1(\Using_FPGA.Native_1 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT6 #(
    .INIT(64'hBBBBBBBB8B888888)) 
    \Using_FPGA.Native_i_1__156 
       (.I0(\EX_Op2_reg[9] ),
        .I1(ex_sel_alu),
        .I2(ex_swap_instr),
        .I3(ex_Enable_Sext_Shift),
        .I4(\Using_FPGA.Native_i_2__123_n_0 ),
        .I5(\Using_FPGA.Native_i_3__59_n_0 ),
        .O(\Using_FPGA.Native_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \Using_FPGA.Native_i_2__123 
       (.I0(Q[3]),
        .I1(\EX_Sext_Op_reg[0] [0]),
        .I2(Q[2]),
        .I3(\EX_Sext_Op_reg[0] [1]),
        .I4(out),
        .O(\Using_FPGA.Native_i_2__123_n_0 ));
  LUT4 #(
    .INIT(16'hE200)) 
    \Using_FPGA.Native_i_3__59 
       (.I0(Q[0]),
        .I1(ex_swap_byte_instr),
        .I2(Q[1]),
        .I3(ex_swap_instr),
        .O(\Using_FPGA.Native_i_3__59_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_4__14 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\ex_gpr_write_addr_reg[0] ),
        .O(\EX_Branch_CMP_Op1_reg[9] ));
endmodule

module microblaze_v10_0_3_MB_SRL16E
   (Q_0,
    Q,
    Dbg_Clk);
  output Q_0;
  input [3:0]Q;
  input Dbg_Clk;

  wire Dbg_Clk;
  wire [3:0]Q;
  wire Q_0;

  (* box_type = "PRIMITIVE" *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.SRL16E_1/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h001B),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(1'b0),
        .CLK(Dbg_Clk),
        .D(1'b0),
        .Q(Q_0));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_SRL16E" *) 
module microblaze_v10_0_3_MB_SRL16E__parameterized0_18
   (\Use_Serial_Unified_Completion.mb_data_overrun_reg ,
    Q,
    Dbg_Clk,
    tdo_config_word1_0);
  output \Use_Serial_Unified_Completion.mb_data_overrun_reg ;
  input [7:0]Q;
  input Dbg_Clk;
  input tdo_config_word1_0;

  wire [7:0]Q;

  assign \Use_Serial_Unified_Completion.mb_data_overrun_reg  = Q[7];
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_SRL16E" *) 
module microblaze_v10_0_3_MB_SRL16E__parameterized1
   (Q6_out,
    Q,
    Dbg_Clk);
  output Q6_out;
  input [3:0]Q;
  input Dbg_Clk;

  wire Dbg_Clk;
  wire [3:0]Q;
  wire Q6_out;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses[1].SRL16E_Cache_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'hFFFF),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(1'b0),
        .CLK(Dbg_Clk),
        .D(1'b0),
        .Q(Q6_out));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_SRL16E" *) 
module microblaze_v10_0_3_MB_SRL16E__parameterized1_22
   (Q2_out,
    Q,
    Dbg_Clk);
  output Q2_out;
  input [3:0]Q;
  input Dbg_Clk;

  wire Dbg_Clk;
  wire [3:0]Q;
  wire Q2_out;

  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses[5].SRL16E_Cache_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'hFFFF),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(1'b0),
        .CLK(Dbg_Clk),
        .D(1'b0),
        .Q(Q2_out));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_SRL16E" *) 
module microblaze_v10_0_3_MB_SRL16E__parameterized2
   (\Use_Serial_Unified_Completion.mb_data_overrun_reg ,
    Q,
    Dbg_Clk,
    Q6_out,
    Q11_in,
    Q_0);
  output \Use_Serial_Unified_Completion.mb_data_overrun_reg ;
  input [5:0]Q;
  input Dbg_Clk;
  input Q6_out;
  input Q11_in;
  input Q_0;

  wire Dbg_Clk;
  wire [5:0]Q;
  wire Q5_out;
  wire Q6_out;
  wire Q_0;
  wire \Use_Serial_Unified_Completion.mb_data_overrun_reg ;

  LUT5 #(
    .INIT(32'hA0CFA0C0)) 
    Dbg_TDO_INST_0_i_14
       (.I0(Q5_out),
        .I1(Q6_out),
        .I2(Q[5]),
        .I3(Q[4]),
        .I4(Q_0),
        .O(\Use_Serial_Unified_Completion.mb_data_overrun_reg ));
  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses[2].SRL16E_Cache_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h3FFF),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(1'b0),
        .CLK(Dbg_Clk),
        .D(1'b0),
        .Q(Q5_out));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_SRL16E" *) 
module microblaze_v10_0_3_MB_SRL16E__parameterized2_23
   (\Use_Serial_Unified_Completion.mb_data_overrun_reg ,
    Q,
    Dbg_Clk,
    Q2_out,
    Q3_out,
    Q4_out);
  output \Use_Serial_Unified_Completion.mb_data_overrun_reg ;
  input [5:0]Q;
  input Dbg_Clk;
  input Q2_out;
  input Q3_out;
  input Q4_out;

  wire Dbg_Clk;
  wire [5:0]Q;
  wire Q1_out;
  wire Q2_out;
  wire \Use_Serial_Unified_Completion.mb_data_overrun_reg ;

  LUT4 #(
    .INIT(16'hA0C0)) 
    Dbg_TDO_INST_0_i_13
       (.I0(Q1_out),
        .I1(Q2_out),
        .I2(Q[5]),
        .I3(Q[4]),
        .O(\Use_Serial_Unified_Completion.mb_data_overrun_reg ));
  (* box_type = "PRIMITIVE" *) 
  (* srl_bus_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses " *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses[6].SRL16E_Cache_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h3FFF),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(1'b0),
        .CLK(Dbg_Clk),
        .D(1'b0),
        .Q(Q1_out));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_SRL16E" *) 
module microblaze_v10_0_3_MB_SRL16E__parameterized3
   (Q2_in,
    Q,
    Dbg_Clk);
  output Q2_in;
  input [3:0]Q;
  input Dbg_Clk;

  wire Dbg_Clk;
  wire [3:0]Q;
  wire Q2_in;

  (* box_type = "PRIMITIVE" *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.SRL16E_3/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0064),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(1'b0),
        .CLK(Dbg_Clk),
        .D(1'b0),
        .Q(Q2_in));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_MB_SRL16E" *) 
module microblaze_v10_0_3_MB_SRL16E__parameterized4
   (Dbg_TDO,
    Q,
    Dbg_Clk,
    \Serial_Dbg_Intf.shift_count_reg[4] ,
    \Serial_Dbg_Intf.shift_count_reg[5] ,
    \Use_Serial_Unified_Completion.completion_block_reg ,
    \Serial_Dbg_Intf.shift_count_reg[4]_0 ,
    Status_Reg_En,
    \Serial_Dbg_Intf.shift_count_reg[5]_0 ,
    \Serial_Dbg_Intf.shift_count_reg[5]_1 ,
    \Serial_Dbg_Intf.instr_read_reg_reg[1] ,
    Dbg_Reg_En,
    \Use_Serial_Unified_Completion.completion_block_reg_0 ,
    \Serial_Dbg_Intf.shift_count_reg[6] ,
    Q2_in,
    Q3_in,
    Q0_out);
  output Dbg_TDO;
  input [7:0]Q;
  input Dbg_Clk;
  input \Serial_Dbg_Intf.shift_count_reg[4] ;
  input \Serial_Dbg_Intf.shift_count_reg[5] ;
  input \Use_Serial_Unified_Completion.completion_block_reg ;
  input \Serial_Dbg_Intf.shift_count_reg[4]_0 ;
  input Status_Reg_En;
  input \Serial_Dbg_Intf.shift_count_reg[5]_0 ;
  input \Serial_Dbg_Intf.shift_count_reg[5]_1 ;
  input \Serial_Dbg_Intf.instr_read_reg_reg[1] ;
  input [1:0]Dbg_Reg_En;
  input \Use_Serial_Unified_Completion.completion_block_reg_0 ;
  input \Serial_Dbg_Intf.shift_count_reg[6] ;
  input Q2_in;
  input Q3_in;
  input Q0_out;

  wire Dbg_Clk;
  wire [1:0]Dbg_Reg_En;
  wire Dbg_TDO;
  wire Dbg_TDO_INST_0_i_12_n_0;
  wire Dbg_TDO_INST_0_i_31_n_0;
  wire Dbg_TDO_INST_0_i_4_n_0;
  wire [7:0]Q;
  wire Q1_in;
  wire Q2_in;
  wire \Serial_Dbg_Intf.instr_read_reg_reg[1] ;
  wire \Serial_Dbg_Intf.shift_count_reg[4] ;
  wire \Serial_Dbg_Intf.shift_count_reg[4]_0 ;
  wire \Serial_Dbg_Intf.shift_count_reg[5] ;
  wire \Serial_Dbg_Intf.shift_count_reg[5]_0 ;
  wire \Serial_Dbg_Intf.shift_count_reg[5]_1 ;
  wire \Serial_Dbg_Intf.shift_count_reg[6] ;
  wire Status_Reg_En;
  wire \Use_Serial_Unified_Completion.completion_block_reg ;
  wire \Use_Serial_Unified_Completion.completion_block_reg_0 ;

  LUT6 #(
    .INIT(64'hFFFF00D000D000D0)) 
    Dbg_TDO_INST_0
       (.I0(\Serial_Dbg_Intf.shift_count_reg[4] ),
        .I1(\Serial_Dbg_Intf.shift_count_reg[5] ),
        .I2(\Use_Serial_Unified_Completion.completion_block_reg ),
        .I3(Dbg_TDO_INST_0_i_4_n_0),
        .I4(\Serial_Dbg_Intf.shift_count_reg[4]_0 ),
        .I5(Status_Reg_En),
        .O(Dbg_TDO));
  LUT6 #(
    .INIT(64'hFFDFFFFFDFDFDFDF)) 
    Dbg_TDO_INST_0_i_12
       (.I0(Dbg_Reg_En[0]),
        .I1(\Use_Serial_Unified_Completion.completion_block_reg_0 ),
        .I2(Dbg_Reg_En[1]),
        .I3(Q[6]),
        .I4(Dbg_TDO_INST_0_i_31_n_0),
        .I5(\Serial_Dbg_Intf.shift_count_reg[6] ),
        .O(Dbg_TDO_INST_0_i_12_n_0));
  LUT4 #(
    .INIT(16'hA0C0)) 
    Dbg_TDO_INST_0_i_31
       (.I0(Q1_in),
        .I1(Q2_in),
        .I2(Q[5]),
        .I3(Q[4]),
        .O(Dbg_TDO_INST_0_i_31_n_0));
  LUT6 #(
    .INIT(64'h00000000AAAABBAF)) 
    Dbg_TDO_INST_0_i_4
       (.I0(Dbg_TDO_INST_0_i_12_n_0),
        .I1(\Serial_Dbg_Intf.shift_count_reg[5]_0 ),
        .I2(\Serial_Dbg_Intf.shift_count_reg[5]_1 ),
        .I3(Q[6]),
        .I4(Q[7]),
        .I5(\Serial_Dbg_Intf.instr_read_reg_reg[1] ),
        .O(Dbg_TDO_INST_0_i_4_n_0));
  (* box_type = "PRIMITIVE" *) 
  (* srl_name = "design_gol_i/microblaze_0/U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.SRL16E_4/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h2400),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(1'b0),
        .CLK(Dbg_Clk),
        .D(1'b0),
        .Q(Q1_in));
endmodule

module microblaze_v10_0_3_carry_and
   (of_PipeRun_carry_1,
    \Using_FPGA.Native ,
    of_PipeRun_carry_2,
    lopt,
    lopt_1,
    lopt_2);
  output of_PipeRun_carry_1;
  input \Using_FPGA.Native ;
  input of_PipeRun_carry_2;
  output lopt;
  input lopt_1;
  input lopt_2;

  wire \Using_FPGA.Native ;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire of_PipeRun_carry_2;
  wire NLW_MUXCY_I_of_PipeRun_carry_1_UNCONNECTED;

  microblaze_v10_0_3_MB_MUXCY_114 MUXCY_I
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .of_PipeRun_carry_1(NLW_MUXCY_I_of_PipeRun_carry_1_UNCONNECTED),
        .of_PipeRun_carry_2(of_PipeRun_carry_2));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_carry_and" *) 
module microblaze_v10_0_3_carry_and_59
   (of_PipeRun_for_ce,
    in0,
    ex_Write_DCache_decode_cmb,
    ex_jump_nodelay_reg,
    of_read_imm_reg_ii_reg,
    ex_first_cycle_reg,
    of_PipeRun_carry_1,
    ex_Write_ICache_i,
    ex_branch_with_delayslot_reg,
    ex_write_dcache_instr,
    dbg_pause,
    ex_jump_nodelay,
    \Using_FPGA.Native ,
    ex_jump,
    \Serial_Dbg_Intf.if_debug_ready_i_reg ,
    if_missed_fetch_reg,
    of_read_imm_reg_ii,
    \Using_FPGA.Native_0 ,
    wb_exception_i_reg,
    wb_exception,
    sync_reset,
    lopt,
    lopt_1,
    lopt_2);
  output of_PipeRun_for_ce;
  output in0;
  output ex_Write_DCache_decode_cmb;
  output ex_jump_nodelay_reg;
  output of_read_imm_reg_ii_reg;
  output ex_first_cycle_reg;
  input of_PipeRun_carry_1;
  input ex_Write_ICache_i;
  input ex_branch_with_delayslot_reg;
  input ex_write_dcache_instr;
  input dbg_pause;
  input ex_jump_nodelay;
  input \Using_FPGA.Native ;
  input ex_jump;
  input \Serial_Dbg_Intf.if_debug_ready_i_reg ;
  input if_missed_fetch_reg;
  input of_read_imm_reg_ii;
  input \Using_FPGA.Native_0 ;
  input wb_exception_i_reg;
  input wb_exception;
  input sync_reset;
  input lopt;
  output lopt_1;
  output lopt_2;

  wire \Serial_Dbg_Intf.if_debug_ready_i_reg ;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire ex_Write_DCache_decode_cmb;
  wire ex_branch_with_delayslot_reg;
  wire ex_first_cycle_reg;
  wire ex_jump;
  wire ex_jump_nodelay;
  wire ex_jump_nodelay_reg;
  wire ex_write_dcache_instr;
  wire if_missed_fetch_reg;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire of_PipeRun_for_ce;
  wire of_read_imm_reg_ii;
  wire of_read_imm_reg_ii_reg;
  wire sync_reset;
  wire wb_exception;
  wire wb_exception_i_reg;
  wire NLW_MUXCY_I_dbg_pause_UNCONNECTED;
  wire NLW_MUXCY_I_ex_Write_ICache_i_UNCONNECTED;
  wire NLW_MUXCY_I_in0_UNCONNECTED;
  wire NLW_MUXCY_I_of_PipeRun_carry_1_UNCONNECTED;

  microblaze_v10_0_3_MB_MUXCY_113 MUXCY_I
       (.\Serial_Dbg_Intf.if_debug_ready_i_reg (\Serial_Dbg_Intf.if_debug_ready_i_reg ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ),
        .dbg_pause(NLW_MUXCY_I_dbg_pause_UNCONNECTED),
        .ex_Write_DCache_decode_reg(ex_Write_DCache_decode_cmb),
        .ex_Write_ICache_i(NLW_MUXCY_I_ex_Write_ICache_i_UNCONNECTED),
        .ex_branch_with_delayslot_reg(ex_branch_with_delayslot_reg),
        .ex_first_cycle_reg(ex_first_cycle_reg),
        .ex_jump(ex_jump),
        .ex_jump_nodelay(ex_jump_nodelay),
        .ex_jump_nodelay_reg(ex_jump_nodelay_reg),
        .ex_write_dcache_instr(ex_write_dcache_instr),
        .if_missed_fetch_reg(if_missed_fetch_reg),
        .in0(NLW_MUXCY_I_in0_UNCONNECTED),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .of_PipeRun_carry_1(NLW_MUXCY_I_of_PipeRun_carry_1_UNCONNECTED),
        .of_read_imm_reg_ii(of_read_imm_reg_ii),
        .of_read_imm_reg_ii_reg(of_read_imm_reg_ii_reg),
        .sync_reset(sync_reset),
        .use_Reg_Neg_S_reg(of_PipeRun_for_ce),
        .wb_exception(wb_exception),
        .wb_exception_i_reg(wb_exception_i_reg));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_carry_and" *) 
module microblaze_v10_0_3_carry_and_60
   (of_PipeRun_carry_10,
    mem_valid_reg,
    lopt,
    lopt_1,
    lopt_2);
  output of_PipeRun_carry_10;
  input mem_valid_reg;
  input lopt;
  output lopt_1;
  output lopt_2;

  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire of_PipeRun_carry_10;
  wire NLW_MUXCY_I_mem_valid_reg_UNCONNECTED;

  microblaze_v10_0_3_MB_MUXCY_112 MUXCY_I
       (.lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .mem_valid_reg(NLW_MUXCY_I_mem_valid_reg_UNCONNECTED),
        .of_PipeRun_carry_10(of_PipeRun_carry_10));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_carry_and" *) 
module microblaze_v10_0_3_carry_and_61
   (of_PipeRun_carry_9,
    \Using_FPGA.Native ,
    ex_branch_with_delayslot_reg,
    of_PipeRun_carry_10,
    ex_mbar_sleep,
    ex_jump_hold,
    ex_mbar_decode,
    ex_first_cycle,
    ex_mbar_stall_no_sleep_1,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8);
  output of_PipeRun_carry_9;
  output \Using_FPGA.Native ;
  input ex_branch_with_delayslot_reg;
  input of_PipeRun_carry_10;
  input ex_mbar_sleep;
  input ex_jump_hold;
  input ex_mbar_decode;
  input ex_first_cycle;
  input ex_mbar_stall_no_sleep_1;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;

  wire \Using_FPGA.Native ;
  wire ex_branch_with_delayslot_reg;
  wire ex_first_cycle;
  wire ex_jump_hold;
  wire ex_mbar_decode;
  wire ex_mbar_sleep;
  wire ex_mbar_stall_no_sleep_1;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire of_PipeRun_carry_10;
  wire NLW_MUXCY_I_lopt_3_UNCONNECTED;
  wire NLW_MUXCY_I_of_PipeRun_carry_9_UNCONNECTED;

  microblaze_v10_0_3_MB_MUXCY_111 MUXCY_I
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .ex_branch_with_delayslot_reg(ex_branch_with_delayslot_reg),
        .ex_first_cycle(ex_first_cycle),
        .ex_jump_hold(ex_jump_hold),
        .ex_mbar_decode(ex_mbar_decode),
        .ex_mbar_sleep(ex_mbar_sleep),
        .ex_mbar_stall_no_sleep_1(ex_mbar_stall_no_sleep_1),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(NLW_MUXCY_I_lopt_3_UNCONNECTED),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .of_PipeRun_carry_10(of_PipeRun_carry_10),
        .of_PipeRun_carry_9(NLW_MUXCY_I_of_PipeRun_carry_9_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_carry_and" *) 
module microblaze_v10_0_3_carry_and_62
   (\Using_FPGA.Native ,
    E,
    mem_gpr_write_dbg_reg,
    mem_gpr_write_reg,
    of_PipeRun_carry_9,
    wb_exception,
    Q,
    \Performace_Debug_Control.dbg_freeze_nohalt_reg ,
    mem_gpr_write_dbg,
    ex_gpr_write_dbg,
    sync_reset,
    mem_gpr_write,
    ex_gpr_write_reg,
    lopt,
    lopt_1,
    lopt_2);
  output \Using_FPGA.Native ;
  output [0:0]E;
  output mem_gpr_write_dbg_reg;
  output mem_gpr_write_reg;
  input of_PipeRun_carry_9;
  input wb_exception;
  input [1:0]Q;
  input \Performace_Debug_Control.dbg_freeze_nohalt_reg ;
  input mem_gpr_write_dbg;
  input ex_gpr_write_dbg;
  input sync_reset;
  input mem_gpr_write;
  input ex_gpr_write_reg;
  input lopt;
  output lopt_1;
  output lopt_2;

  wire [0:0]E;
  wire \Performace_Debug_Control.dbg_freeze_nohalt_reg ;
  wire [1:0]Q;
  wire \Using_FPGA.Native ;
  wire ex_gpr_write_dbg;
  wire ex_gpr_write_reg;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire mem_gpr_write;
  wire mem_gpr_write_dbg;
  wire mem_gpr_write_dbg_reg;
  wire mem_gpr_write_reg;
  wire sync_reset;
  wire wb_exception;
  wire NLW_MUXCY_I_of_PipeRun_carry_9_UNCONNECTED;

  microblaze_v10_0_3_MB_MUXCY_110 MUXCY_I
       (.E(E),
        .\Performace_Debug_Control.dbg_freeze_nohalt_reg (\Performace_Debug_Control.dbg_freeze_nohalt_reg ),
        .Q(Q),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .ex_gpr_write_dbg(ex_gpr_write_dbg),
        .ex_gpr_write_reg(ex_gpr_write_reg),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .mem_gpr_write(mem_gpr_write),
        .mem_gpr_write_dbg(mem_gpr_write_dbg),
        .mem_gpr_write_dbg_reg(mem_gpr_write_dbg_reg),
        .mem_gpr_write_reg(mem_gpr_write_reg),
        .of_PipeRun_carry_9(NLW_MUXCY_I_of_PipeRun_carry_9_UNCONNECTED),
        .sync_reset(sync_reset),
        .wb_exception(wb_exception));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_carry_and" *) 
module microblaze_v10_0_3_carry_and_63
   (of_PipeRun_carry_7,
    of_pipe_ctrl_reg0,
    ex_branch_with_delayslot_reg,
    lopt,
    lopt_1);
  output of_PipeRun_carry_7;
  input of_pipe_ctrl_reg0;
  input ex_branch_with_delayslot_reg;
  input lopt;
  output lopt_1;

  wire lopt_1;
  wire NLW_MUXCY_I_ex_branch_with_delayslot_reg_UNCONNECTED;
  wire NLW_MUXCY_I_lopt_UNCONNECTED;
  wire NLW_MUXCY_I_of_PipeRun_carry_7_UNCONNECTED;
  wire NLW_MUXCY_I_of_pipe_ctrl_reg0_UNCONNECTED;

  microblaze_v10_0_3_MB_MUXCY_109 MUXCY_I
       (.ex_branch_with_delayslot_reg(NLW_MUXCY_I_ex_branch_with_delayslot_reg_UNCONNECTED),
        .lopt(NLW_MUXCY_I_lopt_UNCONNECTED),
        .lopt_1(lopt_1),
        .of_PipeRun_carry_7(NLW_MUXCY_I_of_PipeRun_carry_7_UNCONNECTED),
        .of_pipe_ctrl_reg0(NLW_MUXCY_I_of_pipe_ctrl_reg0_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_carry_and" *) 
module microblaze_v10_0_3_carry_and_64
   (of_PipeRun_carry_6,
    A,
    of_PipeRun_carry_7,
    lopt,
    lopt_1);
  output of_PipeRun_carry_6;
  input A;
  input of_PipeRun_carry_7;
  input lopt;
  output lopt_1;

  wire lopt;
  wire lopt_1;
  wire of_PipeRun_carry_6;
  wire NLW_MUXCY_I_A_UNCONNECTED;
  wire NLW_MUXCY_I_of_PipeRun_carry_7_UNCONNECTED;

  microblaze_v10_0_3_MB_MUXCY_108 MUXCY_I
       (.A(NLW_MUXCY_I_A_UNCONNECTED),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .of_PipeRun_carry_6(of_PipeRun_carry_6),
        .of_PipeRun_carry_7(NLW_MUXCY_I_of_PipeRun_carry_7_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_carry_and" *) 
module microblaze_v10_0_3_carry_and_65
   (of_PipeRun_carry_5,
    mem_is_multi_or_load_instr_reg,
    of_PipeRun_carry_6,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8);
  output of_PipeRun_carry_5;
  input mem_is_multi_or_load_instr_reg;
  input of_PipeRun_carry_6;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;

  wire lopt_1;
  wire lopt_2;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire mem_is_multi_or_load_instr_reg;
  wire of_PipeRun_carry_6;
  wire NLW_MUXCY_I_lopt_UNCONNECTED;
  wire NLW_MUXCY_I_lopt_3_UNCONNECTED;
  wire NLW_MUXCY_I_of_PipeRun_carry_5_UNCONNECTED;

  microblaze_v10_0_3_MB_MUXCY_107 MUXCY_I
       (.lopt(NLW_MUXCY_I_lopt_UNCONNECTED),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(NLW_MUXCY_I_lopt_3_UNCONNECTED),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .mem_is_multi_or_load_instr_reg(mem_is_multi_or_load_instr_reg),
        .of_PipeRun_carry_5(NLW_MUXCY_I_of_PipeRun_carry_5_UNCONNECTED),
        .of_PipeRun_carry_6(of_PipeRun_carry_6));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_carry_and" *) 
module microblaze_v10_0_3_carry_and_66
   (of_PipeRun_carry_4,
    ex_is_multi_or_load_instr_reg,
    of_PipeRun_carry_5,
    lopt,
    lopt_1);
  output of_PipeRun_carry_4;
  input ex_is_multi_or_load_instr_reg;
  input of_PipeRun_carry_5;
  input lopt;
  output lopt_1;

  wire lopt_1;
  wire NLW_MUXCY_I_ex_is_multi_or_load_instr_reg_UNCONNECTED;
  wire NLW_MUXCY_I_lopt_UNCONNECTED;
  wire NLW_MUXCY_I_of_PipeRun_carry_4_UNCONNECTED;
  wire NLW_MUXCY_I_of_PipeRun_carry_5_UNCONNECTED;

  microblaze_v10_0_3_MB_MUXCY_106 MUXCY_I
       (.ex_is_multi_or_load_instr_reg(NLW_MUXCY_I_ex_is_multi_or_load_instr_reg_UNCONNECTED),
        .lopt(NLW_MUXCY_I_lopt_UNCONNECTED),
        .lopt_1(lopt_1),
        .of_PipeRun_carry_4(NLW_MUXCY_I_of_PipeRun_carry_4_UNCONNECTED),
        .of_PipeRun_carry_5(NLW_MUXCY_I_of_PipeRun_carry_5_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_carry_and" *) 
module microblaze_v10_0_3_carry_and_67
   (of_PipeRun_carry_3,
    mem_is_multi_or_load_instr_reg,
    of_PipeRun_carry_4,
    lopt,
    lopt_1);
  output of_PipeRun_carry_3;
  input mem_is_multi_or_load_instr_reg;
  input of_PipeRun_carry_4;
  input lopt;
  output lopt_1;

  wire lopt_1;
  wire NLW_MUXCY_I_lopt_UNCONNECTED;
  wire NLW_MUXCY_I_mem_is_multi_or_load_instr_reg_UNCONNECTED;
  wire NLW_MUXCY_I_of_PipeRun_carry_3_UNCONNECTED;
  wire NLW_MUXCY_I_of_PipeRun_carry_4_UNCONNECTED;

  microblaze_v10_0_3_MB_MUXCY_105 MUXCY_I
       (.lopt(NLW_MUXCY_I_lopt_UNCONNECTED),
        .lopt_1(lopt_1),
        .mem_is_multi_or_load_instr_reg(NLW_MUXCY_I_mem_is_multi_or_load_instr_reg_UNCONNECTED),
        .of_PipeRun_carry_3(NLW_MUXCY_I_of_PipeRun_carry_3_UNCONNECTED),
        .of_PipeRun_carry_4(NLW_MUXCY_I_of_PipeRun_carry_4_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_carry_and" *) 
module microblaze_v10_0_3_carry_and_68
   (of_PipeRun_carry_2,
    \Using_FPGA.Native ,
    of_PipeRun_carry_3,
    lopt,
    lopt_1);
  output of_PipeRun_carry_2;
  input \Using_FPGA.Native ;
  input of_PipeRun_carry_3;
  input lopt;
  output lopt_1;

  wire lopt;
  wire lopt_1;
  wire of_PipeRun_carry_2;
  wire \NLW_MUXCY_I_Using_FPGA.Native_0_UNCONNECTED ;
  wire NLW_MUXCY_I_of_PipeRun_carry_3_UNCONNECTED;

  microblaze_v10_0_3_MB_MUXCY_104 MUXCY_I
       (.\Using_FPGA.Native_0 (\NLW_MUXCY_I_Using_FPGA.Native_0_UNCONNECTED ),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .of_PipeRun_carry_2(of_PipeRun_carry_2),
        .of_PipeRun_carry_3(NLW_MUXCY_I_of_PipeRun_carry_3_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_carry_and" *) 
module microblaze_v10_0_3_carry_and_88
   (if_pc_incr_carry1,
    \Performace_Debug_Control.dbg_stop_if_delay_i_reg ,
    if_pc_incr_carry0,
    lopt,
    lopt_1);
  output if_pc_incr_carry1;
  input \Performace_Debug_Control.dbg_stop_if_delay_i_reg ;
  input if_pc_incr_carry0;
  input lopt;
  output lopt_1;

  wire lopt_1;
  wire \NLW_MUXCY_I_Performace_Debug_Control.dbg_stop_if_delay_i_reg_UNCONNECTED ;
  wire NLW_MUXCY_I_if_pc_incr_carry0_UNCONNECTED;
  wire NLW_MUXCY_I_if_pc_incr_carry1_UNCONNECTED;
  wire NLW_MUXCY_I_lopt_UNCONNECTED;

  microblaze_v10_0_3_MB_MUXCY_103 MUXCY_I
       (.\Performace_Debug_Control.dbg_stop_if_delay_i_reg (\NLW_MUXCY_I_Performace_Debug_Control.dbg_stop_if_delay_i_reg_UNCONNECTED ),
        .if_pc_incr_carry0(NLW_MUXCY_I_if_pc_incr_carry0_UNCONNECTED),
        .if_pc_incr_carry1(NLW_MUXCY_I_if_pc_incr_carry1_UNCONNECTED),
        .lopt(NLW_MUXCY_I_lopt_UNCONNECTED),
        .lopt_1(lopt_1));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_carry_and" *) 
module microblaze_v10_0_3_carry_and_89
   (if_pc_incr_carry0,
    if_missed_fetch_reg,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9);
  output if_pc_incr_carry0;
  input if_missed_fetch_reg;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;

  wire if_missed_fetch_reg;
  wire lopt_1;
  wire lopt_2;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire NLW_MUXCY_I_if_pc_incr_carry0_UNCONNECTED;
  wire NLW_MUXCY_I_lopt_UNCONNECTED;
  wire NLW_MUXCY_I_lopt_3_UNCONNECTED;

  microblaze_v10_0_3_MB_MUXCY_102 MUXCY_I
       (.if_missed_fetch_reg(if_missed_fetch_reg),
        .if_pc_incr_carry0(NLW_MUXCY_I_if_pc_incr_carry0_UNCONNECTED),
        .lopt(NLW_MUXCY_I_lopt_UNCONNECTED),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(NLW_MUXCY_I_lopt_3_UNCONNECTED),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .lopt_9(lopt_9));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_carry_and" *) 
module microblaze_v10_0_3_carry_and_90
   (CI,
    if_fetch_for_timing_optimization1,
    if_pc_incr_carry1,
    lopt,
    lopt_1);
  output CI;
  input if_fetch_for_timing_optimization1;
  input if_pc_incr_carry1;
  input lopt;
  output lopt_1;

  wire lopt_1;
  wire NLW_MUXCY_I_CI_UNCONNECTED;
  wire NLW_MUXCY_I_if_fetch_for_timing_optimization1_UNCONNECTED;
  wire NLW_MUXCY_I_if_pc_incr_carry1_UNCONNECTED;
  wire NLW_MUXCY_I_lopt_UNCONNECTED;

  microblaze_v10_0_3_MB_MUXCY_101 MUXCY_I
       (.CI(NLW_MUXCY_I_CI_UNCONNECTED),
        .if_fetch_for_timing_optimization1(NLW_MUXCY_I_if_fetch_for_timing_optimization1_UNCONNECTED),
        .if_pc_incr_carry1(NLW_MUXCY_I_if_pc_incr_carry1_UNCONNECTED),
        .lopt(NLW_MUXCY_I_lopt_UNCONNECTED),
        .lopt_1(lopt_1));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_carry_and" *) 
module microblaze_v10_0_3_carry_and_91
   (WB_Read_Imm_Reg_1_reg,
    wb_gpr_write_dbg0,
    wb_gpr_write_i0,
    mem_valid_reg,
    wb_valid_reg,
    mem_wait_on_ready_N,
    mem_gpr_write_dbg,
    sync_reset,
    wb_exception,
    mem_gpr_write,
    mem_valid_instr,
    mem_exception_from_ex,
    ex_valid_reg,
    flush_pipe,
    ex_branch_with_delayslot_reg,
    wb_valid_reg_0,
    wb_piperun,
    lopt,
    lopt_1,
    lopt_2);
  output WB_Read_Imm_Reg_1_reg;
  output wb_gpr_write_dbg0;
  output wb_gpr_write_i0;
  output mem_valid_reg;
  output wb_valid_reg;
  input mem_wait_on_ready_N;
  input mem_gpr_write_dbg;
  input sync_reset;
  input wb_exception;
  input mem_gpr_write;
  input mem_valid_instr;
  input mem_exception_from_ex;
  input ex_valid_reg;
  input flush_pipe;
  input ex_branch_with_delayslot_reg;
  input wb_valid_reg_0;
  input wb_piperun;
  input lopt;
  output lopt_1;
  output lopt_2;

  wire WB_Read_Imm_Reg_1_reg;
  wire ex_branch_with_delayslot_reg;
  wire ex_valid_reg;
  wire flush_pipe;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire mem_exception_from_ex;
  wire mem_gpr_write;
  wire mem_gpr_write_dbg;
  wire mem_valid_instr;
  wire mem_valid_reg;
  wire sync_reset;
  wire wb_exception;
  wire wb_gpr_write_dbg0;
  wire wb_gpr_write_i0;
  wire wb_piperun;
  wire wb_valid_reg;
  wire wb_valid_reg_0;
  wire NLW_MUXCY_I_mem_wait_on_ready_N_UNCONNECTED;

  microblaze_v10_0_3_MB_MUXCY_94 MUXCY_I
       (.WB_Read_Imm_Reg_1_reg(WB_Read_Imm_Reg_1_reg),
        .ex_branch_with_delayslot_reg(ex_branch_with_delayslot_reg),
        .ex_valid_reg(ex_valid_reg),
        .flush_pipe(flush_pipe),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .mem_exception_from_ex(mem_exception_from_ex),
        .mem_gpr_write(mem_gpr_write),
        .mem_gpr_write_dbg(mem_gpr_write_dbg),
        .mem_valid_instr(mem_valid_instr),
        .mem_valid_reg(mem_valid_reg),
        .mem_wait_on_ready_N(NLW_MUXCY_I_mem_wait_on_ready_N_UNCONNECTED),
        .sync_reset(sync_reset),
        .wb_exception(wb_exception),
        .wb_gpr_write_dbg0(wb_gpr_write_dbg0),
        .wb_gpr_write_i0(wb_gpr_write_i0),
        .wb_piperun(wb_piperun),
        .wb_valid_reg(wb_valid_reg),
        .wb_valid_reg_0(wb_valid_reg_0));
endmodule

module microblaze_v10_0_3_carry_or
   (mem_databus_ready,
    S,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8);
  output mem_databus_ready;
  input S;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;

  wire S;
  wire lopt_1;
  wire lopt_2;
  wire lopt_3;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire NLW_MUXCY_I_lopt_UNCONNECTED;
  wire NLW_MUXCY_I_mem_databus_ready_UNCONNECTED;

  microblaze_v10_0_3_MB_MUXCY MUXCY_I
       (.S(S),
        .lopt(NLW_MUXCY_I_lopt_UNCONNECTED),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(lopt_3),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .mem_databus_ready(NLW_MUXCY_I_mem_databus_ready_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "microblaze_v10_0_3_carry_or" *) 
module microblaze_v10_0_3_carry_or_92
   (mem_wait_on_ready_N,
    mem_databus_ready,
    mem_valid_instr,
    mem_Write_DCache,
    mem_load_store_access,
    lopt,
    lopt_1,
    lopt_2);
  output mem_wait_on_ready_N;
  input mem_databus_ready;
  input mem_valid_instr;
  input mem_Write_DCache;
  input mem_load_store_access;
  input lopt;
  output lopt_1;
  output lopt_2;

  wire lopt_1;
  wire lopt_2;
  wire mem_Write_DCache;
  wire mem_load_store_access;
  wire mem_valid_instr;
  wire NLW_MUXCY_I_lopt_UNCONNECTED;
  wire NLW_MUXCY_I_mem_databus_ready_UNCONNECTED;
  wire NLW_MUXCY_I_mem_wait_on_ready_N_UNCONNECTED;

  microblaze_v10_0_3_MB_MUXCY_93 MUXCY_I
       (.lopt(NLW_MUXCY_I_lopt_UNCONNECTED),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .mem_Write_DCache(mem_Write_DCache),
        .mem_databus_ready(NLW_MUXCY_I_mem_databus_ready_UNCONNECTED),
        .mem_load_store_access(mem_load_store_access),
        .mem_valid_instr(mem_valid_instr),
        .mem_wait_on_ready_N(NLW_MUXCY_I_mem_wait_on_ready_N_UNCONNECTED));
endmodule

module msr_reg_gti
   (\wb_MSR_i_reg[28]_0 ,
    \wb_MSR_i_reg[29]_0 ,
    \wb_MSR_i_reg[30]_0 ,
    ex_MSR,
    \WB_MEM_Result_reg[0] ,
    \LOCKSTEP_Out_reg[2995] ,
    sync_reset,
    Clk,
    ex_move_to_MSR_instr_reg,
    \Using_LWX_SWX_instr.ex_reservation_reg ,
    \EX_Op1_reg[30] ,
    mem_sel_msr,
    mem_ex_result,
    mem_valid_reg,
    wb_piperun);
  output \wb_MSR_i_reg[28]_0 ;
  output \wb_MSR_i_reg[29]_0 ;
  output \wb_MSR_i_reg[30]_0 ;
  output [2:0]ex_MSR;
  output [3:0]\WB_MEM_Result_reg[0] ;
  output [2:0]\LOCKSTEP_Out_reg[2995] ;
  input sync_reset;
  input Clk;
  input ex_move_to_MSR_instr_reg;
  input \Using_LWX_SWX_instr.ex_reservation_reg ;
  input \EX_Op1_reg[30] ;
  input mem_sel_msr;
  input [3:0]mem_ex_result;
  input mem_valid_reg;
  input wb_piperun;

  wire Clk;
  wire \EX_Op1_reg[30] ;
  wire [2:0]\LOCKSTEP_Out_reg[2995] ;
  wire \MEM_MSR_Bits[28].Using_FDR.MSR_I_n_2 ;
  wire \MEM_MSR_Bits[29].Using_FDR.MSR_I_n_3 ;
  wire \MEM_MSR_Bits[30].Using_FDR.MSR_I_n_2 ;
  wire \OF_EX_MSR_Bits[28].Using_FDR.MSR_ex_I_n_1 ;
  wire \OF_EX_MSR_Bits[29].Using_FDR.MSR_ex_I_n_1 ;
  wire \OF_EX_MSR_Bits[30].Using_FDR.MSR_ex_I_n_1 ;
  wire \Using_LWX_SWX_instr.ex_reservation_reg ;
  wire [3:0]\WB_MEM_Result_reg[0] ;
  wire [2:0]ex_MSR;
  wire ex_move_to_MSR_instr_reg;
  wire [3:0]mem_ex_result;
  wire mem_sel_msr;
  wire mem_valid_reg;
  wire sync_reset;
  wire \wb_MSR_i_reg[28]_0 ;
  wire \wb_MSR_i_reg[29]_0 ;
  wire \wb_MSR_i_reg[30]_0 ;
  wire wb_piperun;

  MB_FDR_304 \MEM_MSR_Bits[28].Using_FDR.MSR_I 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\OF_EX_MSR_Bits[28].Using_FDR.MSR_ex_I_n_1 ),
        .\WB_MEM_Result_reg[28] (\WB_MEM_Result_reg[0] [2]),
        .mem_ex_result(mem_ex_result[2]),
        .mem_sel_msr(mem_sel_msr),
        .sync_reset(sync_reset),
        .\wb_MSR_i_reg[28] (\wb_MSR_i_reg[28]_0 ),
        .\wb_MSR_i_reg[28]_0 (\MEM_MSR_Bits[28].Using_FDR.MSR_I_n_2 ),
        .\wb_MSR_i_reg[28]_1 (\LOCKSTEP_Out_reg[2995] [2]),
        .wb_piperun(wb_piperun));
  MB_FDR_305 \MEM_MSR_Bits[29].Using_FDR.MSR_I 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\OF_EX_MSR_Bits[29].Using_FDR.MSR_ex_I_n_1 ),
        .\WB_MEM_Result_reg[0] ({\WB_MEM_Result_reg[0] [3],\WB_MEM_Result_reg[0] [1]}),
        .mem_ex_result({mem_ex_result[3],mem_ex_result[1]}),
        .mem_sel_msr(mem_sel_msr),
        .sync_reset(sync_reset),
        .\wb_MSR_i_reg[29] (\wb_MSR_i_reg[29]_0 ),
        .\wb_MSR_i_reg[29]_0 (\MEM_MSR_Bits[29].Using_FDR.MSR_I_n_3 ),
        .\wb_MSR_i_reg[29]_1 (\LOCKSTEP_Out_reg[2995] [1]),
        .wb_piperun(wb_piperun));
  MB_FDR_306 \MEM_MSR_Bits[30].Using_FDR.MSR_I 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\OF_EX_MSR_Bits[30].Using_FDR.MSR_ex_I_n_1 ),
        .\WB_MEM_Result_reg[30] (\WB_MEM_Result_reg[0] [0]),
        .mem_ex_result(mem_ex_result[0]),
        .mem_sel_msr(mem_sel_msr),
        .sync_reset(sync_reset),
        .\wb_MSR_i_reg[30] (\wb_MSR_i_reg[30]_0 ),
        .\wb_MSR_i_reg[30]_0 (\MEM_MSR_Bits[30].Using_FDR.MSR_I_n_2 ),
        .\wb_MSR_i_reg[30]_1 (\LOCKSTEP_Out_reg[2995] [0]),
        .wb_piperun(wb_piperun));
  MB_FDR_307 \OF_EX_MSR_Bits[28].Using_FDR.MSR_ex_I 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\OF_EX_MSR_Bits[28].Using_FDR.MSR_ex_I_n_1 ),
        .\Using_FPGA.Native_1 (\wb_MSR_i_reg[28]_0 ),
        .ex_MSR(ex_MSR[2]),
        .ex_move_to_MSR_instr_reg(ex_move_to_MSR_instr_reg),
        .mem_valid_reg(mem_valid_reg),
        .sync_reset(sync_reset));
  MB_FDR_308 \OF_EX_MSR_Bits[29].Using_FDR.MSR_ex_I 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\OF_EX_MSR_Bits[29].Using_FDR.MSR_ex_I_n_1 ),
        .\Using_FPGA.Native_1 (\wb_MSR_i_reg[29]_0 ),
        .\Using_LWX_SWX_instr.ex_reservation_reg (\Using_LWX_SWX_instr.ex_reservation_reg ),
        .ex_MSR(ex_MSR[1]),
        .mem_valid_reg(mem_valid_reg),
        .sync_reset(sync_reset));
  MB_FDR_309 \OF_EX_MSR_Bits[30].Using_FDR.MSR_ex_I 
       (.Clk(Clk),
        .\EX_Op1_reg[30] (\EX_Op1_reg[30] ),
        .\Using_FPGA.Native_0 (\OF_EX_MSR_Bits[30].Using_FDR.MSR_ex_I_n_1 ),
        .\Using_FPGA.Native_1 (\wb_MSR_i_reg[30]_0 ),
        .ex_MSR(ex_MSR[0]),
        .mem_valid_reg(mem_valid_reg),
        .sync_reset(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \wb_MSR_i_reg[28] 
       (.C(Clk),
        .CE(1'b1),
        .D(\MEM_MSR_Bits[28].Using_FDR.MSR_I_n_2 ),
        .Q(\LOCKSTEP_Out_reg[2995] [2]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \wb_MSR_i_reg[29] 
       (.C(Clk),
        .CE(1'b1),
        .D(\MEM_MSR_Bits[29].Using_FDR.MSR_I_n_3 ),
        .Q(\LOCKSTEP_Out_reg[2995] [1]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \wb_MSR_i_reg[30] 
       (.C(Clk),
        .CE(1'b1),
        .D(\MEM_MSR_Bits[30].Using_FDR.MSR_I_n_2 ),
        .Q(\LOCKSTEP_Out_reg[2995] [0]),
        .R(sync_reset));
endmodule

module mux_bus
   (I041_out,
    Y,
    I139_out,
    in,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Instr,
    LOCKSTEP_Master_Out);
  output I041_out;
  output [0:31]Y;
  output I139_out;
  output [0:0]in;
  input \Using_FPGA.Native ;
  input [0:0]\Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input [0:0]\Using_FPGA.Native_2 ;
  input [0:31]Instr;
  input [32:0]LOCKSTEP_Master_Out;

  wire I041_out;
  wire I139_out;
  wire [0:31]Instr;
  wire [32:0]LOCKSTEP_Master_Out;
  wire \Using_FPGA.Native ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire [0:0]\Using_FPGA.Native_2 ;
  wire [0:31]Y;
  wire [0:0]in;

  MB_LUT6_2__parameterized3 \Mux_Loop[0].I_MUX_LUT6 
       (.\DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram (Y[1]),
        .\DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_0 (Y[3]),
        .I041_out(I041_out),
        .I139_out(I139_out),
        .Instr({Instr[0],Instr[16]}),
        .LOCKSTEP_Master_Out({LOCKSTEP_Master_Out[32:31],LOCKSTEP_Master_Out[15]}),
        .\Using_FPGA.Native_0 (Y[0]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_1 ),
        .\Using_FPGA.Native_4 (\Using_FPGA.Native_2 ),
        .Y(Y[16]),
        .in(in));
  MB_LUT6_2__parameterized3_3 \Mux_Loop[10].I_MUX_LUT6 
       (.Instr({Instr[10],Instr[26]}),
        .LOCKSTEP_Master_Out({LOCKSTEP_Master_Out[32],LOCKSTEP_Master_Out[21],LOCKSTEP_Master_Out[5]}),
        .Y({Y[10],Y[26]}));
  MB_LUT6_2__parameterized3_4 \Mux_Loop[11].I_MUX_LUT6 
       (.Instr({Instr[11],Instr[27]}),
        .LOCKSTEP_Master_Out({LOCKSTEP_Master_Out[32],LOCKSTEP_Master_Out[20],LOCKSTEP_Master_Out[4]}),
        .Y({Y[11],Y[27]}));
  MB_LUT6_2__parameterized3_5 \Mux_Loop[12].I_MUX_LUT6 
       (.Instr({Instr[12],Instr[28]}),
        .LOCKSTEP_Master_Out({LOCKSTEP_Master_Out[32],LOCKSTEP_Master_Out[19],LOCKSTEP_Master_Out[3]}),
        .Y({Y[12],Y[28]}));
  MB_LUT6_2__parameterized3_6 \Mux_Loop[13].I_MUX_LUT6 
       (.Instr({Instr[13],Instr[29]}),
        .LOCKSTEP_Master_Out({LOCKSTEP_Master_Out[32],LOCKSTEP_Master_Out[18],LOCKSTEP_Master_Out[2]}),
        .Y({Y[13],Y[29]}));
  MB_LUT6_2__parameterized3_7 \Mux_Loop[14].I_MUX_LUT6 
       (.Instr({Instr[14],Instr[30]}),
        .LOCKSTEP_Master_Out({LOCKSTEP_Master_Out[32],LOCKSTEP_Master_Out[17],LOCKSTEP_Master_Out[1]}),
        .Y({Y[14],Y[30]}));
  MB_LUT6_2__parameterized3_8 \Mux_Loop[15].I_MUX_LUT6 
       (.Instr({Instr[15],Instr[31]}),
        .LOCKSTEP_Master_Out({LOCKSTEP_Master_Out[32],LOCKSTEP_Master_Out[16],LOCKSTEP_Master_Out[0]}),
        .Y({Y[15],Y[31]}));
  MB_LUT6_2__parameterized3_9 \Mux_Loop[1].I_MUX_LUT6 
       (.Instr({Instr[1],Instr[17]}),
        .LOCKSTEP_Master_Out({LOCKSTEP_Master_Out[32],LOCKSTEP_Master_Out[30],LOCKSTEP_Master_Out[14]}),
        .Y({Y[1],Y[17]}));
  MB_LUT6_2__parameterized3_10 \Mux_Loop[2].I_MUX_LUT6 
       (.Instr({Instr[2],Instr[18]}),
        .LOCKSTEP_Master_Out({LOCKSTEP_Master_Out[32],LOCKSTEP_Master_Out[29],LOCKSTEP_Master_Out[13]}),
        .Y({Y[2],Y[18]}));
  MB_LUT6_2__parameterized3_11 \Mux_Loop[3].I_MUX_LUT6 
       (.Instr({Instr[3],Instr[19]}),
        .LOCKSTEP_Master_Out({LOCKSTEP_Master_Out[32],LOCKSTEP_Master_Out[28],LOCKSTEP_Master_Out[12]}),
        .Y({Y[3],Y[19]}));
  MB_LUT6_2__parameterized3_12 \Mux_Loop[4].I_MUX_LUT6 
       (.Instr({Instr[4],Instr[20]}),
        .LOCKSTEP_Master_Out({LOCKSTEP_Master_Out[32],LOCKSTEP_Master_Out[27],LOCKSTEP_Master_Out[11]}),
        .Y({Y[4],Y[20]}));
  MB_LUT6_2__parameterized3_13 \Mux_Loop[5].I_MUX_LUT6 
       (.Instr({Instr[5],Instr[21]}),
        .LOCKSTEP_Master_Out({LOCKSTEP_Master_Out[32],LOCKSTEP_Master_Out[26],LOCKSTEP_Master_Out[10]}),
        .Y({Y[5],Y[21]}));
  MB_LUT6_2__parameterized3_14 \Mux_Loop[6].I_MUX_LUT6 
       (.Instr({Instr[6],Instr[22]}),
        .LOCKSTEP_Master_Out({LOCKSTEP_Master_Out[32],LOCKSTEP_Master_Out[25],LOCKSTEP_Master_Out[9]}),
        .Y({Y[6],Y[22]}));
  MB_LUT6_2__parameterized3_15 \Mux_Loop[7].I_MUX_LUT6 
       (.Instr({Instr[7],Instr[23]}),
        .LOCKSTEP_Master_Out({LOCKSTEP_Master_Out[32],LOCKSTEP_Master_Out[24],LOCKSTEP_Master_Out[8]}),
        .Y({Y[7],Y[23]}));
  MB_LUT6_2__parameterized3_16 \Mux_Loop[8].I_MUX_LUT6 
       (.Instr({Instr[8],Instr[24]}),
        .LOCKSTEP_Master_Out({LOCKSTEP_Master_Out[32],LOCKSTEP_Master_Out[23],LOCKSTEP_Master_Out[7]}),
        .Y({Y[8],Y[24]}));
  MB_LUT6_2__parameterized3_17 \Mux_Loop[9].I_MUX_LUT6 
       (.Instr({Instr[9],Instr[25]}),
        .LOCKSTEP_Master_Out({LOCKSTEP_Master_Out[32],LOCKSTEP_Master_Out[22],LOCKSTEP_Master_Out[6]}),
        .Y({Y[9],Y[25]}));
endmodule
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (strong1, weak0) GSR = GSR_int;
    assign (strong1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

endmodule
`endif
